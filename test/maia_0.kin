type Nat {
  zero{}
  succ{pred: Nat}
}

save

// -----------------------------------------------------------------------------

bond double(x: Nat): Nat {
  case x : Nat {
    zero: zero{}
    succ: succ{succ{double(x.pred)}}
  }
}

eval {
  double(succ{succ{succ{zero{}}}})
} : Nat

save

// -----------------------------------------------------------------------------

file inc@count : #word = #0

bond inc(): & #word {
  get x     = count
  set count = +(x, #1)
  return #0
}

eval {
  run inc()
  run inc()
  run inc()
  get x = count
  return x
} : & #word

save

// -----------------------------------------------------------------------------
