module.exports = (function() {
    function word_to_u16(w) {
        var u = 0;
        for (var i = 0; i < 16; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u16_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 16; ++i) {
            w = {
                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u16_to_bits(x) {
        var s = '';
        for (var i = 0; i < 16; ++i) {
            s = (x & 1 ? '1' : '0') + s;
            x = x >>> 1;
        }
        return s;
    };

    function word_to_u32(w) {
        var u = 0;
        for (var i = 0; i < 32; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u32_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 32; ++i) {
            w = {
                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u32_for(state, from, til, func) {
        for (var i = from; i < til; ++i) {
            state = func(i)(state);
        }
        return state;
    };

    function word_to_u64(w) {
        var u = 0n;
        for (var i = 0n; i < 64n; i += 1n) {
            u = u | (w._ === 'Word.i' ? 1n << i : 0n);
            w = w.pred;
        };
        return u;
    };

    function u64_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0n; i < 64n; i += 1n) {
            w = {
                _: (u >> (64n - i - 1n)) & 1n ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };
    var list_for = list => nil => cons => {
        while (list._ !== 'List.nil') {
            nil = cons(list.head)(nil);
            list = list.tail;
        }
        return nil;
    };
    var list_length = list => {
        var len = 0;
        while (list._ === 'List.cons') {
            len += 1;
            list = list.tail;
        };
        return BigInt(len);
    };
    const inst_unit = x => x(null);
    const elim_unit = (x => {
        var $1 = (() => c0 => {
            var self = x;
            switch ("unit") {
                case 'unit':
                    var $0 = c0;
                    return $0;
            };
        })();
        return $1;
    });
    const inst_bool = x => x(true)(false);
    const elim_bool = (x => {
        var $4 = (() => c0 => c1 => {
            var self = x;
            if (self) {
                var $2 = c0;
                return $2;
            } else {
                var $3 = c1;
                return $3;
            };
        })();
        return $4;
    });
    const inst_nat = x => x(0n)(x0 => 1n + x0);
    const elim_nat = (x => {
        var $8 = (() => c0 => c1 => {
            var self = x;
            if (self === 0n) {
                var $5 = c0;
                return $5;
            } else {
                var $6 = (self - 1n);
                var $7 = c1($6);
                return $7;
            };
        })();
        return $8;
    });
    const inst_bits = x => x('')(x0 => x0 + '0')(x0 => x0 + '1');
    const elim_bits = (x => {
        var $14 = (() => c0 => c1 => c2 => {
            var self = x;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $9 = self.slice(0, -1);
                    var $10 = c1($9);
                    return $10;
                case 'i':
                    var $11 = self.slice(0, -1);
                    var $12 = c2($11);
                    return $12;
                case 'e':
                    var $13 = c0;
                    return $13;
            };
        })();
        return $14;
    });
    const inst_u16 = x => x(x0 => word_to_u16(x0));
    const elim_u16 = (x => {
        var $17 = (() => c0 => {
            var self = x;
            switch ('u16') {
                case 'u16':
                    var $15 = u16_to_word(self);
                    var $16 = c0($15);
                    return $16;
            };
        })();
        return $17;
    });
    const inst_u32 = x => x(x0 => word_to_u32(x0));
    const elim_u32 = (x => {
        var $20 = (() => c0 => {
            var self = x;
            switch ('u32') {
                case 'u32':
                    var $18 = u32_to_word(self);
                    var $19 = c0($18);
                    return $19;
            };
        })();
        return $20;
    });
    const inst_u64 = x => x(x0 => word_to_u64(x0));
    const elim_u64 = (x => {
        var $23 = (() => c0 => {
            var self = x;
            switch ('u64') {
                case 'u64':
                    var $21 = u64_to_word(self);
                    var $22 = c0($21);
                    return $22;
            };
        })();
        return $23;
    });
    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));
    const elim_string = (x => {
        var $28 = (() => c0 => c1 => {
            var self = x;
            if (self.length === 0) {
                var $24 = c0;
                return $24;
            } else {
                var $25 = self.charCodeAt(0);
                var $26 = self.slice(1);
                var $27 = c1($25)($26);
                return $27;
            };
        })();
        return $28;
    });
    var run = (p) => {
        if (typeof window === 'undefined') {
            var rl = eval("require('readline')").createInterface({
                input: process.stdin,
                output: process.stdout,
                terminal: false
            });
            var fs = eval("require('fs')");
            var pc = eval("process");
            var ht = eval("require('http')");
            var hs = eval("require('https')");
            var dg = eval("require('dgram')");
        } else {
            var rl = {
                question: (x, f) => f(''),
                close: () => {}
            };
            var fs = {
                readFileSync: () => ''
            };
            var pc = {
                exit: () => {},
                argv: []
            };
            var ht = null;
            var hs = null;
            var dg = null;
        };
        var lib = {
            rl,
            fs,
            pc,
            ht,
            hs,
            dg
        };
        return run_io(lib, p)
            .then((x) => {
                rl.close();
                return x;
            })
            .catch((e) => {
                rl.close();
                throw e;
            });
    };
    var set_file = (lib, param) => {
        var path = '';
        for (var i = 0; i < param.length && param[i] !== '='; ++i) {
            path += param[i];
        };
        var data = param.slice(i + 1);
        lib.fs.mkdirSync(path.split('/').slice(0, -1).join('/'), {
            recursive: true
        });
        lib.fs.writeFileSync(path, data);
        return '';
    };
    var del_file = (lib, param) => {
        try {
            lib.fs.unlinkSync(param);
            return '';
        } catch (e) {
            if (e.message.indexOf('EPERM') !== -1) {
                lib.fs.rmdirSync(param);
                return '';
            } else {
                throw e;
            }
        }
    };
    var get_file = (lib, param) => {
        return lib.fs.readFileSync(param, 'utf8');
    }
    var get_dir = (lib, param) => {
        return lib.fs.readdirSync(param).join(';');
    };
    var get_file_mtime = (lib, param) => {
        return String(lib.fs.statSync(param).mtime.getTime());
    };
    var request = (lib, param) => {
        if (typeof fetch === 'undefined') {
            return new Promise((res, err) => {
                (/^https/.test(param) ? lib.hs : lib.ht).get(param, r => {
                    let data = '';
                    r.on('data', chunk => {
                        data += chunk;
                    });
                    r.on('end', () => res(data));
                }).on('error', e => res(''));
            });
        } else {
            return fetch(param).then(res => res.text()).catch(e => '');
        }
    }
    let PORTS = {};

    function init_udp(lib, port_num) {
        return new Promise((resolve, reject) => {
            if (!PORTS[port_num]) {
                PORTS[port_num] = {
                    socket: lib.dg.createSocket('udp4'),
                    mailbox: []
                };
                PORTS[port_num].socket.bind(port_num);
                PORTS[port_num].socket.on('listening', () => resolve(PORTS[port_num]));
                PORTS[port_num].socket.on('message', (data, peer) => {
                    var ip = peer.address;
                    var port = peer.port;
                    PORTS[port_num].mailbox.push({
                        ip: peer.address,
                        port: peer.port,
                        data: data.toString('hex')
                    });
                })
                PORTS[port_num].socket.on('error', (err) => {
                    console.log('err');
                    reject('UDP init error.');
                });
            } else {
                resolve(PORTS[port_num]);
            }
        });
    }
    async function send_udp(lib, port_num, to_ip, to_port_num, data) {
        var port = await init_udp(lib, port_num);
        port.socket.send(Buffer.from(data, 'hex'), to_port_num, to_ip);
        return null;
    }
    async function recv_udp(lib, port_num) {
        var port = await init_udp(lib, port_num);
        var mailbox = port.mailbox;
        port.mailbox = [];
        return mailbox;
    }
    async function stop_udp(lib, port_num) {
        PORTS[port_num].socket.close();
        delete PORTS[port_num];
    }
    var file_error = e => {
        if (e.message.indexOf('NOENT') !== -1) {
            return '';
        } else {
            throw e;
        }
    };
    var io_action = {
        print: async (lib, param) => {
            console.log(param);
            return '';
        },
        put_string: async (lib, param) => {
            process.stdout.write(param);
            return '';
        },
        get_file: async (lib, param) => {
            try {
                return get_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        set_file: async (lib, param) => {
            try {
                return set_file(lib, param)
            } catch (e) {
                return file_error(e);
            }
        },
        del_file: async (lib, param) => {
            try {
                return del_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_dir: async (lib, param) => {
            try {
                return get_dir(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_file_mtime: async (lib, param) => {
            try {
                return get_file_mtime(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        exit: async (lib, param) => {
            lib.pc.exit();
            return '';
        },
        request: async (lib, param) => {
            return request(lib, param);
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        get_line: async (lib, param) => {
            return await new Promise((res, err) => {
                lib.rl.question(param, (line) => res(line));
            });
        },
        get_args: async (lib, param) => {
            return lib.pc.argv[2] || '';
        },
        init_udp: async (lib, param) => {
            try {
                await init_udp(lib, Number(param));
                return '';
            } catch (e) {
                return '';
            }
        },
        send_udp: async (lib, param) => {
            let [port_num, to_ip, to_port_num, data] = param.split(';');
            await send_udp(lib, Number(port_num), to_ip, Number(to_port_num), data);
            return '';
        },
        recv_udp: async (lib, param) => {
            var mailbox = await recv_udp(lib, Number(param));
            var reply = mailbox.map(x => x.ip + ',' + x.port + ',' + x.data).join(';');
            return reply;
        },
        stop_udp: async (lib, param) => {
            await stop_udp(lib, Number(param));
            return '';
        },
        sleep: async (lib, param) => {
            return await new Promise((resolve, reject) => {
                setTimeout(() => resolve(''), Number(param));
            });
        },
    };
    var run_io = async (lib, io, depth = 0) => {
        switch (io._) {
            case 'IO.end':
                return Promise.resolve(io.value);
            case 'IO.ask':
                var action = io_action[io.query];
                var answer = await action(lib, io.param);
                return await run_io(lib, io.then(answer), depth + 1);
        }
    };

    function Parser$Reply$(_V$1) {
        var $29 = null;
        return $29;
    };
    const Parser$Reply = x0 => Parser$Reply$(x0);

    function List$(_A$1) {
        var $30 = null;
        return $30;
    };
    const List = x0 => List$(x0);

    function Parser$Reply$error$(_err$2) {
        var $31 = ({
            _: 'Parser.Reply.error',
            'err': _err$2
        });
        return $31;
    };
    const Parser$Reply$error = x0 => Parser$Reply$error$(x0);
    const Bool$false = false;
    const Bool$true = true;
    const Nat$gtn = a0 => a1 => (a0 > a1);

    function Parser$Error$combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Parser.Error.new':
                var $33 = self.idx;
                var self = _b$2;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $35 = self.idx;
                        var self = ($33 > $35);
                        if (self) {
                            var $37 = _a$1;
                            var $36 = $37;
                        } else {
                            var $38 = _b$2;
                            var $36 = $38;
                        };
                        var $34 = $36;
                        break;
                };
                var $32 = $34;
                break;
        };
        return $32;
    };
    const Parser$Error$combine = x0 => x1 => Parser$Error$combine$(x0, x1);

    function List$cons$(_head$2, _tail$3) {
        var $39 = ({
            _: 'List.cons',
            'head': _head$2,
            'tail': _tail$3
        });
        return $39;
    };
    const List$cons = x0 => x1 => List$cons$(x0, x1);

    function Parser$Reply$value$(_pst$2, _val$3) {
        var $40 = ({
            _: 'Parser.Reply.value',
            'pst': _pst$2,
            'val': _val$3
        });
        return $40;
    };
    const Parser$Reply$value = x0 => x1 => Parser$Reply$value$(x0, x1);

    function List$reverse$go$(_xs$2, _res$3) {
        var List$reverse$go$ = (_xs$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _res$3]
        });
        var List$reverse$go = _xs$2 => _res$3 => List$reverse$go$(_xs$2, _res$3);
        var arg = [_xs$2, _res$3];
        while (true) {
            let [_xs$2, _res$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $41 = self.head;
                        var $42 = self.tail;
                        var $43 = List$reverse$go$($42, List$cons$($41, _res$3));
                        return $43;
                    case 'List.nil':
                        var $44 = _res$3;
                        return $44;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$reverse$go = x0 => x1 => List$reverse$go$(x0, x1);
    const List$nil = ({
        _: 'List.nil'
    });

    function List$reverse$(_xs$2) {
        var $45 = List$reverse$go$(_xs$2, List$nil);
        return $45;
    };
    const List$reverse = x0 => List$reverse$(x0);

    function Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5) {
        var Parser$until$go$ = (_until$2, _parse$3, _values$4, _pst$5) => ({
            ctr: 'TCO',
            arg: [_until$2, _parse$3, _values$4, _pst$5]
        });
        var Parser$until$go = _until$2 => _parse$3 => _values$4 => _pst$5 => Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5);
        var arg = [_until$2, _parse$3, _values$4, _pst$5];
        while (true) {
            let [_until$2, _parse$3, _values$4, _pst$5] = arg;
            var R = (() => {
                var _until_reply$6 = _until$2(_pst$5);
                var self = _until_reply$6;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $47 = self.err;
                        var _reply$8 = _parse$3(_pst$5);
                        var self = _reply$8;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $49 = self.err;
                                var $50 = Parser$Reply$error$(Parser$Error$combine$($49, $47));
                                var $48 = $50;
                                break;
                            case 'Parser.Reply.value':
                                var $51 = self.pst;
                                var $52 = self.val;
                                var $53 = Parser$until$go$(_until$2, _parse$3, List$cons$($52, _values$4), $51);
                                var $48 = $53;
                                break;
                        };
                        var $46 = $48;
                        break;
                    case 'Parser.Reply.value':
                        var $54 = self.pst;
                        var $55 = Parser$Reply$value$($54, List$reverse$(_values$4));
                        var $46 = $55;
                        break;
                };
                return $46;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$until$go = x0 => x1 => x2 => x3 => Parser$until$go$(x0, x1, x2, x3);

    function Parser$until$(_until$2, _parse$3) {
        var $56 = Parser$until$go(_until$2)(_parse$3)(List$nil);
        return $56;
    };
    const Parser$until = x0 => x1 => Parser$until$(x0, x1);

    function Parser$many$go$(_parse$2, _values$3, _pst$4) {
        var Parser$many$go$ = (_parse$2, _values$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_parse$2, _values$3, _pst$4]
        });
        var Parser$many$go = _parse$2 => _values$3 => _pst$4 => Parser$many$go$(_parse$2, _values$3, _pst$4);
        var arg = [_parse$2, _values$3, _pst$4];
        while (true) {
            let [_parse$2, _values$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var self = _parse$2(_pst$4);
                        switch (self._) {
                            case 'Parser.Reply.value':
                                var $58 = self.pst;
                                var $59 = self.val;
                                var $60 = Parser$many$go$(_parse$2, (_xs$12 => {
                                    var $61 = _values$3(List$cons$($59, _xs$12));
                                    return $61;
                                }), $58);
                                var $57 = $60;
                                break;
                            case 'Parser.Reply.error':
                                var $62 = Parser$Reply$value$(_pst$4, _values$3(List$nil));
                                var $57 = $62;
                                break;
                        };
                        return $57;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$many$go = x0 => x1 => x2 => Parser$many$go$(x0, x1, x2);

    function Parser$many$(_parser$2) {
        var $63 = Parser$many$go(_parser$2)((_x$3 => {
            var $64 = _x$3;
            return $64;
        }));
        return $63;
    };
    const Parser$many = x0 => Parser$many$(x0);

    function Parser$Error$new$(_nam$1, _ini$2, _idx$3, _msg$4) {
        var $65 = ({
            _: 'Parser.Error.new',
            'nam': _nam$1,
            'ini': _ini$2,
            'idx': _idx$3,
            'msg': _msg$4
        });
        return $65;
    };
    const Parser$Error$new = x0 => x1 => x2 => x3 => Parser$Error$new$(x0, x1, x2, x3);

    function Parser$Reply$fail$(_nam$2, _ini$3, _idx$4, _msg$5) {
        var $66 = Parser$Reply$error$(Parser$Error$new$(_nam$2, _ini$3, _idx$4, _msg$5));
        return $66;
    };
    const Parser$Reply$fail = x0 => x1 => x2 => x3 => Parser$Reply$fail$(x0, x1, x2, x3);

    function Maybe$some$(_value$2) {
        var $67 = ({
            _: 'Maybe.some',
            'value': _value$2
        });
        return $67;
    };
    const Maybe$some = x0 => Maybe$some$(x0);

    function Maybe$(_A$1) {
        var $68 = null;
        return $68;
    };
    const Maybe = x0 => Maybe$(x0);
    const Maybe$none = ({
        _: 'Maybe.none'
    });

    function Parser$Error$maybe_combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Maybe.some':
                var $70 = self.value;
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $72 = self.value;
                        var $73 = Maybe$some$(Parser$Error$combine$($70, $72));
                        var $71 = $73;
                        break;
                    case 'Maybe.none':
                        var $74 = _a$1;
                        var $71 = $74;
                        break;
                };
                var $69 = $71;
                break;
            case 'Maybe.none':
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.none':
                        var $76 = Maybe$none;
                        var $75 = $76;
                        break;
                    case 'Maybe.some':
                        var $77 = _b$2;
                        var $75 = $77;
                        break;
                };
                var $69 = $75;
                break;
        };
        return $69;
    };
    const Parser$Error$maybe_combine = x0 => x1 => Parser$Error$maybe_combine$(x0, x1);

    function Parser$State$new$(_err$1, _nam$2, _ini$3, _idx$4, _str$5) {
        var $78 = ({
            _: 'Parser.State.new',
            'err': _err$1,
            'nam': _nam$2,
            'ini': _ini$3,
            'idx': _idx$4,
            'str': _str$5
        });
        return $78;
    };
    const Parser$State$new = x0 => x1 => x2 => x3 => x4 => Parser$State$new$(x0, x1, x2, x3, x4);

    function Parser$choice$(_pars$2, _pst$3) {
        var Parser$choice$ = (_pars$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_pars$2, _pst$3]
        });
        var Parser$choice = _pars$2 => _pst$3 => Parser$choice$(_pars$2, _pst$3);
        var arg = [_pars$2, _pst$3];
        while (true) {
            let [_pars$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $79 = self.err;
                        var $80 = self.nam;
                        var $81 = self.ini;
                        var $82 = self.idx;
                        var $83 = self.str;
                        var self = _pars$2;
                        switch (self._) {
                            case 'List.cons':
                                var $85 = self.head;
                                var $86 = self.tail;
                                var _parsed$11 = $85(_pst$3);
                                var self = _parsed$11;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $88 = self.err;
                                        var _cur_err$13 = Maybe$some$($88);
                                        var _far_err$14 = Parser$Error$maybe_combine$($79, _cur_err$13);
                                        var _new_pst$15 = Parser$State$new$(_far_err$14, $80, $81, $82, $83);
                                        var $89 = Parser$choice$($86, _new_pst$15);
                                        var $87 = $89;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $90 = self.pst;
                                        var $91 = self.val;
                                        var $92 = Parser$Reply$value$($90, $91);
                                        var $87 = $92;
                                        break;
                                };
                                var $84 = $87;
                                break;
                            case 'List.nil':
                                var self = $79;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $94 = self.value;
                                        var $95 = Parser$Reply$error$($94);
                                        var $93 = $95;
                                        break;
                                    case 'Maybe.none':
                                        var $96 = Parser$Reply$fail$($80, $81, $82, "No parse.");
                                        var $93 = $96;
                                        break;
                                };
                                var $84 = $93;
                                break;
                        };
                        return $84;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$choice = x0 => x1 => Parser$choice$(x0, x1);

    function Parser$(_V$1) {
        var $97 = null;
        return $97;
    };
    const Parser = x0 => Parser$(x0);
    const Unit$new = null;

    function String$cons$(_head$1, _tail$2) {
        var $98 = (String.fromCharCode(_head$1) + _tail$2);
        return $98;
    };
    const String$cons = x0 => x1 => String$cons$(x0, x1);
    const String$concat = a0 => a1 => (a0 + a1);

    function Cmp$as_eql$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.gtn':
                var $100 = Bool$false;
                var $99 = $100;
                break;
            case 'Cmp.eql':
                var $101 = Bool$true;
                var $99 = $101;
                break;
        };
        return $99;
    };
    const Cmp$as_eql = x0 => Cmp$as_eql$(x0);
    const Cmp$ltn = ({
        _: 'Cmp.ltn'
    });
    const Cmp$gtn = ({
        _: 'Cmp.gtn'
    });

    function Word$cmp$go$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $103 = self.pred;
                var $104 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $106 = self.pred;
                            var $107 = (_a$pred$10 => {
                                var $108 = Word$cmp$go$(_a$pred$10, $106, _c$4);
                                return $108;
                            });
                            var $105 = $107;
                            break;
                        case 'Word.i':
                            var $109 = self.pred;
                            var $110 = (_a$pred$10 => {
                                var $111 = Word$cmp$go$(_a$pred$10, $109, Cmp$ltn);
                                return $111;
                            });
                            var $105 = $110;
                            break;
                        case 'Word.e':
                            var $112 = (_a$pred$8 => {
                                var $113 = _c$4;
                                return $113;
                            });
                            var $105 = $112;
                            break;
                    };
                    var $105 = $105($103);
                    return $105;
                });
                var $102 = $104;
                break;
            case 'Word.i':
                var $114 = self.pred;
                var $115 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $117 = self.pred;
                            var $118 = (_a$pred$10 => {
                                var $119 = Word$cmp$go$(_a$pred$10, $117, Cmp$gtn);
                                return $119;
                            });
                            var $116 = $118;
                            break;
                        case 'Word.i':
                            var $120 = self.pred;
                            var $121 = (_a$pred$10 => {
                                var $122 = Word$cmp$go$(_a$pred$10, $120, _c$4);
                                return $122;
                            });
                            var $116 = $121;
                            break;
                        case 'Word.e':
                            var $123 = (_a$pred$8 => {
                                var $124 = _c$4;
                                return $124;
                            });
                            var $116 = $123;
                            break;
                    };
                    var $116 = $116($114);
                    return $116;
                });
                var $102 = $115;
                break;
            case 'Word.e':
                var $125 = (_b$5 => {
                    var $126 = _c$4;
                    return $126;
                });
                var $102 = $125;
                break;
        };
        var $102 = $102(_b$3);
        return $102;
    };
    const Word$cmp$go = x0 => x1 => x2 => Word$cmp$go$(x0, x1, x2);
    const Cmp$eql = ({
        _: 'Cmp.eql'
    });

    function Word$cmp$(_a$2, _b$3) {
        var $127 = Word$cmp$go$(_a$2, _b$3, Cmp$eql);
        return $127;
    };
    const Word$cmp = x0 => x1 => Word$cmp$(x0, x1);

    function Word$eql$(_a$2, _b$3) {
        var $128 = Cmp$as_eql$(Word$cmp$(_a$2, _b$3));
        return $128;
    };
    const Word$eql = x0 => x1 => Word$eql$(x0, x1);

    function Nat$succ$(_pred$1) {
        var $129 = 1n + _pred$1;
        return $129;
    };
    const Nat$succ = x0 => Nat$succ$(x0);
    const Nat$zero = 0n;
    const U16$eql = a0 => a1 => (a0 === a1);
    const String$nil = '';

    function Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4) {
        var Parser$text$go$ = (_ini_idx$1, _ini_txt$2, _text$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_ini_idx$1, _ini_txt$2, _text$3, _pst$4]
        });
        var Parser$text$go = _ini_idx$1 => _ini_txt$2 => _text$3 => _pst$4 => Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4);
        var arg = [_ini_idx$1, _ini_txt$2, _text$3, _pst$4];
        while (true) {
            let [_ini_idx$1, _ini_txt$2, _text$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var $130 = self.err;
                        var $131 = self.nam;
                        var $132 = self.ini;
                        var $133 = self.idx;
                        var $134 = self.str;
                        var self = _text$3;
                        if (self.length === 0) {
                            var $136 = Parser$Reply$value$(_pst$4, Unit$new);
                            var $135 = $136;
                        } else {
                            var $137 = self.charCodeAt(0);
                            var $138 = self.slice(1);
                            var self = $134;
                            if (self.length === 0) {
                                var _error_msg$12 = ("Expected \'" + (_ini_txt$2 + "\', found end of file."));
                                var $140 = Parser$Reply$fail$($131, $132, _ini_idx$1, _error_msg$12);
                                var $139 = $140;
                            } else {
                                var $141 = self.charCodeAt(0);
                                var $142 = self.slice(1);
                                var self = ($137 === $141);
                                if (self) {
                                    var _pst$14 = Parser$State$new$($130, $131, $132, Nat$succ$($133), $142);
                                    var $144 = Parser$text$go$(_ini_idx$1, _ini_txt$2, $138, _pst$14);
                                    var $143 = $144;
                                } else {
                                    var _chr$14 = String$cons$($141, String$nil);
                                    var _err$15 = ("Expected \'" + (_ini_txt$2 + ("\', found \'" + (_chr$14 + "\'."))));
                                    var $145 = Parser$Reply$fail$($131, $132, _ini_idx$1, _err$15);
                                    var $143 = $145;
                                };
                                var $139 = $143;
                            };
                            var $135 = $139;
                        };
                        return $135;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$text$go = x0 => x1 => x2 => x3 => Parser$text$go$(x0, x1, x2, x3);

    function Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $147 = self.idx;
                var self = Parser$text$go$($147, _text$1, _text$1, _pst$2);
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $149 = self.err;
                        var $150 = Parser$Reply$error$($149);
                        var $148 = $150;
                        break;
                    case 'Parser.Reply.value':
                        var $151 = self.pst;
                        var $152 = self.val;
                        var $153 = Parser$Reply$value$($151, $152);
                        var $148 = $153;
                        break;
                };
                var $146 = $148;
                break;
        };
        return $146;
    };
    const Parser$text = x0 => x1 => Parser$text$(x0, x1);

    function Parser$eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $155 = self.nam;
                var $156 = self.ini;
                var $157 = self.idx;
                var $158 = self.str;
                var self = $158;
                if (self.length === 0) {
                    var $160 = Parser$Reply$value$(_pst$1, Unit$new);
                    var $159 = $160;
                } else {
                    var $161 = self.charCodeAt(0);
                    var $162 = self.slice(1);
                    var $163 = Parser$Reply$fail$($155, $156, $157, "Expected end-of-file.");
                    var $159 = $163;
                };
                var $154 = $159;
                break;
        };
        return $154;
    };
    const Parser$eof = x0 => Parser$eof$(x0);

    function Parser$one$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $165 = self.err;
                var $166 = self.nam;
                var $167 = self.ini;
                var $168 = self.idx;
                var $169 = self.str;
                var self = $169;
                if (self.length === 0) {
                    var $171 = Parser$Reply$fail$($166, $167, $168, "Unexpected end of file.");
                    var $170 = $171;
                } else {
                    var $172 = self.charCodeAt(0);
                    var $173 = self.slice(1);
                    var _pst$9 = Parser$State$new$($165, $166, $167, Nat$succ$($168), $173);
                    var $174 = Parser$Reply$value$(_pst$9, $172);
                    var $170 = $174;
                };
                var $164 = $170;
                break;
        };
        return $164;
    };
    const Parser$one = x0 => Parser$one$(x0);
    const Kindelia$parse$ignore = Parser$many$(Parser$choice(List$cons$(Parser$text(" "), List$cons$(Parser$text("\u{9}"), List$cons$(Parser$text("\u{d}"), List$cons$(Parser$text("\u{a}"), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $176 = self.err;
                var _reply$7 = Parser$text$("//", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $178 = self.err;
                        var self = $176;
                        switch (self._) {
                            case 'Maybe.some':
                                var $180 = self.value;
                                var $181 = Parser$Reply$error$(Parser$Error$combine$($180, $178));
                                var $179 = $181;
                                break;
                            case 'Maybe.none':
                                var $182 = Parser$Reply$error$($178);
                                var $179 = $182;
                                break;
                        };
                        var $177 = $179;
                        break;
                    case 'Parser.Reply.value':
                        var $183 = self.pst;
                        var self = $183;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $185 = self.err;
                                var $186 = self.nam;
                                var $187 = self.ini;
                                var $188 = self.idx;
                                var $189 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($176, $185), $186, $187, $188, $189);
                                var _end$16 = Parser$choice(List$cons$(Parser$text("\u{a}"), List$cons$(Parser$eof, List$nil)));
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $191 = self.err;
                                        var _reply$22 = Parser$until$(_end$16, Parser$one)(_reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $193 = self.err;
                                                var self = $191;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $195 = self.value;
                                                        var $196 = Parser$Reply$error$(Parser$Error$combine$($195, $193));
                                                        var $194 = $196;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $197 = Parser$Reply$error$($193);
                                                        var $194 = $197;
                                                        break;
                                                };
                                                var $192 = $194;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $198 = self.pst;
                                                var self = $198;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $200 = self.err;
                                                        var $201 = self.nam;
                                                        var $202 = self.ini;
                                                        var $203 = self.idx;
                                                        var $204 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($191, $200), $201, $202, $203, $204);
                                                        var $205 = Parser$Reply$value$(_reply$pst$30, Unit$new);
                                                        var $199 = $205;
                                                        break;
                                                };
                                                var $192 = $199;
                                                break;
                                        };
                                        var $190 = $192;
                                        break;
                                };
                                var $184 = $190;
                                break;
                        };
                        var $177 = $184;
                        break;
                };
                var $175 = $177;
                break;
        };
        return $175;
    }), List$nil)))))));

    function Kindelia$parse$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $207 = self.err;
                var _reply$8 = Kindelia$parse$ignore(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $209 = self.err;
                        var self = $207;
                        switch (self._) {
                            case 'Maybe.some':
                                var $211 = self.value;
                                var $212 = Parser$Reply$error$(Parser$Error$combine$($211, $209));
                                var $210 = $212;
                                break;
                            case 'Maybe.none':
                                var $213 = Parser$Reply$error$($209);
                                var $210 = $213;
                                break;
                        };
                        var $208 = $210;
                        break;
                    case 'Parser.Reply.value':
                        var $214 = self.pst;
                        var self = $214;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $216 = self.err;
                                var $217 = self.nam;
                                var $218 = self.ini;
                                var $219 = self.idx;
                                var $220 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($207, $216), $217, $218, $219, $220);
                                var $221 = Parser$text$(_text$1, _reply$pst$16);
                                var $215 = $221;
                                break;
                        };
                        var $208 = $215;
                        break;
                };
                var $206 = $208;
                break;
        };
        return $206;
    };
    const Kindelia$parse$text = x0 => x1 => Kindelia$parse$text$(x0, x1);

    function Parser$letter$(_is_letter$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $223 = self.err;
                var $224 = self.nam;
                var $225 = self.ini;
                var $226 = self.idx;
                var $227 = self.str;
                var self = $227;
                if (self.length === 0) {
                    var $229 = Parser$Reply$fail$($224, $225, $226, "Unexpected eof.");
                    var $228 = $229;
                } else {
                    var $230 = self.charCodeAt(0);
                    var $231 = self.slice(1);
                    var self = _is_letter$1($230);
                    if (self) {
                        var $233 = Parser$Reply$value$(Parser$State$new$($223, $224, $225, Nat$succ$($226), $231), $230);
                        var $232 = $233;
                    } else {
                        var $234 = Parser$Reply$fail$($224, $225, $226, "Expected letter.");
                        var $232 = $234;
                    };
                    var $228 = $232;
                };
                var $222 = $228;
                break;
        };
        return $222;
    };
    const Parser$letter = x0 => x1 => Parser$letter$(x0, x1);
    const Bool$and = a0 => a1 => (a0 && a1);

    function Cmp$as_lte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $236 = Bool$true;
                var $235 = $236;
                break;
            case 'Cmp.gtn':
                var $237 = Bool$false;
                var $235 = $237;
                break;
        };
        return $235;
    };
    const Cmp$as_lte = x0 => Cmp$as_lte$(x0);

    function Word$lte$(_a$2, _b$3) {
        var $238 = Cmp$as_lte$(Word$cmp$(_a$2, _b$3));
        return $238;
    };
    const Word$lte = x0 => x1 => Word$lte$(x0, x1);
    const U16$lte = a0 => a1 => (a0 <= a1);

    function U16$btw$(_a$1, _b$2, _c$3) {
        var $239 = ((_a$1 <= _b$2) && (_b$2 <= _c$3));
        return $239;
    };
    const U16$btw = x0 => x1 => x2 => U16$btw$(x0, x1, x2);
    const Kindelia$parse$letter = Parser$letter((_chr$1 => {
        var self = U16$btw$(65, _chr$1, 90);
        if (self) {
            var $241 = Bool$true;
            var $240 = $241;
        } else {
            var self = U16$btw$(97, _chr$1, 122);
            if (self) {
                var $243 = Bool$true;
                var $242 = $243;
            } else {
                var self = U16$btw$(48, _chr$1, 57);
                if (self) {
                    var $245 = Bool$true;
                    var $244 = $245;
                } else {
                    var self = (46 === _chr$1);
                    if (self) {
                        var $247 = Bool$true;
                        var $246 = $247;
                    } else {
                        var self = (95 === _chr$1);
                        if (self) {
                            var $249 = Bool$true;
                            var $248 = $249;
                        } else {
                            var self = (94 === _chr$1);
                            if (self) {
                                var $251 = Bool$true;
                                var $250 = $251;
                            } else {
                                var $252 = Bool$false;
                                var $250 = $252;
                            };
                            var $248 = $250;
                        };
                        var $246 = $248;
                    };
                    var $244 = $246;
                };
                var $242 = $244;
            };
            var $240 = $242;
        };
        return $240;
    }));

    function List$fold$(_list$2, _nil$4, _cons$5) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $254 = self.head;
                var $255 = self.tail;
                var $256 = _cons$5($254)(List$fold$($255, _nil$4, _cons$5));
                var $253 = $256;
                break;
            case 'List.nil':
                var $257 = _nil$4;
                var $253 = $257;
                break;
        };
        return $253;
    };
    const List$fold = x0 => x1 => x2 => List$fold$(x0, x1, x2);

    function Kindelia$parse$name$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $259 = self.err;
                var _reply$7 = Kindelia$parse$ignore(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $261 = self.err;
                        var self = $259;
                        switch (self._) {
                            case 'Maybe.some':
                                var $263 = self.value;
                                var $264 = Parser$Reply$error$(Parser$Error$combine$($263, $261));
                                var $262 = $264;
                                break;
                            case 'Maybe.none':
                                var $265 = Parser$Reply$error$($261);
                                var $262 = $265;
                                break;
                        };
                        var $260 = $262;
                        break;
                    case 'Parser.Reply.value':
                        var $266 = self.pst;
                        var self = $266;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $268 = self.err;
                                var $269 = self.nam;
                                var $270 = self.ini;
                                var $271 = self.idx;
                                var $272 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($259, $268), $269, $270, $271, $272);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $274 = self.err;
                                        var _reply$21 = Kindelia$parse$letter(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $276 = self.err;
                                                var self = $274;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $278 = self.value;
                                                        var $279 = Parser$Reply$error$(Parser$Error$combine$($278, $276));
                                                        var $277 = $279;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $280 = Parser$Reply$error$($276);
                                                        var $277 = $280;
                                                        break;
                                                };
                                                var $275 = $277;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $281 = self.pst;
                                                var $282 = self.val;
                                                var self = $281;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $284 = self.err;
                                                        var $285 = self.nam;
                                                        var $286 = self.ini;
                                                        var $287 = self.idx;
                                                        var $288 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($274, $284), $285, $286, $287, $288);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $290 = self.err;
                                                                var _reply$35 = Parser$many$(Kindelia$parse$letter)(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $292 = self.err;
                                                                        var self = $290;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $294 = self.value;
                                                                                var $295 = Parser$Reply$error$(Parser$Error$combine$($294, $292));
                                                                                var $293 = $295;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $296 = Parser$Reply$error$($292);
                                                                                var $293 = $296;
                                                                                break;
                                                                        };
                                                                        var $291 = $293;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $297 = self.pst;
                                                                        var $298 = self.val;
                                                                        var self = $297;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $300 = self.err;
                                                                                var $301 = self.nam;
                                                                                var $302 = self.ini;
                                                                                var $303 = self.idx;
                                                                                var $304 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($290, $300), $301, $302, $303, $304);
                                                                                var $305 = Parser$Reply$value$(_reply$pst$43, String$cons$($282, List$fold$($298, String$nil, String$cons)));
                                                                                var $299 = $305;
                                                                                break;
                                                                        };
                                                                        var $291 = $299;
                                                                        break;
                                                                };
                                                                var $289 = $291;
                                                                break;
                                                        };
                                                        var $283 = $289;
                                                        break;
                                                };
                                                var $275 = $283;
                                                break;
                                        };
                                        var $273 = $275;
                                        break;
                                };
                                var $267 = $273;
                                break;
                        };
                        var $260 = $267;
                        break;
                };
                var $258 = $260;
                break;
        };
        return $258;
    };
    const Kindelia$parse$name = x0 => Kindelia$parse$name$(x0);

    function Parser$wrap$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $307 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $309 = self.err;
                        var self = $307;
                        switch (self._) {
                            case 'Maybe.some':
                                var $311 = self.value;
                                var $312 = Parser$Reply$error$(Parser$Error$combine$($311, $309));
                                var $310 = $312;
                                break;
                            case 'Maybe.none':
                                var $313 = Parser$Reply$error$($309);
                                var $310 = $313;
                                break;
                        };
                        var $308 = $310;
                        break;
                    case 'Parser.Reply.value':
                        var $314 = self.pst;
                        var self = $314;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $316 = self.err;
                                var $317 = self.nam;
                                var $318 = self.ini;
                                var $319 = self.idx;
                                var $320 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($307, $316), $317, $318, $319, $320);
                                var $321 = Parser$until$(_close$4, _parse$3)(_reply$pst$19);
                                var $315 = $321;
                                break;
                        };
                        var $308 = $315;
                        break;
                };
                var $306 = $308;
                break;
        };
        return $306;
    };
    const Parser$wrap = x0 => x1 => x2 => x3 => Parser$wrap$(x0, x1, x2, x3);

    function Pair$(_A$1, _B$2) {
        var $322 = null;
        return $322;
    };
    const Pair = x0 => x1 => Pair$(x0, x1);

    function Parser$maybe$(_parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var self = _parse$2(_pst$3);
                switch (self._) {
                    case 'Parser.Reply.value':
                        var $325 = self.pst;
                        var $326 = self.val;
                        var $327 = Parser$Reply$value$($325, Maybe$some$($326));
                        var $324 = $327;
                        break;
                    case 'Parser.Reply.error':
                        var $328 = Parser$Reply$value$(_pst$3, Maybe$none);
                        var $324 = $328;
                        break;
                };
                var $323 = $324;
                break;
        };
        return $323;
    };
    const Parser$maybe = x0 => x1 => Parser$maybe$(x0, x1);

    function Kindelia$Type$effe$(_rety$1) {
        var $329 = ({
            _: 'Kindelia.Type.effe',
            'rety': _rety$1
        });
        return $329;
    };
    const Kindelia$Type$effe = x0 => Kindelia$Type$effe$(x0);
    const Kindelia$Type$word = ({
        _: 'Kindelia.Type.word'
    });

    function Kindelia$Type$data$(_name$1) {
        var $330 = ({
            _: 'Kindelia.Type.data',
            'name': _name$1
        });
        return $330;
    };
    const Kindelia$Type$data = x0 => Kindelia$Type$data$(x0);

    function Kindelia$parse$type$(_world$1) {
        var $331 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $333 = self.err;
                    var _reply$8 = Kindelia$parse$text$("&", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $335 = self.err;
                            var self = $333;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $337 = self.value;
                                    var $338 = Parser$Reply$error$(Parser$Error$combine$($337, $335));
                                    var $336 = $338;
                                    break;
                                case 'Maybe.none':
                                    var $339 = Parser$Reply$error$($335);
                                    var $336 = $339;
                                    break;
                            };
                            var $334 = $336;
                            break;
                        case 'Parser.Reply.value':
                            var $340 = self.pst;
                            var self = $340;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $342 = self.err;
                                    var $343 = self.nam;
                                    var $344 = self.ini;
                                    var $345 = self.idx;
                                    var $346 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($333, $342), $343, $344, $345, $346);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $348 = self.err;
                                            var _reply$22 = Kindelia$parse$type$(_world$1)(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $350 = self.err;
                                                    var self = $348;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $352 = self.value;
                                                            var $353 = Parser$Reply$error$(Parser$Error$combine$($352, $350));
                                                            var $351 = $353;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $354 = Parser$Reply$error$($350);
                                                            var $351 = $354;
                                                            break;
                                                    };
                                                    var $349 = $351;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $355 = self.pst;
                                                    var $356 = self.val;
                                                    var self = $355;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $358 = self.err;
                                                            var $359 = self.nam;
                                                            var $360 = self.ini;
                                                            var $361 = self.idx;
                                                            var $362 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($348, $358), $359, $360, $361, $362);
                                                            var $363 = Parser$Reply$value$(_reply$pst$30, Kindelia$Type$effe$($356));
                                                            var $357 = $363;
                                                            break;
                                                    };
                                                    var $349 = $357;
                                                    break;
                                            };
                                            var $347 = $349;
                                            break;
                                    };
                                    var $341 = $347;
                                    break;
                            };
                            var $334 = $341;
                            break;
                    };
                    var $332 = $334;
                    break;
            };
            return $332;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $365 = self.err;
                    var _reply$8 = Kindelia$parse$text$("#word", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $367 = self.err;
                            var self = $365;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $369 = self.value;
                                    var $370 = Parser$Reply$error$(Parser$Error$combine$($369, $367));
                                    var $368 = $370;
                                    break;
                                case 'Maybe.none':
                                    var $371 = Parser$Reply$error$($367);
                                    var $368 = $371;
                                    break;
                            };
                            var $366 = $368;
                            break;
                        case 'Parser.Reply.value':
                            var $372 = self.pst;
                            var self = $372;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $374 = self.err;
                                    var $375 = self.nam;
                                    var $376 = self.ini;
                                    var $377 = self.idx;
                                    var $378 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($365, $374), $375, $376, $377, $378);
                                    var $379 = Parser$Reply$value$(_reply$pst$16, Kindelia$Type$word);
                                    var $373 = $379;
                                    break;
                            };
                            var $366 = $373;
                            break;
                    };
                    var $364 = $366;
                    break;
            };
            return $364;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $381 = self.err;
                    var _reply$8 = Kindelia$parse$name$(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $383 = self.err;
                            var self = $381;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $385 = self.value;
                                    var $386 = Parser$Reply$error$(Parser$Error$combine$($385, $383));
                                    var $384 = $386;
                                    break;
                                case 'Maybe.none':
                                    var $387 = Parser$Reply$error$($383);
                                    var $384 = $387;
                                    break;
                            };
                            var $382 = $384;
                            break;
                        case 'Parser.Reply.value':
                            var $388 = self.pst;
                            var $389 = self.val;
                            var self = $388;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $391 = self.err;
                                    var $392 = self.nam;
                                    var $393 = self.ini;
                                    var $394 = self.idx;
                                    var $395 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($381, $391), $392, $393, $394, $395);
                                    var $396 = Parser$Reply$value$(_reply$pst$16, Kindelia$Type$data$($389));
                                    var $390 = $396;
                                    break;
                            };
                            var $382 = $390;
                            break;
                    };
                    var $380 = $382;
                    break;
            };
            return $380;
        }), List$nil))));
        return $331;
    };
    const Kindelia$parse$type = x0 => Kindelia$parse$type$(x0);

    function Pair$new$(_fst$3, _snd$4) {
        var $397 = ({
            _: 'Pair.new',
            'fst': _fst$3,
            'snd': _snd$4
        });
        return $397;
    };
    const Pair$new = x0 => x1 => Pair$new$(x0, x1);

    function Kindelia$parse$ann$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $399 = self.err;
                var _reply$8 = Parser$maybe$(Kindelia$parse$text(","), _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $401 = self.err;
                        var self = $399;
                        switch (self._) {
                            case 'Maybe.some':
                                var $403 = self.value;
                                var $404 = Parser$Reply$error$(Parser$Error$combine$($403, $401));
                                var $402 = $404;
                                break;
                            case 'Maybe.none':
                                var $405 = Parser$Reply$error$($401);
                                var $402 = $405;
                                break;
                        };
                        var $400 = $402;
                        break;
                    case 'Parser.Reply.value':
                        var $406 = self.pst;
                        var self = $406;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $408 = self.err;
                                var $409 = self.nam;
                                var $410 = self.ini;
                                var $411 = self.idx;
                                var $412 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($399, $408), $409, $410, $411, $412);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $414 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $416 = self.err;
                                                var self = $414;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $418 = self.value;
                                                        var $419 = Parser$Reply$error$(Parser$Error$combine$($418, $416));
                                                        var $417 = $419;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $420 = Parser$Reply$error$($416);
                                                        var $417 = $420;
                                                        break;
                                                };
                                                var $415 = $417;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $421 = self.pst;
                                                var $422 = self.val;
                                                var self = $421;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $424 = self.err;
                                                        var $425 = self.nam;
                                                        var $426 = self.ini;
                                                        var $427 = self.idx;
                                                        var $428 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($414, $424), $425, $426, $427, $428);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $430 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $432 = self.err;
                                                                        var self = $430;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $434 = self.value;
                                                                                var $435 = Parser$Reply$error$(Parser$Error$combine$($434, $432));
                                                                                var $433 = $435;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $436 = Parser$Reply$error$($432);
                                                                                var $433 = $436;
                                                                                break;
                                                                        };
                                                                        var $431 = $433;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $437 = self.pst;
                                                                        var self = $437;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $439 = self.err;
                                                                                var $440 = self.nam;
                                                                                var $441 = self.ini;
                                                                                var $442 = self.idx;
                                                                                var $443 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($430, $439), $440, $441, $442, $443);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $445 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$type$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $447 = self.err;
                                                                                                var self = $445;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $449 = self.value;
                                                                                                        var $450 = Parser$Reply$error$(Parser$Error$combine$($449, $447));
                                                                                                        var $448 = $450;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $451 = Parser$Reply$error$($447);
                                                                                                        var $448 = $451;
                                                                                                        break;
                                                                                                };
                                                                                                var $446 = $448;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $452 = self.pst;
                                                                                                var $453 = self.val;
                                                                                                var self = $452;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $455 = self.err;
                                                                                                        var $456 = self.nam;
                                                                                                        var $457 = self.ini;
                                                                                                        var $458 = self.idx;
                                                                                                        var $459 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($445, $455), $456, $457, $458, $459);
                                                                                                        var $460 = Parser$Reply$value$(_reply$pst$58, Pair$new$($422, $453));
                                                                                                        var $454 = $460;
                                                                                                        break;
                                                                                                };
                                                                                                var $446 = $454;
                                                                                                break;
                                                                                        };
                                                                                        var $444 = $446;
                                                                                        break;
                                                                                };
                                                                                var $438 = $444;
                                                                                break;
                                                                        };
                                                                        var $431 = $438;
                                                                        break;
                                                                };
                                                                var $429 = $431;
                                                                break;
                                                        };
                                                        var $423 = $429;
                                                        break;
                                                };
                                                var $415 = $423;
                                                break;
                                        };
                                        var $413 = $415;
                                        break;
                                };
                                var $407 = $413;
                                break;
                        };
                        var $400 = $407;
                        break;
                };
                var $398 = $400;
                break;
        };
        return $398;
    };
    const Kindelia$parse$ann = x0 => x1 => Kindelia$parse$ann$(x0, x1);

    function Kindelia$Constructor$new$(_name$1, _fprm$2) {
        var $461 = ({
            _: 'Kindelia.Constructor.new',
            'name': _name$1,
            'fprm': _fprm$2
        });
        return $461;
    };
    const Kindelia$Constructor$new = x0 => x1 => Kindelia$Constructor$new$(x0, x1);

    function Kindelia$parse$constructor$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $463 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $465 = self.err;
                        var self = $463;
                        switch (self._) {
                            case 'Maybe.some':
                                var $467 = self.value;
                                var $468 = Parser$Reply$error$(Parser$Error$combine$($467, $465));
                                var $466 = $468;
                                break;
                            case 'Maybe.none':
                                var $469 = Parser$Reply$error$($465);
                                var $466 = $469;
                                break;
                        };
                        var $464 = $466;
                        break;
                    case 'Parser.Reply.value':
                        var $470 = self.pst;
                        var $471 = self.val;
                        var self = $470;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $473 = self.err;
                                var $474 = self.nam;
                                var $475 = self.ini;
                                var $476 = self.idx;
                                var $477 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($463, $473), $474, $475, $476, $477);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $479 = self.err;
                                        var _reply$22 = Parser$wrap$(Kindelia$parse$text("{"), Kindelia$parse$ann(_world$1), Kindelia$parse$text("}"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $481 = self.err;
                                                var self = $479;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $483 = self.value;
                                                        var $484 = Parser$Reply$error$(Parser$Error$combine$($483, $481));
                                                        var $482 = $484;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $485 = Parser$Reply$error$($481);
                                                        var $482 = $485;
                                                        break;
                                                };
                                                var $480 = $482;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $486 = self.pst;
                                                var $487 = self.val;
                                                var self = $486;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $489 = self.err;
                                                        var $490 = self.nam;
                                                        var $491 = self.ini;
                                                        var $492 = self.idx;
                                                        var $493 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($479, $489), $490, $491, $492, $493);
                                                        var $494 = Parser$Reply$value$(_reply$pst$30, Kindelia$Constructor$new$($471, $487));
                                                        var $488 = $494;
                                                        break;
                                                };
                                                var $480 = $488;
                                                break;
                                        };
                                        var $478 = $480;
                                        break;
                                };
                                var $472 = $478;
                                break;
                        };
                        var $464 = $472;
                        break;
                };
                var $462 = $464;
                break;
        };
        return $462;
    };
    const Kindelia$parse$constructor = x0 => x1 => Kindelia$parse$constructor$(x0, x1);

    function Kindelia$Data$new$(_name$1, _constructors$2) {
        var $495 = ({
            _: 'Kindelia.Data.new',
            'name': _name$1,
            'constructors': _constructors$2
        });
        return $495;
    };
    const Kindelia$Data$new = x0 => x1 => Kindelia$Data$new$(x0, x1);

    function Kindelia$parse$data$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $497 = self.err;
                var _reply$8 = Kindelia$parse$text$("type", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $499 = self.err;
                        var self = $497;
                        switch (self._) {
                            case 'Maybe.some':
                                var $501 = self.value;
                                var $502 = Parser$Reply$error$(Parser$Error$combine$($501, $499));
                                var $500 = $502;
                                break;
                            case 'Maybe.none':
                                var $503 = Parser$Reply$error$($499);
                                var $500 = $503;
                                break;
                        };
                        var $498 = $500;
                        break;
                    case 'Parser.Reply.value':
                        var $504 = self.pst;
                        var self = $504;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $506 = self.err;
                                var $507 = self.nam;
                                var $508 = self.ini;
                                var $509 = self.idx;
                                var $510 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($497, $506), $507, $508, $509, $510);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $512 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $514 = self.err;
                                                var self = $512;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $516 = self.value;
                                                        var $517 = Parser$Reply$error$(Parser$Error$combine$($516, $514));
                                                        var $515 = $517;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $518 = Parser$Reply$error$($514);
                                                        var $515 = $518;
                                                        break;
                                                };
                                                var $513 = $515;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $519 = self.pst;
                                                var $520 = self.val;
                                                var self = $519;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $522 = self.err;
                                                        var $523 = self.nam;
                                                        var $524 = self.ini;
                                                        var $525 = self.idx;
                                                        var $526 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($512, $522), $523, $524, $525, $526);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $528 = self.err;
                                                                var _reply$36 = Parser$wrap$(Kindelia$parse$text("{"), (_pst$36 => {
                                                                    var self = _pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $531 = self.err;
                                                                            var _reply$42 = Kindelia$parse$constructor$(_world$1, _pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $533 = self.err;
                                                                                    var self = $531;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $535 = self.value;
                                                                                            var $536 = Parser$Reply$error$(Parser$Error$combine$($535, $533));
                                                                                            var $534 = $536;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $537 = Parser$Reply$error$($533);
                                                                                            var $534 = $537;
                                                                                            break;
                                                                                    };
                                                                                    var $532 = $534;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $538 = self.pst;
                                                                                    var $539 = self.val;
                                                                                    var self = $538;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $541 = self.err;
                                                                                            var $542 = self.nam;
                                                                                            var $543 = self.ini;
                                                                                            var $544 = self.idx;
                                                                                            var $545 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($531, $541), $542, $543, $544, $545);
                                                                                            var self = _reply$pst$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $547 = self.err;
                                                                                                    var _reply$56 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$50);
                                                                                                    var self = _reply$56;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $549 = self.err;
                                                                                                            var self = $547;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $551 = self.value;
                                                                                                                    var $552 = Parser$Reply$error$(Parser$Error$combine$($551, $549));
                                                                                                                    var $550 = $552;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $553 = Parser$Reply$error$($549);
                                                                                                                    var $550 = $553;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $548 = $550;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $554 = self.pst;
                                                                                                            var self = $554;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $556 = self.err;
                                                                                                                    var $557 = self.nam;
                                                                                                                    var $558 = self.ini;
                                                                                                                    var $559 = self.idx;
                                                                                                                    var $560 = self.str;
                                                                                                                    var _reply$pst$64 = Parser$State$new$(Parser$Error$maybe_combine$($547, $556), $557, $558, $559, $560);
                                                                                                                    var $561 = Parser$Reply$value$(_reply$pst$64, $539);
                                                                                                                    var $555 = $561;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $548 = $555;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $546 = $548;
                                                                                                    break;
                                                                                            };
                                                                                            var $540 = $546;
                                                                                            break;
                                                                                    };
                                                                                    var $532 = $540;
                                                                                    break;
                                                                            };
                                                                            var $530 = $532;
                                                                            break;
                                                                    };
                                                                    return $530;
                                                                }), Kindelia$parse$text("}"), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $562 = self.err;
                                                                        var self = $528;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $564 = self.value;
                                                                                var $565 = Parser$Reply$error$(Parser$Error$combine$($564, $562));
                                                                                var $563 = $565;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $566 = Parser$Reply$error$($562);
                                                                                var $563 = $566;
                                                                                break;
                                                                        };
                                                                        var $529 = $563;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $567 = self.pst;
                                                                        var $568 = self.val;
                                                                        var self = $567;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $570 = self.err;
                                                                                var $571 = self.nam;
                                                                                var $572 = self.ini;
                                                                                var $573 = self.idx;
                                                                                var $574 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($528, $570), $571, $572, $573, $574);
                                                                                var $575 = Parser$Reply$value$(_reply$pst$44, Kindelia$Data$new$($520, $568));
                                                                                var $569 = $575;
                                                                                break;
                                                                        };
                                                                        var $529 = $569;
                                                                        break;
                                                                };
                                                                var $527 = $529;
                                                                break;
                                                        };
                                                        var $521 = $527;
                                                        break;
                                                };
                                                var $513 = $521;
                                                break;
                                        };
                                        var $511 = $513;
                                        break;
                                };
                                var $505 = $511;
                                break;
                        };
                        var $498 = $505;
                        break;
                };
                var $496 = $498;
                break;
        };
        return $496;
    };
    const Kindelia$parse$data = x0 => x1 => Kindelia$parse$data$(x0, x1);

    function Kindelia$Transaction$new_data$(_data$1) {
        var $576 = ({
            _: 'Kindelia.Transaction.new_data',
            'data': _data$1
        });
        return $576;
    };
    const Kindelia$Transaction$new_data = x0 => Kindelia$Transaction$new_data$(x0);

    function Kindelia$Term$let$(_name$1, _type$2, _expr$3, _body$4) {
        var $577 = ({
            _: 'Kindelia.Term.let',
            'name': _name$1,
            'type': _type$2,
            'expr': _expr$3,
            'body': _body$4
        });
        return $577;
    };
    const Kindelia$Term$let = x0 => x1 => x2 => x3 => Kindelia$Term$let$(x0, x1, x2, x3);

    function Kindelia$parse$term$let$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $579 = self.err;
                var _reply$8 = Kindelia$parse$text$("let", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $581 = self.err;
                        var self = $579;
                        switch (self._) {
                            case 'Maybe.some':
                                var $583 = self.value;
                                var $584 = Parser$Reply$error$(Parser$Error$combine$($583, $581));
                                var $582 = $584;
                                break;
                            case 'Maybe.none':
                                var $585 = Parser$Reply$error$($581);
                                var $582 = $585;
                                break;
                        };
                        var $580 = $582;
                        break;
                    case 'Parser.Reply.value':
                        var $586 = self.pst;
                        var self = $586;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $588 = self.err;
                                var $589 = self.nam;
                                var $590 = self.ini;
                                var $591 = self.idx;
                                var $592 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($579, $588), $589, $590, $591, $592);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $594 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $596 = self.err;
                                                var self = $594;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $598 = self.value;
                                                        var $599 = Parser$Reply$error$(Parser$Error$combine$($598, $596));
                                                        var $597 = $599;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $600 = Parser$Reply$error$($596);
                                                        var $597 = $600;
                                                        break;
                                                };
                                                var $595 = $597;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $601 = self.pst;
                                                var $602 = self.val;
                                                var self = $601;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $604 = self.err;
                                                        var $605 = self.nam;
                                                        var $606 = self.ini;
                                                        var $607 = self.idx;
                                                        var $608 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($594, $604), $605, $606, $607, $608);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $610 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $612 = self.err;
                                                                        var self = $610;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $614 = self.value;
                                                                                var $615 = Parser$Reply$error$(Parser$Error$combine$($614, $612));
                                                                                var $613 = $615;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $616 = Parser$Reply$error$($612);
                                                                                var $613 = $616;
                                                                                break;
                                                                        };
                                                                        var $611 = $613;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $617 = self.pst;
                                                                        var self = $617;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $619 = self.err;
                                                                                var $620 = self.nam;
                                                                                var $621 = self.ini;
                                                                                var $622 = self.idx;
                                                                                var $623 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($610, $619), $620, $621, $622, $623);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $625 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$type$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $627 = self.err;
                                                                                                var self = $625;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $629 = self.value;
                                                                                                        var $630 = Parser$Reply$error$(Parser$Error$combine$($629, $627));
                                                                                                        var $628 = $630;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $631 = Parser$Reply$error$($627);
                                                                                                        var $628 = $631;
                                                                                                        break;
                                                                                                };
                                                                                                var $626 = $628;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $632 = self.pst;
                                                                                                var $633 = self.val;
                                                                                                var self = $632;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $635 = self.err;
                                                                                                        var $636 = self.nam;
                                                                                                        var $637 = self.ini;
                                                                                                        var $638 = self.idx;
                                                                                                        var $639 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($625, $635), $636, $637, $638, $639);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $641 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$text$("=", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $643 = self.err;
                                                                                                                        var self = $641;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $645 = self.value;
                                                                                                                                var $646 = Parser$Reply$error$(Parser$Error$combine$($645, $643));
                                                                                                                                var $644 = $646;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $647 = Parser$Reply$error$($643);
                                                                                                                                var $644 = $647;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $642 = $644;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $648 = self.pst;
                                                                                                                        var self = $648;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $650 = self.err;
                                                                                                                                var $651 = self.nam;
                                                                                                                                var $652 = self.ini;
                                                                                                                                var $653 = self.idx;
                                                                                                                                var $654 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($641, $650), $651, $652, $653, $654);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $656 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $658 = self.err;
                                                                                                                                                var self = $656;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $660 = self.value;
                                                                                                                                                        var $661 = Parser$Reply$error$(Parser$Error$combine$($660, $658));
                                                                                                                                                        var $659 = $661;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $662 = Parser$Reply$error$($658);
                                                                                                                                                        var $659 = $662;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $657 = $659;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $663 = self.pst;
                                                                                                                                                var $664 = self.val;
                                                                                                                                                var self = $663;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $666 = self.err;
                                                                                                                                                        var $667 = self.nam;
                                                                                                                                                        var $668 = self.ini;
                                                                                                                                                        var $669 = self.idx;
                                                                                                                                                        var $670 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($656, $666), $667, $668, $669, $670);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $672 = self.err;
                                                                                                                                                                var _reply$92 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $674 = self.err;
                                                                                                                                                                        var self = $672;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $676 = self.value;
                                                                                                                                                                                var $677 = Parser$Reply$error$(Parser$Error$combine$($676, $674));
                                                                                                                                                                                var $675 = $677;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $678 = Parser$Reply$error$($674);
                                                                                                                                                                                var $675 = $678;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $673 = $675;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $679 = self.pst;
                                                                                                                                                                        var self = $679;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $681 = self.err;
                                                                                                                                                                                var $682 = self.nam;
                                                                                                                                                                                var $683 = self.ini;
                                                                                                                                                                                var $684 = self.idx;
                                                                                                                                                                                var $685 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($672, $681), $682, $683, $684, $685);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $687 = self.err;
                                                                                                                                                                                        var _reply$106 = Kindelia$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $689 = self.err;
                                                                                                                                                                                                var self = $687;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $691 = self.value;
                                                                                                                                                                                                        var $692 = Parser$Reply$error$(Parser$Error$combine$($691, $689));
                                                                                                                                                                                                        var $690 = $692;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $693 = Parser$Reply$error$($689);
                                                                                                                                                                                                        var $690 = $693;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $688 = $690;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $694 = self.pst;
                                                                                                                                                                                                var $695 = self.val;
                                                                                                                                                                                                var self = $694;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $697 = self.err;
                                                                                                                                                                                                        var $698 = self.nam;
                                                                                                                                                                                                        var $699 = self.ini;
                                                                                                                                                                                                        var $700 = self.idx;
                                                                                                                                                                                                        var $701 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($687, $697), $698, $699, $700, $701);
                                                                                                                                                                                                        var $702 = Parser$Reply$value$(_reply$pst$114, Kindelia$Term$let$($602, $633, $664, $695));
                                                                                                                                                                                                        var $696 = $702;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $688 = $696;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $686 = $688;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $680 = $686;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $673 = $680;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $671 = $673;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $665 = $671;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $657 = $665;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $655 = $657;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $649 = $655;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $642 = $649;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $640 = $642;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $634 = $640;
                                                                                                        break;
                                                                                                };
                                                                                                var $626 = $634;
                                                                                                break;
                                                                                        };
                                                                                        var $624 = $626;
                                                                                        break;
                                                                                };
                                                                                var $618 = $624;
                                                                                break;
                                                                        };
                                                                        var $611 = $618;
                                                                        break;
                                                                };
                                                                var $609 = $611;
                                                                break;
                                                        };
                                                        var $603 = $609;
                                                        break;
                                                };
                                                var $595 = $603;
                                                break;
                                        };
                                        var $593 = $595;
                                        break;
                                };
                                var $587 = $593;
                                break;
                        };
                        var $580 = $587;
                        break;
                };
                var $578 = $580;
                break;
        };
        return $578;
    };
    const Kindelia$parse$term$let = x0 => x1 => Kindelia$parse$term$let$(x0, x1);

    function Kindelia$Term$create$(_ctor$1, _vals$2) {
        var $703 = ({
            _: 'Kindelia.Term.create',
            'ctor': _ctor$1,
            'vals': _vals$2
        });
        return $703;
    };
    const Kindelia$Term$create = x0 => x1 => Kindelia$Term$create$(x0, x1);

    function Kindelia$parse$term$create$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $705 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $707 = self.err;
                        var self = $705;
                        switch (self._) {
                            case 'Maybe.some':
                                var $709 = self.value;
                                var $710 = Parser$Reply$error$(Parser$Error$combine$($709, $707));
                                var $708 = $710;
                                break;
                            case 'Maybe.none':
                                var $711 = Parser$Reply$error$($707);
                                var $708 = $711;
                                break;
                        };
                        var $706 = $708;
                        break;
                    case 'Parser.Reply.value':
                        var $712 = self.pst;
                        var $713 = self.val;
                        var self = $712;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $715 = self.err;
                                var $716 = self.nam;
                                var $717 = self.ini;
                                var $718 = self.idx;
                                var $719 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($705, $715), $716, $717, $718, $719);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $721 = self.err;
                                        var _reply$22 = Parser$wrap$(Kindelia$parse$text("{"), (_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $724 = self.err;
                                                    var _reply$28 = Kindelia$parse$term$(_world$1)(_pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $726 = self.err;
                                                            var self = $724;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $728 = self.value;
                                                                    var $729 = Parser$Reply$error$(Parser$Error$combine$($728, $726));
                                                                    var $727 = $729;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $730 = Parser$Reply$error$($726);
                                                                    var $727 = $730;
                                                                    break;
                                                            };
                                                            var $725 = $727;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $731 = self.pst;
                                                            var $732 = self.val;
                                                            var self = $731;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $734 = self.err;
                                                                    var $735 = self.nam;
                                                                    var $736 = self.ini;
                                                                    var $737 = self.idx;
                                                                    var $738 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($724, $734), $735, $736, $737, $738);
                                                                    var self = _reply$pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $740 = self.err;
                                                                            var _reply$42 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $742 = self.err;
                                                                                    var self = $740;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $744 = self.value;
                                                                                            var $745 = Parser$Reply$error$(Parser$Error$combine$($744, $742));
                                                                                            var $743 = $745;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $746 = Parser$Reply$error$($742);
                                                                                            var $743 = $746;
                                                                                            break;
                                                                                    };
                                                                                    var $741 = $743;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $747 = self.pst;
                                                                                    var self = $747;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $749 = self.err;
                                                                                            var $750 = self.nam;
                                                                                            var $751 = self.ini;
                                                                                            var $752 = self.idx;
                                                                                            var $753 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($740, $749), $750, $751, $752, $753);
                                                                                            var $754 = Parser$Reply$value$(_reply$pst$50, $732);
                                                                                            var $748 = $754;
                                                                                            break;
                                                                                    };
                                                                                    var $741 = $748;
                                                                                    break;
                                                                            };
                                                                            var $739 = $741;
                                                                            break;
                                                                    };
                                                                    var $733 = $739;
                                                                    break;
                                                            };
                                                            var $725 = $733;
                                                            break;
                                                    };
                                                    var $723 = $725;
                                                    break;
                                            };
                                            return $723;
                                        }), Kindelia$parse$text("}"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $755 = self.err;
                                                var self = $721;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $757 = self.value;
                                                        var $758 = Parser$Reply$error$(Parser$Error$combine$($757, $755));
                                                        var $756 = $758;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $759 = Parser$Reply$error$($755);
                                                        var $756 = $759;
                                                        break;
                                                };
                                                var $722 = $756;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $760 = self.pst;
                                                var $761 = self.val;
                                                var self = $760;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $763 = self.err;
                                                        var $764 = self.nam;
                                                        var $765 = self.ini;
                                                        var $766 = self.idx;
                                                        var $767 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($721, $763), $764, $765, $766, $767);
                                                        var $768 = Parser$Reply$value$(_reply$pst$30, Kindelia$Term$create$($713, $761));
                                                        var $762 = $768;
                                                        break;
                                                };
                                                var $722 = $762;
                                                break;
                                        };
                                        var $720 = $722;
                                        break;
                                };
                                var $714 = $720;
                                break;
                        };
                        var $706 = $714;
                        break;
                };
                var $704 = $706;
                break;
        };
        return $704;
    };
    const Kindelia$parse$term$create = x0 => x1 => Kindelia$parse$term$create$(x0, x1);

    function Maybe$bind$(_m$3, _f$4) {
        var self = _m$3;
        switch (self._) {
            case 'Maybe.some':
                var $770 = self.value;
                var $771 = _f$4($770);
                var $769 = $771;
                break;
            case 'Maybe.none':
                var $772 = Maybe$none;
                var $769 = $772;
                break;
        };
        return $769;
    };
    const Maybe$bind = x0 => x1 => Maybe$bind$(x0, x1);

    function Maybe$monad$(_new$2) {
        var $773 = _new$2(Maybe$bind)(Maybe$some);
        return $773;
    };
    const Maybe$monad = x0 => Maybe$monad$(x0);

    function BBT$lookup$(_cmp$3, _key$4, _map$5) {
        var BBT$lookup$ = (_cmp$3, _key$4, _map$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _key$4, _map$5]
        });
        var BBT$lookup = _cmp$3 => _key$4 => _map$5 => BBT$lookup$(_cmp$3, _key$4, _map$5);
        var arg = [_cmp$3, _key$4, _map$5];
        while (true) {
            let [_cmp$3, _key$4, _map$5] = arg;
            var R = (() => {
                var self = _map$5;
                switch (self._) {
                    case 'BBT.bin':
                        var $774 = self.key;
                        var $775 = self.val;
                        var $776 = self.left;
                        var $777 = self.right;
                        var self = _cmp$3(_key$4)($774);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $779 = BBT$lookup$(_cmp$3, _key$4, $776);
                                var $778 = $779;
                                break;
                            case 'Cmp.eql':
                                var $780 = Maybe$some$($775);
                                var $778 = $780;
                                break;
                            case 'Cmp.gtn':
                                var $781 = BBT$lookup$(_cmp$3, _key$4, $777);
                                var $778 = $781;
                                break;
                        };
                        return $778;
                    case 'BBT.tip':
                        var $782 = Maybe$none;
                        return $782;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$lookup = x0 => x1 => x2 => BBT$lookup$(x0, x1, x2);

    function Cmp$as_ltn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $784 = Bool$true;
                var $783 = $784;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $785 = Bool$false;
                var $783 = $785;
                break;
        };
        return $783;
    };
    const Cmp$as_ltn = x0 => Cmp$as_ltn$(x0);

    function Word$ltn$(_a$2, _b$3) {
        var $786 = Cmp$as_ltn$(Word$cmp$(_a$2, _b$3));
        return $786;
    };
    const Word$ltn = x0 => x1 => Word$ltn$(x0, x1);
    const U16$ltn = a0 => a1 => (a0 < a1);

    function U16$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $788 = Cmp$ltn;
            var $787 = $788;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $790 = Cmp$eql;
                var $789 = $790;
            } else {
                var $791 = Cmp$gtn;
                var $789 = $791;
            };
            var $787 = $789;
        };
        return $787;
    };
    const U16$cmp = x0 => x1 => U16$cmp$(x0, x1);

    function String$cmp$(_a$1, _b$2) {
        var String$cmp$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var String$cmp = _a$1 => _b$2 => String$cmp$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                if (self.length === 0) {
                    var self = _b$2;
                    if (self.length === 0) {
                        var $793 = Cmp$eql;
                        var $792 = $793;
                    } else {
                        var $794 = self.charCodeAt(0);
                        var $795 = self.slice(1);
                        var $796 = Cmp$ltn;
                        var $792 = $796;
                    };
                    return $792;
                } else {
                    var $797 = self.charCodeAt(0);
                    var $798 = self.slice(1);
                    var self = _b$2;
                    if (self.length === 0) {
                        var $800 = Cmp$gtn;
                        var $799 = $800;
                    } else {
                        var $801 = self.charCodeAt(0);
                        var $802 = self.slice(1);
                        var self = U16$cmp$($797, $801);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $804 = Cmp$ltn;
                                var $803 = $804;
                                break;
                            case 'Cmp.eql':
                                var $805 = String$cmp$($798, $802);
                                var $803 = $805;
                                break;
                            case 'Cmp.gtn':
                                var $806 = Cmp$gtn;
                                var $803 = $806;
                                break;
                        };
                        var $799 = $803;
                    };
                    return $799;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$cmp = x0 => x1 => String$cmp$(x0, x1);

    function Map$get$(_key$2, _map$3) {
        var $807 = BBT$lookup$(String$cmp, _key$2, _map$3);
        return $807;
    };
    const Map$get = x0 => x1 => Map$get$(x0, x1);

    function Kindelia$get_data$(_world$1, _name$2) {
        var $808 = Maybe$monad$((_m$bind$3 => _m$pure$4 => {
            var $809 = _m$bind$3;
            return $809;
        }))(Map$get$(_name$2, _world$1))((_entry$3 => {
            var self = _entry$3;
            switch (self._) {
                case 'Kindelia.Entry.data':
                    var $811 = self.value;
                    var $812 = Maybe$some$($811);
                    var $810 = $812;
                    break;
                case 'Kindelia.Entry.bond':
                case 'Kindelia.Entry.file':
                    var $813 = Maybe$none;
                    var $810 = $813;
                    break;
            };
            return $810;
        }));
        return $808;
    };
    const Kindelia$get_data = x0 => x1 => Kindelia$get_data$(x0, x1);

    function Parser$fail$(_error$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $815 = self.nam;
                var $816 = self.ini;
                var $817 = self.idx;
                var $818 = Parser$Reply$fail$($815, $816, $817, _error$2);
                var $814 = $818;
                break;
        };
        return $814;
    };
    const Parser$fail = x0 => x1 => Parser$fail$(x0, x1);

    function Kindelia$parse$term$match$cases$(_world$1, _constructors$2) {
        var self = _constructors$2;
        switch (self._) {
            case 'List.cons':
                var $820 = self.head;
                var $821 = self.tail;
                var _ctor$5 = $820;
                var self = _ctor$5;
                switch (self._) {
                    case 'Kindelia.Constructor.new':
                        var $823 = self.name;
                        var $824 = (_pst$8 => {
                            var self = _pst$8;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $826 = self.err;
                                    var _reply$14 = Kindelia$parse$text$($823, _pst$8);
                                    var self = _reply$14;
                                    switch (self._) {
                                        case 'Parser.Reply.error':
                                            var $828 = self.err;
                                            var self = $826;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $830 = self.value;
                                                    var $831 = Parser$Reply$error$(Parser$Error$combine$($830, $828));
                                                    var $829 = $831;
                                                    break;
                                                case 'Maybe.none':
                                                    var $832 = Parser$Reply$error$($828);
                                                    var $829 = $832;
                                                    break;
                                            };
                                            var $827 = $829;
                                            break;
                                        case 'Parser.Reply.value':
                                            var $833 = self.pst;
                                            var self = $833;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $835 = self.err;
                                                    var $836 = self.nam;
                                                    var $837 = self.ini;
                                                    var $838 = self.idx;
                                                    var $839 = self.str;
                                                    var _reply$pst$22 = Parser$State$new$(Parser$Error$maybe_combine$($826, $835), $836, $837, $838, $839);
                                                    var self = _reply$pst$22;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $841 = self.err;
                                                            var _reply$28 = Kindelia$parse$text$(":", _reply$pst$22);
                                                            var self = _reply$28;
                                                            switch (self._) {
                                                                case 'Parser.Reply.error':
                                                                    var $843 = self.err;
                                                                    var self = $841;
                                                                    switch (self._) {
                                                                        case 'Maybe.some':
                                                                            var $845 = self.value;
                                                                            var $846 = Parser$Reply$error$(Parser$Error$combine$($845, $843));
                                                                            var $844 = $846;
                                                                            break;
                                                                        case 'Maybe.none':
                                                                            var $847 = Parser$Reply$error$($843);
                                                                            var $844 = $847;
                                                                            break;
                                                                    };
                                                                    var $842 = $844;
                                                                    break;
                                                                case 'Parser.Reply.value':
                                                                    var $848 = self.pst;
                                                                    var self = $848;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $850 = self.err;
                                                                            var $851 = self.nam;
                                                                            var $852 = self.ini;
                                                                            var $853 = self.idx;
                                                                            var $854 = self.str;
                                                                            var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($841, $850), $851, $852, $853, $854);
                                                                            var self = _reply$pst$36;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $856 = self.err;
                                                                                    var _reply$42 = Kindelia$parse$term$(_world$1)(_reply$pst$36);
                                                                                    var self = _reply$42;
                                                                                    switch (self._) {
                                                                                        case 'Parser.Reply.error':
                                                                                            var $858 = self.err;
                                                                                            var self = $856;
                                                                                            switch (self._) {
                                                                                                case 'Maybe.some':
                                                                                                    var $860 = self.value;
                                                                                                    var $861 = Parser$Reply$error$(Parser$Error$combine$($860, $858));
                                                                                                    var $859 = $861;
                                                                                                    break;
                                                                                                case 'Maybe.none':
                                                                                                    var $862 = Parser$Reply$error$($858);
                                                                                                    var $859 = $862;
                                                                                                    break;
                                                                                            };
                                                                                            var $857 = $859;
                                                                                            break;
                                                                                        case 'Parser.Reply.value':
                                                                                            var $863 = self.pst;
                                                                                            var $864 = self.val;
                                                                                            var self = $863;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $866 = self.err;
                                                                                                    var $867 = self.nam;
                                                                                                    var $868 = self.ini;
                                                                                                    var $869 = self.idx;
                                                                                                    var $870 = self.str;
                                                                                                    var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($856, $866), $867, $868, $869, $870);
                                                                                                    var self = _reply$pst$50;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $872 = self.err;
                                                                                                            var _reply$56 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$50);
                                                                                                            var self = _reply$56;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.Reply.error':
                                                                                                                    var $874 = self.err;
                                                                                                                    var self = $872;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Maybe.some':
                                                                                                                            var $876 = self.value;
                                                                                                                            var $877 = Parser$Reply$error$(Parser$Error$combine$($876, $874));
                                                                                                                            var $875 = $877;
                                                                                                                            break;
                                                                                                                        case 'Maybe.none':
                                                                                                                            var $878 = Parser$Reply$error$($874);
                                                                                                                            var $875 = $878;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $873 = $875;
                                                                                                                    break;
                                                                                                                case 'Parser.Reply.value':
                                                                                                                    var $879 = self.pst;
                                                                                                                    var self = $879;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.State.new':
                                                                                                                            var $881 = self.err;
                                                                                                                            var $882 = self.nam;
                                                                                                                            var $883 = self.ini;
                                                                                                                            var $884 = self.idx;
                                                                                                                            var $885 = self.str;
                                                                                                                            var _reply$pst$64 = Parser$State$new$(Parser$Error$maybe_combine$($872, $881), $882, $883, $884, $885);
                                                                                                                            var self = _reply$pst$64;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $887 = self.err;
                                                                                                                                    var _reply$70 = Kindelia$parse$term$match$cases$(_world$1, $821)(_reply$pst$64);
                                                                                                                                    var self = _reply$70;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                            var $889 = self.err;
                                                                                                                                            var self = $887;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Maybe.some':
                                                                                                                                                    var $891 = self.value;
                                                                                                                                                    var $892 = Parser$Reply$error$(Parser$Error$combine$($891, $889));
                                                                                                                                                    var $890 = $892;
                                                                                                                                                    break;
                                                                                                                                                case 'Maybe.none':
                                                                                                                                                    var $893 = Parser$Reply$error$($889);
                                                                                                                                                    var $890 = $893;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $888 = $890;
                                                                                                                                            break;
                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                            var $894 = self.pst;
                                                                                                                                            var $895 = self.val;
                                                                                                                                            var self = $894;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $897 = self.err;
                                                                                                                                                    var $898 = self.nam;
                                                                                                                                                    var $899 = self.ini;
                                                                                                                                                    var $900 = self.idx;
                                                                                                                                                    var $901 = self.str;
                                                                                                                                                    var _reply$pst$78 = Parser$State$new$(Parser$Error$maybe_combine$($887, $897), $898, $899, $900, $901);
                                                                                                                                                    var $902 = Parser$Reply$value$(_reply$pst$78, List$cons$($864, $895));
                                                                                                                                                    var $896 = $902;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $888 = $896;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $886 = $888;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $880 = $886;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $873 = $880;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $871 = $873;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $865 = $871;
                                                                                                    break;
                                                                                            };
                                                                                            var $857 = $865;
                                                                                            break;
                                                                                    };
                                                                                    var $855 = $857;
                                                                                    break;
                                                                            };
                                                                            var $849 = $855;
                                                                            break;
                                                                    };
                                                                    var $842 = $849;
                                                                    break;
                                                            };
                                                            var $840 = $842;
                                                            break;
                                                    };
                                                    var $834 = $840;
                                                    break;
                                            };
                                            var $827 = $834;
                                            break;
                                    };
                                    var $825 = $827;
                                    break;
                            };
                            return $825;
                        });
                        var $822 = $824;
                        break;
                };
                var $819 = $822;
                break;
            case 'List.nil':
                var $903 = (_pst$3 => {
                    var $904 = Parser$Reply$value$(_pst$3, List$nil);
                    return $904;
                });
                var $819 = $903;
                break;
        };
        return $819;
    };
    const Kindelia$parse$term$match$cases = x0 => x1 => Kindelia$parse$term$match$cases$(x0, x1);

    function Kindelia$Term$match$(_name$1, _data$2, _cses$3) {
        var $905 = ({
            _: 'Kindelia.Term.match',
            'name': _name$1,
            'data': _data$2,
            'cses': _cses$3
        });
        return $905;
    };
    const Kindelia$Term$match = x0 => x1 => x2 => Kindelia$Term$match$(x0, x1, x2);

    function Kindelia$parse$term$match$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $907 = self.err;
                var _reply$8 = Kindelia$parse$text$("case ", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $909 = self.err;
                        var self = $907;
                        switch (self._) {
                            case 'Maybe.some':
                                var $911 = self.value;
                                var $912 = Parser$Reply$error$(Parser$Error$combine$($911, $909));
                                var $910 = $912;
                                break;
                            case 'Maybe.none':
                                var $913 = Parser$Reply$error$($909);
                                var $910 = $913;
                                break;
                        };
                        var $908 = $910;
                        break;
                    case 'Parser.Reply.value':
                        var $914 = self.pst;
                        var self = $914;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $916 = self.err;
                                var $917 = self.nam;
                                var $918 = self.ini;
                                var $919 = self.idx;
                                var $920 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($907, $916), $917, $918, $919, $920);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $922 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $924 = self.err;
                                                var self = $922;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $926 = self.value;
                                                        var $927 = Parser$Reply$error$(Parser$Error$combine$($926, $924));
                                                        var $925 = $927;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $928 = Parser$Reply$error$($924);
                                                        var $925 = $928;
                                                        break;
                                                };
                                                var $923 = $925;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $929 = self.pst;
                                                var $930 = self.val;
                                                var self = $929;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $932 = self.err;
                                                        var $933 = self.nam;
                                                        var $934 = self.ini;
                                                        var $935 = self.idx;
                                                        var $936 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($922, $932), $933, $934, $935, $936);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $938 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $940 = self.err;
                                                                        var self = $938;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $942 = self.value;
                                                                                var $943 = Parser$Reply$error$(Parser$Error$combine$($942, $940));
                                                                                var $941 = $943;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $944 = Parser$Reply$error$($940);
                                                                                var $941 = $944;
                                                                                break;
                                                                        };
                                                                        var $939 = $941;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $945 = self.pst;
                                                                        var self = $945;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $947 = self.err;
                                                                                var $948 = self.nam;
                                                                                var $949 = self.ini;
                                                                                var $950 = self.idx;
                                                                                var $951 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($938, $947), $948, $949, $950, $951);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $953 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$name$(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $955 = self.err;
                                                                                                var self = $953;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $957 = self.value;
                                                                                                        var $958 = Parser$Reply$error$(Parser$Error$combine$($957, $955));
                                                                                                        var $956 = $958;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $959 = Parser$Reply$error$($955);
                                                                                                        var $956 = $959;
                                                                                                        break;
                                                                                                };
                                                                                                var $954 = $956;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $960 = self.pst;
                                                                                                var $961 = self.val;
                                                                                                var self = $960;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $963 = self.err;
                                                                                                        var $964 = self.nam;
                                                                                                        var $965 = self.ini;
                                                                                                        var $966 = self.idx;
                                                                                                        var $967 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($953, $963), $964, $965, $966, $967);
                                                                                                        var self = Kindelia$get_data$(_world$1, $961);
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $969 = self.value;
                                                                                                                var _data$60 = $969;
                                                                                                                var self = _data$60;
                                                                                                                switch (self._) {
                                                                                                                    case 'Kindelia.Data.new':
                                                                                                                        var $971 = self.constructors;
                                                                                                                        var $972 = (_pst$63 => {
                                                                                                                            var self = _pst$63;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $974 = self.err;
                                                                                                                                    var _reply$69 = Kindelia$parse$text$("{", _pst$63);
                                                                                                                                    var self = _reply$69;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                            var $976 = self.err;
                                                                                                                                            var self = $974;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Maybe.some':
                                                                                                                                                    var $978 = self.value;
                                                                                                                                                    var $979 = Parser$Reply$error$(Parser$Error$combine$($978, $976));
                                                                                                                                                    var $977 = $979;
                                                                                                                                                    break;
                                                                                                                                                case 'Maybe.none':
                                                                                                                                                    var $980 = Parser$Reply$error$($976);
                                                                                                                                                    var $977 = $980;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $975 = $977;
                                                                                                                                            break;
                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                            var $981 = self.pst;
                                                                                                                                            var self = $981;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $983 = self.err;
                                                                                                                                                    var $984 = self.nam;
                                                                                                                                                    var $985 = self.ini;
                                                                                                                                                    var $986 = self.idx;
                                                                                                                                                    var $987 = self.str;
                                                                                                                                                    var _reply$pst$77 = Parser$State$new$(Parser$Error$maybe_combine$($974, $983), $984, $985, $986, $987);
                                                                                                                                                    var self = _reply$pst$77;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $989 = self.err;
                                                                                                                                                            var _reply$83 = Kindelia$parse$term$match$cases$(_world$1, $971)(_reply$pst$77);
                                                                                                                                                            var self = _reply$83;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                    var $991 = self.err;
                                                                                                                                                                    var self = $989;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                            var $993 = self.value;
                                                                                                                                                                            var $994 = Parser$Reply$error$(Parser$Error$combine$($993, $991));
                                                                                                                                                                            var $992 = $994;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                            var $995 = Parser$Reply$error$($991);
                                                                                                                                                                            var $992 = $995;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $990 = $992;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                    var $996 = self.pst;
                                                                                                                                                                    var $997 = self.val;
                                                                                                                                                                    var self = $996;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $999 = self.err;
                                                                                                                                                                            var $1000 = self.nam;
                                                                                                                                                                            var $1001 = self.ini;
                                                                                                                                                                            var $1002 = self.idx;
                                                                                                                                                                            var $1003 = self.str;
                                                                                                                                                                            var _reply$pst$91 = Parser$State$new$(Parser$Error$maybe_combine$($989, $999), $1000, $1001, $1002, $1003);
                                                                                                                                                                            var self = _reply$pst$91;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $1005 = self.err;
                                                                                                                                                                                    var _reply$97 = Kindelia$parse$text$("}", _reply$pst$91);
                                                                                                                                                                                    var self = _reply$97;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                            var $1007 = self.err;
                                                                                                                                                                                            var self = $1005;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                    var $1009 = self.value;
                                                                                                                                                                                                    var $1010 = Parser$Reply$error$(Parser$Error$combine$($1009, $1007));
                                                                                                                                                                                                    var $1008 = $1010;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                    var $1011 = Parser$Reply$error$($1007);
                                                                                                                                                                                                    var $1008 = $1011;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $1006 = $1008;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                            var $1012 = self.pst;
                                                                                                                                                                                            var self = $1012;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                    var $1014 = self.err;
                                                                                                                                                                                                    var $1015 = self.nam;
                                                                                                                                                                                                    var $1016 = self.ini;
                                                                                                                                                                                                    var $1017 = self.idx;
                                                                                                                                                                                                    var $1018 = self.str;
                                                                                                                                                                                                    var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($1005, $1014), $1015, $1016, $1017, $1018);
                                                                                                                                                                                                    var $1019 = Parser$Reply$value$(_reply$pst$105, Kindelia$Term$match$($930, $961, $997));
                                                                                                                                                                                                    var $1013 = $1019;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $1006 = $1013;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $1004 = $1006;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $998 = $1004;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $990 = $998;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $988 = $990;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $982 = $988;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $975 = $982;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $973 = $975;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            return $973;
                                                                                                                        });
                                                                                                                        var $970 = $972;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $968 = $970;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $1020 = Parser$fail("Type not found.");
                                                                                                                var $968 = $1020;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $968 = $968(_reply$pst$58);
                                                                                                        var $962 = $968;
                                                                                                        break;
                                                                                                };
                                                                                                var $954 = $962;
                                                                                                break;
                                                                                        };
                                                                                        var $952 = $954;
                                                                                        break;
                                                                                };
                                                                                var $946 = $952;
                                                                                break;
                                                                        };
                                                                        var $939 = $946;
                                                                        break;
                                                                };
                                                                var $937 = $939;
                                                                break;
                                                        };
                                                        var $931 = $937;
                                                        break;
                                                };
                                                var $923 = $931;
                                                break;
                                        };
                                        var $921 = $923;
                                        break;
                                };
                                var $915 = $921;
                                break;
                        };
                        var $908 = $915;
                        break;
                };
                var $906 = $908;
                break;
        };
        return $906;
    };
    const Kindelia$parse$term$match = x0 => x1 => Kindelia$parse$term$match$(x0, x1);

    function Parser$many1$(_parser$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $1022 = self.err;
                var _reply$9 = _parser$2(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1024 = self.err;
                        var self = $1022;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1026 = self.value;
                                var $1027 = Parser$Reply$error$(Parser$Error$combine$($1026, $1024));
                                var $1025 = $1027;
                                break;
                            case 'Maybe.none':
                                var $1028 = Parser$Reply$error$($1024);
                                var $1025 = $1028;
                                break;
                        };
                        var $1023 = $1025;
                        break;
                    case 'Parser.Reply.value':
                        var $1029 = self.pst;
                        var $1030 = self.val;
                        var self = $1029;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1032 = self.err;
                                var $1033 = self.nam;
                                var $1034 = self.ini;
                                var $1035 = self.idx;
                                var $1036 = self.str;
                                var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($1022, $1032), $1033, $1034, $1035, $1036);
                                var self = _reply$pst$17;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1038 = self.err;
                                        var _reply$23 = Parser$many$(_parser$2)(_reply$pst$17);
                                        var self = _reply$23;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1040 = self.err;
                                                var self = $1038;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1042 = self.value;
                                                        var $1043 = Parser$Reply$error$(Parser$Error$combine$($1042, $1040));
                                                        var $1041 = $1043;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1044 = Parser$Reply$error$($1040);
                                                        var $1041 = $1044;
                                                        break;
                                                };
                                                var $1039 = $1041;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1045 = self.pst;
                                                var $1046 = self.val;
                                                var self = $1045;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1048 = self.err;
                                                        var $1049 = self.nam;
                                                        var $1050 = self.ini;
                                                        var $1051 = self.idx;
                                                        var $1052 = self.str;
                                                        var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($1038, $1048), $1049, $1050, $1051, $1052);
                                                        var $1053 = Parser$Reply$value$(_reply$pst$31, List$cons$($1030, $1046));
                                                        var $1047 = $1053;
                                                        break;
                                                };
                                                var $1039 = $1047;
                                                break;
                                        };
                                        var $1037 = $1039;
                                        break;
                                };
                                var $1031 = $1037;
                                break;
                        };
                        var $1023 = $1031;
                        break;
                };
                var $1021 = $1023;
                break;
        };
        return $1021;
    };
    const Parser$many1 = x0 => x1 => Parser$many1$(x0, x1);

    function Parser$digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1055 = self.err;
                var $1056 = self.nam;
                var $1057 = self.ini;
                var $1058 = self.idx;
                var $1059 = self.str;
                var self = $1059;
                if (self.length === 0) {
                    var $1061 = Parser$Reply$fail$($1056, $1057, $1058, "Not a digit.");
                    var $1060 = $1061;
                } else {
                    var $1062 = self.charCodeAt(0);
                    var $1063 = self.slice(1);
                    var _pst$9 = Parser$State$new$($1055, $1056, $1057, Nat$succ$($1058), $1063);
                    var self = ($1062 === 48);
                    if (self) {
                        var $1065 = Parser$Reply$value$(_pst$9, 0n);
                        var $1064 = $1065;
                    } else {
                        var self = ($1062 === 49);
                        if (self) {
                            var $1067 = Parser$Reply$value$(_pst$9, 1n);
                            var $1066 = $1067;
                        } else {
                            var self = ($1062 === 50);
                            if (self) {
                                var $1069 = Parser$Reply$value$(_pst$9, 2n);
                                var $1068 = $1069;
                            } else {
                                var self = ($1062 === 51);
                                if (self) {
                                    var $1071 = Parser$Reply$value$(_pst$9, 3n);
                                    var $1070 = $1071;
                                } else {
                                    var self = ($1062 === 52);
                                    if (self) {
                                        var $1073 = Parser$Reply$value$(_pst$9, 4n);
                                        var $1072 = $1073;
                                    } else {
                                        var self = ($1062 === 53);
                                        if (self) {
                                            var $1075 = Parser$Reply$value$(_pst$9, 5n);
                                            var $1074 = $1075;
                                        } else {
                                            var self = ($1062 === 54);
                                            if (self) {
                                                var $1077 = Parser$Reply$value$(_pst$9, 6n);
                                                var $1076 = $1077;
                                            } else {
                                                var self = ($1062 === 55);
                                                if (self) {
                                                    var $1079 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $1078 = $1079;
                                                } else {
                                                    var self = ($1062 === 56);
                                                    if (self) {
                                                        var $1081 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $1080 = $1081;
                                                    } else {
                                                        var self = ($1062 === 57);
                                                        if (self) {
                                                            var $1083 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $1082 = $1083;
                                                        } else {
                                                            var $1084 = Parser$Reply$fail$($1056, $1057, $1058, "Not a digit.");
                                                            var $1082 = $1084;
                                                        };
                                                        var $1080 = $1082;
                                                    };
                                                    var $1078 = $1080;
                                                };
                                                var $1076 = $1078;
                                            };
                                            var $1074 = $1076;
                                        };
                                        var $1072 = $1074;
                                    };
                                    var $1070 = $1072;
                                };
                                var $1068 = $1070;
                            };
                            var $1066 = $1068;
                        };
                        var $1064 = $1066;
                    };
                    var $1060 = $1064;
                };
                var $1054 = $1060;
                break;
        };
        return $1054;
    };
    const Parser$digit = x0 => Parser$digit$(x0);
    const Nat$add = a0 => a1 => (a0 + a1);
    const Nat$mul = a0 => a1 => (a0 * a1);

    function Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4) {
        var Nat$from_base$go$ = (_b$1, _ds$2, _p$3, _res$4) => ({
            ctr: 'TCO',
            arg: [_b$1, _ds$2, _p$3, _res$4]
        });
        var Nat$from_base$go = _b$1 => _ds$2 => _p$3 => _res$4 => Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4);
        var arg = [_b$1, _ds$2, _p$3, _res$4];
        while (true) {
            let [_b$1, _ds$2, _p$3, _res$4] = arg;
            var R = (() => {
                var self = _ds$2;
                switch (self._) {
                    case 'List.cons':
                        var $1085 = self.head;
                        var $1086 = self.tail;
                        var $1087 = Nat$from_base$go$(_b$1, $1086, (_b$1 * _p$3), (($1085 * _p$3) + _res$4));
                        return $1087;
                    case 'List.nil':
                        var $1088 = _res$4;
                        return $1088;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$from_base$go = x0 => x1 => x2 => x3 => Nat$from_base$go$(x0, x1, x2, x3);

    function Nat$from_base$(_base$1, _ds$2) {
        var $1089 = Nat$from_base$go$(_base$1, List$reverse$(_ds$2), 1n, 0n);
        return $1089;
    };
    const Nat$from_base = x0 => x1 => Nat$from_base$(x0, x1);

    function Parser$nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1091 = self.err;
                var _reply$7 = Parser$many1$(Parser$digit, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1093 = self.err;
                        var self = $1091;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1095 = self.value;
                                var $1096 = Parser$Reply$error$(Parser$Error$combine$($1095, $1093));
                                var $1094 = $1096;
                                break;
                            case 'Maybe.none':
                                var $1097 = Parser$Reply$error$($1093);
                                var $1094 = $1097;
                                break;
                        };
                        var $1092 = $1094;
                        break;
                    case 'Parser.Reply.value':
                        var $1098 = self.pst;
                        var $1099 = self.val;
                        var self = $1098;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1101 = self.err;
                                var $1102 = self.nam;
                                var $1103 = self.ini;
                                var $1104 = self.idx;
                                var $1105 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1091, $1101), $1102, $1103, $1104, $1105);
                                var $1106 = Parser$Reply$value$(_reply$pst$15, Nat$from_base$(10n, $1099));
                                var $1100 = $1106;
                                break;
                        };
                        var $1092 = $1100;
                        break;
                };
                var $1090 = $1092;
                break;
        };
        return $1090;
    };
    const Parser$nat = x0 => Parser$nat$(x0);
    const Nat$gte = a0 => a1 => (a0 >= a1);
    const Nat$pow = a0 => a1 => (a0 ** a1);

    function Kindelia$Term$word$(_numb$1) {
        var $1107 = ({
            _: 'Kindelia.Term.word',
            'numb': _numb$1
        });
        return $1107;
    };
    const Kindelia$Term$word = x0 => Kindelia$Term$word$(x0);

    function U64$new$(_value$1) {
        var $1108 = word_to_u64(_value$1);
        return $1108;
    };
    const U64$new = x0 => U64$new$(x0);

    function Nat$apply$(_n$2, _f$3, _x$4) {
        var Nat$apply$ = (_n$2, _f$3, _x$4) => ({
            ctr: 'TCO',
            arg: [_n$2, _f$3, _x$4]
        });
        var Nat$apply = _n$2 => _f$3 => _x$4 => Nat$apply$(_n$2, _f$3, _x$4);
        var arg = [_n$2, _f$3, _x$4];
        while (true) {
            let [_n$2, _f$3, _x$4] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $1109 = _x$4;
                    return $1109;
                } else {
                    var $1110 = (self - 1n);
                    var $1111 = Nat$apply$($1110, _f$3, _f$3(_x$4));
                    return $1111;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$apply = x0 => x1 => x2 => Nat$apply$(x0, x1, x2);

    function Word$(_size$1) {
        var $1112 = null;
        return $1112;
    };
    const Word = x0 => Word$(x0);
    const Word$e = ({
        _: 'Word.e'
    });

    function Word$i$(_pred$2) {
        var $1113 = ({
            _: 'Word.i',
            'pred': _pred$2
        });
        return $1113;
    };
    const Word$i = x0 => Word$i$(x0);

    function Word$o$(_pred$2) {
        var $1114 = ({
            _: 'Word.o',
            'pred': _pred$2
        });
        return $1114;
    };
    const Word$o = x0 => Word$o$(x0);

    function Word$inc$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $1116 = self.pred;
                var $1117 = Word$i$($1116);
                var $1115 = $1117;
                break;
            case 'Word.i':
                var $1118 = self.pred;
                var $1119 = Word$o$(Word$inc$($1118));
                var $1115 = $1119;
                break;
            case 'Word.e':
                var $1120 = Word$e;
                var $1115 = $1120;
                break;
        };
        return $1115;
    };
    const Word$inc = x0 => Word$inc$(x0);

    function Word$zero$(_size$1) {
        var self = _size$1;
        if (self === 0n) {
            var $1122 = Word$e;
            var $1121 = $1122;
        } else {
            var $1123 = (self - 1n);
            var $1124 = Word$o$(Word$zero$($1123));
            var $1121 = $1124;
        };
        return $1121;
    };
    const Word$zero = x0 => Word$zero$(x0);

    function Nat$to_word$(_size$1, _n$2) {
        var $1125 = Nat$apply$(_n$2, Word$inc, Word$zero$(_size$1));
        return $1125;
    };
    const Nat$to_word = x0 => x1 => Nat$to_word$(x0, x1);
    const Nat$to_u64 = a0 => (a0 & 0xFFFFFFFFFFFFFFFFn);

    function Kindelia$parse$term$word$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1127 = self.err;
                var _reply$8 = Kindelia$parse$text$("#", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1129 = self.err;
                        var self = $1127;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1131 = self.value;
                                var $1132 = Parser$Reply$error$(Parser$Error$combine$($1131, $1129));
                                var $1130 = $1132;
                                break;
                            case 'Maybe.none':
                                var $1133 = Parser$Reply$error$($1129);
                                var $1130 = $1133;
                                break;
                        };
                        var $1128 = $1130;
                        break;
                    case 'Parser.Reply.value':
                        var $1134 = self.pst;
                        var self = $1134;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1136 = self.err;
                                var $1137 = self.nam;
                                var $1138 = self.ini;
                                var $1139 = self.idx;
                                var $1140 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1127, $1136), $1137, $1138, $1139, $1140);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1142 = self.err;
                                        var _reply$22 = Parser$nat$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1144 = self.err;
                                                var self = $1142;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1146 = self.value;
                                                        var $1147 = Parser$Reply$error$(Parser$Error$combine$($1146, $1144));
                                                        var $1145 = $1147;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1148 = Parser$Reply$error$($1144);
                                                        var $1145 = $1148;
                                                        break;
                                                };
                                                var $1143 = $1145;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1149 = self.pst;
                                                var $1150 = self.val;
                                                var self = $1149;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1152 = self.err;
                                                        var $1153 = self.nam;
                                                        var $1154 = self.ini;
                                                        var $1155 = self.idx;
                                                        var $1156 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1142, $1152), $1153, $1154, $1155, $1156);
                                                        var self = ($1150 >= (2n ** 64n));
                                                        if (self) {
                                                            var $1158 = Parser$fail("Number out of bound");
                                                            var $1157 = $1158;
                                                        } else {
                                                            var $1159 = (_pst$31 => {
                                                                var $1160 = Parser$Reply$value$(_pst$31, Kindelia$Term$word$(($1150 & 0xFFFFFFFFFFFFFFFFn)));
                                                                return $1160;
                                                            });
                                                            var $1157 = $1159;
                                                        };
                                                        var $1157 = $1157(_reply$pst$30);
                                                        var $1151 = $1157;
                                                        break;
                                                };
                                                var $1143 = $1151;
                                                break;
                                        };
                                        var $1141 = $1143;
                                        break;
                                };
                                var $1135 = $1141;
                                break;
                        };
                        var $1128 = $1135;
                        break;
                };
                var $1126 = $1128;
                break;
        };
        return $1126;
    };
    const Kindelia$parse$term$word = x0 => x1 => Kindelia$parse$term$word$(x0, x1);

    function Kindelia$Term$compare$(_val0$1, _val1$2, _iflt$3, _ifeq$4, _ifgt$5) {
        var $1161 = ({
            _: 'Kindelia.Term.compare',
            'val0': _val0$1,
            'val1': _val1$2,
            'iflt': _iflt$3,
            'ifeq': _ifeq$4,
            'ifgt': _ifgt$5
        });
        return $1161;
    };
    const Kindelia$Term$compare = x0 => x1 => x2 => x3 => x4 => Kindelia$Term$compare$(x0, x1, x2, x3, x4);

    function Kindelia$parse$term$compare$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1163 = self.err;
                var _reply$8 = Kindelia$parse$text$("compare", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1165 = self.err;
                        var self = $1163;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1167 = self.value;
                                var $1168 = Parser$Reply$error$(Parser$Error$combine$($1167, $1165));
                                var $1166 = $1168;
                                break;
                            case 'Maybe.none':
                                var $1169 = Parser$Reply$error$($1165);
                                var $1166 = $1169;
                                break;
                        };
                        var $1164 = $1166;
                        break;
                    case 'Parser.Reply.value':
                        var $1170 = self.pst;
                        var self = $1170;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1172 = self.err;
                                var $1173 = self.nam;
                                var $1174 = self.ini;
                                var $1175 = self.idx;
                                var $1176 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1163, $1172), $1173, $1174, $1175, $1176);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1178 = self.err;
                                        var _reply$22 = Kindelia$parse$term$(_world$1)(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1180 = self.err;
                                                var self = $1178;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1182 = self.value;
                                                        var $1183 = Parser$Reply$error$(Parser$Error$combine$($1182, $1180));
                                                        var $1181 = $1183;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1184 = Parser$Reply$error$($1180);
                                                        var $1181 = $1184;
                                                        break;
                                                };
                                                var $1179 = $1181;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1185 = self.pst;
                                                var $1186 = self.val;
                                                var self = $1185;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1188 = self.err;
                                                        var $1189 = self.nam;
                                                        var $1190 = self.ini;
                                                        var $1191 = self.idx;
                                                        var $1192 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1178, $1188), $1189, $1190, $1191, $1192);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1194 = self.err;
                                                                var _reply$36 = Kindelia$parse$term$(_world$1)(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1196 = self.err;
                                                                        var self = $1194;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1198 = self.value;
                                                                                var $1199 = Parser$Reply$error$(Parser$Error$combine$($1198, $1196));
                                                                                var $1197 = $1199;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1200 = Parser$Reply$error$($1196);
                                                                                var $1197 = $1200;
                                                                                break;
                                                                        };
                                                                        var $1195 = $1197;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1201 = self.pst;
                                                                        var $1202 = self.val;
                                                                        var self = $1201;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1204 = self.err;
                                                                                var $1205 = self.nam;
                                                                                var $1206 = self.ini;
                                                                                var $1207 = self.idx;
                                                                                var $1208 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1194, $1204), $1205, $1206, $1207, $1208);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1210 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$text$("{", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1212 = self.err;
                                                                                                var self = $1210;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1214 = self.value;
                                                                                                        var $1215 = Parser$Reply$error$(Parser$Error$combine$($1214, $1212));
                                                                                                        var $1213 = $1215;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1216 = Parser$Reply$error$($1212);
                                                                                                        var $1213 = $1216;
                                                                                                        break;
                                                                                                };
                                                                                                var $1211 = $1213;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1217 = self.pst;
                                                                                                var self = $1217;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1219 = self.err;
                                                                                                        var $1220 = self.nam;
                                                                                                        var $1221 = self.ini;
                                                                                                        var $1222 = self.idx;
                                                                                                        var $1223 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1210, $1219), $1220, $1221, $1222, $1223);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1225 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$text$("_<_:", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1227 = self.err;
                                                                                                                        var self = $1225;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1229 = self.value;
                                                                                                                                var $1230 = Parser$Reply$error$(Parser$Error$combine$($1229, $1227));
                                                                                                                                var $1228 = $1230;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1231 = Parser$Reply$error$($1227);
                                                                                                                                var $1228 = $1231;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1226 = $1228;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1232 = self.pst;
                                                                                                                        var self = $1232;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1234 = self.err;
                                                                                                                                var $1235 = self.nam;
                                                                                                                                var $1236 = self.ini;
                                                                                                                                var $1237 = self.idx;
                                                                                                                                var $1238 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1225, $1234), $1235, $1236, $1237, $1238);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1240 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1242 = self.err;
                                                                                                                                                var self = $1240;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1244 = self.value;
                                                                                                                                                        var $1245 = Parser$Reply$error$(Parser$Error$combine$($1244, $1242));
                                                                                                                                                        var $1243 = $1245;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1246 = Parser$Reply$error$($1242);
                                                                                                                                                        var $1243 = $1246;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1241 = $1243;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1247 = self.pst;
                                                                                                                                                var $1248 = self.val;
                                                                                                                                                var self = $1247;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1250 = self.err;
                                                                                                                                                        var $1251 = self.nam;
                                                                                                                                                        var $1252 = self.ini;
                                                                                                                                                        var $1253 = self.idx;
                                                                                                                                                        var $1254 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1240, $1250), $1251, $1252, $1253, $1254);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $1256 = self.err;
                                                                                                                                                                var _reply$92 = Kindelia$parse$text$("_=_:", _reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $1258 = self.err;
                                                                                                                                                                        var self = $1256;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $1260 = self.value;
                                                                                                                                                                                var $1261 = Parser$Reply$error$(Parser$Error$combine$($1260, $1258));
                                                                                                                                                                                var $1259 = $1261;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $1262 = Parser$Reply$error$($1258);
                                                                                                                                                                                var $1259 = $1262;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $1257 = $1259;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $1263 = self.pst;
                                                                                                                                                                        var self = $1263;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $1265 = self.err;
                                                                                                                                                                                var $1266 = self.nam;
                                                                                                                                                                                var $1267 = self.ini;
                                                                                                                                                                                var $1268 = self.idx;
                                                                                                                                                                                var $1269 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($1256, $1265), $1266, $1267, $1268, $1269);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $1271 = self.err;
                                                                                                                                                                                        var _reply$106 = Kindelia$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $1273 = self.err;
                                                                                                                                                                                                var self = $1271;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $1275 = self.value;
                                                                                                                                                                                                        var $1276 = Parser$Reply$error$(Parser$Error$combine$($1275, $1273));
                                                                                                                                                                                                        var $1274 = $1276;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $1277 = Parser$Reply$error$($1273);
                                                                                                                                                                                                        var $1274 = $1277;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $1272 = $1274;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $1278 = self.pst;
                                                                                                                                                                                                var $1279 = self.val;
                                                                                                                                                                                                var self = $1278;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $1281 = self.err;
                                                                                                                                                                                                        var $1282 = self.nam;
                                                                                                                                                                                                        var $1283 = self.ini;
                                                                                                                                                                                                        var $1284 = self.idx;
                                                                                                                                                                                                        var $1285 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($1271, $1281), $1282, $1283, $1284, $1285);
                                                                                                                                                                                                        var self = _reply$pst$114;
                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                var $1287 = self.err;
                                                                                                                                                                                                                var _reply$120 = Kindelia$parse$text$("_>_:", _reply$pst$114);
                                                                                                                                                                                                                var self = _reply$120;
                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                        var $1289 = self.err;
                                                                                                                                                                                                                        var self = $1287;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                var $1291 = self.value;
                                                                                                                                                                                                                                var $1292 = Parser$Reply$error$(Parser$Error$combine$($1291, $1289));
                                                                                                                                                                                                                                var $1290 = $1292;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                var $1293 = Parser$Reply$error$($1289);
                                                                                                                                                                                                                                var $1290 = $1293;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $1288 = $1290;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                        var $1294 = self.pst;
                                                                                                                                                                                                                        var self = $1294;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                var $1296 = self.err;
                                                                                                                                                                                                                                var $1297 = self.nam;
                                                                                                                                                                                                                                var $1298 = self.ini;
                                                                                                                                                                                                                                var $1299 = self.idx;
                                                                                                                                                                                                                                var $1300 = self.str;
                                                                                                                                                                                                                                var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($1287, $1296), $1297, $1298, $1299, $1300);
                                                                                                                                                                                                                                var self = _reply$pst$128;
                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                        var $1302 = self.err;
                                                                                                                                                                                                                                        var _reply$134 = Kindelia$parse$term$(_world$1)(_reply$pst$128);
                                                                                                                                                                                                                                        var self = _reply$134;
                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                var $1304 = self.err;
                                                                                                                                                                                                                                                var self = $1302;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                        var $1306 = self.value;
                                                                                                                                                                                                                                                        var $1307 = Parser$Reply$error$(Parser$Error$combine$($1306, $1304));
                                                                                                                                                                                                                                                        var $1305 = $1307;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                        var $1308 = Parser$Reply$error$($1304);
                                                                                                                                                                                                                                                        var $1305 = $1308;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $1303 = $1305;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                var $1309 = self.pst;
                                                                                                                                                                                                                                                var $1310 = self.val;
                                                                                                                                                                                                                                                var self = $1309;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                        var $1312 = self.err;
                                                                                                                                                                                                                                                        var $1313 = self.nam;
                                                                                                                                                                                                                                                        var $1314 = self.ini;
                                                                                                                                                                                                                                                        var $1315 = self.idx;
                                                                                                                                                                                                                                                        var $1316 = self.str;
                                                                                                                                                                                                                                                        var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($1302, $1312), $1313, $1314, $1315, $1316);
                                                                                                                                                                                                                                                        var self = _reply$pst$142;
                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                var $1318 = self.err;
                                                                                                                                                                                                                                                                var _reply$148 = Kindelia$parse$text$("}", _reply$pst$142);
                                                                                                                                                                                                                                                                var self = _reply$148;
                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                        var $1320 = self.err;
                                                                                                                                                                                                                                                                        var self = $1318;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                                                                var $1322 = self.value;
                                                                                                                                                                                                                                                                                var $1323 = Parser$Reply$error$(Parser$Error$combine$($1322, $1320));
                                                                                                                                                                                                                                                                                var $1321 = $1323;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                                                                var $1324 = Parser$Reply$error$($1320);
                                                                                                                                                                                                                                                                                var $1321 = $1324;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $1319 = $1321;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                        var $1325 = self.pst;
                                                                                                                                                                                                                                                                        var self = $1325;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                                var $1327 = self.err;
                                                                                                                                                                                                                                                                                var $1328 = self.nam;
                                                                                                                                                                                                                                                                                var $1329 = self.ini;
                                                                                                                                                                                                                                                                                var $1330 = self.idx;
                                                                                                                                                                                                                                                                                var $1331 = self.str;
                                                                                                                                                                                                                                                                                var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($1318, $1327), $1328, $1329, $1330, $1331);
                                                                                                                                                                                                                                                                                var $1332 = Parser$Reply$value$(_reply$pst$156, Kindelia$Term$compare$($1186, $1202, $1248, $1279, $1310));
                                                                                                                                                                                                                                                                                var $1326 = $1332;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $1319 = $1326;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                var $1317 = $1319;
                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                        var $1311 = $1317;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $1303 = $1311;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                        var $1301 = $1303;
                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                var $1295 = $1301;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $1288 = $1295;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                };
                                                                                                                                                                                                                var $1286 = $1288;
                                                                                                                                                                                                                break;
                                                                                                                                                                                                        };
                                                                                                                                                                                                        var $1280 = $1286;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $1272 = $1280;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $1270 = $1272;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $1264 = $1270;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $1257 = $1264;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $1255 = $1257;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $1249 = $1255;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1241 = $1249;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1239 = $1241;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1233 = $1239;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1226 = $1233;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1224 = $1226;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1218 = $1224;
                                                                                                        break;
                                                                                                };
                                                                                                var $1211 = $1218;
                                                                                                break;
                                                                                        };
                                                                                        var $1209 = $1211;
                                                                                        break;
                                                                                };
                                                                                var $1203 = $1209;
                                                                                break;
                                                                        };
                                                                        var $1195 = $1203;
                                                                        break;
                                                                };
                                                                var $1193 = $1195;
                                                                break;
                                                        };
                                                        var $1187 = $1193;
                                                        break;
                                                };
                                                var $1179 = $1187;
                                                break;
                                        };
                                        var $1177 = $1179;
                                        break;
                                };
                                var $1171 = $1177;
                                break;
                        };
                        var $1164 = $1171;
                        break;
                };
                var $1162 = $1164;
                break;
        };
        return $1162;
    };
    const Kindelia$parse$term$compare = x0 => x1 => Kindelia$parse$term$compare$(x0, x1);
    const Kindelia$Operation$add = ({
        _: 'Kindelia.Operation.add'
    });
    const Kindelia$Operation$sub = ({
        _: 'Kindelia.Operation.sub'
    });
    const Kindelia$Operation$mul = ({
        _: 'Kindelia.Operation.mul'
    });
    const Kindelia$Operation$div = ({
        _: 'Kindelia.Operation.div'
    });
    const Kindelia$Operation$mod = ({
        _: 'Kindelia.Operation.mod'
    });
    const Kindelia$Operation$or = ({
        _: 'Kindelia.Operation.or'
    });
    const Kindelia$Operation$and = ({
        _: 'Kindelia.Operation.and'
    });
    const Kindelia$Operation$xor = ({
        _: 'Kindelia.Operation.xor'
    });
    const Kindelia$parse$term$operation = Parser$choice(List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1334 = self.err;
                var _reply$7 = Kindelia$parse$text$("+", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1336 = self.err;
                        var self = $1334;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1338 = self.value;
                                var $1339 = Parser$Reply$error$(Parser$Error$combine$($1338, $1336));
                                var $1337 = $1339;
                                break;
                            case 'Maybe.none':
                                var $1340 = Parser$Reply$error$($1336);
                                var $1337 = $1340;
                                break;
                        };
                        var $1335 = $1337;
                        break;
                    case 'Parser.Reply.value':
                        var $1341 = self.pst;
                        var self = $1341;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1343 = self.err;
                                var $1344 = self.nam;
                                var $1345 = self.ini;
                                var $1346 = self.idx;
                                var $1347 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1334, $1343), $1344, $1345, $1346, $1347);
                                var $1348 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$add));
                                var $1342 = $1348;
                                break;
                        };
                        var $1335 = $1342;
                        break;
                };
                var $1333 = $1335;
                break;
        };
        return $1333;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1350 = self.err;
                var _reply$7 = Kindelia$parse$text$("-", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1352 = self.err;
                        var self = $1350;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1354 = self.value;
                                var $1355 = Parser$Reply$error$(Parser$Error$combine$($1354, $1352));
                                var $1353 = $1355;
                                break;
                            case 'Maybe.none':
                                var $1356 = Parser$Reply$error$($1352);
                                var $1353 = $1356;
                                break;
                        };
                        var $1351 = $1353;
                        break;
                    case 'Parser.Reply.value':
                        var $1357 = self.pst;
                        var self = $1357;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1359 = self.err;
                                var $1360 = self.nam;
                                var $1361 = self.ini;
                                var $1362 = self.idx;
                                var $1363 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1350, $1359), $1360, $1361, $1362, $1363);
                                var $1364 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$sub));
                                var $1358 = $1364;
                                break;
                        };
                        var $1351 = $1358;
                        break;
                };
                var $1349 = $1351;
                break;
        };
        return $1349;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1366 = self.err;
                var _reply$7 = Kindelia$parse$text$("*", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1368 = self.err;
                        var self = $1366;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1370 = self.value;
                                var $1371 = Parser$Reply$error$(Parser$Error$combine$($1370, $1368));
                                var $1369 = $1371;
                                break;
                            case 'Maybe.none':
                                var $1372 = Parser$Reply$error$($1368);
                                var $1369 = $1372;
                                break;
                        };
                        var $1367 = $1369;
                        break;
                    case 'Parser.Reply.value':
                        var $1373 = self.pst;
                        var self = $1373;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1375 = self.err;
                                var $1376 = self.nam;
                                var $1377 = self.ini;
                                var $1378 = self.idx;
                                var $1379 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1366, $1375), $1376, $1377, $1378, $1379);
                                var $1380 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$mul));
                                var $1374 = $1380;
                                break;
                        };
                        var $1367 = $1374;
                        break;
                };
                var $1365 = $1367;
                break;
        };
        return $1365;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1382 = self.err;
                var _reply$7 = Kindelia$parse$text$("/", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1384 = self.err;
                        var self = $1382;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1386 = self.value;
                                var $1387 = Parser$Reply$error$(Parser$Error$combine$($1386, $1384));
                                var $1385 = $1387;
                                break;
                            case 'Maybe.none':
                                var $1388 = Parser$Reply$error$($1384);
                                var $1385 = $1388;
                                break;
                        };
                        var $1383 = $1385;
                        break;
                    case 'Parser.Reply.value':
                        var $1389 = self.pst;
                        var self = $1389;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1391 = self.err;
                                var $1392 = self.nam;
                                var $1393 = self.ini;
                                var $1394 = self.idx;
                                var $1395 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1382, $1391), $1392, $1393, $1394, $1395);
                                var $1396 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$div));
                                var $1390 = $1396;
                                break;
                        };
                        var $1383 = $1390;
                        break;
                };
                var $1381 = $1383;
                break;
        };
        return $1381;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1398 = self.err;
                var _reply$7 = Kindelia$parse$text$("%", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1400 = self.err;
                        var self = $1398;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1402 = self.value;
                                var $1403 = Parser$Reply$error$(Parser$Error$combine$($1402, $1400));
                                var $1401 = $1403;
                                break;
                            case 'Maybe.none':
                                var $1404 = Parser$Reply$error$($1400);
                                var $1401 = $1404;
                                break;
                        };
                        var $1399 = $1401;
                        break;
                    case 'Parser.Reply.value':
                        var $1405 = self.pst;
                        var self = $1405;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1407 = self.err;
                                var $1408 = self.nam;
                                var $1409 = self.ini;
                                var $1410 = self.idx;
                                var $1411 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1398, $1407), $1408, $1409, $1410, $1411);
                                var $1412 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$mod));
                                var $1406 = $1412;
                                break;
                        };
                        var $1399 = $1406;
                        break;
                };
                var $1397 = $1399;
                break;
        };
        return $1397;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1414 = self.err;
                var _reply$7 = Kindelia$parse$text$("|", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1416 = self.err;
                        var self = $1414;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1418 = self.value;
                                var $1419 = Parser$Reply$error$(Parser$Error$combine$($1418, $1416));
                                var $1417 = $1419;
                                break;
                            case 'Maybe.none':
                                var $1420 = Parser$Reply$error$($1416);
                                var $1417 = $1420;
                                break;
                        };
                        var $1415 = $1417;
                        break;
                    case 'Parser.Reply.value':
                        var $1421 = self.pst;
                        var self = $1421;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1423 = self.err;
                                var $1424 = self.nam;
                                var $1425 = self.ini;
                                var $1426 = self.idx;
                                var $1427 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1414, $1423), $1424, $1425, $1426, $1427);
                                var $1428 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$or));
                                var $1422 = $1428;
                                break;
                        };
                        var $1415 = $1422;
                        break;
                };
                var $1413 = $1415;
                break;
        };
        return $1413;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1430 = self.err;
                var _reply$7 = Kindelia$parse$text$("&", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1432 = self.err;
                        var self = $1430;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1434 = self.value;
                                var $1435 = Parser$Reply$error$(Parser$Error$combine$($1434, $1432));
                                var $1433 = $1435;
                                break;
                            case 'Maybe.none':
                                var $1436 = Parser$Reply$error$($1432);
                                var $1433 = $1436;
                                break;
                        };
                        var $1431 = $1433;
                        break;
                    case 'Parser.Reply.value':
                        var $1437 = self.pst;
                        var self = $1437;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1439 = self.err;
                                var $1440 = self.nam;
                                var $1441 = self.ini;
                                var $1442 = self.idx;
                                var $1443 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1430, $1439), $1440, $1441, $1442, $1443);
                                var $1444 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$and));
                                var $1438 = $1444;
                                break;
                        };
                        var $1431 = $1438;
                        break;
                };
                var $1429 = $1431;
                break;
        };
        return $1429;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1446 = self.err;
                var _reply$7 = Kindelia$parse$text$("^", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1448 = self.err;
                        var self = $1446;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1450 = self.value;
                                var $1451 = Parser$Reply$error$(Parser$Error$combine$($1450, $1448));
                                var $1449 = $1451;
                                break;
                            case 'Maybe.none':
                                var $1452 = Parser$Reply$error$($1448);
                                var $1449 = $1452;
                                break;
                        };
                        var $1447 = $1449;
                        break;
                    case 'Parser.Reply.value':
                        var $1453 = self.pst;
                        var self = $1453;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1455 = self.err;
                                var $1456 = self.nam;
                                var $1457 = self.ini;
                                var $1458 = self.idx;
                                var $1459 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1446, $1455), $1456, $1457, $1458, $1459);
                                var $1460 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$xor));
                                var $1454 = $1460;
                                break;
                        };
                        var $1447 = $1454;
                        break;
                };
                var $1445 = $1447;
                break;
        };
        return $1445;
    }), List$cons$((_pst$1 => {
        var $1461 = Parser$Reply$value$(_pst$1, Maybe$none);
        return $1461;
    }), List$nil))))))))));

    function Kindelia$Term$operate$(_oper$1, _val0$2, _val1$3) {
        var $1462 = ({
            _: 'Kindelia.Term.operate',
            'oper': _oper$1,
            'val0': _val0$2,
            'val1': _val1$3
        });
        return $1462;
    };
    const Kindelia$Term$operate = x0 => x1 => x2 => Kindelia$Term$operate$(x0, x1, x2);

    function Kindelia$parse$term$operate$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1464 = self.err;
                var _reply$8 = Kindelia$parse$term$operation(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1466 = self.err;
                        var self = $1464;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1468 = self.value;
                                var $1469 = Parser$Reply$error$(Parser$Error$combine$($1468, $1466));
                                var $1467 = $1469;
                                break;
                            case 'Maybe.none':
                                var $1470 = Parser$Reply$error$($1466);
                                var $1467 = $1470;
                                break;
                        };
                        var $1465 = $1467;
                        break;
                    case 'Parser.Reply.value':
                        var $1471 = self.pst;
                        var $1472 = self.val;
                        var self = $1471;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1474 = self.err;
                                var $1475 = self.nam;
                                var $1476 = self.ini;
                                var $1477 = self.idx;
                                var $1478 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1464, $1474), $1475, $1476, $1477, $1478);
                                var self = $1472;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $1480 = self.value;
                                        var $1481 = (_pst$18 => {
                                            var self = _pst$18;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $1483 = self.err;
                                                    var _reply$24 = Kindelia$parse$text$("(", _pst$18);
                                                    var self = _reply$24;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $1485 = self.err;
                                                            var self = $1483;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $1487 = self.value;
                                                                    var $1488 = Parser$Reply$error$(Parser$Error$combine$($1487, $1485));
                                                                    var $1486 = $1488;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $1489 = Parser$Reply$error$($1485);
                                                                    var $1486 = $1489;
                                                                    break;
                                                            };
                                                            var $1484 = $1486;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $1490 = self.pst;
                                                            var self = $1490;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1492 = self.err;
                                                                    var $1493 = self.nam;
                                                                    var $1494 = self.ini;
                                                                    var $1495 = self.idx;
                                                                    var $1496 = self.str;
                                                                    var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($1483, $1492), $1493, $1494, $1495, $1496);
                                                                    var self = _reply$pst$32;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $1498 = self.err;
                                                                            var _reply$38 = Kindelia$parse$term$(_world$1)(_reply$pst$32);
                                                                            var self = _reply$38;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $1500 = self.err;
                                                                                    var self = $1498;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $1502 = self.value;
                                                                                            var $1503 = Parser$Reply$error$(Parser$Error$combine$($1502, $1500));
                                                                                            var $1501 = $1503;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $1504 = Parser$Reply$error$($1500);
                                                                                            var $1501 = $1504;
                                                                                            break;
                                                                                    };
                                                                                    var $1499 = $1501;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $1505 = self.pst;
                                                                                    var $1506 = self.val;
                                                                                    var self = $1505;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1508 = self.err;
                                                                                            var $1509 = self.nam;
                                                                                            var $1510 = self.ini;
                                                                                            var $1511 = self.idx;
                                                                                            var $1512 = self.str;
                                                                                            var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($1498, $1508), $1509, $1510, $1511, $1512);
                                                                                            var self = _reply$pst$46;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $1514 = self.err;
                                                                                                    var _reply$52 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$46);
                                                                                                    var self = _reply$52;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $1516 = self.err;
                                                                                                            var self = $1514;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $1518 = self.value;
                                                                                                                    var $1519 = Parser$Reply$error$(Parser$Error$combine$($1518, $1516));
                                                                                                                    var $1517 = $1519;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $1520 = Parser$Reply$error$($1516);
                                                                                                                    var $1517 = $1520;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1515 = $1517;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $1521 = self.pst;
                                                                                                            var self = $1521;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $1523 = self.err;
                                                                                                                    var $1524 = self.nam;
                                                                                                                    var $1525 = self.ini;
                                                                                                                    var $1526 = self.idx;
                                                                                                                    var $1527 = self.str;
                                                                                                                    var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($1514, $1523), $1524, $1525, $1526, $1527);
                                                                                                                    var self = _reply$pst$60;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.State.new':
                                                                                                                            var $1529 = self.err;
                                                                                                                            var _reply$66 = Kindelia$parse$term$(_world$1)(_reply$pst$60);
                                                                                                                            var self = _reply$66;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                    var $1531 = self.err;
                                                                                                                                    var self = $1529;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Maybe.some':
                                                                                                                                            var $1533 = self.value;
                                                                                                                                            var $1534 = Parser$Reply$error$(Parser$Error$combine$($1533, $1531));
                                                                                                                                            var $1532 = $1534;
                                                                                                                                            break;
                                                                                                                                        case 'Maybe.none':
                                                                                                                                            var $1535 = Parser$Reply$error$($1531);
                                                                                                                                            var $1532 = $1535;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1530 = $1532;
                                                                                                                                    break;
                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                    var $1536 = self.pst;
                                                                                                                                    var $1537 = self.val;
                                                                                                                                    var self = $1536;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $1539 = self.err;
                                                                                                                                            var $1540 = self.nam;
                                                                                                                                            var $1541 = self.ini;
                                                                                                                                            var $1542 = self.idx;
                                                                                                                                            var $1543 = self.str;
                                                                                                                                            var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($1529, $1539), $1540, $1541, $1542, $1543);
                                                                                                                                            var self = _reply$pst$74;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $1545 = self.err;
                                                                                                                                                    var _reply$80 = Kindelia$parse$text$(")", _reply$pst$74);
                                                                                                                                                    var self = _reply$80;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $1547 = self.err;
                                                                                                                                                            var self = $1545;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $1549 = self.value;
                                                                                                                                                                    var $1550 = Parser$Reply$error$(Parser$Error$combine$($1549, $1547));
                                                                                                                                                                    var $1548 = $1550;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $1551 = Parser$Reply$error$($1547);
                                                                                                                                                                    var $1548 = $1551;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1546 = $1548;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $1552 = self.pst;
                                                                                                                                                            var self = $1552;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $1554 = self.err;
                                                                                                                                                                    var $1555 = self.nam;
                                                                                                                                                                    var $1556 = self.ini;
                                                                                                                                                                    var $1557 = self.idx;
                                                                                                                                                                    var $1558 = self.str;
                                                                                                                                                                    var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($1545, $1554), $1555, $1556, $1557, $1558);
                                                                                                                                                                    var $1559 = Parser$Reply$value$(_reply$pst$88, Kindelia$Term$operate$($1480, $1506, $1537));
                                                                                                                                                                    var $1553 = $1559;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1546 = $1553;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1544 = $1546;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1538 = $1544;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1530 = $1538;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1528 = $1530;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1522 = $1528;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1515 = $1522;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1513 = $1515;
                                                                                                    break;
                                                                                            };
                                                                                            var $1507 = $1513;
                                                                                            break;
                                                                                    };
                                                                                    var $1499 = $1507;
                                                                                    break;
                                                                            };
                                                                            var $1497 = $1499;
                                                                            break;
                                                                    };
                                                                    var $1491 = $1497;
                                                                    break;
                                                            };
                                                            var $1484 = $1491;
                                                            break;
                                                    };
                                                    var $1482 = $1484;
                                                    break;
                                            };
                                            return $1482;
                                        });
                                        var $1479 = $1481;
                                        break;
                                    case 'Maybe.none':
                                        var $1560 = Parser$fail("Not an operation.");
                                        var $1479 = $1560;
                                        break;
                                };
                                var $1479 = $1479(_reply$pst$16);
                                var $1473 = $1479;
                                break;
                        };
                        var $1465 = $1473;
                        break;
                };
                var $1463 = $1465;
                break;
        };
        return $1463;
    };
    const Kindelia$parse$term$operate = x0 => x1 => Kindelia$parse$term$operate$(x0, x1);

    function Kindelia$Term$set$(_file$1, _expr$2, _body$3) {
        var $1561 = ({
            _: 'Kindelia.Term.set',
            'file': _file$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $1561;
    };
    const Kindelia$Term$set = x0 => x1 => x2 => Kindelia$Term$set$(x0, x1, x2);

    function Kindelia$parse$term$set$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1563 = self.err;
                var _reply$8 = Kindelia$parse$text$("set", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1565 = self.err;
                        var self = $1563;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1567 = self.value;
                                var $1568 = Parser$Reply$error$(Parser$Error$combine$($1567, $1565));
                                var $1566 = $1568;
                                break;
                            case 'Maybe.none':
                                var $1569 = Parser$Reply$error$($1565);
                                var $1566 = $1569;
                                break;
                        };
                        var $1564 = $1566;
                        break;
                    case 'Parser.Reply.value':
                        var $1570 = self.pst;
                        var self = $1570;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1572 = self.err;
                                var $1573 = self.nam;
                                var $1574 = self.ini;
                                var $1575 = self.idx;
                                var $1576 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1563, $1572), $1573, $1574, $1575, $1576);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1578 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1580 = self.err;
                                                var self = $1578;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1582 = self.value;
                                                        var $1583 = Parser$Reply$error$(Parser$Error$combine$($1582, $1580));
                                                        var $1581 = $1583;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1584 = Parser$Reply$error$($1580);
                                                        var $1581 = $1584;
                                                        break;
                                                };
                                                var $1579 = $1581;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1585 = self.pst;
                                                var $1586 = self.val;
                                                var self = $1585;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1588 = self.err;
                                                        var $1589 = self.nam;
                                                        var $1590 = self.ini;
                                                        var $1591 = self.idx;
                                                        var $1592 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1578, $1588), $1589, $1590, $1591, $1592);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1594 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$("=", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1596 = self.err;
                                                                        var self = $1594;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1598 = self.value;
                                                                                var $1599 = Parser$Reply$error$(Parser$Error$combine$($1598, $1596));
                                                                                var $1597 = $1599;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1600 = Parser$Reply$error$($1596);
                                                                                var $1597 = $1600;
                                                                                break;
                                                                        };
                                                                        var $1595 = $1597;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1601 = self.pst;
                                                                        var self = $1601;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1603 = self.err;
                                                                                var $1604 = self.nam;
                                                                                var $1605 = self.ini;
                                                                                var $1606 = self.idx;
                                                                                var $1607 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1594, $1603), $1604, $1605, $1606, $1607);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1609 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$term$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1611 = self.err;
                                                                                                var self = $1609;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1613 = self.value;
                                                                                                        var $1614 = Parser$Reply$error$(Parser$Error$combine$($1613, $1611));
                                                                                                        var $1612 = $1614;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1615 = Parser$Reply$error$($1611);
                                                                                                        var $1612 = $1615;
                                                                                                        break;
                                                                                                };
                                                                                                var $1610 = $1612;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1616 = self.pst;
                                                                                                var $1617 = self.val;
                                                                                                var self = $1616;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1619 = self.err;
                                                                                                        var $1620 = self.nam;
                                                                                                        var $1621 = self.ini;
                                                                                                        var $1622 = self.idx;
                                                                                                        var $1623 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1609, $1619), $1620, $1621, $1622, $1623);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1625 = self.err;
                                                                                                                var _reply$64 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1627 = self.err;
                                                                                                                        var self = $1625;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1629 = self.value;
                                                                                                                                var $1630 = Parser$Reply$error$(Parser$Error$combine$($1629, $1627));
                                                                                                                                var $1628 = $1630;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1631 = Parser$Reply$error$($1627);
                                                                                                                                var $1628 = $1631;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1626 = $1628;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1632 = self.pst;
                                                                                                                        var self = $1632;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1634 = self.err;
                                                                                                                                var $1635 = self.nam;
                                                                                                                                var $1636 = self.ini;
                                                                                                                                var $1637 = self.idx;
                                                                                                                                var $1638 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1625, $1634), $1635, $1636, $1637, $1638);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1640 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1642 = self.err;
                                                                                                                                                var self = $1640;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1644 = self.value;
                                                                                                                                                        var $1645 = Parser$Reply$error$(Parser$Error$combine$($1644, $1642));
                                                                                                                                                        var $1643 = $1645;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1646 = Parser$Reply$error$($1642);
                                                                                                                                                        var $1643 = $1646;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1641 = $1643;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1647 = self.pst;
                                                                                                                                                var $1648 = self.val;
                                                                                                                                                var self = $1647;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1650 = self.err;
                                                                                                                                                        var $1651 = self.nam;
                                                                                                                                                        var $1652 = self.ini;
                                                                                                                                                        var $1653 = self.idx;
                                                                                                                                                        var $1654 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1640, $1650), $1651, $1652, $1653, $1654);
                                                                                                                                                        var $1655 = Parser$Reply$value$(_reply$pst$86, Kindelia$Term$set$($1586, $1617, $1648));
                                                                                                                                                        var $1649 = $1655;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1641 = $1649;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1639 = $1641;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1633 = $1639;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1626 = $1633;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1624 = $1626;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1618 = $1624;
                                                                                                        break;
                                                                                                };
                                                                                                var $1610 = $1618;
                                                                                                break;
                                                                                        };
                                                                                        var $1608 = $1610;
                                                                                        break;
                                                                                };
                                                                                var $1602 = $1608;
                                                                                break;
                                                                        };
                                                                        var $1595 = $1602;
                                                                        break;
                                                                };
                                                                var $1593 = $1595;
                                                                break;
                                                        };
                                                        var $1587 = $1593;
                                                        break;
                                                };
                                                var $1579 = $1587;
                                                break;
                                        };
                                        var $1577 = $1579;
                                        break;
                                };
                                var $1571 = $1577;
                                break;
                        };
                        var $1564 = $1571;
                        break;
                };
                var $1562 = $1564;
                break;
        };
        return $1562;
    };
    const Kindelia$parse$term$set = x0 => x1 => Kindelia$parse$term$set$(x0, x1);

    function Kindelia$Term$get$(_name$1, _file$2, _body$3) {
        var $1656 = ({
            _: 'Kindelia.Term.get',
            'name': _name$1,
            'file': _file$2,
            'body': _body$3
        });
        return $1656;
    };
    const Kindelia$Term$get = x0 => x1 => x2 => Kindelia$Term$get$(x0, x1, x2);

    function Kindelia$parse$term$get$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1658 = self.err;
                var _reply$8 = Kindelia$parse$text$("get", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1660 = self.err;
                        var self = $1658;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1662 = self.value;
                                var $1663 = Parser$Reply$error$(Parser$Error$combine$($1662, $1660));
                                var $1661 = $1663;
                                break;
                            case 'Maybe.none':
                                var $1664 = Parser$Reply$error$($1660);
                                var $1661 = $1664;
                                break;
                        };
                        var $1659 = $1661;
                        break;
                    case 'Parser.Reply.value':
                        var $1665 = self.pst;
                        var self = $1665;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1667 = self.err;
                                var $1668 = self.nam;
                                var $1669 = self.ini;
                                var $1670 = self.idx;
                                var $1671 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1658, $1667), $1668, $1669, $1670, $1671);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1673 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1675 = self.err;
                                                var self = $1673;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1677 = self.value;
                                                        var $1678 = Parser$Reply$error$(Parser$Error$combine$($1677, $1675));
                                                        var $1676 = $1678;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1679 = Parser$Reply$error$($1675);
                                                        var $1676 = $1679;
                                                        break;
                                                };
                                                var $1674 = $1676;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1680 = self.pst;
                                                var $1681 = self.val;
                                                var self = $1680;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1683 = self.err;
                                                        var $1684 = self.nam;
                                                        var $1685 = self.ini;
                                                        var $1686 = self.idx;
                                                        var $1687 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1673, $1683), $1684, $1685, $1686, $1687);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1689 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$("=", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1691 = self.err;
                                                                        var self = $1689;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1693 = self.value;
                                                                                var $1694 = Parser$Reply$error$(Parser$Error$combine$($1693, $1691));
                                                                                var $1692 = $1694;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1695 = Parser$Reply$error$($1691);
                                                                                var $1692 = $1695;
                                                                                break;
                                                                        };
                                                                        var $1690 = $1692;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1696 = self.pst;
                                                                        var self = $1696;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1698 = self.err;
                                                                                var $1699 = self.nam;
                                                                                var $1700 = self.ini;
                                                                                var $1701 = self.idx;
                                                                                var $1702 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1689, $1698), $1699, $1700, $1701, $1702);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1704 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$name$(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1706 = self.err;
                                                                                                var self = $1704;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1708 = self.value;
                                                                                                        var $1709 = Parser$Reply$error$(Parser$Error$combine$($1708, $1706));
                                                                                                        var $1707 = $1709;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1710 = Parser$Reply$error$($1706);
                                                                                                        var $1707 = $1710;
                                                                                                        break;
                                                                                                };
                                                                                                var $1705 = $1707;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1711 = self.pst;
                                                                                                var $1712 = self.val;
                                                                                                var self = $1711;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1714 = self.err;
                                                                                                        var $1715 = self.nam;
                                                                                                        var $1716 = self.ini;
                                                                                                        var $1717 = self.idx;
                                                                                                        var $1718 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1704, $1714), $1715, $1716, $1717, $1718);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1720 = self.err;
                                                                                                                var _reply$64 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1722 = self.err;
                                                                                                                        var self = $1720;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1724 = self.value;
                                                                                                                                var $1725 = Parser$Reply$error$(Parser$Error$combine$($1724, $1722));
                                                                                                                                var $1723 = $1725;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1726 = Parser$Reply$error$($1722);
                                                                                                                                var $1723 = $1726;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1721 = $1723;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1727 = self.pst;
                                                                                                                        var self = $1727;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1729 = self.err;
                                                                                                                                var $1730 = self.nam;
                                                                                                                                var $1731 = self.ini;
                                                                                                                                var $1732 = self.idx;
                                                                                                                                var $1733 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1720, $1729), $1730, $1731, $1732, $1733);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1735 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1737 = self.err;
                                                                                                                                                var self = $1735;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1739 = self.value;
                                                                                                                                                        var $1740 = Parser$Reply$error$(Parser$Error$combine$($1739, $1737));
                                                                                                                                                        var $1738 = $1740;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1741 = Parser$Reply$error$($1737);
                                                                                                                                                        var $1738 = $1741;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1736 = $1738;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1742 = self.pst;
                                                                                                                                                var $1743 = self.val;
                                                                                                                                                var self = $1742;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1745 = self.err;
                                                                                                                                                        var $1746 = self.nam;
                                                                                                                                                        var $1747 = self.ini;
                                                                                                                                                        var $1748 = self.idx;
                                                                                                                                                        var $1749 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1735, $1745), $1746, $1747, $1748, $1749);
                                                                                                                                                        var $1750 = Parser$Reply$value$(_reply$pst$86, Kindelia$Term$get$($1681, $1712, $1743));
                                                                                                                                                        var $1744 = $1750;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1736 = $1744;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1734 = $1736;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1728 = $1734;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1721 = $1728;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1719 = $1721;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1713 = $1719;
                                                                                                        break;
                                                                                                };
                                                                                                var $1705 = $1713;
                                                                                                break;
                                                                                        };
                                                                                        var $1703 = $1705;
                                                                                        break;
                                                                                };
                                                                                var $1697 = $1703;
                                                                                break;
                                                                        };
                                                                        var $1690 = $1697;
                                                                        break;
                                                                };
                                                                var $1688 = $1690;
                                                                break;
                                                        };
                                                        var $1682 = $1688;
                                                        break;
                                                };
                                                var $1674 = $1682;
                                                break;
                                        };
                                        var $1672 = $1674;
                                        break;
                                };
                                var $1666 = $1672;
                                break;
                        };
                        var $1659 = $1666;
                        break;
                };
                var $1657 = $1659;
                break;
        };
        return $1657;
    };
    const Kindelia$parse$term$get = x0 => x1 => Kindelia$parse$term$get$(x0, x1);

    function Kindelia$Term$bind$(_name$1, _type$2, _expr$3, _body$4) {
        var $1751 = ({
            _: 'Kindelia.Term.bind',
            'name': _name$1,
            'type': _type$2,
            'expr': _expr$3,
            'body': _body$4
        });
        return $1751;
    };
    const Kindelia$Term$bind = x0 => x1 => x2 => x3 => Kindelia$Term$bind$(x0, x1, x2, x3);

    function Kindelia$parse$term$bind$(_world$1) {
        var $1752 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1754 = self.err;
                    var _reply$8 = Kindelia$parse$text$("run", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1756 = self.err;
                            var self = $1754;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1758 = self.value;
                                    var $1759 = Parser$Reply$error$(Parser$Error$combine$($1758, $1756));
                                    var $1757 = $1759;
                                    break;
                                case 'Maybe.none':
                                    var $1760 = Parser$Reply$error$($1756);
                                    var $1757 = $1760;
                                    break;
                            };
                            var $1755 = $1757;
                            break;
                        case 'Parser.Reply.value':
                            var $1761 = self.pst;
                            var self = $1761;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1763 = self.err;
                                    var $1764 = self.nam;
                                    var $1765 = self.ini;
                                    var $1766 = self.idx;
                                    var $1767 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1754, $1763), $1764, $1765, $1766, $1767);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1769 = self.err;
                                            var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1771 = self.err;
                                                    var self = $1769;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1773 = self.value;
                                                            var $1774 = Parser$Reply$error$(Parser$Error$combine$($1773, $1771));
                                                            var $1772 = $1774;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1775 = Parser$Reply$error$($1771);
                                                            var $1772 = $1775;
                                                            break;
                                                    };
                                                    var $1770 = $1772;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1776 = self.pst;
                                                    var $1777 = self.val;
                                                    var self = $1776;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1779 = self.err;
                                                            var $1780 = self.nam;
                                                            var $1781 = self.ini;
                                                            var $1782 = self.idx;
                                                            var $1783 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1769, $1779), $1780, $1781, $1782, $1783);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1785 = self.err;
                                                                    var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1787 = self.err;
                                                                            var self = $1785;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1789 = self.value;
                                                                                    var $1790 = Parser$Reply$error$(Parser$Error$combine$($1789, $1787));
                                                                                    var $1788 = $1790;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1791 = Parser$Reply$error$($1787);
                                                                                    var $1788 = $1791;
                                                                                    break;
                                                                            };
                                                                            var $1786 = $1788;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1792 = self.pst;
                                                                            var self = $1792;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1794 = self.err;
                                                                                    var $1795 = self.nam;
                                                                                    var $1796 = self.ini;
                                                                                    var $1797 = self.idx;
                                                                                    var $1798 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1785, $1794), $1795, $1796, $1797, $1798);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1800 = self.err;
                                                                                            var _reply$50 = Kindelia$parse$type$(_world$1)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $1802 = self.err;
                                                                                                    var self = $1800;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $1804 = self.value;
                                                                                                            var $1805 = Parser$Reply$error$(Parser$Error$combine$($1804, $1802));
                                                                                                            var $1803 = $1805;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $1806 = Parser$Reply$error$($1802);
                                                                                                            var $1803 = $1806;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1801 = $1803;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $1807 = self.pst;
                                                                                                    var $1808 = self.val;
                                                                                                    var self = $1807;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $1810 = self.err;
                                                                                                            var $1811 = self.nam;
                                                                                                            var $1812 = self.ini;
                                                                                                            var $1813 = self.idx;
                                                                                                            var $1814 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1800, $1810), $1811, $1812, $1813, $1814);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $1816 = self.err;
                                                                                                                    var _reply$64 = Kindelia$parse$text$("=", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $1818 = self.err;
                                                                                                                            var self = $1816;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $1820 = self.value;
                                                                                                                                    var $1821 = Parser$Reply$error$(Parser$Error$combine$($1820, $1818));
                                                                                                                                    var $1819 = $1821;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $1822 = Parser$Reply$error$($1818);
                                                                                                                                    var $1819 = $1822;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1817 = $1819;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $1823 = self.pst;
                                                                                                                            var self = $1823;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $1825 = self.err;
                                                                                                                                    var $1826 = self.nam;
                                                                                                                                    var $1827 = self.ini;
                                                                                                                                    var $1828 = self.idx;
                                                                                                                                    var $1829 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1816, $1825), $1826, $1827, $1828, $1829);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $1831 = self.err;
                                                                                                                                            var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $1833 = self.err;
                                                                                                                                                    var self = $1831;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $1835 = self.value;
                                                                                                                                                            var $1836 = Parser$Reply$error$(Parser$Error$combine$($1835, $1833));
                                                                                                                                                            var $1834 = $1836;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $1837 = Parser$Reply$error$($1833);
                                                                                                                                                            var $1834 = $1837;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1832 = $1834;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $1838 = self.pst;
                                                                                                                                                    var $1839 = self.val;
                                                                                                                                                    var self = $1838;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $1841 = self.err;
                                                                                                                                                            var $1842 = self.nam;
                                                                                                                                                            var $1843 = self.ini;
                                                                                                                                                            var $1844 = self.idx;
                                                                                                                                                            var $1845 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1831, $1841), $1842, $1843, $1844, $1845);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $1847 = self.err;
                                                                                                                                                                    var _reply$92 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $1849 = self.err;
                                                                                                                                                                            var self = $1847;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $1851 = self.value;
                                                                                                                                                                                    var $1852 = Parser$Reply$error$(Parser$Error$combine$($1851, $1849));
                                                                                                                                                                                    var $1850 = $1852;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $1853 = Parser$Reply$error$($1849);
                                                                                                                                                                                    var $1850 = $1853;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1848 = $1850;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $1854 = self.pst;
                                                                                                                                                                            var self = $1854;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $1856 = self.err;
                                                                                                                                                                                    var $1857 = self.nam;
                                                                                                                                                                                    var $1858 = self.ini;
                                                                                                                                                                                    var $1859 = self.idx;
                                                                                                                                                                                    var $1860 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($1847, $1856), $1857, $1858, $1859, $1860);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $1862 = self.err;
                                                                                                                                                                                            var _reply$106 = Kindelia$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $1864 = self.err;
                                                                                                                                                                                                    var self = $1862;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $1866 = self.value;
                                                                                                                                                                                                            var $1867 = Parser$Reply$error$(Parser$Error$combine$($1866, $1864));
                                                                                                                                                                                                            var $1865 = $1867;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $1868 = Parser$Reply$error$($1864);
                                                                                                                                                                                                            var $1865 = $1868;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $1863 = $1865;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $1869 = self.pst;
                                                                                                                                                                                                    var $1870 = self.val;
                                                                                                                                                                                                    var self = $1869;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $1872 = self.err;
                                                                                                                                                                                                            var $1873 = self.nam;
                                                                                                                                                                                                            var $1874 = self.ini;
                                                                                                                                                                                                            var $1875 = self.idx;
                                                                                                                                                                                                            var $1876 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($1862, $1872), $1873, $1874, $1875, $1876);
                                                                                                                                                                                                            var $1877 = Parser$Reply$value$(_reply$pst$114, Kindelia$Term$bind$($1777, $1808, $1839, $1870));
                                                                                                                                                                                                            var $1871 = $1877;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $1863 = $1871;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $1861 = $1863;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $1855 = $1861;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1848 = $1855;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $1846 = $1848;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1840 = $1846;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1832 = $1840;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1830 = $1832;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1824 = $1830;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1817 = $1824;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1815 = $1817;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1809 = $1815;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1801 = $1809;
                                                                                                    break;
                                                                                            };
                                                                                            var $1799 = $1801;
                                                                                            break;
                                                                                    };
                                                                                    var $1793 = $1799;
                                                                                    break;
                                                                            };
                                                                            var $1786 = $1793;
                                                                            break;
                                                                    };
                                                                    var $1784 = $1786;
                                                                    break;
                                                            };
                                                            var $1778 = $1784;
                                                            break;
                                                    };
                                                    var $1770 = $1778;
                                                    break;
                                            };
                                            var $1768 = $1770;
                                            break;
                                    };
                                    var $1762 = $1768;
                                    break;
                            };
                            var $1755 = $1762;
                            break;
                    };
                    var $1753 = $1755;
                    break;
            };
            return $1753;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1879 = self.err;
                    var _reply$8 = Kindelia$parse$text$("run", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1881 = self.err;
                            var self = $1879;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1883 = self.value;
                                    var $1884 = Parser$Reply$error$(Parser$Error$combine$($1883, $1881));
                                    var $1882 = $1884;
                                    break;
                                case 'Maybe.none':
                                    var $1885 = Parser$Reply$error$($1881);
                                    var $1882 = $1885;
                                    break;
                            };
                            var $1880 = $1882;
                            break;
                        case 'Parser.Reply.value':
                            var $1886 = self.pst;
                            var self = $1886;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1888 = self.err;
                                    var $1889 = self.nam;
                                    var $1890 = self.ini;
                                    var $1891 = self.idx;
                                    var $1892 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1879, $1888), $1889, $1890, $1891, $1892);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1894 = self.err;
                                            var _reply$22 = Kindelia$parse$term$(_world$1)(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1896 = self.err;
                                                    var self = $1894;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1898 = self.value;
                                                            var $1899 = Parser$Reply$error$(Parser$Error$combine$($1898, $1896));
                                                            var $1897 = $1899;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1900 = Parser$Reply$error$($1896);
                                                            var $1897 = $1900;
                                                            break;
                                                    };
                                                    var $1895 = $1897;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1901 = self.pst;
                                                    var $1902 = self.val;
                                                    var self = $1901;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1904 = self.err;
                                                            var $1905 = self.nam;
                                                            var $1906 = self.ini;
                                                            var $1907 = self.idx;
                                                            var $1908 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1894, $1904), $1905, $1906, $1907, $1908);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1910 = self.err;
                                                                    var _reply$36 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1912 = self.err;
                                                                            var self = $1910;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1914 = self.value;
                                                                                    var $1915 = Parser$Reply$error$(Parser$Error$combine$($1914, $1912));
                                                                                    var $1913 = $1915;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1916 = Parser$Reply$error$($1912);
                                                                                    var $1913 = $1916;
                                                                                    break;
                                                                            };
                                                                            var $1911 = $1913;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1917 = self.pst;
                                                                            var self = $1917;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1919 = self.err;
                                                                                    var $1920 = self.nam;
                                                                                    var $1921 = self.ini;
                                                                                    var $1922 = self.idx;
                                                                                    var $1923 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1910, $1919), $1920, $1921, $1922, $1923);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1925 = self.err;
                                                                                            var _reply$50 = Kindelia$parse$term$(_world$1)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $1927 = self.err;
                                                                                                    var self = $1925;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $1929 = self.value;
                                                                                                            var $1930 = Parser$Reply$error$(Parser$Error$combine$($1929, $1927));
                                                                                                            var $1928 = $1930;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $1931 = Parser$Reply$error$($1927);
                                                                                                            var $1928 = $1931;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1926 = $1928;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $1932 = self.pst;
                                                                                                    var $1933 = self.val;
                                                                                                    var self = $1932;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $1935 = self.err;
                                                                                                            var $1936 = self.nam;
                                                                                                            var $1937 = self.ini;
                                                                                                            var $1938 = self.idx;
                                                                                                            var $1939 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1925, $1935), $1936, $1937, $1938, $1939);
                                                                                                            var $1940 = Parser$Reply$value$(_reply$pst$58, Kindelia$Term$bind$("", Kindelia$Type$word, $1902, $1933));
                                                                                                            var $1934 = $1940;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1926 = $1934;
                                                                                                    break;
                                                                                            };
                                                                                            var $1924 = $1926;
                                                                                            break;
                                                                                    };
                                                                                    var $1918 = $1924;
                                                                                    break;
                                                                            };
                                                                            var $1911 = $1918;
                                                                            break;
                                                                    };
                                                                    var $1909 = $1911;
                                                                    break;
                                                            };
                                                            var $1903 = $1909;
                                                            break;
                                                    };
                                                    var $1895 = $1903;
                                                    break;
                                            };
                                            var $1893 = $1895;
                                            break;
                                    };
                                    var $1887 = $1893;
                                    break;
                            };
                            var $1880 = $1887;
                            break;
                    };
                    var $1878 = $1880;
                    break;
            };
            return $1878;
        }), List$nil)));
        return $1752;
    };
    const Kindelia$parse$term$bind = x0 => Kindelia$parse$term$bind$(x0);

    function Kindelia$Term$return$(_expr$1) {
        var $1941 = ({
            _: 'Kindelia.Term.return',
            'expr': _expr$1
        });
        return $1941;
    };
    const Kindelia$Term$return = x0 => Kindelia$Term$return$(x0);

    function Kindelia$parse$term$return$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1943 = self.err;
                var _reply$8 = Kindelia$parse$text$("return", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1945 = self.err;
                        var self = $1943;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1947 = self.value;
                                var $1948 = Parser$Reply$error$(Parser$Error$combine$($1947, $1945));
                                var $1946 = $1948;
                                break;
                            case 'Maybe.none':
                                var $1949 = Parser$Reply$error$($1945);
                                var $1946 = $1949;
                                break;
                        };
                        var $1944 = $1946;
                        break;
                    case 'Parser.Reply.value':
                        var $1950 = self.pst;
                        var self = $1950;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1952 = self.err;
                                var $1953 = self.nam;
                                var $1954 = self.ini;
                                var $1955 = self.idx;
                                var $1956 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1943, $1952), $1953, $1954, $1955, $1956);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1958 = self.err;
                                        var _reply$22 = Kindelia$parse$term$(_world$1)(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1960 = self.err;
                                                var self = $1958;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1962 = self.value;
                                                        var $1963 = Parser$Reply$error$(Parser$Error$combine$($1962, $1960));
                                                        var $1961 = $1963;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1964 = Parser$Reply$error$($1960);
                                                        var $1961 = $1964;
                                                        break;
                                                };
                                                var $1959 = $1961;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1965 = self.pst;
                                                var $1966 = self.val;
                                                var self = $1965;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1968 = self.err;
                                                        var $1969 = self.nam;
                                                        var $1970 = self.ini;
                                                        var $1971 = self.idx;
                                                        var $1972 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1958, $1968), $1969, $1970, $1971, $1972);
                                                        var $1973 = Parser$Reply$value$(_reply$pst$30, Kindelia$Term$return$($1966));
                                                        var $1967 = $1973;
                                                        break;
                                                };
                                                var $1959 = $1967;
                                                break;
                                        };
                                        var $1957 = $1959;
                                        break;
                                };
                                var $1951 = $1957;
                                break;
                        };
                        var $1944 = $1951;
                        break;
                };
                var $1942 = $1944;
                break;
        };
        return $1942;
    };
    const Kindelia$parse$term$return = x0 => x1 => Kindelia$parse$term$return$(x0, x1);

    function Kindelia$Term$call$(_bond$1, _args$2) {
        var $1974 = ({
            _: 'Kindelia.Term.call',
            'bond': _bond$1,
            'args': _args$2
        });
        return $1974;
    };
    const Kindelia$Term$call = x0 => x1 => Kindelia$Term$call$(x0, x1);

    function Kindelia$parse$term$call$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1976 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1978 = self.err;
                        var self = $1976;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1980 = self.value;
                                var $1981 = Parser$Reply$error$(Parser$Error$combine$($1980, $1978));
                                var $1979 = $1981;
                                break;
                            case 'Maybe.none':
                                var $1982 = Parser$Reply$error$($1978);
                                var $1979 = $1982;
                                break;
                        };
                        var $1977 = $1979;
                        break;
                    case 'Parser.Reply.value':
                        var $1983 = self.pst;
                        var $1984 = self.val;
                        var self = $1983;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1986 = self.err;
                                var $1987 = self.nam;
                                var $1988 = self.ini;
                                var $1989 = self.idx;
                                var $1990 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1976, $1986), $1987, $1988, $1989, $1990);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1992 = self.err;
                                        var _reply$22 = Parser$wrap$(Kindelia$parse$text("("), (_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $1995 = self.err;
                                                    var _reply$28 = Kindelia$parse$term$(_world$1)(_pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $1997 = self.err;
                                                            var self = $1995;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $1999 = self.value;
                                                                    var $2000 = Parser$Reply$error$(Parser$Error$combine$($1999, $1997));
                                                                    var $1998 = $2000;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $2001 = Parser$Reply$error$($1997);
                                                                    var $1998 = $2001;
                                                                    break;
                                                            };
                                                            var $1996 = $1998;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $2002 = self.pst;
                                                            var $2003 = self.val;
                                                            var self = $2002;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2005 = self.err;
                                                                    var $2006 = self.nam;
                                                                    var $2007 = self.ini;
                                                                    var $2008 = self.idx;
                                                                    var $2009 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($1995, $2005), $2006, $2007, $2008, $2009);
                                                                    var self = _reply$pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $2011 = self.err;
                                                                            var _reply$42 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $2013 = self.err;
                                                                                    var self = $2011;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $2015 = self.value;
                                                                                            var $2016 = Parser$Reply$error$(Parser$Error$combine$($2015, $2013));
                                                                                            var $2014 = $2016;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $2017 = Parser$Reply$error$($2013);
                                                                                            var $2014 = $2017;
                                                                                            break;
                                                                                    };
                                                                                    var $2012 = $2014;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $2018 = self.pst;
                                                                                    var self = $2018;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2020 = self.err;
                                                                                            var $2021 = self.nam;
                                                                                            var $2022 = self.ini;
                                                                                            var $2023 = self.idx;
                                                                                            var $2024 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($2011, $2020), $2021, $2022, $2023, $2024);
                                                                                            var $2025 = Parser$Reply$value$(_reply$pst$50, $2003);
                                                                                            var $2019 = $2025;
                                                                                            break;
                                                                                    };
                                                                                    var $2012 = $2019;
                                                                                    break;
                                                                            };
                                                                            var $2010 = $2012;
                                                                            break;
                                                                    };
                                                                    var $2004 = $2010;
                                                                    break;
                                                            };
                                                            var $1996 = $2004;
                                                            break;
                                                    };
                                                    var $1994 = $1996;
                                                    break;
                                            };
                                            return $1994;
                                        }), Kindelia$parse$text(")"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2026 = self.err;
                                                var self = $1992;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2028 = self.value;
                                                        var $2029 = Parser$Reply$error$(Parser$Error$combine$($2028, $2026));
                                                        var $2027 = $2029;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2030 = Parser$Reply$error$($2026);
                                                        var $2027 = $2030;
                                                        break;
                                                };
                                                var $1993 = $2027;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2031 = self.pst;
                                                var $2032 = self.val;
                                                var self = $2031;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2034 = self.err;
                                                        var $2035 = self.nam;
                                                        var $2036 = self.ini;
                                                        var $2037 = self.idx;
                                                        var $2038 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1992, $2034), $2035, $2036, $2037, $2038);
                                                        var $2039 = Parser$Reply$value$(_reply$pst$30, Kindelia$Term$call$($1984, $2032));
                                                        var $2033 = $2039;
                                                        break;
                                                };
                                                var $1993 = $2033;
                                                break;
                                        };
                                        var $1991 = $1993;
                                        break;
                                };
                                var $1985 = $1991;
                                break;
                        };
                        var $1977 = $1985;
                        break;
                };
                var $1975 = $1977;
                break;
        };
        return $1975;
    };
    const Kindelia$parse$term$call = x0 => x1 => Kindelia$parse$term$call$(x0, x1);

    function Kindelia$Term$var$(_name$1) {
        var $2040 = ({
            _: 'Kindelia.Term.var',
            'name': _name$1
        });
        return $2040;
    };
    const Kindelia$Term$var = x0 => Kindelia$Term$var$(x0);

    function Kindelia$parse$term$var$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2042 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2044 = self.err;
                        var self = $2042;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2046 = self.value;
                                var $2047 = Parser$Reply$error$(Parser$Error$combine$($2046, $2044));
                                var $2045 = $2047;
                                break;
                            case 'Maybe.none':
                                var $2048 = Parser$Reply$error$($2044);
                                var $2045 = $2048;
                                break;
                        };
                        var $2043 = $2045;
                        break;
                    case 'Parser.Reply.value':
                        var $2049 = self.pst;
                        var $2050 = self.val;
                        var self = $2049;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2052 = self.err;
                                var $2053 = self.nam;
                                var $2054 = self.ini;
                                var $2055 = self.idx;
                                var $2056 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2042, $2052), $2053, $2054, $2055, $2056);
                                var $2057 = Parser$Reply$value$(_reply$pst$16, Kindelia$Term$var$($2050));
                                var $2051 = $2057;
                                break;
                        };
                        var $2043 = $2051;
                        break;
                };
                var $2041 = $2043;
                break;
        };
        return $2041;
    };
    const Kindelia$parse$term$var = x0 => x1 => Kindelia$parse$term$var$(x0, x1);

    function Kindelia$parse$term$(_world$1) {
        var $2058 = Parser$choice(List$cons$(Kindelia$parse$term$let(_world$1), List$cons$(Kindelia$parse$term$create(_world$1), List$cons$(Kindelia$parse$term$match(_world$1), List$cons$(Kindelia$parse$term$word(_world$1), List$cons$(Kindelia$parse$term$compare(_world$1), List$cons$(Kindelia$parse$term$operate(_world$1), List$cons$(Kindelia$parse$term$set(_world$1), List$cons$(Kindelia$parse$term$get(_world$1), List$cons$(Kindelia$parse$term$bind$(_world$1), List$cons$(Kindelia$parse$term$return(_world$1), List$cons$(Kindelia$parse$term$call(_world$1), List$cons$(Kindelia$parse$term$var(_world$1), List$nil)))))))))))));
        return $2058;
    };
    const Kindelia$parse$term = x0 => Kindelia$parse$term$(x0);

    function Kindelia$Bond$new$(_name$1, _iprm$2, _otyp$3, _main$4) {
        var $2059 = ({
            _: 'Kindelia.Bond.new',
            'name': _name$1,
            'iprm': _iprm$2,
            'otyp': _otyp$3,
            'main': _main$4
        });
        return $2059;
    };
    const Kindelia$Bond$new = x0 => x1 => x2 => x3 => Kindelia$Bond$new$(x0, x1, x2, x3);

    function Kindelia$parse$bond$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2061 = self.err;
                var _reply$8 = Kindelia$parse$text$("bond", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2063 = self.err;
                        var self = $2061;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2065 = self.value;
                                var $2066 = Parser$Reply$error$(Parser$Error$combine$($2065, $2063));
                                var $2064 = $2066;
                                break;
                            case 'Maybe.none':
                                var $2067 = Parser$Reply$error$($2063);
                                var $2064 = $2067;
                                break;
                        };
                        var $2062 = $2064;
                        break;
                    case 'Parser.Reply.value':
                        var $2068 = self.pst;
                        var self = $2068;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2070 = self.err;
                                var $2071 = self.nam;
                                var $2072 = self.ini;
                                var $2073 = self.idx;
                                var $2074 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2061, $2070), $2071, $2072, $2073, $2074);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2076 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2078 = self.err;
                                                var self = $2076;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2080 = self.value;
                                                        var $2081 = Parser$Reply$error$(Parser$Error$combine$($2080, $2078));
                                                        var $2079 = $2081;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2082 = Parser$Reply$error$($2078);
                                                        var $2079 = $2082;
                                                        break;
                                                };
                                                var $2077 = $2079;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2083 = self.pst;
                                                var $2084 = self.val;
                                                var self = $2083;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2086 = self.err;
                                                        var $2087 = self.nam;
                                                        var $2088 = self.ini;
                                                        var $2089 = self.idx;
                                                        var $2090 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2076, $2086), $2087, $2088, $2089, $2090);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2092 = self.err;
                                                                var _reply$36 = Parser$wrap$(Kindelia$parse$text("("), Kindelia$parse$ann(_world$1), Kindelia$parse$text(")"), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2094 = self.err;
                                                                        var self = $2092;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2096 = self.value;
                                                                                var $2097 = Parser$Reply$error$(Parser$Error$combine$($2096, $2094));
                                                                                var $2095 = $2097;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2098 = Parser$Reply$error$($2094);
                                                                                var $2095 = $2098;
                                                                                break;
                                                                        };
                                                                        var $2093 = $2095;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2099 = self.pst;
                                                                        var $2100 = self.val;
                                                                        var self = $2099;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2102 = self.err;
                                                                                var $2103 = self.nam;
                                                                                var $2104 = self.ini;
                                                                                var $2105 = self.idx;
                                                                                var $2106 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2092, $2102), $2103, $2104, $2105, $2106);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2108 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$text$(":", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2110 = self.err;
                                                                                                var self = $2108;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2112 = self.value;
                                                                                                        var $2113 = Parser$Reply$error$(Parser$Error$combine$($2112, $2110));
                                                                                                        var $2111 = $2113;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2114 = Parser$Reply$error$($2110);
                                                                                                        var $2111 = $2114;
                                                                                                        break;
                                                                                                };
                                                                                                var $2109 = $2111;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2115 = self.pst;
                                                                                                var self = $2115;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2117 = self.err;
                                                                                                        var $2118 = self.nam;
                                                                                                        var $2119 = self.ini;
                                                                                                        var $2120 = self.idx;
                                                                                                        var $2121 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2108, $2117), $2118, $2119, $2120, $2121);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2123 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$type$(_world$1)(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2125 = self.err;
                                                                                                                        var self = $2123;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2127 = self.value;
                                                                                                                                var $2128 = Parser$Reply$error$(Parser$Error$combine$($2127, $2125));
                                                                                                                                var $2126 = $2128;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2129 = Parser$Reply$error$($2125);
                                                                                                                                var $2126 = $2129;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2124 = $2126;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2130 = self.pst;
                                                                                                                        var $2131 = self.val;
                                                                                                                        var self = $2130;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2133 = self.err;
                                                                                                                                var $2134 = self.nam;
                                                                                                                                var $2135 = self.ini;
                                                                                                                                var $2136 = self.idx;
                                                                                                                                var $2137 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2123, $2133), $2134, $2135, $2136, $2137);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2139 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$text$("{", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2141 = self.err;
                                                                                                                                                var self = $2139;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2143 = self.value;
                                                                                                                                                        var $2144 = Parser$Reply$error$(Parser$Error$combine$($2143, $2141));
                                                                                                                                                        var $2142 = $2144;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2145 = Parser$Reply$error$($2141);
                                                                                                                                                        var $2142 = $2145;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2140 = $2142;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2146 = self.pst;
                                                                                                                                                var self = $2146;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2148 = self.err;
                                                                                                                                                        var $2149 = self.nam;
                                                                                                                                                        var $2150 = self.ini;
                                                                                                                                                        var $2151 = self.idx;
                                                                                                                                                        var $2152 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2139, $2148), $2149, $2150, $2151, $2152);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $2154 = self.err;
                                                                                                                                                                var _reply$92 = Kindelia$parse$term$(_world$1)(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $2156 = self.err;
                                                                                                                                                                        var self = $2154;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $2158 = self.value;
                                                                                                                                                                                var $2159 = Parser$Reply$error$(Parser$Error$combine$($2158, $2156));
                                                                                                                                                                                var $2157 = $2159;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $2160 = Parser$Reply$error$($2156);
                                                                                                                                                                                var $2157 = $2160;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2155 = $2157;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $2161 = self.pst;
                                                                                                                                                                        var $2162 = self.val;
                                                                                                                                                                        var self = $2161;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $2164 = self.err;
                                                                                                                                                                                var $2165 = self.nam;
                                                                                                                                                                                var $2166 = self.ini;
                                                                                                                                                                                var $2167 = self.idx;
                                                                                                                                                                                var $2168 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2154, $2164), $2165, $2166, $2167, $2168);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $2170 = self.err;
                                                                                                                                                                                        var _reply$106 = Kindelia$parse$text$("}", _reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $2172 = self.err;
                                                                                                                                                                                                var self = $2170;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $2174 = self.value;
                                                                                                                                                                                                        var $2175 = Parser$Reply$error$(Parser$Error$combine$($2174, $2172));
                                                                                                                                                                                                        var $2173 = $2175;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $2176 = Parser$Reply$error$($2172);
                                                                                                                                                                                                        var $2173 = $2176;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $2171 = $2173;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $2177 = self.pst;
                                                                                                                                                                                                var self = $2177;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $2179 = self.err;
                                                                                                                                                                                                        var $2180 = self.nam;
                                                                                                                                                                                                        var $2181 = self.ini;
                                                                                                                                                                                                        var $2182 = self.idx;
                                                                                                                                                                                                        var $2183 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2170, $2179), $2180, $2181, $2182, $2183);
                                                                                                                                                                                                        var $2184 = Parser$Reply$value$(_reply$pst$114, Kindelia$Bond$new$($2084, $2100, $2131, $2162));
                                                                                                                                                                                                        var $2178 = $2184;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $2171 = $2178;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $2169 = $2171;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $2163 = $2169;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2155 = $2163;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $2153 = $2155;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $2147 = $2153;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2140 = $2147;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2138 = $2140;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2132 = $2138;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2124 = $2132;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2122 = $2124;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2116 = $2122;
                                                                                                        break;
                                                                                                };
                                                                                                var $2109 = $2116;
                                                                                                break;
                                                                                        };
                                                                                        var $2107 = $2109;
                                                                                        break;
                                                                                };
                                                                                var $2101 = $2107;
                                                                                break;
                                                                        };
                                                                        var $2093 = $2101;
                                                                        break;
                                                                };
                                                                var $2091 = $2093;
                                                                break;
                                                        };
                                                        var $2085 = $2091;
                                                        break;
                                                };
                                                var $2077 = $2085;
                                                break;
                                        };
                                        var $2075 = $2077;
                                        break;
                                };
                                var $2069 = $2075;
                                break;
                        };
                        var $2062 = $2069;
                        break;
                };
                var $2060 = $2062;
                break;
        };
        return $2060;
    };
    const Kindelia$parse$bond = x0 => x1 => Kindelia$parse$bond$(x0, x1);

    function Kindelia$Transaction$new_bond$(_bond$1) {
        var $2185 = ({
            _: 'Kindelia.Transaction.new_bond',
            'bond': _bond$1
        });
        return $2185;
    };
    const Kindelia$Transaction$new_bond = x0 => Kindelia$Transaction$new_bond$(x0);

    function Maybe$default$(_m$2, _a$3) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $2187 = self.value;
                var $2188 = $2187;
                var $2186 = $2188;
                break;
            case 'Maybe.none':
                var $2189 = _a$3;
                var $2186 = $2189;
                break;
        };
        return $2186;
    };
    const Maybe$default = x0 => x1 => Maybe$default$(x0, x1);

    function Kindelia$File$new$(_name$1, _ownr$2, _type$3, _expr$4) {
        var $2190 = ({
            _: 'Kindelia.File.new',
            'name': _name$1,
            'ownr': _ownr$2,
            'type': _type$3,
            'expr': _expr$4
        });
        return $2190;
    };
    const Kindelia$File$new = x0 => x1 => x2 => x3 => Kindelia$File$new$(x0, x1, x2, x3);

    function Kindelia$parse$file$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2192 = self.err;
                var _reply$8 = Kindelia$parse$text$("file", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2194 = self.err;
                        var self = $2192;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2196 = self.value;
                                var $2197 = Parser$Reply$error$(Parser$Error$combine$($2196, $2194));
                                var $2195 = $2197;
                                break;
                            case 'Maybe.none':
                                var $2198 = Parser$Reply$error$($2194);
                                var $2195 = $2198;
                                break;
                        };
                        var $2193 = $2195;
                        break;
                    case 'Parser.Reply.value':
                        var $2199 = self.pst;
                        var self = $2199;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2201 = self.err;
                                var $2202 = self.nam;
                                var $2203 = self.ini;
                                var $2204 = self.idx;
                                var $2205 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2192, $2201), $2202, $2203, $2204, $2205);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2207 = self.err;
                                        var _reply$22 = Parser$maybe$((_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $2210 = self.err;
                                                    var _reply$28 = Parser$many$((_pst$28 => {
                                                        var self = _pst$28;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2213 = self.err;
                                                                var _reply$34 = Kindelia$parse$name$(_pst$28);
                                                                var self = _reply$34;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2215 = self.err;
                                                                        var self = $2213;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2217 = self.value;
                                                                                var $2218 = Parser$Reply$error$(Parser$Error$combine$($2217, $2215));
                                                                                var $2216 = $2218;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2219 = Parser$Reply$error$($2215);
                                                                                var $2216 = $2219;
                                                                                break;
                                                                        };
                                                                        var $2214 = $2216;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2220 = self.pst;
                                                                        var $2221 = self.val;
                                                                        var self = $2220;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2223 = self.err;
                                                                                var $2224 = self.nam;
                                                                                var $2225 = self.ini;
                                                                                var $2226 = self.idx;
                                                                                var $2227 = self.str;
                                                                                var _reply$pst$42 = Parser$State$new$(Parser$Error$maybe_combine$($2213, $2223), $2224, $2225, $2226, $2227);
                                                                                var self = _reply$pst$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2229 = self.err;
                                                                                        var _reply$48 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$42);
                                                                                        var self = _reply$48;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2231 = self.err;
                                                                                                var self = $2229;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2233 = self.value;
                                                                                                        var $2234 = Parser$Reply$error$(Parser$Error$combine$($2233, $2231));
                                                                                                        var $2232 = $2234;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2235 = Parser$Reply$error$($2231);
                                                                                                        var $2232 = $2235;
                                                                                                        break;
                                                                                                };
                                                                                                var $2230 = $2232;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2236 = self.pst;
                                                                                                var self = $2236;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2238 = self.err;
                                                                                                        var $2239 = self.nam;
                                                                                                        var $2240 = self.ini;
                                                                                                        var $2241 = self.idx;
                                                                                                        var $2242 = self.str;
                                                                                                        var _reply$pst$56 = Parser$State$new$(Parser$Error$maybe_combine$($2229, $2238), $2239, $2240, $2241, $2242);
                                                                                                        var $2243 = Parser$Reply$value$(_reply$pst$56, $2221);
                                                                                                        var $2237 = $2243;
                                                                                                        break;
                                                                                                };
                                                                                                var $2230 = $2237;
                                                                                                break;
                                                                                        };
                                                                                        var $2228 = $2230;
                                                                                        break;
                                                                                };
                                                                                var $2222 = $2228;
                                                                                break;
                                                                        };
                                                                        var $2214 = $2222;
                                                                        break;
                                                                };
                                                                var $2212 = $2214;
                                                                break;
                                                        };
                                                        return $2212;
                                                    }))(_pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $2244 = self.err;
                                                            var self = $2210;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $2246 = self.value;
                                                                    var $2247 = Parser$Reply$error$(Parser$Error$combine$($2246, $2244));
                                                                    var $2245 = $2247;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $2248 = Parser$Reply$error$($2244);
                                                                    var $2245 = $2248;
                                                                    break;
                                                            };
                                                            var $2211 = $2245;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $2249 = self.pst;
                                                            var $2250 = self.val;
                                                            var self = $2249;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2252 = self.err;
                                                                    var $2253 = self.nam;
                                                                    var $2254 = self.ini;
                                                                    var $2255 = self.idx;
                                                                    var $2256 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($2210, $2252), $2253, $2254, $2255, $2256);
                                                                    var self = $2250;
                                                                    switch (self._) {
                                                                        case 'List.nil':
                                                                            var $2258 = (_pst$37 => {
                                                                                var $2259 = Parser$Reply$value$(_pst$37, List$nil);
                                                                                return $2259;
                                                                            });
                                                                            var $2257 = $2258;
                                                                            break;
                                                                        case 'List.cons':
                                                                            var $2260 = (_pst$39 => {
                                                                                var self = _pst$39;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2262 = self.err;
                                                                                        var _reply$45 = Kindelia$parse$text$("@", _pst$39);
                                                                                        var self = _reply$45;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2264 = self.err;
                                                                                                var self = $2262;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2266 = self.value;
                                                                                                        var $2267 = Parser$Reply$error$(Parser$Error$combine$($2266, $2264));
                                                                                                        var $2265 = $2267;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2268 = Parser$Reply$error$($2264);
                                                                                                        var $2265 = $2268;
                                                                                                        break;
                                                                                                };
                                                                                                var $2263 = $2265;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2269 = self.pst;
                                                                                                var self = $2269;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2271 = self.err;
                                                                                                        var $2272 = self.nam;
                                                                                                        var $2273 = self.ini;
                                                                                                        var $2274 = self.idx;
                                                                                                        var $2275 = self.str;
                                                                                                        var _reply$pst$53 = Parser$State$new$(Parser$Error$maybe_combine$($2262, $2271), $2272, $2273, $2274, $2275);
                                                                                                        var $2276 = Parser$Reply$value$(_reply$pst$53, $2250);
                                                                                                        var $2270 = $2276;
                                                                                                        break;
                                                                                                };
                                                                                                var $2263 = $2270;
                                                                                                break;
                                                                                        };
                                                                                        var $2261 = $2263;
                                                                                        break;
                                                                                };
                                                                                return $2261;
                                                                            });
                                                                            var $2257 = $2260;
                                                                            break;
                                                                    };
                                                                    var $2257 = $2257(_reply$pst$36);
                                                                    var $2251 = $2257;
                                                                    break;
                                                            };
                                                            var $2211 = $2251;
                                                            break;
                                                    };
                                                    var $2209 = $2211;
                                                    break;
                                            };
                                            return $2209;
                                        }), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2277 = self.err;
                                                var self = $2207;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2279 = self.value;
                                                        var $2280 = Parser$Reply$error$(Parser$Error$combine$($2279, $2277));
                                                        var $2278 = $2280;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2281 = Parser$Reply$error$($2277);
                                                        var $2278 = $2281;
                                                        break;
                                                };
                                                var $2208 = $2278;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2282 = self.pst;
                                                var $2283 = self.val;
                                                var self = $2282;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2285 = self.err;
                                                        var $2286 = self.nam;
                                                        var $2287 = self.ini;
                                                        var $2288 = self.idx;
                                                        var $2289 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2207, $2285), $2286, $2287, $2288, $2289);
                                                        var _ownr$31 = Maybe$default$($2283, List$nil);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2291 = self.err;
                                                                var _reply$37 = Kindelia$parse$name$(_reply$pst$30);
                                                                var self = _reply$37;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2293 = self.err;
                                                                        var self = $2291;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2295 = self.value;
                                                                                var $2296 = Parser$Reply$error$(Parser$Error$combine$($2295, $2293));
                                                                                var $2294 = $2296;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2297 = Parser$Reply$error$($2293);
                                                                                var $2294 = $2297;
                                                                                break;
                                                                        };
                                                                        var $2292 = $2294;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2298 = self.pst;
                                                                        var $2299 = self.val;
                                                                        var self = $2298;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2301 = self.err;
                                                                                var $2302 = self.nam;
                                                                                var $2303 = self.ini;
                                                                                var $2304 = self.idx;
                                                                                var $2305 = self.str;
                                                                                var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($2291, $2301), $2302, $2303, $2304, $2305);
                                                                                var self = _reply$pst$45;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2307 = self.err;
                                                                                        var _reply$51 = Kindelia$parse$text$(":", _reply$pst$45);
                                                                                        var self = _reply$51;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2309 = self.err;
                                                                                                var self = $2307;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2311 = self.value;
                                                                                                        var $2312 = Parser$Reply$error$(Parser$Error$combine$($2311, $2309));
                                                                                                        var $2310 = $2312;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2313 = Parser$Reply$error$($2309);
                                                                                                        var $2310 = $2313;
                                                                                                        break;
                                                                                                };
                                                                                                var $2308 = $2310;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2314 = self.pst;
                                                                                                var self = $2314;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2316 = self.err;
                                                                                                        var $2317 = self.nam;
                                                                                                        var $2318 = self.ini;
                                                                                                        var $2319 = self.idx;
                                                                                                        var $2320 = self.str;
                                                                                                        var _reply$pst$59 = Parser$State$new$(Parser$Error$maybe_combine$($2307, $2316), $2317, $2318, $2319, $2320);
                                                                                                        var self = _reply$pst$59;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2322 = self.err;
                                                                                                                var _reply$65 = Kindelia$parse$type$(_world$1)(_reply$pst$59);
                                                                                                                var self = _reply$65;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2324 = self.err;
                                                                                                                        var self = $2322;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2326 = self.value;
                                                                                                                                var $2327 = Parser$Reply$error$(Parser$Error$combine$($2326, $2324));
                                                                                                                                var $2325 = $2327;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2328 = Parser$Reply$error$($2324);
                                                                                                                                var $2325 = $2328;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2323 = $2325;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2329 = self.pst;
                                                                                                                        var $2330 = self.val;
                                                                                                                        var self = $2329;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2332 = self.err;
                                                                                                                                var $2333 = self.nam;
                                                                                                                                var $2334 = self.ini;
                                                                                                                                var $2335 = self.idx;
                                                                                                                                var $2336 = self.str;
                                                                                                                                var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($2322, $2332), $2333, $2334, $2335, $2336);
                                                                                                                                var self = _reply$pst$73;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2338 = self.err;
                                                                                                                                        var _reply$79 = Kindelia$parse$text$("=", _reply$pst$73);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2340 = self.err;
                                                                                                                                                var self = $2338;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2342 = self.value;
                                                                                                                                                        var $2343 = Parser$Reply$error$(Parser$Error$combine$($2342, $2340));
                                                                                                                                                        var $2341 = $2343;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2344 = Parser$Reply$error$($2340);
                                                                                                                                                        var $2341 = $2344;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2339 = $2341;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2345 = self.pst;
                                                                                                                                                var self = $2345;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2347 = self.err;
                                                                                                                                                        var $2348 = self.nam;
                                                                                                                                                        var $2349 = self.ini;
                                                                                                                                                        var $2350 = self.idx;
                                                                                                                                                        var $2351 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2338, $2347), $2348, $2349, $2350, $2351);
                                                                                                                                                        var self = _reply$pst$87;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $2353 = self.err;
                                                                                                                                                                var _reply$93 = Kindelia$parse$term$(_world$1)(_reply$pst$87);
                                                                                                                                                                var self = _reply$93;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $2355 = self.err;
                                                                                                                                                                        var self = $2353;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $2357 = self.value;
                                                                                                                                                                                var $2358 = Parser$Reply$error$(Parser$Error$combine$($2357, $2355));
                                                                                                                                                                                var $2356 = $2358;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $2359 = Parser$Reply$error$($2355);
                                                                                                                                                                                var $2356 = $2359;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2354 = $2356;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $2360 = self.pst;
                                                                                                                                                                        var $2361 = self.val;
                                                                                                                                                                        var self = $2360;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $2363 = self.err;
                                                                                                                                                                                var $2364 = self.nam;
                                                                                                                                                                                var $2365 = self.ini;
                                                                                                                                                                                var $2366 = self.idx;
                                                                                                                                                                                var $2367 = self.str;
                                                                                                                                                                                var _reply$pst$101 = Parser$State$new$(Parser$Error$maybe_combine$($2353, $2363), $2364, $2365, $2366, $2367);
                                                                                                                                                                                var $2368 = Parser$Reply$value$(_reply$pst$101, Kindelia$File$new$($2299, _ownr$31, $2330, $2361));
                                                                                                                                                                                var $2362 = $2368;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2354 = $2362;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $2352 = $2354;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $2346 = $2352;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2339 = $2346;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2337 = $2339;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2331 = $2337;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2323 = $2331;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2321 = $2323;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2315 = $2321;
                                                                                                        break;
                                                                                                };
                                                                                                var $2308 = $2315;
                                                                                                break;
                                                                                        };
                                                                                        var $2306 = $2308;
                                                                                        break;
                                                                                };
                                                                                var $2300 = $2306;
                                                                                break;
                                                                        };
                                                                        var $2292 = $2300;
                                                                        break;
                                                                };
                                                                var $2290 = $2292;
                                                                break;
                                                        };
                                                        var $2284 = $2290;
                                                        break;
                                                };
                                                var $2208 = $2284;
                                                break;
                                        };
                                        var $2206 = $2208;
                                        break;
                                };
                                var $2200 = $2206;
                                break;
                        };
                        var $2193 = $2200;
                        break;
                };
                var $2191 = $2193;
                break;
        };
        return $2191;
    };
    const Kindelia$parse$file = x0 => x1 => Kindelia$parse$file$(x0, x1);

    function Kindelia$Transaction$new_file$(_file$1) {
        var $2369 = ({
            _: 'Kindelia.Transaction.new_file',
            'file': _file$1
        });
        return $2369;
    };
    const Kindelia$Transaction$new_file = x0 => Kindelia$Transaction$new_file$(x0);

    function Kindelia$Eval$new$(_term$1, _type$2) {
        var $2370 = ({
            _: 'Kindelia.Eval.new',
            'term': _term$1,
            'type': _type$2
        });
        return $2370;
    };
    const Kindelia$Eval$new = x0 => x1 => Kindelia$Eval$new$(x0, x1);

    function Kindelia$parse$eval$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2372 = self.err;
                var _reply$8 = Kindelia$parse$text$("eval", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2374 = self.err;
                        var self = $2372;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2376 = self.value;
                                var $2377 = Parser$Reply$error$(Parser$Error$combine$($2376, $2374));
                                var $2375 = $2377;
                                break;
                            case 'Maybe.none':
                                var $2378 = Parser$Reply$error$($2374);
                                var $2375 = $2378;
                                break;
                        };
                        var $2373 = $2375;
                        break;
                    case 'Parser.Reply.value':
                        var $2379 = self.pst;
                        var self = $2379;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2381 = self.err;
                                var $2382 = self.nam;
                                var $2383 = self.ini;
                                var $2384 = self.idx;
                                var $2385 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2372, $2381), $2382, $2383, $2384, $2385);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2387 = self.err;
                                        var _reply$22 = Kindelia$parse$text$("{", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2389 = self.err;
                                                var self = $2387;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2391 = self.value;
                                                        var $2392 = Parser$Reply$error$(Parser$Error$combine$($2391, $2389));
                                                        var $2390 = $2392;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2393 = Parser$Reply$error$($2389);
                                                        var $2390 = $2393;
                                                        break;
                                                };
                                                var $2388 = $2390;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2394 = self.pst;
                                                var self = $2394;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2396 = self.err;
                                                        var $2397 = self.nam;
                                                        var $2398 = self.ini;
                                                        var $2399 = self.idx;
                                                        var $2400 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2387, $2396), $2397, $2398, $2399, $2400);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2402 = self.err;
                                                                var _reply$36 = Kindelia$parse$term$(_world$1)(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2404 = self.err;
                                                                        var self = $2402;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2406 = self.value;
                                                                                var $2407 = Parser$Reply$error$(Parser$Error$combine$($2406, $2404));
                                                                                var $2405 = $2407;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2408 = Parser$Reply$error$($2404);
                                                                                var $2405 = $2408;
                                                                                break;
                                                                        };
                                                                        var $2403 = $2405;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2409 = self.pst;
                                                                        var $2410 = self.val;
                                                                        var self = $2409;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2412 = self.err;
                                                                                var $2413 = self.nam;
                                                                                var $2414 = self.ini;
                                                                                var $2415 = self.idx;
                                                                                var $2416 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2402, $2412), $2413, $2414, $2415, $2416);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2418 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$text$("}", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2420 = self.err;
                                                                                                var self = $2418;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2422 = self.value;
                                                                                                        var $2423 = Parser$Reply$error$(Parser$Error$combine$($2422, $2420));
                                                                                                        var $2421 = $2423;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2424 = Parser$Reply$error$($2420);
                                                                                                        var $2421 = $2424;
                                                                                                        break;
                                                                                                };
                                                                                                var $2419 = $2421;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2425 = self.pst;
                                                                                                var self = $2425;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2427 = self.err;
                                                                                                        var $2428 = self.nam;
                                                                                                        var $2429 = self.ini;
                                                                                                        var $2430 = self.idx;
                                                                                                        var $2431 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2418, $2427), $2428, $2429, $2430, $2431);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2433 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$text$(":", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2435 = self.err;
                                                                                                                        var self = $2433;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2437 = self.value;
                                                                                                                                var $2438 = Parser$Reply$error$(Parser$Error$combine$($2437, $2435));
                                                                                                                                var $2436 = $2438;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2439 = Parser$Reply$error$($2435);
                                                                                                                                var $2436 = $2439;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2434 = $2436;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2440 = self.pst;
                                                                                                                        var self = $2440;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2442 = self.err;
                                                                                                                                var $2443 = self.nam;
                                                                                                                                var $2444 = self.ini;
                                                                                                                                var $2445 = self.idx;
                                                                                                                                var $2446 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2433, $2442), $2443, $2444, $2445, $2446);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2448 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$type$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2450 = self.err;
                                                                                                                                                var self = $2448;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2452 = self.value;
                                                                                                                                                        var $2453 = Parser$Reply$error$(Parser$Error$combine$($2452, $2450));
                                                                                                                                                        var $2451 = $2453;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2454 = Parser$Reply$error$($2450);
                                                                                                                                                        var $2451 = $2454;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2449 = $2451;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2455 = self.pst;
                                                                                                                                                var $2456 = self.val;
                                                                                                                                                var self = $2455;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2458 = self.err;
                                                                                                                                                        var $2459 = self.nam;
                                                                                                                                                        var $2460 = self.ini;
                                                                                                                                                        var $2461 = self.idx;
                                                                                                                                                        var $2462 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2448, $2458), $2459, $2460, $2461, $2462);
                                                                                                                                                        var $2463 = Parser$Reply$value$(_reply$pst$86, Kindelia$Eval$new$($2410, $2456));
                                                                                                                                                        var $2457 = $2463;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2449 = $2457;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2447 = $2449;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2441 = $2447;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2434 = $2441;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2432 = $2434;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2426 = $2432;
                                                                                                        break;
                                                                                                };
                                                                                                var $2419 = $2426;
                                                                                                break;
                                                                                        };
                                                                                        var $2417 = $2419;
                                                                                        break;
                                                                                };
                                                                                var $2411 = $2417;
                                                                                break;
                                                                        };
                                                                        var $2403 = $2411;
                                                                        break;
                                                                };
                                                                var $2401 = $2403;
                                                                break;
                                                        };
                                                        var $2395 = $2401;
                                                        break;
                                                };
                                                var $2388 = $2395;
                                                break;
                                        };
                                        var $2386 = $2388;
                                        break;
                                };
                                var $2380 = $2386;
                                break;
                        };
                        var $2373 = $2380;
                        break;
                };
                var $2371 = $2373;
                break;
        };
        return $2371;
    };
    const Kindelia$parse$eval = x0 => x1 => Kindelia$parse$eval$(x0, x1);

    function Kindelia$Transaction$new_eval$(_eval$1) {
        var $2464 = ({
            _: 'Kindelia.Transaction.new_eval',
            'eval': _eval$1
        });
        return $2464;
    };
    const Kindelia$Transaction$new_eval = x0 => Kindelia$Transaction$new_eval$(x0);

    function Kindelia$parse$transaction$(_world$1) {
        var $2465 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2467 = self.err;
                    var _reply$8 = Kindelia$parse$data$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2469 = self.err;
                            var self = $2467;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2471 = self.value;
                                    var $2472 = Parser$Reply$error$(Parser$Error$combine$($2471, $2469));
                                    var $2470 = $2472;
                                    break;
                                case 'Maybe.none':
                                    var $2473 = Parser$Reply$error$($2469);
                                    var $2470 = $2473;
                                    break;
                            };
                            var $2468 = $2470;
                            break;
                        case 'Parser.Reply.value':
                            var $2474 = self.pst;
                            var $2475 = self.val;
                            var self = $2474;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2477 = self.err;
                                    var $2478 = self.nam;
                                    var $2479 = self.ini;
                                    var $2480 = self.idx;
                                    var $2481 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2467, $2477), $2478, $2479, $2480, $2481);
                                    var $2482 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_data$($2475));
                                    var $2476 = $2482;
                                    break;
                            };
                            var $2468 = $2476;
                            break;
                    };
                    var $2466 = $2468;
                    break;
            };
            return $2466;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2484 = self.err;
                    var _reply$8 = Kindelia$parse$bond$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2486 = self.err;
                            var self = $2484;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2488 = self.value;
                                    var $2489 = Parser$Reply$error$(Parser$Error$combine$($2488, $2486));
                                    var $2487 = $2489;
                                    break;
                                case 'Maybe.none':
                                    var $2490 = Parser$Reply$error$($2486);
                                    var $2487 = $2490;
                                    break;
                            };
                            var $2485 = $2487;
                            break;
                        case 'Parser.Reply.value':
                            var $2491 = self.pst;
                            var $2492 = self.val;
                            var self = $2491;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2494 = self.err;
                                    var $2495 = self.nam;
                                    var $2496 = self.ini;
                                    var $2497 = self.idx;
                                    var $2498 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2484, $2494), $2495, $2496, $2497, $2498);
                                    var $2499 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_bond$($2492));
                                    var $2493 = $2499;
                                    break;
                            };
                            var $2485 = $2493;
                            break;
                    };
                    var $2483 = $2485;
                    break;
            };
            return $2483;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2501 = self.err;
                    var _reply$8 = Kindelia$parse$file$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2503 = self.err;
                            var self = $2501;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2505 = self.value;
                                    var $2506 = Parser$Reply$error$(Parser$Error$combine$($2505, $2503));
                                    var $2504 = $2506;
                                    break;
                                case 'Maybe.none':
                                    var $2507 = Parser$Reply$error$($2503);
                                    var $2504 = $2507;
                                    break;
                            };
                            var $2502 = $2504;
                            break;
                        case 'Parser.Reply.value':
                            var $2508 = self.pst;
                            var $2509 = self.val;
                            var self = $2508;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2511 = self.err;
                                    var $2512 = self.nam;
                                    var $2513 = self.ini;
                                    var $2514 = self.idx;
                                    var $2515 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2501, $2511), $2512, $2513, $2514, $2515);
                                    var $2516 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_file$($2509));
                                    var $2510 = $2516;
                                    break;
                            };
                            var $2502 = $2510;
                            break;
                    };
                    var $2500 = $2502;
                    break;
            };
            return $2500;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2518 = self.err;
                    var _reply$8 = Kindelia$parse$eval$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2520 = self.err;
                            var self = $2518;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2522 = self.value;
                                    var $2523 = Parser$Reply$error$(Parser$Error$combine$($2522, $2520));
                                    var $2521 = $2523;
                                    break;
                                case 'Maybe.none':
                                    var $2524 = Parser$Reply$error$($2520);
                                    var $2521 = $2524;
                                    break;
                            };
                            var $2519 = $2521;
                            break;
                        case 'Parser.Reply.value':
                            var $2525 = self.pst;
                            var $2526 = self.val;
                            var self = $2525;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2528 = self.err;
                                    var $2529 = self.nam;
                                    var $2530 = self.ini;
                                    var $2531 = self.idx;
                                    var $2532 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2518, $2528), $2529, $2530, $2531, $2532);
                                    var $2533 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_eval$($2526));
                                    var $2527 = $2533;
                                    break;
                            };
                            var $2519 = $2527;
                            break;
                    };
                    var $2517 = $2519;
                    break;
            };
            return $2517;
        }), List$nil)))));
        return $2465;
    };
    const Kindelia$parse$transaction = x0 => Kindelia$parse$transaction$(x0);

    function Kindelia$parse$block$(_world$1) {
        var $2534 = Parser$until$(Kindelia$parse$text("save"), Kindelia$parse$transaction$(_world$1));
        return $2534;
    };
    const Kindelia$parse$block = x0 => Kindelia$parse$block$(x0);

    function IO$(_A$1) {
        var $2535 = null;
        return $2535;
    };
    const IO = x0 => IO$(x0);
    const Nat$ltn = a0 => a1 => (a0 < a1);

    function String$length$go$(_xs$1, _n$2) {
        var String$length$go$ = (_xs$1, _n$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _n$2]
        });
        var String$length$go = _xs$1 => _n$2 => String$length$go$(_xs$1, _n$2);
        var arg = [_xs$1, _n$2];
        while (true) {
            let [_xs$1, _n$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $2536 = _n$2;
                    return $2536;
                } else {
                    var $2537 = self.charCodeAt(0);
                    var $2538 = self.slice(1);
                    var $2539 = String$length$go$($2538, Nat$succ$(_n$2));
                    return $2539;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$length$go = x0 => x1 => String$length$go$(x0, x1);

    function String$length$(_xs$1) {
        var $2540 = String$length$go$(_xs$1, 0n);
        return $2540;
    };
    const String$length = x0 => String$length$(x0);

    function String$flatten$go$(_xs$1, _res$2) {
        var String$flatten$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$flatten$go = _xs$1 => _res$2 => String$flatten$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                switch (self._) {
                    case 'List.cons':
                        var $2541 = self.head;
                        var $2542 = self.tail;
                        var $2543 = String$flatten$go$($2542, (_res$2 + $2541));
                        return $2543;
                    case 'List.nil':
                        var $2544 = _res$2;
                        return $2544;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$flatten$go = x0 => x1 => String$flatten$go$(x0, x1);

    function String$flatten$(_xs$1) {
        var $2545 = String$flatten$go$(_xs$1, "");
        return $2545;
    };
    const String$flatten = x0 => String$flatten$(x0);

    function String$join$go$(_sep$1, _list$2, _fst$3) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $2547 = self.head;
                var $2548 = self.tail;
                var $2549 = String$flatten$(List$cons$((() => {
                    var self = _fst$3;
                    if (self) {
                        var $2550 = "";
                        return $2550;
                    } else {
                        var $2551 = _sep$1;
                        return $2551;
                    };
                })(), List$cons$($2547, List$cons$(String$join$go$(_sep$1, $2548, Bool$false), List$nil))));
                var $2546 = $2549;
                break;
            case 'List.nil':
                var $2552 = "";
                var $2546 = $2552;
                break;
        };
        return $2546;
    };
    const String$join$go = x0 => x1 => x2 => String$join$go$(x0, x1, x2);

    function String$join$(_sep$1, _list$2) {
        var $2553 = String$join$go$(_sep$1, _list$2, Bool$true);
        return $2553;
    };
    const String$join = x0 => x1 => String$join$(x0, x1);

    function Kind$Code$highlight$end$(_col$1, _row$2, _res$3) {
        var $2554 = String$join$("\u{a}", _res$3);
        return $2554;
    };
    const Kind$Code$highlight$end = x0 => x1 => x2 => Kind$Code$highlight$end$(x0, x1, x2);

    function Maybe$extract$(_m$2, _a$4, _f$5) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $2556 = self.value;
                var $2557 = _f$5($2556);
                var $2555 = $2557;
                break;
            case 'Maybe.none':
                var $2558 = _a$4;
                var $2555 = $2558;
                break;
        };
        return $2555;
    };
    const Maybe$extract = x0 => x1 => x2 => Maybe$extract$(x0, x1, x2);

    function Nat$is_zero$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2560 = Bool$true;
            var $2559 = $2560;
        } else {
            var $2561 = (self - 1n);
            var $2562 = Bool$false;
            var $2559 = $2562;
        };
        return $2559;
    };
    const Nat$is_zero = x0 => Nat$is_zero$(x0);

    function Nat$double$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2564 = Nat$zero;
            var $2563 = $2564;
        } else {
            var $2565 = (self - 1n);
            var $2566 = Nat$succ$(Nat$succ$(Nat$double$($2565)));
            var $2563 = $2566;
        };
        return $2563;
    };
    const Nat$double = x0 => Nat$double$(x0);

    function Nat$pred$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2568 = Nat$zero;
            var $2567 = $2568;
        } else {
            var $2569 = (self - 1n);
            var $2570 = $2569;
            var $2567 = $2570;
        };
        return $2567;
    };
    const Nat$pred = x0 => Nat$pred$(x0);

    function String$reverse$go$(_xs$1, _res$2) {
        var String$reverse$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$reverse$go = _xs$1 => _res$2 => String$reverse$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $2571 = _res$2;
                    return $2571;
                } else {
                    var $2572 = self.charCodeAt(0);
                    var $2573 = self.slice(1);
                    var $2574 = String$reverse$go$($2573, String$cons$($2572, _res$2));
                    return $2574;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$reverse$go = x0 => x1 => String$reverse$go$(x0, x1);

    function String$reverse$(_xs$1) {
        var $2575 = String$reverse$go$(_xs$1, String$nil);
        return $2575;
    };
    const String$reverse = x0 => String$reverse$(x0);

    function String$pad_right$(_size$1, _chr$2, _str$3) {
        var self = _size$1;
        if (self === 0n) {
            var $2577 = _str$3;
            var $2576 = $2577;
        } else {
            var $2578 = (self - 1n);
            var self = _str$3;
            if (self.length === 0) {
                var $2580 = String$cons$(_chr$2, String$pad_right$($2578, _chr$2, ""));
                var $2579 = $2580;
            } else {
                var $2581 = self.charCodeAt(0);
                var $2582 = self.slice(1);
                var $2583 = String$cons$($2581, String$pad_right$($2578, _chr$2, $2582));
                var $2579 = $2583;
            };
            var $2576 = $2579;
        };
        return $2576;
    };
    const String$pad_right = x0 => x1 => x2 => String$pad_right$(x0, x1, x2);

    function String$pad_left$(_size$1, _chr$2, _str$3) {
        var $2584 = String$reverse$(String$pad_right$(_size$1, _chr$2, String$reverse$(_str$3)));
        return $2584;
    };
    const String$pad_left = x0 => x1 => x2 => String$pad_left$(x0, x1, x2);
    const Nat$lte = a0 => a1 => (a0 <= a1);
    const Nat$sub = a0 => a1 => (a0 - a1 <= 0n ? 0n : a0 - a1);

    function Nat$div_mod$go$(_n$1, _d$2, _r$3) {
        var Nat$div_mod$go$ = (_n$1, _d$2, _r$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _d$2, _r$3]
        });
        var Nat$div_mod$go = _n$1 => _d$2 => _r$3 => Nat$div_mod$go$(_n$1, _d$2, _r$3);
        var arg = [_n$1, _d$2, _r$3];
        while (true) {
            let [_n$1, _d$2, _r$3] = arg;
            var R = (() => {
                var self = (_n$1 <= _r$3);
                if (self) {
                    var $2585 = Nat$div_mod$go$(_n$1, Nat$succ$(_d$2), (_r$3 - _n$1 <= 0n ? 0n : _r$3 - _n$1));
                    return $2585;
                } else {
                    var $2586 = Pair$new$(_d$2, _r$3);
                    return $2586;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$div_mod$go = x0 => x1 => x2 => Nat$div_mod$go$(x0, x1, x2);
    const Nat$div_mod = a0 => a1 => (({
        _: 'Pair.new',
        'fst': a0 / a1,
        'snd': a0 % a1
    }));

    function Nat$to_base$go$(_base$1, _nat$2, _res$3) {
        var Nat$to_base$go$ = (_base$1, _nat$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_base$1, _nat$2, _res$3]
        });
        var Nat$to_base$go = _base$1 => _nat$2 => _res$3 => Nat$to_base$go$(_base$1, _nat$2, _res$3);
        var arg = [_base$1, _nat$2, _res$3];
        while (true) {
            let [_base$1, _nat$2, _res$3] = arg;
            var R = (() => {
                var self = (({
                    _: 'Pair.new',
                    'fst': _nat$2 / _base$1,
                    'snd': _nat$2 % _base$1
                }));
                switch (self._) {
                    case 'Pair.new':
                        var $2587 = self.fst;
                        var $2588 = self.snd;
                        var self = $2587;
                        if (self === 0n) {
                            var $2590 = List$cons$($2588, _res$3);
                            var $2589 = $2590;
                        } else {
                            var $2591 = (self - 1n);
                            var $2592 = Nat$to_base$go$(_base$1, $2587, List$cons$($2588, _res$3));
                            var $2589 = $2592;
                        };
                        return $2589;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$to_base$go = x0 => x1 => x2 => Nat$to_base$go$(x0, x1, x2);

    function Nat$to_base$(_base$1, _nat$2) {
        var $2593 = Nat$to_base$go$(_base$1, _nat$2, List$nil);
        return $2593;
    };
    const Nat$to_base = x0 => x1 => Nat$to_base$(x0, x1);

    function Pair$snd$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $2595 = self.snd;
                var $2596 = $2595;
                var $2594 = $2596;
                break;
        };
        return $2594;
    };
    const Pair$snd = x0 => Pair$snd$(x0);
    const Nat$mod = a0 => a1 => (a0 % a1);

    function List$at$(_index$2, _list$3) {
        var List$at$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$at = _index$2 => _list$3 => List$at$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $2597 = self.head;
                        var $2598 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $2600 = Maybe$some$($2597);
                            var $2599 = $2600;
                        } else {
                            var $2601 = (self - 1n);
                            var $2602 = List$at$($2601, $2598);
                            var $2599 = $2602;
                        };
                        return $2599;
                    case 'List.nil':
                        var $2603 = Maybe$none;
                        return $2603;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$at = x0 => x1 => List$at$(x0, x1);

    function Nat$show_digit$(_base$1, _n$2) {
        var _m$3 = (_n$2 % _base$1);
        var _base64$4 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$cons$(97, List$cons$(98, List$cons$(99, List$cons$(100, List$cons$(101, List$cons$(102, List$cons$(103, List$cons$(104, List$cons$(105, List$cons$(106, List$cons$(107, List$cons$(108, List$cons$(109, List$cons$(110, List$cons$(111, List$cons$(112, List$cons$(113, List$cons$(114, List$cons$(115, List$cons$(116, List$cons$(117, List$cons$(118, List$cons$(119, List$cons$(120, List$cons$(121, List$cons$(122, List$cons$(65, List$cons$(66, List$cons$(67, List$cons$(68, List$cons$(69, List$cons$(70, List$cons$(71, List$cons$(72, List$cons$(73, List$cons$(74, List$cons$(75, List$cons$(76, List$cons$(77, List$cons$(78, List$cons$(79, List$cons$(80, List$cons$(81, List$cons$(82, List$cons$(83, List$cons$(84, List$cons$(85, List$cons$(86, List$cons$(87, List$cons$(88, List$cons$(89, List$cons$(90, List$cons$(43, List$cons$(47, List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
        var self = ((_base$1 > 0n) && (_base$1 <= 64n));
        if (self) {
            var self = List$at$(_m$3, _base64$4);
            switch (self._) {
                case 'Maybe.some':
                    var $2606 = self.value;
                    var $2607 = $2606;
                    var $2605 = $2607;
                    break;
                case 'Maybe.none':
                    var $2608 = 35;
                    var $2605 = $2608;
                    break;
            };
            var $2604 = $2605;
        } else {
            var $2609 = 35;
            var $2604 = $2609;
        };
        return $2604;
    };
    const Nat$show_digit = x0 => x1 => Nat$show_digit$(x0, x1);

    function Nat$to_string_base$(_base$1, _nat$2) {
        var $2610 = List$fold$(Nat$to_base$(_base$1, _nat$2), String$nil, (_n$3 => _str$4 => {
            var $2611 = String$cons$(Nat$show_digit$(_base$1, _n$3), _str$4);
            return $2611;
        }));
        return $2610;
    };
    const Nat$to_string_base = x0 => x1 => Nat$to_string_base$(x0, x1);

    function Nat$show$(_n$1) {
        var $2612 = Nat$to_string_base$(10n, _n$1);
        return $2612;
    };
    const Nat$show = x0 => Nat$show$(x0);
    const Bool$not = a0 => (!a0);

    function U16$new$(_value$1) {
        var $2613 = word_to_u16(_value$1);
        return $2613;
    };
    const U16$new = x0 => U16$new$(x0);
    const Nat$to_u16 = a0 => (Number(a0) & 0xFFFF);

    function Kind$Code$color$(_col$1, _str$2) {
        var $2614 = String$cons$(27, ("[" + (_col$1 + ("m" + (_str$2 + String$cons$(27, "[0m"))))));
        return $2614;
    };
    const Kind$Code$color = x0 => x1 => Kind$Code$color$(x0, x1);
    const Nat$eql = a0 => a1 => (a0 === a1);

    function List$take$(_n$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $2616 = self.head;
                var $2617 = self.tail;
                var self = _n$2;
                if (self === 0n) {
                    var $2619 = List$nil;
                    var $2618 = $2619;
                } else {
                    var $2620 = (self - 1n);
                    var $2621 = List$cons$($2616, List$take$($2620, $2617));
                    var $2618 = $2621;
                };
                var $2615 = $2618;
                break;
            case 'List.nil':
                var $2622 = List$nil;
                var $2615 = $2622;
                break;
        };
        return $2615;
    };
    const List$take = x0 => x1 => List$take$(x0, x1);

    function Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) {
        var Kind$Code$highlight$go$ = (_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) => ({
            ctr: 'TCO',
            arg: [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9]
        });
        var Kind$Code$highlight$go = _code$1 => _ixi$2 => _ix0$3 => _ix1$4 => _col$5 => _row$6 => _lft$7 => _lin$8 => _res$9 => Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9);
        var arg = [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9];
        while (true) {
            let [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9] = arg;
            var R = (() => {
                var _spa$10 = 3n;
                var self = _code$1;
                if (self.length === 0) {
                    var $2624 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                    var $2623 = $2624;
                } else {
                    var $2625 = self.charCodeAt(0);
                    var $2626 = self.slice(1);
                    var self = ($2625 === 10);
                    if (self) {
                        var _stp$13 = Maybe$extract$(_lft$7, Bool$false, Nat$is_zero);
                        var self = _stp$13;
                        if (self) {
                            var $2629 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                            var $2628 = $2629;
                        } else {
                            var _siz$14 = Nat$succ$(Nat$double$(_spa$10));
                            var self = _ix1$4;
                            if (self === 0n) {
                                var self = _lft$7;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $2632 = self.value;
                                        var $2633 = Maybe$some$(Nat$pred$($2632));
                                        var $2631 = $2633;
                                        break;
                                    case 'Maybe.none':
                                        var $2634 = Maybe$some$(_spa$10);
                                        var $2631 = $2634;
                                        break;
                                };
                                var _lft$15 = $2631;
                            } else {
                                var $2635 = (self - 1n);
                                var $2636 = _lft$7;
                                var _lft$15 = $2636;
                            };
                            var _ixi$16 = Nat$pred$(_ixi$2);
                            var _ix0$17 = Nat$pred$(_ix0$3);
                            var _ix1$18 = Nat$pred$(_ix1$4);
                            var _col$19 = 0n;
                            var _row$20 = Nat$succ$(_row$6);
                            var _res$21 = List$cons$(String$reverse$(_lin$8), _res$9);
                            var _lin$22 = String$reverse$(String$flatten$(List$cons$(String$pad_left$(4n, 32, Nat$show$(_row$20)), List$cons$(" | ", List$nil))));
                            var $2630 = Kind$Code$highlight$go$($2626, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$20, _lft$15, _lin$22, _res$21);
                            var $2628 = $2630;
                        };
                        var $2627 = $2628;
                    } else {
                        var _chr$13 = String$cons$($2625, String$nil);
                        var self = (Nat$is_zero$(_ix0$3) && (!Nat$is_zero$(_ix1$4)));
                        if (self) {
                            var $2638 = String$reverse$(Kind$Code$color$("41", Kind$Code$color$("37", _chr$13)));
                            var _chr$14 = $2638;
                        } else {
                            var self = (Nat$is_zero$(_ixi$2) && (!Nat$is_zero$(_ix1$4)));
                            if (self) {
                                var $2640 = String$reverse$(Kind$Code$color$("31", Kind$Code$color$("4", _chr$13)));
                                var $2639 = $2640;
                            } else {
                                var $2641 = _chr$13;
                                var $2639 = $2641;
                            };
                            var _chr$14 = $2639;
                        };
                        var self = (_ix0$3 === 1n);
                        if (self) {
                            var $2642 = List$take$(_spa$10, _res$9);
                            var _res$15 = $2642;
                        } else {
                            var $2643 = _res$9;
                            var _res$15 = $2643;
                        };
                        var _ixi$16 = Nat$pred$(_ixi$2);
                        var _ix0$17 = Nat$pred$(_ix0$3);
                        var _ix1$18 = Nat$pred$(_ix1$4);
                        var _col$19 = Nat$succ$(_col$5);
                        var _lin$20 = String$flatten$(List$cons$(_chr$14, List$cons$(_lin$8, List$nil)));
                        var $2637 = Kind$Code$highlight$go$($2626, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$6, _lft$7, _lin$20, _res$15);
                        var $2627 = $2637;
                    };
                    var $2623 = $2627;
                };
                return $2623;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$highlight$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Code$highlight$go$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Code$highlight$(_code$1, _init$2, _idx0$3, _idx1$4) {
        var $2644 = Kind$Code$highlight$go$((_code$1 + " \u{a}"), _init$2, _idx0$3, _idx1$4, 0n, 1n, Maybe$none, String$reverse$("   1 | "), List$nil);
        return $2644;
    };
    const Kind$Code$highlight = x0 => x1 => x2 => x3 => Kind$Code$highlight$(x0, x1, x2, x3);

    function IO$ask$(_query$2, _param$3, _then$4) {
        var $2645 = ({
            _: 'IO.ask',
            'query': _query$2,
            'param': _param$3,
            'then': _then$4
        });
        return $2645;
    };
    const IO$ask = x0 => x1 => x2 => IO$ask$(x0, x1, x2);

    function IO$bind$(_a$3, _f$4) {
        var self = _a$3;
        switch (self._) {
            case 'IO.end':
                var $2647 = self.value;
                var $2648 = _f$4($2647);
                var $2646 = $2648;
                break;
            case 'IO.ask':
                var $2649 = self.query;
                var $2650 = self.param;
                var $2651 = self.then;
                var $2652 = IO$ask$($2649, $2650, (_x$8 => {
                    var $2653 = IO$bind$($2651(_x$8), _f$4);
                    return $2653;
                }));
                var $2646 = $2652;
                break;
        };
        return $2646;
    };
    const IO$bind = x0 => x1 => IO$bind$(x0, x1);

    function IO$end$(_value$2) {
        var $2654 = ({
            _: 'IO.end',
            'value': _value$2
        });
        return $2654;
    };
    const IO$end = x0 => IO$end$(x0);

    function IO$monad$(_new$2) {
        var $2655 = _new$2(IO$bind)(IO$end);
        return $2655;
    };
    const IO$monad = x0 => IO$monad$(x0);

    function IO$put_string$(_text$1) {
        var $2656 = IO$ask$("put_string", _text$1, (_skip$2 => {
            var $2657 = IO$end$(Unit$new);
            return $2657;
        }));
        return $2656;
    };
    const IO$put_string = x0 => IO$put_string$(x0);

    function IO$print$(_text$1) {
        var $2658 = IO$put_string$((_text$1 + "\u{a}"));
        return $2658;
    };
    const IO$print = x0 => IO$print$(x0);
    const Bits$e = '';
    const Bits$o = a0 => (a0 + '0');

    function Word$subber$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $2660 = self.pred;
                var $2661 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2663 = self.pred;
                            var $2664 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2666 = Word$i$(Word$subber$(_a$pred$10, $2663, Bool$true));
                                    var $2665 = $2666;
                                } else {
                                    var $2667 = Word$o$(Word$subber$(_a$pred$10, $2663, Bool$false));
                                    var $2665 = $2667;
                                };
                                return $2665;
                            });
                            var $2662 = $2664;
                            break;
                        case 'Word.i':
                            var $2668 = self.pred;
                            var $2669 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2671 = Word$o$(Word$subber$(_a$pred$10, $2668, Bool$true));
                                    var $2670 = $2671;
                                } else {
                                    var $2672 = Word$i$(Word$subber$(_a$pred$10, $2668, Bool$true));
                                    var $2670 = $2672;
                                };
                                return $2670;
                            });
                            var $2662 = $2669;
                            break;
                        case 'Word.e':
                            var $2673 = (_a$pred$8 => {
                                var $2674 = Word$e;
                                return $2674;
                            });
                            var $2662 = $2673;
                            break;
                    };
                    var $2662 = $2662($2660);
                    return $2662;
                });
                var $2659 = $2661;
                break;
            case 'Word.i':
                var $2675 = self.pred;
                var $2676 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2678 = self.pred;
                            var $2679 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2681 = Word$o$(Word$subber$(_a$pred$10, $2678, Bool$false));
                                    var $2680 = $2681;
                                } else {
                                    var $2682 = Word$i$(Word$subber$(_a$pred$10, $2678, Bool$false));
                                    var $2680 = $2682;
                                };
                                return $2680;
                            });
                            var $2677 = $2679;
                            break;
                        case 'Word.i':
                            var $2683 = self.pred;
                            var $2684 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2686 = Word$i$(Word$subber$(_a$pred$10, $2683, Bool$true));
                                    var $2685 = $2686;
                                } else {
                                    var $2687 = Word$o$(Word$subber$(_a$pred$10, $2683, Bool$false));
                                    var $2685 = $2687;
                                };
                                return $2685;
                            });
                            var $2677 = $2684;
                            break;
                        case 'Word.e':
                            var $2688 = (_a$pred$8 => {
                                var $2689 = Word$e;
                                return $2689;
                            });
                            var $2677 = $2688;
                            break;
                    };
                    var $2677 = $2677($2675);
                    return $2677;
                });
                var $2659 = $2676;
                break;
            case 'Word.e':
                var $2690 = (_b$5 => {
                    var $2691 = Word$e;
                    return $2691;
                });
                var $2659 = $2690;
                break;
        };
        var $2659 = $2659(_b$3);
        return $2659;
    };
    const Word$subber = x0 => x1 => x2 => Word$subber$(x0, x1, x2);

    function Word$sub$(_a$2, _b$3) {
        var $2692 = Word$subber$(_a$2, _b$3, Bool$false);
        return $2692;
    };
    const Word$sub = x0 => x1 => Word$sub$(x0, x1);
    const U16$sub = a0 => a1 => ((a0 - a1) & 0xFFFF);

    function Word$adder$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $2694 = self.pred;
                var $2695 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2697 = self.pred;
                            var $2698 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2700 = Word$i$(Word$adder$(_a$pred$10, $2697, Bool$false));
                                    var $2699 = $2700;
                                } else {
                                    var $2701 = Word$o$(Word$adder$(_a$pred$10, $2697, Bool$false));
                                    var $2699 = $2701;
                                };
                                return $2699;
                            });
                            var $2696 = $2698;
                            break;
                        case 'Word.i':
                            var $2702 = self.pred;
                            var $2703 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2705 = Word$o$(Word$adder$(_a$pred$10, $2702, Bool$true));
                                    var $2704 = $2705;
                                } else {
                                    var $2706 = Word$i$(Word$adder$(_a$pred$10, $2702, Bool$false));
                                    var $2704 = $2706;
                                };
                                return $2704;
                            });
                            var $2696 = $2703;
                            break;
                        case 'Word.e':
                            var $2707 = (_a$pred$8 => {
                                var $2708 = Word$e;
                                return $2708;
                            });
                            var $2696 = $2707;
                            break;
                    };
                    var $2696 = $2696($2694);
                    return $2696;
                });
                var $2693 = $2695;
                break;
            case 'Word.i':
                var $2709 = self.pred;
                var $2710 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2712 = self.pred;
                            var $2713 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2715 = Word$o$(Word$adder$(_a$pred$10, $2712, Bool$true));
                                    var $2714 = $2715;
                                } else {
                                    var $2716 = Word$i$(Word$adder$(_a$pred$10, $2712, Bool$false));
                                    var $2714 = $2716;
                                };
                                return $2714;
                            });
                            var $2711 = $2713;
                            break;
                        case 'Word.i':
                            var $2717 = self.pred;
                            var $2718 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2720 = Word$i$(Word$adder$(_a$pred$10, $2717, Bool$true));
                                    var $2719 = $2720;
                                } else {
                                    var $2721 = Word$o$(Word$adder$(_a$pred$10, $2717, Bool$true));
                                    var $2719 = $2721;
                                };
                                return $2719;
                            });
                            var $2711 = $2718;
                            break;
                        case 'Word.e':
                            var $2722 = (_a$pred$8 => {
                                var $2723 = Word$e;
                                return $2723;
                            });
                            var $2711 = $2722;
                            break;
                    };
                    var $2711 = $2711($2709);
                    return $2711;
                });
                var $2693 = $2710;
                break;
            case 'Word.e':
                var $2724 = (_b$5 => {
                    var $2725 = Word$e;
                    return $2725;
                });
                var $2693 = $2724;
                break;
        };
        var $2693 = $2693(_b$3);
        return $2693;
    };
    const Word$adder = x0 => x1 => x2 => Word$adder$(x0, x1, x2);

    function Word$add$(_a$2, _b$3) {
        var $2726 = Word$adder$(_a$2, _b$3, Bool$false);
        return $2726;
    };
    const Word$add = x0 => x1 => Word$add$(x0, x1);
    const U16$add = a0 => a1 => ((a0 + a1) & 0xFFFF);

    function Pair$fst$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $2728 = self.fst;
                var $2729 = $2728;
                var $2727 = $2729;
                break;
        };
        return $2727;
    };
    const Pair$fst = x0 => Pair$fst$(x0);
    const Nat$div = a0 => a1 => (a0 / a1);
    const Bits$i = a0 => (a0 + '1');

    function Kindelia$serialize$fixlen$(_size$1, _value$2) {
        var self = _size$1;
        if (self === 0n) {
            var $2731 = Bits$e;
            var $2730 = $2731;
        } else {
            var $2732 = (self - 1n);
            var self = ((_value$2 % 2n) === 0n);
            if (self) {
                var $2734 = (Kindelia$serialize$fixlen$($2732, (_value$2 / 2n)) + '0');
                var $2733 = $2734;
            } else {
                var $2735 = (Kindelia$serialize$fixlen$($2732, (_value$2 / 2n)) + '1');
                var $2733 = $2735;
            };
            var $2730 = $2733;
        };
        return $2730;
    };
    const Kindelia$serialize$fixlen = x0 => x1 => Kindelia$serialize$fixlen$(x0, x1);

    function Word$fold$(_nil$3, _w0$4, _w1$5, _word$6) {
        var self = _word$6;
        switch (self._) {
            case 'Word.o':
                var $2737 = self.pred;
                var $2738 = _w0$4(Word$fold$(_nil$3, _w0$4, _w1$5, $2737));
                var $2736 = $2738;
                break;
            case 'Word.i':
                var $2739 = self.pred;
                var $2740 = _w1$5(Word$fold$(_nil$3, _w0$4, _w1$5, $2739));
                var $2736 = $2740;
                break;
            case 'Word.e':
                var $2741 = _nil$3;
                var $2736 = $2741;
                break;
        };
        return $2736;
    };
    const Word$fold = x0 => x1 => x2 => x3 => Word$fold$(x0, x1, x2, x3);

    function Word$to_nat$(_word$2) {
        var $2742 = Word$fold$(0n, a1 => (2n * a1), (_x$4 => {
            var $2743 = Nat$succ$((2n * _x$4));
            return $2743;
        }), _word$2);
        return $2742;
    };
    const Word$to_nat = x0 => Word$to_nat$(x0);
    const U16$to_nat = a0 => (BigInt(a0));
    const Bits$concat = a0 => a1 => (a1 + a0);

    function Kindelia$serialize$name$(_name$1) {
        var self = _name$1;
        if (self.length === 0) {
            var $2745 = (Bits$e + '0');
            var $2744 = $2745;
        } else {
            var $2746 = self.charCodeAt(0);
            var $2747 = self.slice(1);
            var self = U16$btw$(48, $2746, 57);
            if (self) {
                var $2749 = (($2746 - 48) & 0xFFFF);
                var _numb$4 = $2749;
            } else {
                var self = U16$btw$(65, $2746, 90);
                if (self) {
                    var $2751 = (((($2746 - 65) & 0xFFFF) + 10) & 0xFFFF);
                    var $2750 = $2751;
                } else {
                    var self = U16$btw$(97, $2746, 122);
                    if (self) {
                        var $2753 = (((($2746 - 97) & 0xFFFF) + 36) & 0xFFFF);
                        var $2752 = $2753;
                    } else {
                        var self = U16$btw$(95, $2746, 95);
                        if (self) {
                            var $2755 = 62;
                            var $2754 = $2755;
                        } else {
                            var $2756 = 63;
                            var $2754 = $2756;
                        };
                        var $2752 = $2754;
                    };
                    var $2750 = $2752;
                };
                var _numb$4 = $2750;
            };
            var _head$5 = Kindelia$serialize$fixlen$(6n, (BigInt(_numb$4)));
            var _tail$6 = Kindelia$serialize$name$($2747);
            var $2748 = ((_tail$6 + _head$5) + '1');
            var $2744 = $2748;
        };
        return $2744;
    };
    const Kindelia$serialize$name = x0 => Kindelia$serialize$name$(x0);

    function Kindelia$serialize$list$(_item$2, _list$3) {
        var self = _list$3;
        switch (self._) {
            case 'List.cons':
                var $2758 = self.head;
                var $2759 = self.tail;
                var $2760 = ((Kindelia$serialize$list$(_item$2, $2759) + _item$2($2758)) + '1');
                var $2757 = $2760;
                break;
            case 'List.nil':
                var $2761 = (Bits$e + '0');
                var $2757 = $2761;
                break;
        };
        return $2757;
    };
    const Kindelia$serialize$list = x0 => x1 => Kindelia$serialize$list$(x0, x1);

    function Kindelia$serialize$pair$(_first$3, _second$4, _pair$5) {
        var self = _pair$5;
        switch (self._) {
            case 'Pair.new':
                var $2763 = self.fst;
                var $2764 = self.snd;
                var _fst$8 = _first$3($2763);
                var _snd$9 = _second$4($2764);
                var $2765 = (_snd$9 + _fst$8);
                var $2762 = $2765;
                break;
        };
        return $2762;
    };
    const Kindelia$serialize$pair = x0 => x1 => x2 => Kindelia$serialize$pair$(x0, x1, x2);

    function Kindelia$serialize$type$(_world$1, _typ$2) {
        var self = _typ$2;
        switch (self._) {
            case 'Kindelia.Type.data':
                var $2767 = self.name;
                var $2768 = ((Kindelia$serialize$name$($2767) + '0') + '1');
                var $2766 = $2768;
                break;
            case 'Kindelia.Type.effe':
                var $2769 = self.rety;
                var $2770 = ((Kindelia$serialize$type$(_world$1, $2769) + '1') + '0');
                var $2766 = $2770;
                break;
            case 'Kindelia.Type.word':
                var $2771 = ((Bits$e + '0') + '0');
                var $2766 = $2771;
                break;
        };
        return $2766;
    };
    const Kindelia$serialize$type = x0 => x1 => Kindelia$serialize$type$(x0, x1);

    function Kindelia$serialize$constructor$(_world$1, _ctor$2) {
        var self = _ctor$2;
        switch (self._) {
            case 'Kindelia.Constructor.new':
                var $2773 = self.name;
                var $2774 = self.fprm;
                var _name$5 = Kindelia$serialize$name$($2773);
                var _fprm$6 = Kindelia$serialize$list$(Kindelia$serialize$pair(Kindelia$serialize$name)(Kindelia$serialize$type(_world$1)), $2774);
                var $2775 = (_fprm$6 + _name$5);
                var $2772 = $2775;
                break;
        };
        return $2772;
    };
    const Kindelia$serialize$constructor = x0 => x1 => Kindelia$serialize$constructor$(x0, x1);

    function Kindelia$serialize$data$(_world$1, _data$2) {
        var self = _data$2;
        switch (self._) {
            case 'Kindelia.Data.new':
                var $2777 = self.name;
                var $2778 = self.constructors;
                var _name$5 = Kindelia$serialize$name$($2777);
                var _ctrs$6 = Kindelia$serialize$list$(Kindelia$serialize$constructor(_world$1), $2778);
                var $2779 = (_ctrs$6 + _name$5);
                var $2776 = $2779;
                break;
        };
        return $2776;
    };
    const Kindelia$serialize$data = x0 => x1 => Kindelia$serialize$data$(x0, x1);

    function List$mapped$(_as$2, _f$4) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $2781 = self.head;
                var $2782 = self.tail;
                var $2783 = List$cons$(_f$4($2781), List$mapped$($2782, _f$4));
                var $2780 = $2783;
                break;
            case 'List.nil':
                var $2784 = List$nil;
                var $2780 = $2784;
                break;
        };
        return $2780;
    };
    const List$mapped = x0 => x1 => List$mapped$(x0, x1);

    function List$find_index$go$(_xs$2, _f$3, _i$4) {
        var List$find_index$go$ = (_xs$2, _f$3, _i$4) => ({
            ctr: 'TCO',
            arg: [_xs$2, _f$3, _i$4]
        });
        var List$find_index$go = _xs$2 => _f$3 => _i$4 => List$find_index$go$(_xs$2, _f$3, _i$4);
        var arg = [_xs$2, _f$3, _i$4];
        while (true) {
            let [_xs$2, _f$3, _i$4] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $2785 = self.head;
                        var $2786 = self.tail;
                        var self = _f$3($2785);
                        if (self) {
                            var $2788 = Maybe$some$(_i$4);
                            var $2787 = $2788;
                        } else {
                            var $2789 = List$find_index$go$($2786, _f$3, Nat$succ$(_i$4));
                            var $2787 = $2789;
                        };
                        return $2787;
                    case 'List.nil':
                        var $2790 = Maybe$none;
                        return $2790;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$find_index$go = x0 => x1 => x2 => List$find_index$go$(x0, x1, x2);

    function List$find_index$(_xs$2, _f$3) {
        var $2791 = List$find_index$go$(_xs$2, _f$3, Nat$zero);
        return $2791;
    };
    const List$find_index = x0 => x1 => List$find_index$(x0, x1);
    const String$eql = a0 => a1 => (a0 === a1);

    function Kindelia$serialize$varlen$go$(_value$1) {
        var self = _value$1;
        if (self === 0n) {
            var $2793 = Bits$e;
            var $2792 = $2793;
        } else {
            var $2794 = (self - 1n);
            var self = (_value$1 === 1n);
            if (self) {
                var $2796 = (Bits$e + '0');
                var $2795 = $2796;
            } else {
                var self = ((_value$1 % 2n) === 0n);
                if (self) {
                    var $2798 = ((Kindelia$serialize$varlen$go$((_value$1 / 2n)) + '0') + '1');
                    var $2797 = $2798;
                } else {
                    var $2799 = ((Kindelia$serialize$varlen$go$((_value$1 / 2n)) + '1') + '1');
                    var $2797 = $2799;
                };
                var $2795 = $2797;
            };
            var $2792 = $2795;
        };
        return $2792;
    };
    const Kindelia$serialize$varlen$go = x0 => Kindelia$serialize$varlen$go$(x0);

    function Kindelia$serialize$varlen$(_value$1) {
        var $2800 = Kindelia$serialize$varlen$go$((_value$1 + 1n));
        return $2800;
    };
    const Kindelia$serialize$varlen = x0 => Kindelia$serialize$varlen$(x0);

    function Kindelia$serialize$name$local$(_world$1, _vars$2, _name$3) {
        var self = List$find_index$(_vars$2, a1 => (_name$3 === a1));
        switch (self._) {
            case 'Maybe.some':
                var $2802 = self.value;
                var $2803 = Kindelia$serialize$varlen$($2802);
                var $2801 = $2803;
                break;
            case 'Maybe.none':
                var $2804 = Bits$e;
                var $2801 = $2804;
                break;
        };
        return $2801;
    };
    const Kindelia$serialize$name$local = x0 => x1 => x2 => Kindelia$serialize$name$local$(x0, x1, x2);

    function List$map$(_f$3, _as$4) {
        var self = _as$4;
        switch (self._) {
            case 'List.cons':
                var $2806 = self.head;
                var $2807 = self.tail;
                var $2808 = List$cons$(_f$3($2806), List$map$(_f$3, $2807));
                var $2805 = $2808;
                break;
            case 'List.nil':
                var $2809 = List$nil;
                var $2805 = $2809;
                break;
        };
        return $2805;
    };
    const List$map = x0 => x1 => List$map$(x0, x1);

    function List$concat$(_as$2, _bs$3) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $2811 = self.head;
                var $2812 = self.tail;
                var $2813 = List$cons$($2811, List$concat$($2812, _bs$3));
                var $2810 = $2813;
                break;
            case 'List.nil':
                var $2814 = _bs$3;
                var $2810 = $2814;
                break;
        };
        return $2810;
    };
    const List$concat = x0 => x1 => List$concat$(x0, x1);

    function Kindelia$serialize$cases$(_world$1, _vars$2, _name$3, _ctors$4, _cases$5) {
        var self = _ctors$4;
        switch (self._) {
            case 'List.cons':
                var $2816 = self.head;
                var $2817 = self.tail;
                var self = _cases$5;
                switch (self._) {
                    case 'List.cons':
                        var $2819 = self.head;
                        var $2820 = self.tail;
                        var _flds$10 = List$map$((_fprm$10 => {
                            var $2822 = (_name$3 + ("." + (() => {
                                var self = _fprm$10;
                                switch (self._) {
                                    case 'Pair.new':
                                        var $2823 = self.fst;
                                        var $2824 = $2823;
                                        return $2824;
                                };
                            })()));
                            return $2822;
                        }), (() => {
                            var self = $2816;
                            switch (self._) {
                                case 'Kindelia.Constructor.new':
                                    var $2825 = self.fprm;
                                    var $2826 = $2825;
                                    return $2826;
                            };
                        })());
                        var _head$11 = Kindelia$serialize$term$(_world$1, List$concat$(List$reverse$(_flds$10), _vars$2), $2819);
                        var _tail$12 = Kindelia$serialize$cases$(_world$1, _vars$2, _name$3, $2817, $2820);
                        var $2821 = (_tail$12 + _head$11);
                        var $2818 = $2821;
                        break;
                    case 'List.nil':
                        var $2827 = Bits$e;
                        var $2818 = $2827;
                        break;
                };
                var $2815 = $2818;
                break;
            case 'List.nil':
                var self = _cases$5;
                switch (self._) {
                    case 'List.nil':
                    case 'List.cons':
                        var $2829 = Bits$e;
                        var $2828 = $2829;
                        break;
                };
                var $2815 = $2828;
                break;
        };
        return $2815;
    };
    const Kindelia$serialize$cases = x0 => x1 => x2 => x3 => x4 => Kindelia$serialize$cases$(x0, x1, x2, x3, x4);

    function Kindelia$get_constructors$(_world$1, _name$2) {
        var self = Kindelia$get_data$(_world$1, _name$2);
        switch (self._) {
            case 'Maybe.some':
                var $2831 = self.value;
                var $2832 = Maybe$some$((() => {
                    var self = $2831;
                    switch (self._) {
                        case 'Kindelia.Data.new':
                            var $2833 = self.constructors;
                            var $2834 = $2833;
                            return $2834;
                    };
                })());
                var $2830 = $2832;
                break;
            case 'Maybe.none':
                var $2835 = Maybe$none;
                var $2830 = $2835;
                break;
        };
        return $2830;
    };
    const Kindelia$get_constructors = x0 => x1 => Kindelia$get_constructors$(x0, x1);
    const U64$to_nat = a0 => (a0);

    function Kindelia$serialize$term$(_world$1, _vars$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kindelia.Term.var':
                var $2837 = self.name;
                var $2838 = (Kindelia$serialize$name$local$(_world$1, _vars$2, $2837) + '0');
                var $2836 = $2838;
                break;
            case 'Kindelia.Term.call':
                var $2839 = self.bond;
                var $2840 = self.args;
                var _bond$6 = Kindelia$serialize$name$($2839);
                var _args$7 = Kindelia$serialize$list$(Kindelia$serialize$term(_world$1)(_vars$2), $2840);
                var $2841 = (((((_args$7 + _bond$6) + '0') + '0') + '1') + '1');
                var $2836 = $2841;
                break;
            case 'Kindelia.Term.let':
                var $2842 = self.name;
                var $2843 = self.type;
                var $2844 = self.expr;
                var $2845 = self.body;
                var _name$8 = Kindelia$serialize$name$($2842);
                var _type$9 = Kindelia$serialize$type$(_world$1, $2843);
                var _expr$10 = Kindelia$serialize$term$(_world$1, _vars$2, $2844);
                var _body$11 = Kindelia$serialize$term$(_world$1, List$cons$($2842, _vars$2), $2845);
                var $2846 = (((((((_body$11 + _expr$10) + _type$9) + _name$8) + '0') + '0') + '0') + '1');
                var $2836 = $2846;
                break;
            case 'Kindelia.Term.create':
                var $2847 = self.ctor;
                var $2848 = self.vals;
                var _ctor$6 = Kindelia$serialize$name$($2847);
                var _vals$7 = Kindelia$serialize$list$(Kindelia$serialize$term(_world$1)(_vars$2), $2848);
                var $2849 = (((((_vals$7 + _ctor$6) + '0') + '1') + '0') + '1');
                var $2836 = $2849;
                break;
            case 'Kindelia.Term.match':
                var $2850 = self.name;
                var $2851 = self.data;
                var $2852 = self.cses;
                var _name$7 = Kindelia$serialize$name$local$(_world$1, _vars$2, $2850);
                var _data$8 = Kindelia$serialize$name$($2851);
                var _cses$9 = Kindelia$serialize$cases$(_world$1, _vars$2, $2850, Maybe$default$(Kindelia$get_constructors$(_world$1, $2851), List$nil), $2852);
                var $2853 = ((((((_cses$9 + _data$8) + _name$7) + '0') + '1') + '1') + '1');
                var $2836 = $2853;
                break;
            case 'Kindelia.Term.word':
                var $2854 = self.numb;
                var _numb$5 = Kindelia$serialize$fixlen$(64n, ($2854));
                var $2855 = ((((_numb$5 + '1') + '0') + '0') + '1');
                var $2836 = $2855;
                break;
            case 'Kindelia.Term.compare':
                var $2856 = self.val0;
                var $2857 = self.val1;
                var $2858 = self.iflt;
                var $2859 = self.ifeq;
                var $2860 = self.ifgt;
                var _val0$9 = Kindelia$serialize$term$(_world$1, _vars$2, $2856);
                var _val1$10 = Kindelia$serialize$term$(_world$1, _vars$2, $2857);
                var _iflt$11 = Kindelia$serialize$term$(_world$1, _vars$2, $2858);
                var _ifeq$12 = Kindelia$serialize$term$(_world$1, _vars$2, $2859);
                var _ifgt$13 = Kindelia$serialize$term$(_world$1, _vars$2, $2860);
                var $2861 = ((((((((_ifgt$13 + _ifeq$12) + _iflt$11) + _val1$10) + _val0$9) + '1') + '0') + '1') + '1');
                var $2836 = $2861;
                break;
            case 'Kindelia.Term.operate':
                var $2862 = self.oper;
                var $2863 = self.val0;
                var $2864 = self.val1;
                var _oper$7 = Kindelia$serialize$fixlen$(3n, (() => {
                    var self = $2862;
                    switch (self._) {
                        case 'Kindelia.Operation.add':
                            var $2866 = 0n;
                            return $2866;
                        case 'Kindelia.Operation.sub':
                            var $2867 = 1n;
                            return $2867;
                        case 'Kindelia.Operation.mul':
                            var $2868 = 2n;
                            return $2868;
                        case 'Kindelia.Operation.div':
                            var $2869 = 3n;
                            return $2869;
                        case 'Kindelia.Operation.mod':
                            var $2870 = 4n;
                            return $2870;
                        case 'Kindelia.Operation.or':
                            var $2871 = 5n;
                            return $2871;
                        case 'Kindelia.Operation.and':
                            var $2872 = 6n;
                            return $2872;
                        case 'Kindelia.Operation.xor':
                            var $2873 = 7n;
                            return $2873;
                    };
                })());
                var _val0$8 = Kindelia$serialize$term$(_world$1, _vars$2, $2863);
                var _val1$9 = Kindelia$serialize$term$(_world$1, _vars$2, $2864);
                var $2865 = ((((((_val1$9 + _val0$8) + _oper$7) + '1') + '1') + '0') + '1');
                var $2836 = $2865;
                break;
            case 'Kindelia.Term.set':
                var $2874 = self.file;
                var $2875 = self.expr;
                var $2876 = self.body;
                var _slit$7 = Kindelia$serialize$name$($2874);
                var _expr$8 = Kindelia$serialize$term$(_world$1, _vars$2, $2875);
                var _body$9 = Kindelia$serialize$term$(_world$1, _vars$2, $2876);
                var $2877 = ((((((((_body$9 + _expr$8) + _slit$7) + '0') + '0') + '1') + '1') + '1') + '1');
                var $2836 = $2877;
                break;
            case 'Kindelia.Term.get':
                var $2878 = self.name;
                var $2879 = self.file;
                var $2880 = self.body;
                var _slit$7 = Kindelia$serialize$name$($2879);
                var _name$8 = Kindelia$serialize$name$($2878);
                var _body$9 = Kindelia$serialize$term$(_world$1, List$cons$($2878, _vars$2), $2880);
                var $2881 = ((((((((_body$9 + _name$8) + _slit$7) + '0') + '1') + '1') + '1') + '1') + '1');
                var $2836 = $2881;
                break;
            case 'Kindelia.Term.bind':
                var $2882 = self.name;
                var $2883 = self.type;
                var $2884 = self.expr;
                var $2885 = self.body;
                var _name$8 = Kindelia$serialize$name$($2882);
                var _type$9 = Kindelia$serialize$type$(_world$1, $2883);
                var _expr$10 = Kindelia$serialize$term$(_world$1, _vars$2, $2884);
                var _body$11 = Kindelia$serialize$term$(_world$1, List$cons$($2882, _vars$2), $2885);
                var $2886 = (((((((((_body$11 + _expr$10) + _type$9) + _name$8) + '1') + '0') + '1') + '1') + '1') + '1');
                var $2836 = $2886;
                break;
            case 'Kindelia.Term.return':
                var $2887 = self.expr;
                var _expr$5 = Kindelia$serialize$term$(_world$1, _vars$2, $2887);
                var $2888 = ((((((_expr$5 + '1') + '1') + '1') + '1') + '1') + '1');
                var $2836 = $2888;
                break;
        };
        return $2836;
    };
    const Kindelia$serialize$term = x0 => x1 => x2 => Kindelia$serialize$term$(x0, x1, x2);

    function Kindelia$serialize$bond$(_world$1, _bond$2) {
        var self = _bond$2;
        switch (self._) {
            case 'Kindelia.Bond.new':
                var $2890 = self.name;
                var $2891 = self.iprm;
                var $2892 = self.otyp;
                var $2893 = self.main;
                var _name$7 = Kindelia$serialize$name$($2890);
                var _iprm$8 = Kindelia$serialize$list$(Kindelia$serialize$pair(Kindelia$serialize$name)(Kindelia$serialize$type(_world$1)), $2891);
                var _otyp$9 = Kindelia$serialize$type$(_world$1, $2892);
                var _inam$10 = List$reverse$(List$mapped$($2891, Pair$fst));
                var _main$11 = Kindelia$serialize$term$(_world$1, _inam$10, $2893);
                var $2894 = (((_main$11 + _otyp$9) + _iprm$8) + _name$7);
                var $2889 = $2894;
                break;
        };
        return $2889;
    };
    const Kindelia$serialize$bond = x0 => x1 => Kindelia$serialize$bond$(x0, x1);

    function Kindelia$serialize$file$(_world$1, _file$2) {
        var self = _file$2;
        switch (self._) {
            case 'Kindelia.File.new':
                var $2896 = self.name;
                var $2897 = self.ownr;
                var $2898 = self.type;
                var $2899 = self.expr;
                var _name$7 = Kindelia$serialize$name$($2896);
                var _ownr$8 = Kindelia$serialize$list$(Kindelia$serialize$name, $2897);
                var _type$9 = Kindelia$serialize$type$(_world$1, $2898);
                var _expr$10 = Kindelia$serialize$term$(_world$1, List$nil, $2899);
                var $2900 = (((_expr$10 + _type$9) + _ownr$8) + _name$7);
                var $2895 = $2900;
                break;
        };
        return $2895;
    };
    const Kindelia$serialize$file = x0 => x1 => Kindelia$serialize$file$(x0, x1);

    function Kindelia$serialize$eval$(_world$1, _eval$2) {
        var self = _eval$2;
        switch (self._) {
            case 'Kindelia.Eval.new':
                var $2902 = self.term;
                var $2903 = self.type;
                var _term$5 = Kindelia$serialize$term$(_world$1, List$nil, $2902);
                var _type$6 = Kindelia$serialize$type$(_world$1, $2903);
                var $2904 = (_type$6 + _term$5);
                var $2901 = $2904;
                break;
        };
        return $2901;
    };
    const Kindelia$serialize$eval = x0 => x1 => Kindelia$serialize$eval$(x0, x1);

    function Kindelia$serialize$transaction$(_world$1, _transaction$2) {
        var self = _transaction$2;
        switch (self._) {
            case 'Kindelia.Transaction.new_data':
                var $2906 = self.data;
                var _data$4 = Kindelia$serialize$data$(_world$1, $2906);
                var $2907 = ((_data$4 + '0') + '0');
                var $2905 = $2907;
                break;
            case 'Kindelia.Transaction.new_bond':
                var $2908 = self.bond;
                var _bond$4 = Kindelia$serialize$bond$(_world$1, $2908);
                var $2909 = ((_bond$4 + '0') + '1');
                var $2905 = $2909;
                break;
            case 'Kindelia.Transaction.new_file':
                var $2910 = self.file;
                var _file$4 = Kindelia$serialize$file$(_world$1, $2910);
                var $2911 = ((_file$4 + '1') + '0');
                var $2905 = $2911;
                break;
            case 'Kindelia.Transaction.new_eval':
                var $2912 = self.eval;
                var _term$4 = Kindelia$serialize$eval$(_world$1, $2912);
                var $2913 = ((_term$4 + '1') + '1');
                var $2905 = $2913;
                break;
        };
        return $2905;
    };
    const Kindelia$serialize$transaction = x0 => x1 => Kindelia$serialize$transaction$(x0, x1);

    function Kindelia$serialize$block$(_world$1, _block$2) {
        var self = _block$2;
        switch (self._) {
            case 'List.cons':
                var $2915 = self.head;
                var $2916 = self.tail;
                var _head$5 = Kindelia$serialize$transaction$(_world$1, $2915);
                var _tail$6 = Kindelia$serialize$block$(_world$1, $2916);
                var $2917 = (_tail$6 + _head$5);
                var $2914 = $2917;
                break;
            case 'List.nil':
                var $2918 = Bits$e;
                var $2914 = $2918;
                break;
        };
        return $2914;
    };
    const Kindelia$serialize$block = x0 => x1 => Kindelia$serialize$block$(x0, x1);

    function Bits$is_empty$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'e':
                var $2920 = Bool$true;
                var $2919 = $2920;
                break;
            case 'o':
            case 'i':
                var $2921 = Bool$false;
                var $2919 = $2921;
                break;
        };
        return $2919;
    };
    const Bits$is_empty = x0 => Bits$is_empty$(x0);

    function Kindelia$deserialize$fixlen$(_size$1, _bits$2) {
        var self = _size$1;
        if (self === 0n) {
            var $2923 = Pair$new$(_bits$2, 0n);
            var $2922 = $2923;
        } else {
            var $2924 = (self - 1n);
            var self = _bits$2;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $2926 = self.slice(0, -1);
                    var self = Kindelia$deserialize$fixlen$($2924, $2926);
                    switch (self._) {
                        case 'Pair.new':
                            var $2928 = self.fst;
                            var $2929 = self.snd;
                            var $2930 = Pair$new$($2928, ($2929 * 2n));
                            var $2927 = $2930;
                            break;
                    };
                    var $2925 = $2927;
                    break;
                case 'i':
                    var $2931 = self.slice(0, -1);
                    var self = Kindelia$deserialize$fixlen$($2924, $2931);
                    switch (self._) {
                        case 'Pair.new':
                            var $2933 = self.fst;
                            var $2934 = self.snd;
                            var $2935 = Pair$new$($2933, (($2934 * 2n) + 1n));
                            var $2932 = $2935;
                            break;
                    };
                    var $2925 = $2932;
                    break;
                case 'e':
                    var $2936 = Pair$new$(Bits$e, 0n);
                    var $2925 = $2936;
                    break;
            };
            var $2922 = $2925;
        };
        return $2922;
    };
    const Kindelia$deserialize$fixlen = x0 => x1 => Kindelia$deserialize$fixlen$(x0, x1);
    const U16$from_nat = a0 => (Number(a0) & 0xFFFF);

    function Kindelia$deserialize$name$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2938 = self.slice(0, -1);
                var $2939 = Pair$new$($2938, "");
                var $2937 = $2939;
                break;
            case 'i':
                var $2940 = self.slice(0, -1);
                var self = Kindelia$deserialize$fixlen$(6n, $2940);
                switch (self._) {
                    case 'Pair.new':
                        var $2942 = self.fst;
                        var $2943 = self.snd;
                        var self = Kindelia$deserialize$name$($2942);
                        switch (self._) {
                            case 'Pair.new':
                                var $2945 = self.fst;
                                var $2946 = self.snd;
                                var _numb$7 = (Number($2943) & 0xFFFF);
                                var self = U16$btw$(0, _numb$7, 9);
                                if (self) {
                                    var $2948 = ((_numb$7 + 48) & 0xFFFF);
                                    var _head$8 = $2948;
                                } else {
                                    var self = U16$btw$(10, _numb$7, 35);
                                    if (self) {
                                        var $2950 = ((((_numb$7 - 10) & 0xFFFF) + 65) & 0xFFFF);
                                        var $2949 = $2950;
                                    } else {
                                        var self = U16$btw$(36, _numb$7, 61);
                                        if (self) {
                                            var $2952 = ((((_numb$7 - 36) & 0xFFFF) + 97) & 0xFFFF);
                                            var $2951 = $2952;
                                        } else {
                                            var self = U16$btw$(62, _numb$7, 62);
                                            if (self) {
                                                var $2954 = 95;
                                                var $2953 = $2954;
                                            } else {
                                                var $2955 = 46;
                                                var $2953 = $2955;
                                            };
                                            var $2951 = $2953;
                                        };
                                        var $2949 = $2951;
                                    };
                                    var _head$8 = $2949;
                                };
                                var $2947 = Pair$new$($2945, String$cons$(_head$8, $2946));
                                var $2944 = $2947;
                                break;
                        };
                        var $2941 = $2944;
                        break;
                };
                var $2937 = $2941;
                break;
            case 'e':
                var $2956 = Pair$new$(Bits$e, "");
                var $2937 = $2956;
                break;
        };
        return $2937;
    };
    const Kindelia$deserialize$name = x0 => Kindelia$deserialize$name$(x0);

    function Kindelia$deserialize$list$(_item$2, _bits$3) {
        var self = _bits$3;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2958 = self.slice(0, -1);
                var $2959 = Pair$new$($2958, List$nil);
                var $2957 = $2959;
                break;
            case 'i':
                var $2960 = self.slice(0, -1);
                var self = _item$2($2960);
                switch (self._) {
                    case 'Pair.new':
                        var $2962 = self.fst;
                        var $2963 = self.snd;
                        var self = Kindelia$deserialize$list$(_item$2, $2962);
                        switch (self._) {
                            case 'Pair.new':
                                var $2965 = self.fst;
                                var $2966 = self.snd;
                                var $2967 = Pair$new$($2965, List$cons$($2963, $2966));
                                var $2964 = $2967;
                                break;
                        };
                        var $2961 = $2964;
                        break;
                };
                var $2957 = $2961;
                break;
            case 'e':
                var $2968 = Pair$new$(Bits$e, List$nil);
                var $2957 = $2968;
                break;
        };
        return $2957;
    };
    const Kindelia$deserialize$list = x0 => x1 => Kindelia$deserialize$list$(x0, x1);

    function Kindelia$deserialize$pair$(_first$3, _second$4, _bits$5) {
        var self = _first$3(_bits$5);
        switch (self._) {
            case 'Pair.new':
                var $2970 = self.fst;
                var $2971 = self.snd;
                var self = _second$4($2970);
                switch (self._) {
                    case 'Pair.new':
                        var $2973 = self.fst;
                        var $2974 = self.snd;
                        var $2975 = Pair$new$($2973, Pair$new$($2971, $2974));
                        var $2972 = $2975;
                        break;
                };
                var $2969 = $2972;
                break;
        };
        return $2969;
    };
    const Kindelia$deserialize$pair = x0 => x1 => x2 => Kindelia$deserialize$pair$(x0, x1, x2);

    function Kindelia$deserialize$type$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$fixlen$(2n, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $2977 = self.fst;
                var $2978 = self.snd;
                var self = ($2978 === 0n);
                if (self) {
                    var $2980 = Pair$new$($2977, Kindelia$Type$word);
                    var $2979 = $2980;
                } else {
                    var self = ($2978 === 1n);
                    if (self) {
                        var self = Kindelia$deserialize$name$($2977);
                        switch (self._) {
                            case 'Pair.new':
                                var $2983 = self.fst;
                                var $2984 = self.snd;
                                var $2985 = Pair$new$($2983, Kindelia$Type$data$($2984));
                                var $2982 = $2985;
                                break;
                        };
                        var $2981 = $2982;
                    } else {
                        var self = ($2978 === 2n);
                        if (self) {
                            var self = Kindelia$deserialize$type$(_world$1, $2977);
                            switch (self._) {
                                case 'Pair.new':
                                    var $2988 = self.fst;
                                    var $2989 = self.snd;
                                    var $2990 = Pair$new$($2988, Kindelia$Type$effe$($2989));
                                    var $2987 = $2990;
                                    break;
                            };
                            var $2986 = $2987;
                        } else {
                            var $2991 = Pair$new$($2977, Kindelia$Type$word);
                            var $2986 = $2991;
                        };
                        var $2981 = $2986;
                    };
                    var $2979 = $2981;
                };
                var $2976 = $2979;
                break;
        };
        return $2976;
    };
    const Kindelia$deserialize$type = x0 => x1 => Kindelia$deserialize$type$(x0, x1);

    function Kindelia$deserialize$constructor$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $2993 = self.fst;
                var $2994 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$pair(Kindelia$deserialize$name)(Kindelia$deserialize$type(_world$1)), $2993);
                switch (self._) {
                    case 'Pair.new':
                        var $2996 = self.fst;
                        var $2997 = self.snd;
                        var $2998 = Pair$new$($2996, Kindelia$Constructor$new$($2994, $2997));
                        var $2995 = $2998;
                        break;
                };
                var $2992 = $2995;
                break;
        };
        return $2992;
    };
    const Kindelia$deserialize$constructor = x0 => x1 => Kindelia$deserialize$constructor$(x0, x1);

    function Kindelia$deserialize$data$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3000 = self.fst;
                var $3001 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$constructor(_world$1), $3000);
                switch (self._) {
                    case 'Pair.new':
                        var $3003 = self.fst;
                        var $3004 = self.snd;
                        var $3005 = Pair$new$($3003, Kindelia$Data$new$($3001, $3004));
                        var $3002 = $3005;
                        break;
                };
                var $2999 = $3002;
                break;
        };
        return $2999;
    };
    const Kindelia$deserialize$data = x0 => x1 => Kindelia$deserialize$data$(x0, x1);
    const U64$from_nat = a0 => (a0 & 0xFFFFFFFFFFFFFFFFn);

    function Kindelia$deserialize$varlen$go$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3007 = self.slice(0, -1);
                var $3008 = Pair$new$($3007, 1n);
                var $3006 = $3008;
                break;
            case 'i':
                var $3009 = self.slice(0, -1);
                var self = $3009;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3011 = self.slice(0, -1);
                        var self = Kindelia$deserialize$varlen$go$($3011);
                        switch (self._) {
                            case 'Pair.new':
                                var $3013 = self.fst;
                                var $3014 = self.snd;
                                var $3015 = Pair$new$($3013, ($3014 * 2n));
                                var $3012 = $3015;
                                break;
                        };
                        var $3010 = $3012;
                        break;
                    case 'i':
                        var $3016 = self.slice(0, -1);
                        var self = Kindelia$deserialize$varlen$go$($3016);
                        switch (self._) {
                            case 'Pair.new':
                                var $3018 = self.fst;
                                var $3019 = self.snd;
                                var $3020 = Pair$new$($3018, (($3019 * 2n) + 1n));
                                var $3017 = $3020;
                                break;
                        };
                        var $3010 = $3017;
                        break;
                    case 'e':
                        var $3021 = Pair$new$($3009, 0n);
                        var $3010 = $3021;
                        break;
                };
                var $3006 = $3010;
                break;
            case 'e':
                var $3022 = Pair$new$(Bits$e, 0n);
                var $3006 = $3022;
                break;
        };
        return $3006;
    };
    const Kindelia$deserialize$varlen$go = x0 => Kindelia$deserialize$varlen$go$(x0);

    function Kindelia$deserialize$varlen$(_bits$1) {
        var self = Kindelia$deserialize$varlen$go$(_bits$1);
        switch (self._) {
            case 'Pair.new':
                var $3024 = self.fst;
                var $3025 = self.snd;
                var $3026 = Pair$new$($3024, ($3025 - 1n <= 0n ? 0n : $3025 - 1n));
                var $3023 = $3026;
                break;
        };
        return $3023;
    };
    const Kindelia$deserialize$varlen = x0 => Kindelia$deserialize$varlen$(x0);

    function List$get$(_index$2, _list$3) {
        var List$get$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$get = _index$2 => _list$3 => List$get$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $3027 = self.head;
                        var $3028 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $3030 = Maybe$some$($3027);
                            var $3029 = $3030;
                        } else {
                            var $3031 = (self - 1n);
                            var $3032 = List$get$($3031, $3028);
                            var $3029 = $3032;
                        };
                        return $3029;
                    case 'List.nil':
                        var $3033 = Maybe$none;
                        return $3033;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$get = x0 => x1 => List$get$(x0, x1);

    function Kindelia$deserialize$name$local$(_world$1, _vars$2, _bits$3) {
        var self = Kindelia$deserialize$varlen$(_bits$3);
        switch (self._) {
            case 'Pair.new':
                var $3035 = self.fst;
                var $3036 = self.snd;
                var $3037 = Pair$new$($3035, Maybe$default$(List$get$($3036, _vars$2), ""));
                var $3034 = $3037;
                break;
        };
        return $3034;
    };
    const Kindelia$deserialize$name$local = x0 => x1 => x2 => Kindelia$deserialize$name$local$(x0, x1, x2);

    function Kindelia$deserialize$cases$(_world$1, _vars$2, _name$3, _ctors$4, _bits$5) {
        var self = _ctors$4;
        switch (self._) {
            case 'List.cons':
                var $3039 = self.head;
                var $3040 = self.tail;
                var _flds$8 = List$map$((_fprm$8 => {
                    var $3042 = (_name$3 + ("." + (() => {
                        var self = _fprm$8;
                        switch (self._) {
                            case 'Pair.new':
                                var $3043 = self.fst;
                                var $3044 = $3043;
                                return $3044;
                        };
                    })()));
                    return $3042;
                }), (() => {
                    var self = $3039;
                    switch (self._) {
                        case 'Kindelia.Constructor.new':
                            var $3045 = self.fprm;
                            var $3046 = $3045;
                            return $3046;
                    };
                })());
                var self = Kindelia$deserialize$term$(_world$1, List$concat$(List$reverse$(_flds$8), _vars$2), _bits$5);
                switch (self._) {
                    case 'Pair.new':
                        var $3047 = self.fst;
                        var $3048 = self.snd;
                        var self = Kindelia$deserialize$cases$(_world$1, _vars$2, _name$3, $3040, $3047);
                        switch (self._) {
                            case 'Pair.new':
                                var $3050 = self.fst;
                                var $3051 = self.snd;
                                var $3052 = Pair$new$($3050, List$cons$($3048, $3051));
                                var $3049 = $3052;
                                break;
                        };
                        var $3041 = $3049;
                        break;
                };
                var $3038 = $3041;
                break;
            case 'List.nil':
                var $3053 = Pair$new$(_bits$5, List$nil);
                var $3038 = $3053;
                break;
        };
        return $3038;
    };
    const Kindelia$deserialize$cases = x0 => x1 => x2 => x3 => x4 => Kindelia$deserialize$cases$(x0, x1, x2, x3, x4);

    function Kindelia$deserialize$term$(_world$1, _vars$2, _bits$3) {
        var self = _bits$3;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3055 = self.slice(0, -1);
                var self = Kindelia$deserialize$name$local$(_world$1, _vars$2, $3055);
                switch (self._) {
                    case 'Pair.new':
                        var $3057 = self.fst;
                        var $3058 = self.snd;
                        var $3059 = Pair$new$($3057, Kindelia$Term$var$($3058));
                        var $3056 = $3059;
                        break;
                };
                var $3054 = $3056;
                break;
            case 'i':
                var $3060 = self.slice(0, -1);
                var self = Kindelia$deserialize$fixlen$(3n, $3060);
                switch (self._) {
                    case 'Pair.new':
                        var $3062 = self.fst;
                        var $3063 = self.snd;
                        var self = ($3063 === 0n);
                        if (self) {
                            var self = Kindelia$deserialize$name$($3062);
                            switch (self._) {
                                case 'Pair.new':
                                    var $3066 = self.fst;
                                    var $3067 = self.snd;
                                    var self = Kindelia$deserialize$type$(_world$1, $3066);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3069 = self.fst;
                                            var $3070 = self.snd;
                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3069);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3072 = self.fst;
                                                    var $3073 = self.snd;
                                                    var self = Kindelia$deserialize$term$(_world$1, List$cons$($3067, _vars$2), $3072);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3075 = self.fst;
                                                            var $3076 = self.snd;
                                                            var $3077 = Pair$new$($3075, Kindelia$Term$let$($3067, $3070, $3073, $3076));
                                                            var $3074 = $3077;
                                                            break;
                                                    };
                                                    var $3071 = $3074;
                                                    break;
                                            };
                                            var $3068 = $3071;
                                            break;
                                    };
                                    var $3065 = $3068;
                                    break;
                            };
                            var $3064 = $3065;
                        } else {
                            var self = ($3063 === 1n);
                            if (self) {
                                var self = Kindelia$deserialize$name$($3062);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3080 = self.fst;
                                        var $3081 = self.snd;
                                        var self = Kindelia$deserialize$list$(Kindelia$deserialize$term(_world$1)(_vars$2), $3080);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3083 = self.fst;
                                                var $3084 = self.snd;
                                                var $3085 = Pair$new$($3083, Kindelia$Term$call$($3081, $3084));
                                                var $3082 = $3085;
                                                break;
                                        };
                                        var $3079 = $3082;
                                        break;
                                };
                                var $3078 = $3079;
                            } else {
                                var self = ($3063 === 2n);
                                if (self) {
                                    var self = Kindelia$deserialize$name$($3062);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3088 = self.fst;
                                            var $3089 = self.snd;
                                            var self = Kindelia$deserialize$list$(Kindelia$deserialize$term(_world$1)(_vars$2), $3088);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3091 = self.fst;
                                                    var $3092 = self.snd;
                                                    var $3093 = Pair$new$($3091, Kindelia$Term$create$($3089, $3092));
                                                    var $3090 = $3093;
                                                    break;
                                            };
                                            var $3087 = $3090;
                                            break;
                                    };
                                    var $3086 = $3087;
                                } else {
                                    var self = ($3063 === 3n);
                                    if (self) {
                                        var self = Kindelia$deserialize$name$local$(_world$1, _vars$2, $3062);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3096 = self.fst;
                                                var $3097 = self.snd;
                                                var self = Kindelia$deserialize$name$($3096);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3099 = self.fst;
                                                        var $3100 = self.snd;
                                                        var self = Kindelia$deserialize$cases$(_world$1, _vars$2, $3097, Maybe$default$(Kindelia$get_constructors$(_world$1, $3100), List$nil), $3099);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3102 = self.fst;
                                                                var $3103 = self.snd;
                                                                var $3104 = Pair$new$($3102, Kindelia$Term$match$($3097, $3100, $3103));
                                                                var $3101 = $3104;
                                                                break;
                                                        };
                                                        var $3098 = $3101;
                                                        break;
                                                };
                                                var $3095 = $3098;
                                                break;
                                        };
                                        var $3094 = $3095;
                                    } else {
                                        var self = ($3063 === 4n);
                                        if (self) {
                                            var self = Kindelia$deserialize$fixlen$(64n, $3062);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3107 = self.fst;
                                                    var $3108 = self.snd;
                                                    var $3109 = Pair$new$($3107, Kindelia$Term$word$(($3108 & 0xFFFFFFFFFFFFFFFFn)));
                                                    var $3106 = $3109;
                                                    break;
                                            };
                                            var $3105 = $3106;
                                        } else {
                                            var self = ($3063 === 5n);
                                            if (self) {
                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3062);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3112 = self.fst;
                                                        var $3113 = self.snd;
                                                        var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3112);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3115 = self.fst;
                                                                var $3116 = self.snd;
                                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3115);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $3118 = self.fst;
                                                                        var $3119 = self.snd;
                                                                        var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3118);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3121 = self.fst;
                                                                                var $3122 = self.snd;
                                                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3121);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3124 = self.fst;
                                                                                        var $3125 = self.snd;
                                                                                        var $3126 = Pair$new$($3124, Kindelia$Term$compare$($3113, $3116, $3119, $3122, $3125));
                                                                                        var $3123 = $3126;
                                                                                        break;
                                                                                };
                                                                                var $3120 = $3123;
                                                                                break;
                                                                        };
                                                                        var $3117 = $3120;
                                                                        break;
                                                                };
                                                                var $3114 = $3117;
                                                                break;
                                                        };
                                                        var $3111 = $3114;
                                                        break;
                                                };
                                                var $3110 = $3111;
                                            } else {
                                                var self = ($3063 === 6n);
                                                if (self) {
                                                    var self = Kindelia$deserialize$fixlen$(3n, $3062);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3129 = self.fst;
                                                            var $3130 = self.snd;
                                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3129);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $3132 = self.fst;
                                                                    var $3133 = self.snd;
                                                                    var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3132);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $3135 = self.fst;
                                                                            var $3136 = self.snd;
                                                                            var self = ($3130 === 0n);
                                                                            if (self) {
                                                                                var $3138 = Kindelia$Operation$add;
                                                                                var _oper$13 = $3138;
                                                                            } else {
                                                                                var self = ($3130 === 1n);
                                                                                if (self) {
                                                                                    var $3140 = Kindelia$Operation$sub;
                                                                                    var $3139 = $3140;
                                                                                } else {
                                                                                    var self = ($3130 === 2n);
                                                                                    if (self) {
                                                                                        var $3142 = Kindelia$Operation$mul;
                                                                                        var $3141 = $3142;
                                                                                    } else {
                                                                                        var self = ($3130 === 3n);
                                                                                        if (self) {
                                                                                            var $3144 = Kindelia$Operation$div;
                                                                                            var $3143 = $3144;
                                                                                        } else {
                                                                                            var self = ($3130 === 4n);
                                                                                            if (self) {
                                                                                                var $3146 = Kindelia$Operation$mod;
                                                                                                var $3145 = $3146;
                                                                                            } else {
                                                                                                var self = ($3130 === 5n);
                                                                                                if (self) {
                                                                                                    var $3148 = Kindelia$Operation$or;
                                                                                                    var $3147 = $3148;
                                                                                                } else {
                                                                                                    var self = ($3130 === 6n);
                                                                                                    if (self) {
                                                                                                        var $3150 = Kindelia$Operation$and;
                                                                                                        var $3149 = $3150;
                                                                                                    } else {
                                                                                                        var self = ($3130 === 7n);
                                                                                                        if (self) {
                                                                                                            var $3152 = Kindelia$Operation$xor;
                                                                                                            var $3151 = $3152;
                                                                                                        } else {
                                                                                                            var $3153 = Kindelia$Operation$add;
                                                                                                            var $3151 = $3153;
                                                                                                        };
                                                                                                        var $3149 = $3151;
                                                                                                    };
                                                                                                    var $3147 = $3149;
                                                                                                };
                                                                                                var $3145 = $3147;
                                                                                            };
                                                                                            var $3143 = $3145;
                                                                                        };
                                                                                        var $3141 = $3143;
                                                                                    };
                                                                                    var $3139 = $3141;
                                                                                };
                                                                                var _oper$13 = $3139;
                                                                            };
                                                                            var $3137 = Pair$new$($3135, Kindelia$Term$operate$(_oper$13, $3133, $3136));
                                                                            var $3134 = $3137;
                                                                            break;
                                                                    };
                                                                    var $3131 = $3134;
                                                                    break;
                                                            };
                                                            var $3128 = $3131;
                                                            break;
                                                    };
                                                    var $3127 = $3128;
                                                } else {
                                                    var self = ($3063 === 7n);
                                                    if (self) {
                                                        var self = Kindelia$deserialize$fixlen$(2n, $3062);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3156 = self.fst;
                                                                var $3157 = self.snd;
                                                                var self = ($3157 === 0n);
                                                                if (self) {
                                                                    var self = Kindelia$deserialize$name$($3156);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $3160 = self.fst;
                                                                            var $3161 = self.snd;
                                                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3160);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $3163 = self.fst;
                                                                                    var $3164 = self.snd;
                                                                                    var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3163);
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $3166 = self.fst;
                                                                                            var $3167 = self.snd;
                                                                                            var $3168 = Pair$new$($3166, Kindelia$Term$set$($3161, $3164, $3167));
                                                                                            var $3165 = $3168;
                                                                                            break;
                                                                                    };
                                                                                    var $3162 = $3165;
                                                                                    break;
                                                                            };
                                                                            var $3159 = $3162;
                                                                            break;
                                                                    };
                                                                    var $3158 = $3159;
                                                                } else {
                                                                    var self = ($3157 === 1n);
                                                                    if (self) {
                                                                        var self = Kindelia$deserialize$name$($3156);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3171 = self.fst;
                                                                                var $3172 = self.snd;
                                                                                var self = Kindelia$deserialize$name$($3171);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3174 = self.fst;
                                                                                        var $3175 = self.snd;
                                                                                        var self = Kindelia$deserialize$term$(_world$1, List$cons$($3175, _vars$2), $3174);
                                                                                        switch (self._) {
                                                                                            case 'Pair.new':
                                                                                                var $3177 = self.fst;
                                                                                                var $3178 = self.snd;
                                                                                                var $3179 = Pair$new$($3177, Kindelia$Term$get$($3175, $3172, $3178));
                                                                                                var $3176 = $3179;
                                                                                                break;
                                                                                        };
                                                                                        var $3173 = $3176;
                                                                                        break;
                                                                                };
                                                                                var $3170 = $3173;
                                                                                break;
                                                                        };
                                                                        var $3169 = $3170;
                                                                    } else {
                                                                        var self = ($3157 === 2n);
                                                                        if (self) {
                                                                            var self = Kindelia$deserialize$name$($3156);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $3182 = self.fst;
                                                                                    var $3183 = self.snd;
                                                                                    var self = Kindelia$deserialize$type$(_world$1, $3182);
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $3185 = self.fst;
                                                                                            var $3186 = self.snd;
                                                                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3185);
                                                                                            switch (self._) {
                                                                                                case 'Pair.new':
                                                                                                    var $3188 = self.fst;
                                                                                                    var $3189 = self.snd;
                                                                                                    var self = Kindelia$deserialize$term$(_world$1, List$cons$($3183, _vars$2), $3188);
                                                                                                    switch (self._) {
                                                                                                        case 'Pair.new':
                                                                                                            var $3191 = self.fst;
                                                                                                            var $3192 = self.snd;
                                                                                                            var $3193 = Pair$new$($3191, Kindelia$Term$bind$($3183, $3186, $3189, $3192));
                                                                                                            var $3190 = $3193;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3187 = $3190;
                                                                                                    break;
                                                                                            };
                                                                                            var $3184 = $3187;
                                                                                            break;
                                                                                    };
                                                                                    var $3181 = $3184;
                                                                                    break;
                                                                            };
                                                                            var $3180 = $3181;
                                                                        } else {
                                                                            var self = ($3157 === 3n);
                                                                            if (self) {
                                                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3156);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3196 = self.fst;
                                                                                        var $3197 = self.snd;
                                                                                        var $3198 = Pair$new$($3196, Kindelia$Term$return$($3197));
                                                                                        var $3195 = $3198;
                                                                                        break;
                                                                                };
                                                                                var $3194 = $3195;
                                                                            } else {
                                                                                var $3199 = Pair$new$($3156, Kindelia$Term$word$(0n));
                                                                                var $3194 = $3199;
                                                                            };
                                                                            var $3180 = $3194;
                                                                        };
                                                                        var $3169 = $3180;
                                                                    };
                                                                    var $3158 = $3169;
                                                                };
                                                                var $3155 = $3158;
                                                                break;
                                                        };
                                                        var $3154 = $3155;
                                                    } else {
                                                        var $3200 = Pair$new$($3062, Kindelia$Term$word$(0n));
                                                        var $3154 = $3200;
                                                    };
                                                    var $3127 = $3154;
                                                };
                                                var $3110 = $3127;
                                            };
                                            var $3105 = $3110;
                                        };
                                        var $3094 = $3105;
                                    };
                                    var $3086 = $3094;
                                };
                                var $3078 = $3086;
                            };
                            var $3064 = $3078;
                        };
                        var $3061 = $3064;
                        break;
                };
                var $3054 = $3061;
                break;
            case 'e':
                var $3201 = Pair$new$(_bits$3, Kindelia$Term$word$(0n));
                var $3054 = $3201;
                break;
        };
        return $3054;
    };
    const Kindelia$deserialize$term = x0 => x1 => x2 => Kindelia$deserialize$term$(x0, x1, x2);

    function Kindelia$deserialize$bond$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3203 = self.fst;
                var $3204 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$pair(Kindelia$deserialize$name)(Kindelia$deserialize$type(_world$1)), $3203);
                switch (self._) {
                    case 'Pair.new':
                        var $3206 = self.fst;
                        var $3207 = self.snd;
                        var self = Kindelia$deserialize$type$(_world$1, $3206);
                        switch (self._) {
                            case 'Pair.new':
                                var $3209 = self.fst;
                                var $3210 = self.snd;
                                var _inam$9 = List$reverse$(List$mapped$($3207, Pair$fst));
                                var self = Kindelia$deserialize$term$(_world$1, _inam$9, $3209);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3212 = self.fst;
                                        var $3213 = self.snd;
                                        var $3214 = Pair$new$($3212, Kindelia$Bond$new$($3204, $3207, $3210, $3213));
                                        var $3211 = $3214;
                                        break;
                                };
                                var $3208 = $3211;
                                break;
                        };
                        var $3205 = $3208;
                        break;
                };
                var $3202 = $3205;
                break;
        };
        return $3202;
    };
    const Kindelia$deserialize$bond = x0 => x1 => Kindelia$deserialize$bond$(x0, x1);

    function Kindelia$deserialize$file$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3216 = self.fst;
                var $3217 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$name, $3216);
                switch (self._) {
                    case 'Pair.new':
                        var $3219 = self.fst;
                        var $3220 = self.snd;
                        var self = Kindelia$deserialize$type$(_world$1, $3219);
                        switch (self._) {
                            case 'Pair.new':
                                var $3222 = self.fst;
                                var $3223 = self.snd;
                                var self = Kindelia$deserialize$term$(_world$1, List$nil, $3222);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3225 = self.fst;
                                        var $3226 = self.snd;
                                        var $3227 = Pair$new$($3225, Kindelia$File$new$($3217, $3220, $3223, $3226));
                                        var $3224 = $3227;
                                        break;
                                };
                                var $3221 = $3224;
                                break;
                        };
                        var $3218 = $3221;
                        break;
                };
                var $3215 = $3218;
                break;
        };
        return $3215;
    };
    const Kindelia$deserialize$file = x0 => x1 => Kindelia$deserialize$file$(x0, x1);

    function Kindelia$deserialize$eval$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$term$(_world$1, List$nil, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3229 = self.fst;
                var $3230 = self.snd;
                var self = Kindelia$deserialize$type$(_world$1, $3229);
                switch (self._) {
                    case 'Pair.new':
                        var $3232 = self.fst;
                        var $3233 = self.snd;
                        var $3234 = Pair$new$($3232, Kindelia$Eval$new$($3230, $3233));
                        var $3231 = $3234;
                        break;
                };
                var $3228 = $3231;
                break;
        };
        return $3228;
    };
    const Kindelia$deserialize$eval = x0 => x1 => Kindelia$deserialize$eval$(x0, x1);

    function Kindelia$deserialize$transaction$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$fixlen$(2n, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3236 = self.fst;
                var $3237 = self.snd;
                var self = ($3237 === 0n);
                if (self) {
                    var self = Kindelia$deserialize$data$(_world$1, $3236);
                    switch (self._) {
                        case 'Pair.new':
                            var $3240 = self.fst;
                            var $3241 = self.snd;
                            var $3242 = Pair$new$($3240, Kindelia$Transaction$new_data$($3241));
                            var $3239 = $3242;
                            break;
                    };
                    var $3238 = $3239;
                } else {
                    var self = ($3237 === 1n);
                    if (self) {
                        var self = Kindelia$deserialize$bond$(_world$1, $3236);
                        switch (self._) {
                            case 'Pair.new':
                                var $3245 = self.fst;
                                var $3246 = self.snd;
                                var $3247 = Pair$new$($3245, Kindelia$Transaction$new_bond$($3246));
                                var $3244 = $3247;
                                break;
                        };
                        var $3243 = $3244;
                    } else {
                        var self = ($3237 === 2n);
                        if (self) {
                            var self = Kindelia$deserialize$file$(_world$1, $3236);
                            switch (self._) {
                                case 'Pair.new':
                                    var $3250 = self.fst;
                                    var $3251 = self.snd;
                                    var $3252 = Pair$new$($3250, Kindelia$Transaction$new_file$($3251));
                                    var $3249 = $3252;
                                    break;
                            };
                            var $3248 = $3249;
                        } else {
                            var self = ($3237 === 3n);
                            if (self) {
                                var self = Kindelia$deserialize$eval$(_world$1, $3236);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3255 = self.fst;
                                        var $3256 = self.snd;
                                        var $3257 = Pair$new$($3255, Kindelia$Transaction$new_eval$($3256));
                                        var $3254 = $3257;
                                        break;
                                };
                                var $3253 = $3254;
                            } else {
                                var $3258 = Pair$new$($3236, Kindelia$Transaction$new_data$(Kindelia$Data$new$("", List$nil)));
                                var $3253 = $3258;
                            };
                            var $3248 = $3253;
                        };
                        var $3243 = $3248;
                    };
                    var $3238 = $3243;
                };
                var $3235 = $3238;
                break;
        };
        return $3235;
    };
    const Kindelia$deserialize$transaction = x0 => x1 => Kindelia$deserialize$transaction$(x0, x1);

    function Kindelia$deserialize$block$(_world$1, _bits$2) {
        var self = Bits$is_empty$(_bits$2);
        if (self) {
            var $3260 = Pair$new$(Bits$e, List$nil);
            var $3259 = $3260;
        } else {
            var self = Kindelia$deserialize$transaction$(_world$1, _bits$2);
            switch (self._) {
                case 'Pair.new':
                    var $3262 = self.fst;
                    var $3263 = self.snd;
                    var self = Kindelia$deserialize$block$(_world$1, $3262);
                    switch (self._) {
                        case 'Pair.new':
                            var $3265 = self.fst;
                            var $3266 = self.snd;
                            var $3267 = Pair$new$($3265, List$cons$($3263, $3266));
                            var $3264 = $3267;
                            break;
                    };
                    var $3261 = $3264;
                    break;
            };
            var $3259 = $3261;
        };
        return $3259;
    };
    const Kindelia$deserialize$block = x0 => x1 => Kindelia$deserialize$block$(x0, x1);

    function Bits$hex$encode$(_x$1) {
        var self = _x$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3269 = self.slice(0, -1);
                var self = $3269;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3271 = self.slice(0, -1);
                        var self = $3271;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3273 = self.slice(0, -1);
                                var self = $3273;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3275 = self.slice(0, -1);
                                        var $3276 = ("0" + Bits$hex$encode$($3275));
                                        var $3274 = $3276;
                                        break;
                                    case 'i':
                                        var $3277 = self.slice(0, -1);
                                        var $3278 = ("8" + Bits$hex$encode$($3277));
                                        var $3274 = $3278;
                                        break;
                                    case 'e':
                                        var $3279 = "0";
                                        var $3274 = $3279;
                                        break;
                                };
                                var $3272 = $3274;
                                break;
                            case 'i':
                                var $3280 = self.slice(0, -1);
                                var self = $3280;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3282 = self.slice(0, -1);
                                        var $3283 = ("4" + Bits$hex$encode$($3282));
                                        var $3281 = $3283;
                                        break;
                                    case 'i':
                                        var $3284 = self.slice(0, -1);
                                        var $3285 = ("c" + Bits$hex$encode$($3284));
                                        var $3281 = $3285;
                                        break;
                                    case 'e':
                                        var $3286 = "4";
                                        var $3281 = $3286;
                                        break;
                                };
                                var $3272 = $3281;
                                break;
                            case 'e':
                                var $3287 = "0";
                                var $3272 = $3287;
                                break;
                        };
                        var $3270 = $3272;
                        break;
                    case 'i':
                        var $3288 = self.slice(0, -1);
                        var self = $3288;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3290 = self.slice(0, -1);
                                var self = $3290;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3292 = self.slice(0, -1);
                                        var $3293 = ("2" + Bits$hex$encode$($3292));
                                        var $3291 = $3293;
                                        break;
                                    case 'i':
                                        var $3294 = self.slice(0, -1);
                                        var $3295 = ("a" + Bits$hex$encode$($3294));
                                        var $3291 = $3295;
                                        break;
                                    case 'e':
                                        var $3296 = "2";
                                        var $3291 = $3296;
                                        break;
                                };
                                var $3289 = $3291;
                                break;
                            case 'i':
                                var $3297 = self.slice(0, -1);
                                var self = $3297;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3299 = self.slice(0, -1);
                                        var $3300 = ("6" + Bits$hex$encode$($3299));
                                        var $3298 = $3300;
                                        break;
                                    case 'i':
                                        var $3301 = self.slice(0, -1);
                                        var $3302 = ("e" + Bits$hex$encode$($3301));
                                        var $3298 = $3302;
                                        break;
                                    case 'e':
                                        var $3303 = "6";
                                        var $3298 = $3303;
                                        break;
                                };
                                var $3289 = $3298;
                                break;
                            case 'e':
                                var $3304 = "2";
                                var $3289 = $3304;
                                break;
                        };
                        var $3270 = $3289;
                        break;
                    case 'e':
                        var $3305 = "0";
                        var $3270 = $3305;
                        break;
                };
                var $3268 = $3270;
                break;
            case 'i':
                var $3306 = self.slice(0, -1);
                var self = $3306;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3308 = self.slice(0, -1);
                        var self = $3308;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3310 = self.slice(0, -1);
                                var self = $3310;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3312 = self.slice(0, -1);
                                        var $3313 = ("1" + Bits$hex$encode$($3312));
                                        var $3311 = $3313;
                                        break;
                                    case 'i':
                                        var $3314 = self.slice(0, -1);
                                        var $3315 = ("9" + Bits$hex$encode$($3314));
                                        var $3311 = $3315;
                                        break;
                                    case 'e':
                                        var $3316 = "1";
                                        var $3311 = $3316;
                                        break;
                                };
                                var $3309 = $3311;
                                break;
                            case 'i':
                                var $3317 = self.slice(0, -1);
                                var self = $3317;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3319 = self.slice(0, -1);
                                        var $3320 = ("5" + Bits$hex$encode$($3319));
                                        var $3318 = $3320;
                                        break;
                                    case 'i':
                                        var $3321 = self.slice(0, -1);
                                        var $3322 = ("d" + Bits$hex$encode$($3321));
                                        var $3318 = $3322;
                                        break;
                                    case 'e':
                                        var $3323 = "5";
                                        var $3318 = $3323;
                                        break;
                                };
                                var $3309 = $3318;
                                break;
                            case 'e':
                                var $3324 = "1";
                                var $3309 = $3324;
                                break;
                        };
                        var $3307 = $3309;
                        break;
                    case 'i':
                        var $3325 = self.slice(0, -1);
                        var self = $3325;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3327 = self.slice(0, -1);
                                var self = $3327;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3329 = self.slice(0, -1);
                                        var $3330 = ("3" + Bits$hex$encode$($3329));
                                        var $3328 = $3330;
                                        break;
                                    case 'i':
                                        var $3331 = self.slice(0, -1);
                                        var $3332 = ("b" + Bits$hex$encode$($3331));
                                        var $3328 = $3332;
                                        break;
                                    case 'e':
                                        var $3333 = "3";
                                        var $3328 = $3333;
                                        break;
                                };
                                var $3326 = $3328;
                                break;
                            case 'i':
                                var $3334 = self.slice(0, -1);
                                var self = $3334;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3336 = self.slice(0, -1);
                                        var $3337 = ("7" + Bits$hex$encode$($3336));
                                        var $3335 = $3337;
                                        break;
                                    case 'i':
                                        var $3338 = self.slice(0, -1);
                                        var $3339 = ("f" + Bits$hex$encode$($3338));
                                        var $3335 = $3339;
                                        break;
                                    case 'e':
                                        var $3340 = "7";
                                        var $3335 = $3340;
                                        break;
                                };
                                var $3326 = $3335;
                                break;
                            case 'e':
                                var $3341 = "3";
                                var $3326 = $3341;
                                break;
                        };
                        var $3307 = $3326;
                        break;
                    case 'e':
                        var $3342 = "1";
                        var $3307 = $3342;
                        break;
                };
                var $3268 = $3307;
                break;
            case 'e':
                var $3343 = "";
                var $3268 = $3343;
                break;
        };
        return $3268;
    };
    const Bits$hex$encode = x0 => Bits$hex$encode$(x0);
    const Bits$eql = a0 => a1 => (a1 === a0);

    function BBT$(_K$1, _V$2) {
        var $3344 = null;
        return $3344;
    };
    const BBT = x0 => x1 => BBT$(x0, x1);

    function Map$(_V$1) {
        var $3345 = null;
        return $3345;
    };
    const Map = x0 => Map$(x0);

    function BBT$bin$(_size$3, _key$4, _val$5, _left$6, _right$7) {
        var $3346 = ({
            _: 'BBT.bin',
            'size': _size$3,
            'key': _key$4,
            'val': _val$5,
            'left': _left$6,
            'right': _right$7
        });
        return $3346;
    };
    const BBT$bin = x0 => x1 => x2 => x3 => x4 => BBT$bin$(x0, x1, x2, x3, x4);

    function U32$new$(_value$1) {
        var $3347 = word_to_u32(_value$1);
        return $3347;
    };
    const U32$new = x0 => U32$new$(x0);
    const Nat$to_u32 = a0 => (Number(a0) >>> 0);
    const BBT$tip = ({
        _: 'BBT.tip'
    });

    function BBT$singleton$(_key$3, _val$4) {
        var $3348 = BBT$bin$(1, _key$3, _val$4, BBT$tip, BBT$tip);
        return $3348;
    };
    const BBT$singleton = x0 => x1 => BBT$singleton$(x0, x1);

    function BBT$size$(_map$3) {
        var self = _map$3;
        switch (self._) {
            case 'BBT.bin':
                var $3350 = self.size;
                var $3351 = $3350;
                var $3349 = $3351;
                break;
            case 'BBT.tip':
                var $3352 = 0;
                var $3349 = $3352;
                break;
        };
        return $3349;
    };
    const BBT$size = x0 => BBT$size$(x0);
    const U32$add = a0 => a1 => ((a0 + a1) >>> 0);

    function Word$shift_left$one$go$(_word$2, _prev$3) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3354 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $3356 = Word$i$(Word$shift_left$one$go$($3354, Bool$false));
                    var $3355 = $3356;
                } else {
                    var $3357 = Word$o$(Word$shift_left$one$go$($3354, Bool$false));
                    var $3355 = $3357;
                };
                var $3353 = $3355;
                break;
            case 'Word.i':
                var $3358 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $3360 = Word$i$(Word$shift_left$one$go$($3358, Bool$true));
                    var $3359 = $3360;
                } else {
                    var $3361 = Word$o$(Word$shift_left$one$go$($3358, Bool$true));
                    var $3359 = $3361;
                };
                var $3353 = $3359;
                break;
            case 'Word.e':
                var $3362 = Word$e;
                var $3353 = $3362;
                break;
        };
        return $3353;
    };
    const Word$shift_left$one$go = x0 => x1 => Word$shift_left$one$go$(x0, x1);

    function Word$shift_left$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3364 = self.pred;
                var $3365 = Word$o$(Word$shift_left$one$go$($3364, Bool$false));
                var $3363 = $3365;
                break;
            case 'Word.i':
                var $3366 = self.pred;
                var $3367 = Word$o$(Word$shift_left$one$go$($3366, Bool$true));
                var $3363 = $3367;
                break;
            case 'Word.e':
                var $3368 = Word$e;
                var $3363 = $3368;
                break;
        };
        return $3363;
    };
    const Word$shift_left$one = x0 => Word$shift_left$one$(x0);

    function Word$shift_left$(_value$2, _n$3) {
        var Word$shift_left$ = (_value$2, _n$3) => ({
            ctr: 'TCO',
            arg: [_value$2, _n$3]
        });
        var Word$shift_left = _value$2 => _n$3 => Word$shift_left$(_value$2, _n$3);
        var arg = [_value$2, _n$3];
        while (true) {
            let [_value$2, _n$3] = arg;
            var R = (() => {
                var self = _n$3;
                if (self === 0n) {
                    var $3369 = _value$2;
                    return $3369;
                } else {
                    var $3370 = (self - 1n);
                    var $3371 = Word$shift_left$(Word$shift_left$one$(_value$2), $3370);
                    return $3371;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_left = x0 => x1 => Word$shift_left$(x0, x1);

    function Word$mul$go$(_a$3, _b$4, _acc$5) {
        var Word$mul$go$ = (_a$3, _b$4, _acc$5) => ({
            ctr: 'TCO',
            arg: [_a$3, _b$4, _acc$5]
        });
        var Word$mul$go = _a$3 => _b$4 => _acc$5 => Word$mul$go$(_a$3, _b$4, _acc$5);
        var arg = [_a$3, _b$4, _acc$5];
        while (true) {
            let [_a$3, _b$4, _acc$5] = arg;
            var R = (() => {
                var self = _a$3;
                switch (self._) {
                    case 'Word.o':
                        var $3372 = self.pred;
                        var $3373 = Word$mul$go$($3372, Word$shift_left$(_b$4, 1n), _acc$5);
                        return $3373;
                    case 'Word.i':
                        var $3374 = self.pred;
                        var $3375 = Word$mul$go$($3374, Word$shift_left$(_b$4, 1n), Word$add$(_b$4, _acc$5));
                        return $3375;
                    case 'Word.e':
                        var $3376 = _acc$5;
                        return $3376;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$mul$go = x0 => x1 => x2 => Word$mul$go$(x0, x1, x2);

    function Word$to_zero$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3378 = self.pred;
                var $3379 = Word$o$(Word$to_zero$($3378));
                var $3377 = $3379;
                break;
            case 'Word.i':
                var $3380 = self.pred;
                var $3381 = Word$o$(Word$to_zero$($3380));
                var $3377 = $3381;
                break;
            case 'Word.e':
                var $3382 = Word$e;
                var $3377 = $3382;
                break;
        };
        return $3377;
    };
    const Word$to_zero = x0 => Word$to_zero$(x0);

    function Word$mul$(_a$2, _b$3) {
        var $3383 = Word$mul$go$(_a$2, _b$3, Word$to_zero$(_a$2));
        return $3383;
    };
    const Word$mul = x0 => x1 => Word$mul$(x0, x1);
    const U32$mul = a0 => a1 => ((a0 * a1) >>> 0);
    const BBT$w = 3;
    const U32$ltn = a0 => a1 => (a0 < a1);
    const U32$from_nat = a0 => (Number(a0) >>> 0);

    function BBT$node$(_key$3, _val$4, _left$5, _right$6) {
        var _size_left$7 = BBT$size$(_left$5);
        var _size_right$8 = BBT$size$(_right$6);
        var _new_size$9 = ((1 + ((_size_left$7 + _size_right$8) >>> 0)) >>> 0);
        var $3384 = BBT$bin$(_new_size$9, _key$3, _val$4, _left$5, _right$6);
        return $3384;
    };
    const BBT$node = x0 => x1 => x2 => x3 => BBT$node$(x0, x1, x2, x3);

    function Cmp$as_gtn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $3386 = Bool$false;
                var $3385 = $3386;
                break;
            case 'Cmp.gtn':
                var $3387 = Bool$true;
                var $3385 = $3387;
                break;
        };
        return $3385;
    };
    const Cmp$as_gtn = x0 => Cmp$as_gtn$(x0);

    function Word$gtn$(_a$2, _b$3) {
        var $3388 = Cmp$as_gtn$(Word$cmp$(_a$2, _b$3));
        return $3388;
    };
    const Word$gtn = x0 => x1 => Word$gtn$(x0, x1);
    const U32$gtn = a0 => a1 => (a0 > a1);

    function BBT$balance$(_k$3, _v$4, _l$5, _r$6) {
        var _size_l$7 = BBT$size$(_l$5);
        var _size_r$8 = BBT$size$(_r$6);
        var _size_l_plus_size_r$9 = ((_size_l$7 + _size_r$8) >>> 0);
        var _w_x_size_l$10 = ((BBT$w * _size_l$7) >>> 0);
        var _w_x_size_r$11 = ((BBT$w * _size_r$8) >>> 0);
        var self = (_size_l_plus_size_r$9 < 2);
        if (self) {
            var $3390 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
            var $3389 = $3390;
        } else {
            var self = (_size_r$8 > _w_x_size_l$10);
            if (self) {
                var self = _r$6;
                switch (self._) {
                    case 'BBT.bin':
                        var $3393 = self.key;
                        var $3394 = self.val;
                        var $3395 = self.left;
                        var $3396 = self.right;
                        var _size_rl$17 = BBT$size$($3395);
                        var _size_rr$18 = BBT$size$($3396);
                        var self = (_size_rl$17 < _size_rr$18);
                        if (self) {
                            var _new_key$19 = $3393;
                            var _new_val$20 = $3394;
                            var _new_left$21 = BBT$node$(_k$3, _v$4, _l$5, $3395);
                            var _new_right$22 = $3396;
                            var $3398 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                            var $3397 = $3398;
                        } else {
                            var self = $3395;
                            switch (self._) {
                                case 'BBT.bin':
                                    var $3400 = self.key;
                                    var $3401 = self.val;
                                    var $3402 = self.left;
                                    var $3403 = self.right;
                                    var _new_key$24 = $3400;
                                    var _new_val$25 = $3401;
                                    var _new_left$26 = BBT$node$(_k$3, _v$4, _l$5, $3402);
                                    var _new_right$27 = BBT$node$($3393, $3394, $3403, $3396);
                                    var $3404 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                    var $3399 = $3404;
                                    break;
                                case 'BBT.tip':
                                    var $3405 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                    var $3399 = $3405;
                                    break;
                            };
                            var $3397 = $3399;
                        };
                        var $3392 = $3397;
                        break;
                    case 'BBT.tip':
                        var $3406 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                        var $3392 = $3406;
                        break;
                };
                var $3391 = $3392;
            } else {
                var self = (_size_l$7 > _w_x_size_r$11);
                if (self) {
                    var self = _l$5;
                    switch (self._) {
                        case 'BBT.bin':
                            var $3409 = self.key;
                            var $3410 = self.val;
                            var $3411 = self.left;
                            var $3412 = self.right;
                            var _size_ll$17 = BBT$size$($3411);
                            var _size_lr$18 = BBT$size$($3412);
                            var self = (_size_lr$18 < _size_ll$17);
                            if (self) {
                                var _new_key$19 = $3409;
                                var _new_val$20 = $3410;
                                var _new_left$21 = $3411;
                                var _new_right$22 = BBT$node$(_k$3, _v$4, $3412, _r$6);
                                var $3414 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                                var $3413 = $3414;
                            } else {
                                var self = $3412;
                                switch (self._) {
                                    case 'BBT.bin':
                                        var $3416 = self.key;
                                        var $3417 = self.val;
                                        var $3418 = self.left;
                                        var $3419 = self.right;
                                        var _new_key$24 = $3416;
                                        var _new_val$25 = $3417;
                                        var _new_left$26 = BBT$node$($3409, $3410, $3411, $3418);
                                        var _new_right$27 = BBT$node$(_k$3, _v$4, $3419, _r$6);
                                        var $3420 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                        var $3415 = $3420;
                                        break;
                                    case 'BBT.tip':
                                        var $3421 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                        var $3415 = $3421;
                                        break;
                                };
                                var $3413 = $3415;
                            };
                            var $3408 = $3413;
                            break;
                        case 'BBT.tip':
                            var $3422 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                            var $3408 = $3422;
                            break;
                    };
                    var $3407 = $3408;
                } else {
                    var $3423 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                    var $3407 = $3423;
                };
                var $3391 = $3407;
            };
            var $3389 = $3391;
        };
        return $3389;
    };
    const BBT$balance = x0 => x1 => x2 => x3 => BBT$balance$(x0, x1, x2, x3);

    function BBT$insert$(_cmp$3, _key$4, _val$5, _map$6) {
        var self = _map$6;
        switch (self._) {
            case 'BBT.bin':
                var $3425 = self.key;
                var $3426 = self.val;
                var $3427 = self.left;
                var $3428 = self.right;
                var self = _cmp$3(_key$4)($3425);
                switch (self._) {
                    case 'Cmp.ltn':
                        var _new_key$12 = $3425;
                        var _new_val$13 = $3426;
                        var _new_left$14 = BBT$insert$(_cmp$3, _key$4, _val$5, $3427);
                        var _new_right$15 = $3428;
                        var $3430 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $3429 = $3430;
                        break;
                    case 'Cmp.eql':
                        var $3431 = BBT$node$(_key$4, _val$5, $3427, $3428);
                        var $3429 = $3431;
                        break;
                    case 'Cmp.gtn':
                        var _new_key$12 = $3425;
                        var _new_val$13 = $3426;
                        var _new_left$14 = $3427;
                        var _new_right$15 = BBT$insert$(_cmp$3, _key$4, _val$5, $3428);
                        var $3432 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $3429 = $3432;
                        break;
                };
                var $3424 = $3429;
                break;
            case 'BBT.tip':
                var $3433 = BBT$singleton$(_key$4, _val$5);
                var $3424 = $3433;
                break;
        };
        return $3424;
    };
    const BBT$insert = x0 => x1 => x2 => x3 => BBT$insert$(x0, x1, x2, x3);

    function Map$set$(_key$2, _val$3, _map$4) {
        var $3434 = BBT$insert$(String$cmp, _key$2, _val$3, _map$4);
        return $3434;
    };
    const Map$set = x0 => x1 => x2 => Map$set$(x0, x1, x2);

    function Kindelia$Entry$data$(_value$1) {
        var $3435 = ({
            _: 'Kindelia.Entry.data',
            'value': _value$1
        });
        return $3435;
    };
    const Kindelia$Entry$data = x0 => Kindelia$Entry$data$(x0);

    function Kindelia$Entry$bond$(_value$1) {
        var $3436 = ({
            _: 'Kindelia.Entry.bond',
            'value': _value$1
        });
        return $3436;
    };
    const Kindelia$Entry$bond = x0 => Kindelia$Entry$bond$(x0);

    function List$unzip$(_xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $3438 = self.head;
                var $3439 = self.tail;
                var _rec$6 = List$unzip$($3439);
                var self = $3438;
                switch (self._) {
                    case 'Pair.new':
                        var $3441 = self.fst;
                        var $3442 = self.snd;
                        var self = _rec$6;
                        switch (self._) {
                            case 'Pair.new':
                                var $3444 = self.fst;
                                var $3445 = self.snd;
                                var $3446 = Pair$new$(List$cons$($3441, $3444), List$cons$($3442, $3445));
                                var $3443 = $3446;
                                break;
                        };
                        var $3440 = $3443;
                        break;
                };
                var $3437 = $3440;
                break;
            case 'List.nil':
                var $3447 = Pair$new$(List$nil, List$nil);
                var $3437 = $3447;
                break;
        };
        return $3437;
    };
    const List$unzip = x0 => List$unzip$(x0);

    function Kindelia$extend$(_map$2, _keys$3, _vals$4) {
        var Kindelia$extend$ = (_map$2, _keys$3, _vals$4) => ({
            ctr: 'TCO',
            arg: [_map$2, _keys$3, _vals$4]
        });
        var Kindelia$extend = _map$2 => _keys$3 => _vals$4 => Kindelia$extend$(_map$2, _keys$3, _vals$4);
        var arg = [_map$2, _keys$3, _vals$4];
        while (true) {
            let [_map$2, _keys$3, _vals$4] = arg;
            var R = (() => {
                var self = _keys$3;
                switch (self._) {
                    case 'List.cons':
                        var $3448 = self.head;
                        var $3449 = self.tail;
                        var self = _vals$4;
                        switch (self._) {
                            case 'List.cons':
                                var $3451 = self.head;
                                var $3452 = self.tail;
                                var $3453 = Kindelia$extend$(Map$set$($3448, $3451, _map$2), $3449, $3452);
                                var $3450 = $3453;
                                break;
                            case 'List.nil':
                                var $3454 = _map$2;
                                var $3450 = $3454;
                                break;
                        };
                        return $3450;
                    case 'List.nil':
                        var self = _vals$4;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $3456 = _map$2;
                                var $3455 = $3456;
                                break;
                        };
                        return $3455;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kindelia$extend = x0 => x1 => x2 => Kindelia$extend$(x0, x1, x2);

    function BBT$from_list$go$(_cmp$3, _acc$4, _xs$5) {
        var BBT$from_list$go$ = (_cmp$3, _acc$4, _xs$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _acc$4, _xs$5]
        });
        var BBT$from_list$go = _cmp$3 => _acc$4 => _xs$5 => BBT$from_list$go$(_cmp$3, _acc$4, _xs$5);
        var arg = [_cmp$3, _acc$4, _xs$5];
        while (true) {
            let [_cmp$3, _acc$4, _xs$5] = arg;
            var R = (() => {
                var self = _xs$5;
                switch (self._) {
                    case 'List.cons':
                        var $3457 = self.head;
                        var $3458 = self.tail;
                        var _key$8 = Pair$fst$($3457);
                        var _val$9 = Pair$snd$($3457);
                        var _new_acc$10 = BBT$insert$(_cmp$3, _key$8, _val$9, _acc$4);
                        var $3459 = BBT$from_list$go$(_cmp$3, _new_acc$10, $3458);
                        return $3459;
                    case 'List.nil':
                        var $3460 = _acc$4;
                        return $3460;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$from_list$go = x0 => x1 => x2 => BBT$from_list$go$(x0, x1, x2);

    function BBT$from_list$(_cmp$3, _xs$4) {
        var $3461 = BBT$from_list$go$(_cmp$3, BBT$tip, _xs$4);
        return $3461;
    };
    const BBT$from_list = x0 => x1 => BBT$from_list$(x0, x1);

    function Map$from_list$(_xs$2) {
        var $3462 = BBT$from_list$(String$cmp, _xs$2);
        return $3462;
    };
    const Map$from_list = x0 => Map$from_list$(x0);

    function Kindelia$equal$(_a$1, _b$2) {
        var Kindelia$equal$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var Kindelia$equal = _a$1 => _b$2 => Kindelia$equal$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                switch (self._) {
                    case 'Kindelia.Type.data':
                        var $3463 = self.name;
                        var self = _b$2;
                        switch (self._) {
                            case 'Kindelia.Type.data':
                                var $3465 = self.name;
                                var $3466 = ($3463 === $3465);
                                var $3464 = $3466;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.effe':
                                var $3467 = Bool$false;
                                var $3464 = $3467;
                                break;
                        };
                        return $3464;
                    case 'Kindelia.Type.effe':
                        var $3468 = self.rety;
                        var self = _b$2;
                        switch (self._) {
                            case 'Kindelia.Type.effe':
                                var $3470 = self.rety;
                                var $3471 = Kindelia$equal$($3468, $3470);
                                var $3469 = $3471;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3472 = Bool$false;
                                var $3469 = $3472;
                                break;
                        };
                        return $3469;
                    case 'Kindelia.Type.word':
                        var self = _b$2;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                                var $3474 = Bool$true;
                                var $3473 = $3474;
                                break;
                            case 'Kindelia.Type.data':
                            case 'Kindelia.Type.effe':
                                var $3475 = Bool$false;
                                var $3473 = $3475;
                                break;
                        };
                        return $3473;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kindelia$equal = x0 => x1 => Kindelia$equal$(x0, x1);

    function Kindelia$get_bond$(_world$1, _name$2) {
        var $3476 = Maybe$monad$((_m$bind$3 => _m$pure$4 => {
            var $3477 = _m$bind$3;
            return $3477;
        }))(Map$get$(_name$2, _world$1))((_entry$3 => {
            var self = _entry$3;
            switch (self._) {
                case 'Kindelia.Entry.bond':
                    var $3479 = self.value;
                    var $3480 = Maybe$some$($3479);
                    var $3478 = $3480;
                    break;
                case 'Kindelia.Entry.data':
                case 'Kindelia.Entry.file':
                    var $3481 = Maybe$none;
                    var $3478 = $3481;
                    break;
            };
            return $3478;
        }));
        return $3476;
    };
    const Kindelia$get_bond = x0 => x1 => Kindelia$get_bond$(x0, x1);

    function List$zip$(_as$3, _bs$4) {
        var self = _as$3;
        switch (self._) {
            case 'List.cons':
                var $3483 = self.head;
                var $3484 = self.tail;
                var self = _bs$4;
                switch (self._) {
                    case 'List.cons':
                        var $3486 = self.head;
                        var $3487 = self.tail;
                        var $3488 = List$cons$(Pair$new$($3483, $3486), List$zip$($3484, $3487));
                        var $3485 = $3488;
                        break;
                    case 'List.nil':
                        var $3489 = List$nil;
                        var $3485 = $3489;
                        break;
                };
                var $3482 = $3485;
                break;
            case 'List.nil':
                var $3490 = List$nil;
                var $3482 = $3490;
                break;
        };
        return $3482;
    };
    const List$zip = x0 => x1 => List$zip$(x0, x1);

    function List$all$(_cond$2, _list$3) {
        var List$all$ = (_cond$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _list$3]
        });
        var List$all = _cond$2 => _list$3 => List$all$(_cond$2, _list$3);
        var arg = [_cond$2, _list$3];
        while (true) {
            let [_cond$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $3491 = self.head;
                        var $3492 = self.tail;
                        var self = _cond$2($3491);
                        if (self) {
                            var $3494 = List$all$(_cond$2, $3492);
                            var $3493 = $3494;
                        } else {
                            var $3495 = Bool$false;
                            var $3493 = $3495;
                        };
                        return $3493;
                    case 'List.nil':
                        var $3496 = Bool$true;
                        return $3496;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$all = x0 => x1 => List$all$(x0, x1);

    function Maybe$mapped$(_m$2, _f$4) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $3498 = self.value;
                var $3499 = Maybe$some$(_f$4($3498));
                var $3497 = $3499;
                break;
            case 'Maybe.none':
                var $3500 = Maybe$none;
                var $3497 = $3500;
                break;
        };
        return $3497;
    };
    const Maybe$mapped = x0 => x1 => Maybe$mapped$(x0, x1);

    function List$ifind$go$(_xs$2, _f$3, _i$4) {
        var List$ifind$go$ = (_xs$2, _f$3, _i$4) => ({
            ctr: 'TCO',
            arg: [_xs$2, _f$3, _i$4]
        });
        var List$ifind$go = _xs$2 => _f$3 => _i$4 => List$ifind$go$(_xs$2, _f$3, _i$4);
        var arg = [_xs$2, _f$3, _i$4];
        while (true) {
            let [_xs$2, _f$3, _i$4] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $3501 = self.head;
                        var $3502 = self.tail;
                        var self = _f$3(_i$4)($3501);
                        if (self) {
                            var $3504 = Maybe$some$(Pair$new$(_i$4, $3501));
                            var $3503 = $3504;
                        } else {
                            var $3505 = List$ifind$go$($3502, _f$3, Nat$succ$(_i$4));
                            var $3503 = $3505;
                        };
                        return $3503;
                    case 'List.nil':
                        var $3506 = Maybe$none;
                        return $3506;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$ifind$go = x0 => x1 => x2 => List$ifind$go$(x0, x1, x2);

    function List$ifind$(_f$2, _xs$3) {
        var $3507 = List$ifind$go$(_xs$3, _f$2, Nat$zero);
        return $3507;
    };
    const List$ifind = x0 => x1 => List$ifind$(x0, x1);

    function Kindelia$get_constructor_value$(_data$1, _name$2) {
        var $3508 = Maybe$mapped$(List$ifind$((_i$3 => _ctr$4 => {
            var $3509 = ((() => {
                var self = _ctr$4;
                switch (self._) {
                    case 'Kindelia.Constructor.new':
                        var $3510 = self.name;
                        var $3511 = $3510;
                        return $3511;
                };
            })() === _name$2);
            return $3509;
        }), (() => {
            var self = _data$1;
            switch (self._) {
                case 'Kindelia.Data.new':
                    var $3512 = self.constructors;
                    var $3513 = $3512;
                    return $3513;
            };
        })()), (_x$3 => {
            var self = _x$3;
            switch (self._) {
                case 'Pair.new':
                    var $3515 = self.snd;
                    var $3516 = $3515;
                    var $3514 = $3516;
                    break;
            };
            return $3514;
        }));
        return $3508;
    };
    const Kindelia$get_constructor_value = x0 => x1 => Kindelia$get_constructor_value$(x0, x1);
    const List$length = a0 => (list_length(a0));

    function List$zip_with$(_f$4, _as$5, _bs$6) {
        var self = _as$5;
        switch (self._) {
            case 'List.cons':
                var $3518 = self.head;
                var $3519 = self.tail;
                var self = _bs$6;
                switch (self._) {
                    case 'List.cons':
                        var $3521 = self.head;
                        var $3522 = self.tail;
                        var $3523 = List$cons$(_f$4($3518)($3521), List$zip_with$(_f$4, $3519, $3522));
                        var $3520 = $3523;
                        break;
                    case 'List.nil':
                        var $3524 = List$nil;
                        var $3520 = $3524;
                        break;
                };
                var $3517 = $3520;
                break;
            case 'List.nil':
                var $3525 = List$nil;
                var $3517 = $3525;
                break;
        };
        return $3517;
    };
    const List$zip_with = x0 => x1 => x2 => List$zip_with$(x0, x1, x2);

    function List$zipped_with$(_as$3, _bs$4, _f$6) {
        var $3526 = List$zip_with$(_f$6, _as$3, _bs$4);
        return $3526;
    };
    const List$zipped_with = x0 => x1 => x2 => List$zipped_with$(x0, x1, x2);

    function List$and$(_list$1) {
        var $3527 = List$all$((_x$2 => {
            var $3528 = _x$2;
            return $3528;
        }), _list$1);
        return $3527;
    };
    const List$and = x0 => List$and$(x0);

    function Kindelia$get_file$(_world$1, _name$2) {
        var $3529 = Maybe$monad$((_m$bind$3 => _m$pure$4 => {
            var $3530 = _m$bind$3;
            return $3530;
        }))(Map$get$(_name$2, _world$1))((_entry$3 => {
            var self = _entry$3;
            switch (self._) {
                case 'Kindelia.Entry.file':
                    var $3532 = self.value;
                    var $3533 = Maybe$some$($3532);
                    var $3531 = $3533;
                    break;
                case 'Kindelia.Entry.data':
                case 'Kindelia.Entry.bond':
                    var $3534 = Maybe$none;
                    var $3531 = $3534;
                    break;
            };
            return $3531;
        }));
        return $3529;
    };
    const Kindelia$get_file = x0 => x1 => Kindelia$get_file$(x0, x1);

    function List$is_empty$(_list$2) {
        var self = _list$2;
        switch (self._) {
            case 'List.nil':
                var $3536 = Bool$true;
                var $3535 = $3536;
                break;
            case 'List.cons':
                var $3537 = Bool$false;
                var $3535 = $3537;
                break;
        };
        return $3535;
    };
    const List$is_empty = x0 => List$is_empty$(x0);

    function Maybe$if$(_cond$2, _x$3) {
        var self = _x$3;
        switch (self._) {
            case 'Maybe.some':
                var $3539 = self.value;
                var $3540 = _cond$2($3539);
                var $3538 = $3540;
                break;
            case 'Maybe.none':
                var $3541 = Bool$false;
                var $3538 = $3541;
                break;
        };
        return $3538;
    };
    const Maybe$if = x0 => x1 => Maybe$if$(x0, x1);

    function List$find$(_cond$2, _xs$3) {
        var List$find$ = (_cond$2, _xs$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _xs$3]
        });
        var List$find = _cond$2 => _xs$3 => List$find$(_cond$2, _xs$3);
        var arg = [_cond$2, _xs$3];
        while (true) {
            let [_cond$2, _xs$3] = arg;
            var R = (() => {
                var self = _xs$3;
                switch (self._) {
                    case 'List.cons':
                        var $3542 = self.head;
                        var $3543 = self.tail;
                        var self = _cond$2($3542);
                        if (self) {
                            var $3545 = Maybe$some$($3542);
                            var $3544 = $3545;
                        } else {
                            var $3546 = List$find$(_cond$2, $3543);
                            var $3544 = $3546;
                        };
                        return $3544;
                    case 'List.nil':
                        var $3547 = Maybe$none;
                        return $3547;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$find = x0 => x1 => List$find$(x0, x1);

    function List$in$(_cond$2, _list$3) {
        var self = List$find$(_cond$2, _list$3);
        switch (self._) {
            case 'Maybe.none':
                var $3549 = Bool$false;
                var $3548 = $3549;
                break;
            case 'Maybe.some':
                var $3550 = Bool$true;
                var $3548 = $3550;
                break;
        };
        return $3548;
    };
    const List$in = x0 => x1 => List$in$(x0, x1);
    const Bool$or = a0 => a1 => (a0 || a1);

    function Kindelia$check$(_context$1, _world$2, _term$3, _type$4, _caller$5) {
        var self = _context$1;
        switch (self._) {
            case 'BBT.tip':
                var self = _term$3;
                switch (self._) {
                    case 'Kindelia.Term.var':
                        var $3553 = self.name;
                        var self = Map$get$($3553, _context$1);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3555 = self.value;
                                var $3556 = Kindelia$equal$($3555, _type$4);
                                var $3554 = $3556;
                                break;
                            case 'Maybe.none':
                                var $3557 = Bool$false;
                                var $3554 = $3557;
                                break;
                        };
                        var $3552 = $3554;
                        break;
                    case 'Kindelia.Term.call':
                        var $3558 = self.bond;
                        var $3559 = self.args;
                        var self = Kindelia$get_bond$(_world$2, $3558);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3561 = self.value;
                                var _bond$9 = $3561;
                                var self = _bond$9;
                                switch (self._) {
                                    case 'Kindelia.Bond.new':
                                        var $3563 = self.iprm;
                                        var $3564 = self.otyp;
                                        var _otyp$14 = Kindelia$equal$($3564, _type$4);
                                        var _ityp$15 = List$mapped$($3563, Pair$snd);
                                        var _args$16 = List$zip$($3559, _ityp$15);
                                        var _args$17 = List$all$((_x$17 => {
                                            var $3566 = Kindelia$check$(_context$1, _world$2, (() => {
                                                var self = _x$17;
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3567 = self.fst;
                                                        var $3568 = $3567;
                                                        return $3568;
                                                };
                                            })(), (() => {
                                                var self = _x$17;
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3569 = self.snd;
                                                        var $3570 = $3569;
                                                        return $3570;
                                                };
                                            })(), _caller$5);
                                            return $3566;
                                        }), _args$16);
                                        var $3565 = (_otyp$14 && _args$17);
                                        var $3562 = $3565;
                                        break;
                                };
                                var $3560 = $3562;
                                break;
                            case 'Maybe.none':
                                var $3571 = Bool$false;
                                var $3560 = $3571;
                                break;
                        };
                        var $3552 = $3560;
                        break;
                    case 'Kindelia.Term.let':
                        var $3572 = self.name;
                        var $3573 = self.type;
                        var $3574 = self.expr;
                        var $3575 = self.body;
                        var _expr$10 = Kindelia$check$(_context$1, _world$2, $3574, $3573, _caller$5);
                        var _ctx2$11 = Map$set$($3572, $3573, _context$1);
                        var _body$12 = Kindelia$check$(_ctx2$11, _world$2, $3575, _type$4, _caller$5);
                        var $3576 = (_expr$10 && _body$12);
                        var $3552 = $3576;
                        break;
                    case 'Kindelia.Term.create':
                        var $3577 = self.ctor;
                        var $3578 = self.vals;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.data':
                                var $3580 = self.name;
                                var self = Kindelia$get_data$(_world$2, $3580);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3582 = self.value;
                                        var _data$10 = $3582;
                                        var self = _data$10;
                                        switch (self._) {
                                            case 'Kindelia.Data.new':
                                                var self = Kindelia$get_constructor_value$(_data$10, $3577);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $3585 = self.value;
                                                        var _ctor$14 = $3585;
                                                        var self = _ctor$14;
                                                        switch (self._) {
                                                            case 'Kindelia.Constructor.new':
                                                                var $3587 = self.fprm;
                                                                var _size$17 = ((list_length($3578)) === (list_length($3587)));
                                                                var _ftyp$18 = List$mapped$($3587, Pair$snd);
                                                                var _vals$19 = List$zip$($3578, _ftyp$18);
                                                                var _vals$20 = List$all$((_x$20 => {
                                                                    var $3589 = Kindelia$check$(_context$1, _world$2, (() => {
                                                                        var self = _x$20;
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3590 = self.fst;
                                                                                var $3591 = $3590;
                                                                                return $3591;
                                                                        };
                                                                    })(), (() => {
                                                                        var self = _x$20;
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3592 = self.snd;
                                                                                var $3593 = $3592;
                                                                                return $3593;
                                                                        };
                                                                    })(), _caller$5);
                                                                    return $3589;
                                                                }), _vals$19);
                                                                var $3588 = (_size$17 && _vals$20);
                                                                var $3586 = $3588;
                                                                break;
                                                        };
                                                        var $3584 = $3586;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $3594 = Bool$false;
                                                        var $3584 = $3594;
                                                        break;
                                                };
                                                var $3583 = $3584;
                                                break;
                                        };
                                        var $3581 = $3583;
                                        break;
                                    case 'Maybe.none':
                                        var $3595 = Bool$false;
                                        var $3581 = $3595;
                                        break;
                                };
                                var $3579 = $3581;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.effe':
                                var $3596 = Bool$false;
                                var $3579 = $3596;
                                break;
                        };
                        var $3552 = $3579;
                        break;
                    case 'Kindelia.Term.match':
                        var $3597 = self.name;
                        var $3598 = self.data;
                        var $3599 = self.cses;
                        var self = Kindelia$get_data$(_world$2, $3598);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3601 = self.value;
                                var _data$10 = $3601;
                                var self = _data$10;
                                switch (self._) {
                                    case 'Kindelia.Data.new':
                                        var $3603 = self.constructors;
                                        var _size$13 = ((list_length($3599)) === (list_length($3603)));
                                        var _expr$14 = Kindelia$check$(_context$1, _world$2, Kindelia$Term$var$($3597), Kindelia$Type$data$($3598), _caller$5);
                                        var _cses$15 = List$zipped_with$($3599, $3603, (_case_body$15 => _case_ctor$16 => {
                                            var _nams$17 = List$map$((_fprm$17 => {
                                                var $3606 = ($3597 + ("." + (() => {
                                                    var self = _fprm$17;
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3607 = self.fst;
                                                            var $3608 = $3607;
                                                            return $3608;
                                                    };
                                                })()));
                                                return $3606;
                                            }), (() => {
                                                var self = _case_ctor$16;
                                                switch (self._) {
                                                    case 'Kindelia.Constructor.new':
                                                        var $3609 = self.fprm;
                                                        var $3610 = $3609;
                                                        return $3610;
                                                };
                                            })());
                                            var _typs$18 = List$mapped$((() => {
                                                var self = _case_ctor$16;
                                                switch (self._) {
                                                    case 'Kindelia.Constructor.new':
                                                        var $3611 = self.fprm;
                                                        var $3612 = $3611;
                                                        return $3612;
                                                };
                                            })(), Pair$snd);
                                            var _ctx2$19 = Kindelia$extend$(_context$1, _nams$17, _typs$18);
                                            var $3605 = Kindelia$check$(_ctx2$19, _world$2, _case_body$15, _type$4, _caller$5);
                                            return $3605;
                                        }));
                                        var $3604 = (_size$13 && List$and$(_cses$15));
                                        var $3602 = $3604;
                                        break;
                                };
                                var $3600 = $3602;
                                break;
                            case 'Maybe.none':
                                var $3613 = Bool$false;
                                var $3600 = $3613;
                                break;
                        };
                        var $3552 = $3600;
                        break;
                    case 'Kindelia.Term.compare':
                        var $3614 = self.val0;
                        var $3615 = self.val1;
                        var $3616 = self.iflt;
                        var $3617 = self.ifeq;
                        var $3618 = self.ifgt;
                        var _val0$11 = Kindelia$check$(_context$1, _world$2, $3614, Kindelia$Type$word, _caller$5);
                        var _val1$12 = Kindelia$check$(_context$1, _world$2, $3615, Kindelia$Type$word, _caller$5);
                        var _iflt$13 = Kindelia$check$(_context$1, _world$2, $3616, _type$4, _caller$5);
                        var _ifeq$14 = Kindelia$check$(_context$1, _world$2, $3617, _type$4, _caller$5);
                        var _ifgt$15 = Kindelia$check$(_context$1, _world$2, $3618, _type$4, _caller$5);
                        var $3619 = (_val0$11 && (_val1$12 && (_iflt$13 && (_ifeq$14 && _ifgt$15))));
                        var $3552 = $3619;
                        break;
                    case 'Kindelia.Term.operate':
                        var $3620 = self.val0;
                        var $3621 = self.val1;
                        var _val0$9 = Kindelia$check$(_context$1, _world$2, $3620, Kindelia$Type$word, _caller$5);
                        var _val1$10 = Kindelia$check$(_context$1, _world$2, $3621, Kindelia$Type$word, _caller$5);
                        var $3622 = (_val0$9 && _val1$10);
                        var $3552 = $3622;
                        break;
                    case 'Kindelia.Term.set':
                        var $3623 = self.file;
                        var $3624 = self.expr;
                        var $3625 = self.body;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3627 = Bool$false;
                                var $3626 = $3627;
                                break;
                            case 'Kindelia.Type.effe':
                                var self = Kindelia$get_file$(_world$2, $3623);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3629 = self.value;
                                        var _file$11 = $3629;
                                        var self = _file$11;
                                        switch (self._) {
                                            case 'Kindelia.File.new':
                                                var $3631 = self.ownr;
                                                var $3632 = self.type;
                                                var _empty$16 = List$is_empty$($3631);
                                                var _valid$17 = Maybe$if$((_x$17 => {
                                                    var $3634 = List$in$(a1 => (_x$17 === a1), $3631);
                                                    return $3634;
                                                }), _caller$5);
                                                var _ownr$18 = (_empty$16 || _valid$17);
                                                var _expr$19 = Kindelia$check$(_context$1, _world$2, $3624, $3632, _caller$5);
                                                var _body$20 = Kindelia$check$(_context$1, _world$2, $3625, _type$4, _caller$5);
                                                var $3633 = (_ownr$18 && (_expr$19 && _body$20));
                                                var $3630 = $3633;
                                                break;
                                        };
                                        var $3628 = $3630;
                                        break;
                                    case 'Maybe.none':
                                        var $3635 = Bool$false;
                                        var $3628 = $3635;
                                        break;
                                };
                                var $3626 = $3628;
                                break;
                        };
                        var $3552 = $3626;
                        break;
                    case 'Kindelia.Term.get':
                        var $3636 = self.name;
                        var $3637 = self.file;
                        var $3638 = self.body;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3640 = Bool$false;
                                var $3639 = $3640;
                                break;
                            case 'Kindelia.Type.effe':
                                var self = Kindelia$get_file$(_world$2, $3637);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3642 = self.value;
                                        var _file$11 = $3642;
                                        var self = _file$11;
                                        switch (self._) {
                                            case 'Kindelia.File.new':
                                                var $3644 = self.type;
                                                var _ctx2$16 = Kindelia$extend$(_context$1, List$cons$($3636, List$nil), List$cons$($3644, List$nil));
                                                var _body$17 = Kindelia$check$(_ctx2$16, _world$2, $3638, _type$4, _caller$5);
                                                var $3645 = _body$17;
                                                var $3643 = $3645;
                                                break;
                                        };
                                        var $3641 = $3643;
                                        break;
                                    case 'Maybe.none':
                                        var $3646 = Bool$false;
                                        var $3641 = $3646;
                                        break;
                                };
                                var $3639 = $3641;
                                break;
                        };
                        var $3552 = $3639;
                        break;
                    case 'Kindelia.Term.bind':
                        var $3647 = self.name;
                        var $3648 = self.type;
                        var $3649 = self.expr;
                        var $3650 = self.body;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3652 = Bool$false;
                                var $3651 = $3652;
                                break;
                            case 'Kindelia.Type.effe':
                                var _expr$11 = Kindelia$check$(_context$1, _world$2, $3649, Kindelia$Type$effe$($3648), _caller$5);
                                var _ctx2$12 = Map$set$($3647, $3648, _context$1);
                                var _body$13 = Kindelia$check$(_ctx2$12, _world$2, $3650, _type$4, _caller$5);
                                var $3653 = (_expr$11 && _body$13);
                                var $3651 = $3653;
                                break;
                        };
                        var $3552 = $3651;
                        break;
                    case 'Kindelia.Term.return':
                        var $3654 = self.expr;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.effe':
                                var $3656 = self.rety;
                                var $3657 = Kindelia$check$(_context$1, _world$2, $3654, $3656, _caller$5);
                                var $3655 = $3657;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3658 = Bool$false;
                                var $3655 = $3658;
                                break;
                        };
                        var $3552 = $3655;
                        break;
                    case 'Kindelia.Term.word':
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                                var $3660 = Bool$true;
                                var $3659 = $3660;
                                break;
                            case 'Kindelia.Type.data':
                            case 'Kindelia.Type.effe':
                                var $3661 = Bool$false;
                                var $3659 = $3661;
                                break;
                        };
                        var $3552 = $3659;
                        break;
                };
                var $3551 = $3552;
                break;
            case 'BBT.bin':
                var self = _term$3;
                switch (self._) {
                    case 'Kindelia.Term.var':
                        var $3663 = self.name;
                        var self = Map$get$($3663, _context$1);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3665 = self.value;
                                var $3666 = Kindelia$equal$($3665, _type$4);
                                var $3664 = $3666;
                                break;
                            case 'Maybe.none':
                                var $3667 = Bool$false;
                                var $3664 = $3667;
                                break;
                        };
                        var $3662 = $3664;
                        break;
                    case 'Kindelia.Term.call':
                        var $3668 = self.bond;
                        var $3669 = self.args;
                        var self = Kindelia$get_bond$(_world$2, $3668);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3671 = self.value;
                                var _bond$14 = $3671;
                                var self = _bond$14;
                                switch (self._) {
                                    case 'Kindelia.Bond.new':
                                        var $3673 = self.iprm;
                                        var $3674 = self.otyp;
                                        var _otyp$19 = Kindelia$equal$($3674, _type$4);
                                        var _ityp$20 = List$mapped$($3673, Pair$snd);
                                        var _args$21 = List$zip$($3669, _ityp$20);
                                        var _args$22 = List$all$((_x$22 => {
                                            var $3676 = Kindelia$check$(_context$1, _world$2, (() => {
                                                var self = _x$22;
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3677 = self.fst;
                                                        var $3678 = $3677;
                                                        return $3678;
                                                };
                                            })(), (() => {
                                                var self = _x$22;
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3679 = self.snd;
                                                        var $3680 = $3679;
                                                        return $3680;
                                                };
                                            })(), _caller$5);
                                            return $3676;
                                        }), _args$21);
                                        var $3675 = (_otyp$19 && _args$22);
                                        var $3672 = $3675;
                                        break;
                                };
                                var $3670 = $3672;
                                break;
                            case 'Maybe.none':
                                var $3681 = Bool$false;
                                var $3670 = $3681;
                                break;
                        };
                        var $3662 = $3670;
                        break;
                    case 'Kindelia.Term.let':
                        var $3682 = self.name;
                        var $3683 = self.type;
                        var $3684 = self.expr;
                        var $3685 = self.body;
                        var _expr$15 = Kindelia$check$(_context$1, _world$2, $3684, $3683, _caller$5);
                        var _ctx2$16 = Map$set$($3682, $3683, _context$1);
                        var _body$17 = Kindelia$check$(_ctx2$16, _world$2, $3685, _type$4, _caller$5);
                        var $3686 = (_expr$15 && _body$17);
                        var $3662 = $3686;
                        break;
                    case 'Kindelia.Term.create':
                        var $3687 = self.ctor;
                        var $3688 = self.vals;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.data':
                                var $3690 = self.name;
                                var self = Kindelia$get_data$(_world$2, $3690);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3692 = self.value;
                                        var _data$15 = $3692;
                                        var self = _data$15;
                                        switch (self._) {
                                            case 'Kindelia.Data.new':
                                                var self = Kindelia$get_constructor_value$(_data$15, $3687);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $3695 = self.value;
                                                        var _ctor$19 = $3695;
                                                        var self = _ctor$19;
                                                        switch (self._) {
                                                            case 'Kindelia.Constructor.new':
                                                                var $3697 = self.fprm;
                                                                var _size$22 = ((list_length($3688)) === (list_length($3697)));
                                                                var _ftyp$23 = List$mapped$($3697, Pair$snd);
                                                                var _vals$24 = List$zip$($3688, _ftyp$23);
                                                                var _vals$25 = List$all$((_x$25 => {
                                                                    var $3699 = Kindelia$check$(_context$1, _world$2, (() => {
                                                                        var self = _x$25;
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3700 = self.fst;
                                                                                var $3701 = $3700;
                                                                                return $3701;
                                                                        };
                                                                    })(), (() => {
                                                                        var self = _x$25;
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3702 = self.snd;
                                                                                var $3703 = $3702;
                                                                                return $3703;
                                                                        };
                                                                    })(), _caller$5);
                                                                    return $3699;
                                                                }), _vals$24);
                                                                var $3698 = (_size$22 && _vals$25);
                                                                var $3696 = $3698;
                                                                break;
                                                        };
                                                        var $3694 = $3696;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $3704 = Bool$false;
                                                        var $3694 = $3704;
                                                        break;
                                                };
                                                var $3693 = $3694;
                                                break;
                                        };
                                        var $3691 = $3693;
                                        break;
                                    case 'Maybe.none':
                                        var $3705 = Bool$false;
                                        var $3691 = $3705;
                                        break;
                                };
                                var $3689 = $3691;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.effe':
                                var $3706 = Bool$false;
                                var $3689 = $3706;
                                break;
                        };
                        var $3662 = $3689;
                        break;
                    case 'Kindelia.Term.match':
                        var $3707 = self.name;
                        var $3708 = self.data;
                        var $3709 = self.cses;
                        var self = Kindelia$get_data$(_world$2, $3708);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3711 = self.value;
                                var _data$15 = $3711;
                                var self = _data$15;
                                switch (self._) {
                                    case 'Kindelia.Data.new':
                                        var $3713 = self.constructors;
                                        var _size$18 = ((list_length($3709)) === (list_length($3713)));
                                        var _expr$19 = Kindelia$check$(_context$1, _world$2, Kindelia$Term$var$($3707), Kindelia$Type$data$($3708), _caller$5);
                                        var _cses$20 = List$zipped_with$($3709, $3713, (_case_body$20 => _case_ctor$21 => {
                                            var _nams$22 = List$map$((_fprm$22 => {
                                                var $3716 = ($3707 + ("." + (() => {
                                                    var self = _fprm$22;
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3717 = self.fst;
                                                            var $3718 = $3717;
                                                            return $3718;
                                                    };
                                                })()));
                                                return $3716;
                                            }), (() => {
                                                var self = _case_ctor$21;
                                                switch (self._) {
                                                    case 'Kindelia.Constructor.new':
                                                        var $3719 = self.fprm;
                                                        var $3720 = $3719;
                                                        return $3720;
                                                };
                                            })());
                                            var _typs$23 = List$mapped$((() => {
                                                var self = _case_ctor$21;
                                                switch (self._) {
                                                    case 'Kindelia.Constructor.new':
                                                        var $3721 = self.fprm;
                                                        var $3722 = $3721;
                                                        return $3722;
                                                };
                                            })(), Pair$snd);
                                            var _ctx2$24 = Kindelia$extend$(_context$1, _nams$22, _typs$23);
                                            var $3715 = Kindelia$check$(_ctx2$24, _world$2, _case_body$20, _type$4, _caller$5);
                                            return $3715;
                                        }));
                                        var $3714 = (_size$18 && List$and$(_cses$20));
                                        var $3712 = $3714;
                                        break;
                                };
                                var $3710 = $3712;
                                break;
                            case 'Maybe.none':
                                var $3723 = Bool$false;
                                var $3710 = $3723;
                                break;
                        };
                        var $3662 = $3710;
                        break;
                    case 'Kindelia.Term.compare':
                        var $3724 = self.val0;
                        var $3725 = self.val1;
                        var $3726 = self.iflt;
                        var $3727 = self.ifeq;
                        var $3728 = self.ifgt;
                        var _val0$16 = Kindelia$check$(_context$1, _world$2, $3724, Kindelia$Type$word, _caller$5);
                        var _val1$17 = Kindelia$check$(_context$1, _world$2, $3725, Kindelia$Type$word, _caller$5);
                        var _iflt$18 = Kindelia$check$(_context$1, _world$2, $3726, _type$4, _caller$5);
                        var _ifeq$19 = Kindelia$check$(_context$1, _world$2, $3727, _type$4, _caller$5);
                        var _ifgt$20 = Kindelia$check$(_context$1, _world$2, $3728, _type$4, _caller$5);
                        var $3729 = (_val0$16 && (_val1$17 && (_iflt$18 && (_ifeq$19 && _ifgt$20))));
                        var $3662 = $3729;
                        break;
                    case 'Kindelia.Term.operate':
                        var $3730 = self.val0;
                        var $3731 = self.val1;
                        var _val0$14 = Kindelia$check$(_context$1, _world$2, $3730, Kindelia$Type$word, _caller$5);
                        var _val1$15 = Kindelia$check$(_context$1, _world$2, $3731, Kindelia$Type$word, _caller$5);
                        var $3732 = (_val0$14 && _val1$15);
                        var $3662 = $3732;
                        break;
                    case 'Kindelia.Term.set':
                        var $3733 = self.file;
                        var $3734 = self.expr;
                        var $3735 = self.body;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3737 = Bool$false;
                                var $3736 = $3737;
                                break;
                            case 'Kindelia.Type.effe':
                                var self = Kindelia$get_file$(_world$2, $3733);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3739 = self.value;
                                        var _file$16 = $3739;
                                        var self = _file$16;
                                        switch (self._) {
                                            case 'Kindelia.File.new':
                                                var $3741 = self.ownr;
                                                var $3742 = self.type;
                                                var _empty$21 = List$is_empty$($3741);
                                                var _valid$22 = Maybe$if$((_x$22 => {
                                                    var $3744 = List$in$(a1 => (_x$22 === a1), $3741);
                                                    return $3744;
                                                }), _caller$5);
                                                var _ownr$23 = (_empty$21 || _valid$22);
                                                var _expr$24 = Kindelia$check$(_context$1, _world$2, $3734, $3742, _caller$5);
                                                var _body$25 = Kindelia$check$(_context$1, _world$2, $3735, _type$4, _caller$5);
                                                var $3743 = (_ownr$23 && (_expr$24 && _body$25));
                                                var $3740 = $3743;
                                                break;
                                        };
                                        var $3738 = $3740;
                                        break;
                                    case 'Maybe.none':
                                        var $3745 = Bool$false;
                                        var $3738 = $3745;
                                        break;
                                };
                                var $3736 = $3738;
                                break;
                        };
                        var $3662 = $3736;
                        break;
                    case 'Kindelia.Term.get':
                        var $3746 = self.name;
                        var $3747 = self.file;
                        var $3748 = self.body;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3750 = Bool$false;
                                var $3749 = $3750;
                                break;
                            case 'Kindelia.Type.effe':
                                var self = Kindelia$get_file$(_world$2, $3747);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3752 = self.value;
                                        var _file$16 = $3752;
                                        var self = _file$16;
                                        switch (self._) {
                                            case 'Kindelia.File.new':
                                                var $3754 = self.type;
                                                var _ctx2$21 = Kindelia$extend$(_context$1, List$cons$($3746, List$nil), List$cons$($3754, List$nil));
                                                var _body$22 = Kindelia$check$(_ctx2$21, _world$2, $3748, _type$4, _caller$5);
                                                var $3755 = _body$22;
                                                var $3753 = $3755;
                                                break;
                                        };
                                        var $3751 = $3753;
                                        break;
                                    case 'Maybe.none':
                                        var $3756 = Bool$false;
                                        var $3751 = $3756;
                                        break;
                                };
                                var $3749 = $3751;
                                break;
                        };
                        var $3662 = $3749;
                        break;
                    case 'Kindelia.Term.bind':
                        var $3757 = self.name;
                        var $3758 = self.type;
                        var $3759 = self.expr;
                        var $3760 = self.body;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3762 = Bool$false;
                                var $3761 = $3762;
                                break;
                            case 'Kindelia.Type.effe':
                                var _expr$16 = Kindelia$check$(_context$1, _world$2, $3759, Kindelia$Type$effe$($3758), _caller$5);
                                var _ctx2$17 = Map$set$($3757, $3758, _context$1);
                                var _body$18 = Kindelia$check$(_ctx2$17, _world$2, $3760, _type$4, _caller$5);
                                var $3763 = (_expr$16 && _body$18);
                                var $3761 = $3763;
                                break;
                        };
                        var $3662 = $3761;
                        break;
                    case 'Kindelia.Term.return':
                        var $3764 = self.expr;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.effe':
                                var $3766 = self.rety;
                                var $3767 = Kindelia$check$(_context$1, _world$2, $3764, $3766, _caller$5);
                                var $3765 = $3767;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3768 = Bool$false;
                                var $3765 = $3768;
                                break;
                        };
                        var $3662 = $3765;
                        break;
                    case 'Kindelia.Term.word':
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                                var $3770 = Bool$true;
                                var $3769 = $3770;
                                break;
                            case 'Kindelia.Type.data':
                            case 'Kindelia.Type.effe':
                                var $3771 = Bool$false;
                                var $3769 = $3771;
                                break;
                        };
                        var $3662 = $3769;
                        break;
                };
                var $3551 = $3662;
                break;
        };
        return $3551;
    };
    const Kindelia$check = x0 => x1 => x2 => x3 => x4 => Kindelia$check$(x0, x1, x2, x3, x4);

    function Kindelia$Entry$file$(_value$1) {
        var $3772 = ({
            _: 'Kindelia.Entry.file',
            'value': _value$1
        });
        return $3772;
    };
    const Kindelia$Entry$file = x0 => Kindelia$Entry$file$(x0);

    function Kindelia$sanitize$many$(_world$1, _table$2, _fresh$3, _terms$4) {
        var self = _terms$4;
        switch (self._) {
            case 'List.cons':
                var $3774 = self.head;
                var $3775 = self.tail;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3774);
                switch (self._) {
                    case 'Pair.new':
                        var $3777 = self.fst;
                        var $3778 = self.snd;
                        var self = Kindelia$sanitize$many$(_world$1, _table$2, $3777, $3775);
                        switch (self._) {
                            case 'Pair.new':
                                var $3780 = self.fst;
                                var $3781 = self.snd;
                                var $3782 = Pair$new$($3780, List$cons$($3778, $3781));
                                var $3779 = $3782;
                                break;
                        };
                        var $3776 = $3779;
                        break;
                };
                var $3773 = $3776;
                break;
            case 'List.nil':
                var $3783 = Pair$new$(_fresh$3, List$nil);
                var $3773 = $3783;
                break;
        };
        return $3773;
    };
    const Kindelia$sanitize$many = x0 => x1 => x2 => x3 => Kindelia$sanitize$many$(x0, x1, x2, x3);

    function Triple$new$(_fst$4, _snd$5, _trd$6) {
        var $3784 = ({
            _: 'Triple.new',
            'fst': _fst$4,
            'snd': _snd$5,
            'trd': _trd$6
        });
        return $3784;
    };
    const Triple$new = x0 => x1 => x2 => Triple$new$(x0, x1, x2);

    function Kindelia$rename$(_table$1, _fresh$2, _old_name$3) {
        var _new_name$4 = ("$" + Nat$show$(_fresh$2));
        var _table$5 = Map$set$(_old_name$3, _new_name$4, _table$1);
        var _fresh$6 = Nat$succ$(_fresh$2);
        var $3785 = Triple$new$(_table$5, _fresh$6, _new_name$4);
        return $3785;
    };
    const Kindelia$rename = x0 => x1 => x2 => Kindelia$rename$(x0, x1, x2);
    const List$for = a0 => a1 => a2 => (list_for(a0)(a1)(a2));

    function Kindelia$sanitize$cases$(_world$1, _table$2, _fresh$3, _old_name$4, _new_name$5, _ctrs$6, _cses$7) {
        var self = _ctrs$6;
        switch (self._) {
            case 'List.cons':
                var $3787 = self.head;
                var $3788 = self.tail;
                var self = _cses$7;
                switch (self._) {
                    case 'List.cons':
                        var $3790 = self.head;
                        var $3791 = self.tail;
                        var _new_table$12 = _table$2;
                        var _new_table$13 = (() => {
                            var $3794 = _new_table$12;
                            var self = $3787;
                            switch (self._) {
                                case 'Kindelia.Constructor.new':
                                    var $3796 = self.fprm;
                                    var $3797 = $3796;
                                    var $3795 = $3797;
                                    break;
                            };
                            let _new_table$14 = $3794;
                            let _field$13;
                            while ($3795._ === 'List.cons') {
                                _field$13 = $3795.head;
                                var $3794 = Map$set$((_old_name$4 + ("." + (() => {
                                    var self = _field$13;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3798 = self.fst;
                                            var $3799 = $3798;
                                            return $3799;
                                    };
                                })())), (_new_name$5 + ("." + (() => {
                                    var self = _field$13;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3800 = self.fst;
                                            var $3801 = $3800;
                                            return $3801;
                                    };
                                })())), _new_table$14);
                                _new_table$14 = $3794;
                                $3795 = $3795.tail;
                            }
                            return _new_table$14;
                        })();
                        var self = Kindelia$sanitize$(_world$1, _new_table$13, _fresh$3, $3790);
                        switch (self._) {
                            case 'Pair.new':
                                var $3802 = self.fst;
                                var $3803 = self.snd;
                                var self = Kindelia$sanitize$cases$(_world$1, _table$2, $3802, _old_name$4, _new_name$5, $3788, $3791);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3805 = self.fst;
                                        var $3806 = self.snd;
                                        var $3807 = Pair$new$($3805, List$cons$($3803, $3806));
                                        var $3804 = $3807;
                                        break;
                                };
                                var $3792 = $3804;
                                break;
                        };
                        var $3789 = $3792;
                        break;
                    case 'List.nil':
                        var $3808 = Pair$new$(_fresh$3, List$nil);
                        var $3789 = $3808;
                        break;
                };
                var $3786 = $3789;
                break;
            case 'List.nil':
                var self = _cses$7;
                switch (self._) {
                    case 'List.nil':
                    case 'List.cons':
                        var $3810 = Pair$new$(_fresh$3, List$nil);
                        var $3809 = $3810;
                        break;
                };
                var $3786 = $3809;
                break;
        };
        return $3786;
    };
    const Kindelia$sanitize$cases = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kindelia$sanitize$cases$(x0, x1, x2, x3, x4, x5, x6);

    function Kindelia$sanitize$(_world$1, _table$2, _fresh$3, _term$4) {
        var self = _term$4;
        switch (self._) {
            case 'Kindelia.Term.var':
                var $3812 = self.name;
                var _term$6 = Kindelia$Term$var$(Maybe$default$(Map$get$($3812, _table$2), $3812));
                var $3813 = Pair$new$(_fresh$3, _term$6);
                var $3811 = $3813;
                break;
            case 'Kindelia.Term.call':
                var $3814 = self.bond;
                var $3815 = self.args;
                var self = Kindelia$sanitize$many$(_world$1, _table$2, _fresh$3, $3815);
                switch (self._) {
                    case 'Pair.new':
                        var $3817 = self.fst;
                        var $3818 = self.snd;
                        var $3819 = Pair$new$($3817, Kindelia$Term$call$($3814, $3818));
                        var $3816 = $3819;
                        break;
                };
                var $3811 = $3816;
                break;
            case 'Kindelia.Term.let':
                var $3820 = self.name;
                var $3821 = self.type;
                var $3822 = self.expr;
                var $3823 = self.body;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3822);
                switch (self._) {
                    case 'Pair.new':
                        var $3825 = self.fst;
                        var $3826 = self.snd;
                        var self = Kindelia$rename$(_table$2, $3825, $3820);
                        switch (self._) {
                            case 'Triple.new':
                                var $3828 = self.fst;
                                var $3829 = self.snd;
                                var $3830 = self.trd;
                                var self = Kindelia$sanitize$(_world$1, $3828, $3829, $3823);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3832 = self.fst;
                                        var $3833 = self.snd;
                                        var $3834 = Pair$new$($3832, Kindelia$Term$let$($3830, $3821, $3826, $3833));
                                        var $3831 = $3834;
                                        break;
                                };
                                var $3827 = $3831;
                                break;
                        };
                        var $3824 = $3827;
                        break;
                };
                var $3811 = $3824;
                break;
            case 'Kindelia.Term.create':
                var $3835 = self.ctor;
                var $3836 = self.vals;
                var self = Kindelia$sanitize$many$(_world$1, _table$2, _fresh$3, $3836);
                switch (self._) {
                    case 'Pair.new':
                        var $3838 = self.fst;
                        var $3839 = self.snd;
                        var $3840 = Pair$new$($3838, Kindelia$Term$create$($3835, $3839));
                        var $3837 = $3840;
                        break;
                };
                var $3811 = $3837;
                break;
            case 'Kindelia.Term.match':
                var $3841 = self.name;
                var $3842 = self.data;
                var $3843 = self.cses;
                var _ctrs$8 = Maybe$default$(Kindelia$get_constructors$(_world$1, $3842), List$nil);
                var _old_name$9 = $3841;
                var _new_name$10 = Maybe$default$(Map$get$($3841, _table$2), $3841);
                var self = Kindelia$sanitize$cases$(_world$1, _table$2, _fresh$3, _old_name$9, _new_name$10, _ctrs$8, $3843);
                switch (self._) {
                    case 'Pair.new':
                        var $3845 = self.fst;
                        var $3846 = self.snd;
                        var $3847 = Pair$new$($3845, Kindelia$Term$match$(_new_name$10, $3842, $3846));
                        var $3844 = $3847;
                        break;
                };
                var $3811 = $3844;
                break;
            case 'Kindelia.Term.word':
                var $3848 = self.numb;
                var $3849 = Pair$new$(_fresh$3, Kindelia$Term$word$($3848));
                var $3811 = $3849;
                break;
            case 'Kindelia.Term.compare':
                var $3850 = self.val0;
                var $3851 = self.val1;
                var $3852 = self.iflt;
                var $3853 = self.ifeq;
                var $3854 = self.ifgt;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3850);
                switch (self._) {
                    case 'Pair.new':
                        var $3856 = self.fst;
                        var $3857 = self.snd;
                        var self = Kindelia$sanitize$(_world$1, _table$2, $3856, $3851);
                        switch (self._) {
                            case 'Pair.new':
                                var $3859 = self.fst;
                                var $3860 = self.snd;
                                var self = Kindelia$sanitize$(_world$1, _table$2, $3859, $3852);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3862 = self.fst;
                                        var $3863 = self.snd;
                                        var self = Kindelia$sanitize$(_world$1, _table$2, $3862, $3853);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3865 = self.fst;
                                                var $3866 = self.snd;
                                                var self = Kindelia$sanitize$(_world$1, _table$2, $3865, $3854);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3868 = self.fst;
                                                        var $3869 = self.snd;
                                                        var $3870 = Pair$new$($3868, Kindelia$Term$compare$($3857, $3860, $3863, $3866, $3869));
                                                        var $3867 = $3870;
                                                        break;
                                                };
                                                var $3864 = $3867;
                                                break;
                                        };
                                        var $3861 = $3864;
                                        break;
                                };
                                var $3858 = $3861;
                                break;
                        };
                        var $3855 = $3858;
                        break;
                };
                var $3811 = $3855;
                break;
            case 'Kindelia.Term.operate':
                var $3871 = self.oper;
                var $3872 = self.val0;
                var $3873 = self.val1;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3872);
                switch (self._) {
                    case 'Pair.new':
                        var $3875 = self.fst;
                        var $3876 = self.snd;
                        var self = Kindelia$sanitize$(_world$1, _table$2, $3875, $3873);
                        switch (self._) {
                            case 'Pair.new':
                                var $3878 = self.fst;
                                var $3879 = self.snd;
                                var $3880 = Pair$new$($3878, Kindelia$Term$operate$($3871, $3876, $3879));
                                var $3877 = $3880;
                                break;
                        };
                        var $3874 = $3877;
                        break;
                };
                var $3811 = $3874;
                break;
            case 'Kindelia.Term.set':
                var $3881 = self.file;
                var $3882 = self.expr;
                var $3883 = self.body;
                var self = Kindelia$get_file$(_world$1, $3881);
                switch (self._) {
                    case 'Maybe.some':
                        var $3885 = self.value;
                        var _file$9 = $3885;
                        var self = _file$9;
                        switch (self._) {
                            case 'Kindelia.File.new':
                                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3882);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3888 = self.fst;
                                        var $3889 = self.snd;
                                        var self = Kindelia$sanitize$(_world$1, _table$2, $3888, $3883);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3891 = self.fst;
                                                var $3892 = self.snd;
                                                var $3893 = Pair$new$($3891, Kindelia$Term$set$($3881, $3889, $3892));
                                                var $3890 = $3893;
                                                break;
                                        };
                                        var $3887 = $3890;
                                        break;
                                };
                                var $3886 = $3887;
                                break;
                        };
                        var $3884 = $3886;
                        break;
                    case 'Maybe.none':
                        var $3894 = Pair$new$(_fresh$3, _term$4);
                        var $3884 = $3894;
                        break;
                };
                var $3811 = $3884;
                break;
            case 'Kindelia.Term.get':
                var $3895 = self.name;
                var $3896 = self.file;
                var $3897 = self.body;
                var self = Kindelia$get_file$(_world$1, $3896);
                switch (self._) {
                    case 'Maybe.some':
                        var $3899 = self.value;
                        var _file$9 = $3899;
                        var self = _file$9;
                        switch (self._) {
                            case 'Kindelia.File.new':
                                var self = Kindelia$rename$(_table$2, _fresh$3, $3895);
                                switch (self._) {
                                    case 'Triple.new':
                                        var $3902 = self.fst;
                                        var $3903 = self.snd;
                                        var $3904 = self.trd;
                                        var self = Kindelia$sanitize$(_world$1, $3902, $3903, $3897);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3906 = self.fst;
                                                var $3907 = self.snd;
                                                var $3908 = Pair$new$($3906, Kindelia$Term$get$($3904, $3896, $3907));
                                                var $3905 = $3908;
                                                break;
                                        };
                                        var $3901 = $3905;
                                        break;
                                };
                                var $3900 = $3901;
                                break;
                        };
                        var $3898 = $3900;
                        break;
                    case 'Maybe.none':
                        var $3909 = Pair$new$(_fresh$3, _term$4);
                        var $3898 = $3909;
                        break;
                };
                var $3811 = $3898;
                break;
            case 'Kindelia.Term.bind':
                var $3910 = self.name;
                var $3911 = self.type;
                var $3912 = self.expr;
                var $3913 = self.body;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3912);
                switch (self._) {
                    case 'Pair.new':
                        var $3915 = self.fst;
                        var $3916 = self.snd;
                        var self = Kindelia$rename$(_table$2, $3915, $3910);
                        switch (self._) {
                            case 'Triple.new':
                                var $3918 = self.fst;
                                var $3919 = self.snd;
                                var $3920 = self.trd;
                                var self = Kindelia$sanitize$(_world$1, $3918, $3919, $3913);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3922 = self.fst;
                                        var $3923 = self.snd;
                                        var $3924 = Pair$new$($3922, Kindelia$Term$bind$($3920, $3911, $3916, $3923));
                                        var $3921 = $3924;
                                        break;
                                };
                                var $3917 = $3921;
                                break;
                        };
                        var $3914 = $3917;
                        break;
                };
                var $3811 = $3914;
                break;
            case 'Kindelia.Term.return':
                var $3925 = self.expr;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3925);
                switch (self._) {
                    case 'Pair.new':
                        var $3927 = self.fst;
                        var $3928 = self.snd;
                        var $3929 = Pair$new$($3927, Kindelia$Term$return$($3928));
                        var $3926 = $3929;
                        break;
                };
                var $3811 = $3926;
                break;
        };
        return $3811;
    };
    const Kindelia$sanitize = x0 => x1 => x2 => x3 => Kindelia$sanitize$(x0, x1, x2, x3);

    function Kindelia$Runtime$(_A$1) {
        var $3930 = null;
        return $3930;
    };
    const Kindelia$Runtime = x0 => Kindelia$Runtime$(x0);

    function Kindelia$Runtime$new$(_world$2, _subst$3, _fresh$4, _gas$5, _term$6) {
        var $3931 = ({
            _: 'Kindelia.Runtime.new',
            'world': _world$2,
            'subst': _subst$3,
            'fresh': _fresh$4,
            'gas': _gas$5,
            'term': _term$6
        });
        return $3931;
    };
    const Kindelia$Runtime$new = x0 => x1 => x2 => x3 => x4 => Kindelia$Runtime$new$(x0, x1, x2, x3, x4);

    function Triple$(_A$1, _B$2, _C$3) {
        var $3932 = null;
        return $3932;
    };
    const Triple = x0 => x1 => x2 => Triple$(x0, x1, x2);

    function Kindelia$rename$many$(_table$1, _fresh$2, _names$3) {
        var self = _names$3;
        switch (self._) {
            case 'List.cons':
                var $3934 = self.head;
                var $3935 = self.tail;
                var self = Kindelia$rename$(_table$1, _fresh$2, $3934);
                switch (self._) {
                    case 'Triple.new':
                        var $3937 = self.fst;
                        var $3938 = self.snd;
                        var $3939 = self.trd;
                        var self = Kindelia$rename$many$($3937, $3938, $3935);
                        switch (self._) {
                            case 'Triple.new':
                                var $3941 = self.fst;
                                var $3942 = self.snd;
                                var $3943 = self.trd;
                                var $3944 = Triple$new$($3941, $3942, List$cons$($3939, $3943));
                                var $3940 = $3944;
                                break;
                        };
                        var $3936 = $3940;
                        break;
                };
                var $3933 = $3936;
                break;
            case 'List.nil':
                var $3945 = Triple$new$(_table$1, _fresh$2, List$nil);
                var $3933 = $3945;
                break;
        };
        return $3933;
    };
    const Kindelia$rename$many = x0 => x1 => x2 => Kindelia$rename$many$(x0, x1, x2);

    function Kindelia$get_constructor_index$(_data$1, _name$2) {
        var $3946 = Maybe$mapped$(List$ifind$((_i$3 => _ctr$4 => {
            var $3947 = ((() => {
                var self = _ctr$4;
                switch (self._) {
                    case 'Kindelia.Constructor.new':
                        var $3948 = self.name;
                        var $3949 = $3948;
                        return $3949;
                };
            })() === _name$2);
            return $3947;
        }), (() => {
            var self = _data$1;
            switch (self._) {
                case 'Kindelia.Data.new':
                    var $3950 = self.constructors;
                    var $3951 = $3950;
                    return $3951;
            };
        })()), (_x$3 => {
            var self = _x$3;
            switch (self._) {
                case 'Pair.new':
                    var $3953 = self.fst;
                    var $3954 = $3953;
                    var $3952 = $3954;
                    break;
            };
            return $3952;
        }));
        return $3946;
    };
    const Kindelia$get_constructor_index = x0 => x1 => Kindelia$get_constructor_index$(x0, x1);
    const U64$ltn = a0 => a1 => (a0 < a1);
    const U64$eql = a0 => a1 => (a0 === a1);

    function U64$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $3956 = Cmp$ltn;
            var $3955 = $3956;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $3958 = Cmp$eql;
                var $3957 = $3958;
            } else {
                var $3959 = Cmp$gtn;
                var $3957 = $3959;
            };
            var $3955 = $3957;
        };
        return $3955;
    };
    const U64$cmp = x0 => x1 => U64$cmp$(x0, x1);
    const U64$add = a0 => a1 => ((a0 + a1) & 0xFFFFFFFFFFFFFFFFn);
    const U64$sub = a0 => a1 => ((a0 - a1) & 0xFFFFFFFFFFFFFFFFn);
    const U64$mul = a0 => a1 => ((a0 * a1) & 0xFFFFFFFFFFFFFFFFn);

    function Word$bit_length$go$(_word$2, _c$3, _n$4) {
        var Word$bit_length$go$ = (_word$2, _c$3, _n$4) => ({
            ctr: 'TCO',
            arg: [_word$2, _c$3, _n$4]
        });
        var Word$bit_length$go = _word$2 => _c$3 => _n$4 => Word$bit_length$go$(_word$2, _c$3, _n$4);
        var arg = [_word$2, _c$3, _n$4];
        while (true) {
            let [_word$2, _c$3, _n$4] = arg;
            var R = (() => {
                var self = _word$2;
                switch (self._) {
                    case 'Word.o':
                        var $3960 = self.pred;
                        var $3961 = Word$bit_length$go$($3960, Nat$succ$(_c$3), _n$4);
                        return $3961;
                    case 'Word.i':
                        var $3962 = self.pred;
                        var $3963 = Word$bit_length$go$($3962, Nat$succ$(_c$3), Nat$succ$(_c$3));
                        return $3963;
                    case 'Word.e':
                        var $3964 = _n$4;
                        return $3964;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$bit_length$go = x0 => x1 => x2 => Word$bit_length$go$(x0, x1, x2);

    function Word$bit_length$(_word$2) {
        var $3965 = Word$bit_length$go$(_word$2, 0n, 0n);
        return $3965;
    };
    const Word$bit_length = x0 => Word$bit_length$(x0);

    function Cmp$as_gte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $3967 = Bool$false;
                var $3966 = $3967;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $3968 = Bool$true;
                var $3966 = $3968;
                break;
        };
        return $3966;
    };
    const Cmp$as_gte = x0 => Cmp$as_gte$(x0);

    function Word$gte$(_a$2, _b$3) {
        var $3969 = Cmp$as_gte$(Word$cmp$(_a$2, _b$3));
        return $3969;
    };
    const Word$gte = x0 => x1 => Word$gte$(x0, x1);

    function Word$or$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $3971 = self.pred;
                var $3972 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3974 = self.pred;
                            var $3975 = (_a$pred$9 => {
                                var $3976 = Word$o$(Word$or$(_a$pred$9, $3974));
                                return $3976;
                            });
                            var $3973 = $3975;
                            break;
                        case 'Word.i':
                            var $3977 = self.pred;
                            var $3978 = (_a$pred$9 => {
                                var $3979 = Word$i$(Word$or$(_a$pred$9, $3977));
                                return $3979;
                            });
                            var $3973 = $3978;
                            break;
                        case 'Word.e':
                            var $3980 = (_a$pred$7 => {
                                var $3981 = Word$e;
                                return $3981;
                            });
                            var $3973 = $3980;
                            break;
                    };
                    var $3973 = $3973($3971);
                    return $3973;
                });
                var $3970 = $3972;
                break;
            case 'Word.i':
                var $3982 = self.pred;
                var $3983 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3985 = self.pred;
                            var $3986 = (_a$pred$9 => {
                                var $3987 = Word$i$(Word$or$(_a$pred$9, $3985));
                                return $3987;
                            });
                            var $3984 = $3986;
                            break;
                        case 'Word.i':
                            var $3988 = self.pred;
                            var $3989 = (_a$pred$9 => {
                                var $3990 = Word$i$(Word$or$(_a$pred$9, $3988));
                                return $3990;
                            });
                            var $3984 = $3989;
                            break;
                        case 'Word.e':
                            var $3991 = (_a$pred$7 => {
                                var $3992 = Word$e;
                                return $3992;
                            });
                            var $3984 = $3991;
                            break;
                    };
                    var $3984 = $3984($3982);
                    return $3984;
                });
                var $3970 = $3983;
                break;
            case 'Word.e':
                var $3993 = (_b$4 => {
                    var $3994 = Word$e;
                    return $3994;
                });
                var $3970 = $3993;
                break;
        };
        var $3970 = $3970(_b$3);
        return $3970;
    };
    const Word$or = x0 => x1 => Word$or$(x0, x1);

    function Word$shift_right$one$go$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3996 = self.pred;
                var $3997 = Word$o$(Word$shift_right$one$go$($3996));
                var $3995 = $3997;
                break;
            case 'Word.i':
                var $3998 = self.pred;
                var $3999 = Word$i$(Word$shift_right$one$go$($3998));
                var $3995 = $3999;
                break;
            case 'Word.e':
                var $4000 = Word$o$(Word$e);
                var $3995 = $4000;
                break;
        };
        return $3995;
    };
    const Word$shift_right$one$go = x0 => Word$shift_right$one$go$(x0);

    function Word$shift_right$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $4002 = self.pred;
                var $4003 = Word$shift_right$one$go$($4002);
                var $4001 = $4003;
                break;
            case 'Word.i':
                var $4004 = self.pred;
                var $4005 = Word$shift_right$one$go$($4004);
                var $4001 = $4005;
                break;
            case 'Word.e':
                var $4006 = Word$e;
                var $4001 = $4006;
                break;
        };
        return $4001;
    };
    const Word$shift_right$one = x0 => Word$shift_right$one$(x0);

    function Word$shift_right$(_value$2, _n$3) {
        var Word$shift_right$ = (_value$2, _n$3) => ({
            ctr: 'TCO',
            arg: [_value$2, _n$3]
        });
        var Word$shift_right = _value$2 => _n$3 => Word$shift_right$(_value$2, _n$3);
        var arg = [_value$2, _n$3];
        while (true) {
            let [_value$2, _n$3] = arg;
            var R = (() => {
                var self = _n$3;
                if (self === 0n) {
                    var $4007 = _value$2;
                    return $4007;
                } else {
                    var $4008 = (self - 1n);
                    var $4009 = Word$shift_right$(Word$shift_right$one$(_value$2), $4008);
                    return $4009;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_right = x0 => x1 => Word$shift_right$(x0, x1);

    function Word$div$go$(_shift$2, _sub_copy$3, _shift_copy$4, _value$5) {
        var Word$div$go$ = (_shift$2, _sub_copy$3, _shift_copy$4, _value$5) => ({
            ctr: 'TCO',
            arg: [_shift$2, _sub_copy$3, _shift_copy$4, _value$5]
        });
        var Word$div$go = _shift$2 => _sub_copy$3 => _shift_copy$4 => _value$5 => Word$div$go$(_shift$2, _sub_copy$3, _shift_copy$4, _value$5);
        var arg = [_shift$2, _sub_copy$3, _shift_copy$4, _value$5];
        while (true) {
            let [_shift$2, _sub_copy$3, _shift_copy$4, _value$5] = arg;
            var R = (() => {
                var self = Word$gte$(_sub_copy$3, _shift_copy$4);
                if (self) {
                    var _mask$6 = Word$shift_left$(Word$inc$(Word$to_zero$(_sub_copy$3)), _shift$2);
                    var $4010 = Pair$new$(Bool$true, Word$or$(_value$5, _mask$6));
                    var self = $4010;
                } else {
                    var $4011 = Pair$new$(Bool$false, _value$5);
                    var self = $4011;
                };
                switch (self._) {
                    case 'Pair.new':
                        var $4012 = self.fst;
                        var $4013 = self.snd;
                        var self = _shift$2;
                        if (self === 0n) {
                            var $4015 = $4013;
                            var $4014 = $4015;
                        } else {
                            var $4016 = (self - 1n);
                            var _new_shift_copy$9 = Word$shift_right$(_shift_copy$4, 1n);
                            var self = $4012;
                            if (self) {
                                var $4018 = Word$div$go$($4016, Word$sub$(_sub_copy$3, _shift_copy$4), _new_shift_copy$9, $4013);
                                var $4017 = $4018;
                            } else {
                                var $4019 = Word$div$go$($4016, _sub_copy$3, _new_shift_copy$9, $4013);
                                var $4017 = $4019;
                            };
                            var $4014 = $4017;
                        };
                        return $4014;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$div$go = x0 => x1 => x2 => x3 => Word$div$go$(x0, x1, x2, x3);

    function Word$div$(_a$2, _b$3) {
        var _a_bits$4 = Word$bit_length$(_a$2);
        var _b_bits$5 = Word$bit_length$(_b$3);
        var self = (_a_bits$4 < _b_bits$5);
        if (self) {
            var $4021 = Word$to_zero$(_a$2);
            var $4020 = $4021;
        } else {
            var _shift$6 = (_a_bits$4 - _b_bits$5 <= 0n ? 0n : _a_bits$4 - _b_bits$5);
            var _shift_copy$7 = Word$shift_left$(_b$3, _shift$6);
            var $4022 = Word$div$go$(_shift$6, _a$2, _shift_copy$7, Word$to_zero$(_a$2));
            var $4020 = $4022;
        };
        return $4020;
    };
    const Word$div = x0 => x1 => Word$div$(x0, x1);
    const U64$div = a0 => a1 => ((a0 / a1) & 0xFFFFFFFFFFFFFFFFn);

    function Word$mod$(_a$2, _b$3) {
        var _q$4 = Word$div$(_a$2, _b$3);
        var $4023 = Word$sub$(_a$2, Word$mul$(_b$3, _q$4));
        return $4023;
    };
    const Word$mod = x0 => x1 => Word$mod$(x0, x1);
    const U64$mod = a0 => a1 => (a0 % a1);
    const U64$or = a0 => a1 => (a0 | a1);

    function Word$and$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $4025 = self.pred;
                var $4026 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4028 = self.pred;
                            var $4029 = (_a$pred$9 => {
                                var $4030 = Word$o$(Word$and$(_a$pred$9, $4028));
                                return $4030;
                            });
                            var $4027 = $4029;
                            break;
                        case 'Word.i':
                            var $4031 = self.pred;
                            var $4032 = (_a$pred$9 => {
                                var $4033 = Word$o$(Word$and$(_a$pred$9, $4031));
                                return $4033;
                            });
                            var $4027 = $4032;
                            break;
                        case 'Word.e':
                            var $4034 = (_a$pred$7 => {
                                var $4035 = Word$e;
                                return $4035;
                            });
                            var $4027 = $4034;
                            break;
                    };
                    var $4027 = $4027($4025);
                    return $4027;
                });
                var $4024 = $4026;
                break;
            case 'Word.i':
                var $4036 = self.pred;
                var $4037 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4039 = self.pred;
                            var $4040 = (_a$pred$9 => {
                                var $4041 = Word$o$(Word$and$(_a$pred$9, $4039));
                                return $4041;
                            });
                            var $4038 = $4040;
                            break;
                        case 'Word.i':
                            var $4042 = self.pred;
                            var $4043 = (_a$pred$9 => {
                                var $4044 = Word$i$(Word$and$(_a$pred$9, $4042));
                                return $4044;
                            });
                            var $4038 = $4043;
                            break;
                        case 'Word.e':
                            var $4045 = (_a$pred$7 => {
                                var $4046 = Word$e;
                                return $4046;
                            });
                            var $4038 = $4045;
                            break;
                    };
                    var $4038 = $4038($4036);
                    return $4038;
                });
                var $4024 = $4037;
                break;
            case 'Word.e':
                var $4047 = (_b$4 => {
                    var $4048 = Word$e;
                    return $4048;
                });
                var $4024 = $4047;
                break;
        };
        var $4024 = $4024(_b$3);
        return $4024;
    };
    const Word$and = x0 => x1 => Word$and$(x0, x1);
    const U64$and = a0 => a1 => (a0 & a1);

    function Word$xor$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $4050 = self.pred;
                var $4051 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4053 = self.pred;
                            var $4054 = (_a$pred$9 => {
                                var $4055 = Word$o$(Word$xor$(_a$pred$9, $4053));
                                return $4055;
                            });
                            var $4052 = $4054;
                            break;
                        case 'Word.i':
                            var $4056 = self.pred;
                            var $4057 = (_a$pred$9 => {
                                var $4058 = Word$i$(Word$xor$(_a$pred$9, $4056));
                                return $4058;
                            });
                            var $4052 = $4057;
                            break;
                        case 'Word.e':
                            var $4059 = (_a$pred$7 => {
                                var $4060 = Word$e;
                                return $4060;
                            });
                            var $4052 = $4059;
                            break;
                    };
                    var $4052 = $4052($4050);
                    return $4052;
                });
                var $4049 = $4051;
                break;
            case 'Word.i':
                var $4061 = self.pred;
                var $4062 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4064 = self.pred;
                            var $4065 = (_a$pred$9 => {
                                var $4066 = Word$i$(Word$xor$(_a$pred$9, $4064));
                                return $4066;
                            });
                            var $4063 = $4065;
                            break;
                        case 'Word.i':
                            var $4067 = self.pred;
                            var $4068 = (_a$pred$9 => {
                                var $4069 = Word$o$(Word$xor$(_a$pred$9, $4067));
                                return $4069;
                            });
                            var $4063 = $4068;
                            break;
                        case 'Word.e':
                            var $4070 = (_a$pred$7 => {
                                var $4071 = Word$e;
                                return $4071;
                            });
                            var $4063 = $4070;
                            break;
                    };
                    var $4063 = $4063($4061);
                    return $4063;
                });
                var $4049 = $4062;
                break;
            case 'Word.e':
                var $4072 = (_b$4 => {
                    var $4073 = Word$e;
                    return $4073;
                });
                var $4049 = $4072;
                break;
        };
        var $4049 = $4049(_b$3);
        return $4049;
    };
    const Word$xor = x0 => x1 => Word$xor$(x0, x1);
    const U64$xor = a0 => a1 => (a0 ^ a1);

    function Kindelia$reduce$(_state$1) {
        var self = _state$1;
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4075 = self.world;
                var $4076 = self.subst;
                var $4077 = self.fresh;
                var $4078 = self.gas;
                var $4079 = self.term;
                var self = $4079;
                switch (self._) {
                    case 'Kindelia.Term.var':
                        var $4081 = self.name;
                        var _term$8 = Maybe$default$(Map$get$($4081, $4076), $4079);
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4075, $4076, $4077, $4078, _term$8));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4083 = self.world;
                                var $4084 = self.subst;
                                var $4085 = self.fresh;
                                var $4086 = self.gas;
                                var $4087 = self.term;
                                var $4088 = Kindelia$Runtime$new$($4083, Map$set$($4081, $4087, $4084), $4085, $4086, $4087);
                                var $4082 = $4088;
                                break;
                        };
                        var $4080 = $4082;
                        break;
                    case 'Kindelia.Term.call':
                        var $4089 = self.bond;
                        var $4090 = self.args;
                        var self = Kindelia$get_bond$($4075, $4089);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4092 = self.value;
                                var _bond$10 = $4092;
                                var self = _bond$10;
                                switch (self._) {
                                    case 'Kindelia.Bond.new':
                                        var $4094 = self.iprm;
                                        var $4095 = self.main;
                                        var _inam$15 = List$mapped$($4094, Pair$fst);
                                        var self = Kindelia$rename$many$(Map$from_list$(List$nil), $4077, _inam$15);
                                        switch (self._) {
                                            case 'Triple.new':
                                                var $4097 = self.fst;
                                                var $4098 = self.snd;
                                                var $4099 = self.trd;
                                                var self = Kindelia$sanitize$($4075, $4097, $4098, $4095);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $4101 = self.fst;
                                                        var $4102 = self.snd;
                                                        var _subst$21 = Kindelia$extend$($4076, $4099, $4090);
                                                        var $4103 = Kindelia$reduce$(Kindelia$Runtime$new$($4075, _subst$21, $4101, $4078, $4102));
                                                        var $4100 = $4103;
                                                        break;
                                                };
                                                var $4096 = $4100;
                                                break;
                                        };
                                        var $4093 = $4096;
                                        break;
                                };
                                var $4091 = $4093;
                                break;
                            case 'Maybe.none':
                                var $4104 = _state$1;
                                var $4091 = $4104;
                                break;
                        };
                        var $4080 = $4091;
                        break;
                    case 'Kindelia.Term.let':
                        var $4105 = self.name;
                        var $4106 = self.expr;
                        var $4107 = self.body;
                        var $4108 = Kindelia$reduce$(Kindelia$Runtime$new$($4075, Map$set$($4105, $4106, $4076), $4077, $4078, $4107));
                        var $4080 = $4108;
                        break;
                    case 'Kindelia.Term.match':
                        var $4109 = self.name;
                        var $4110 = self.data;
                        var $4111 = self.cses;
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4075, $4076, $4077, $4078, Maybe$default$(Map$get$($4109, $4076), Kindelia$Term$word$(0n))));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4113 = self.world;
                                var $4114 = self.subst;
                                var $4115 = self.fresh;
                                var $4116 = self.gas;
                                var $4117 = self.term;
                                var self = $4117;
                                switch (self._) {
                                    case 'Kindelia.Term.create':
                                        var $4119 = self.ctor;
                                        var $4120 = self.vals;
                                        var self = Kindelia$get_data$($4113, $4110);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $4122 = self.value;
                                                var _data$18 = $4122;
                                                var self = _data$18;
                                                switch (self._) {
                                                    case 'Kindelia.Data.new':
                                                        var self = Kindelia$get_constructor_value$(_data$18, $4119);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $4125 = self.value;
                                                                var _ctor$22 = $4125;
                                                                var self = _ctor$22;
                                                                switch (self._) {
                                                                    case 'Kindelia.Constructor.new':
                                                                        var self = Kindelia$get_constructor_index$(_data$18, $4119);
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4128 = self.value;
                                                                                var self = List$get$($4128, $4111);
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $4130 = self.value;
                                                                                        var _nams$27 = List$map$((_fprm$27 => {
                                                                                            var $4132 = ($4109 + ("." + (() => {
                                                                                                var self = _fprm$27;
                                                                                                switch (self._) {
                                                                                                    case 'Pair.new':
                                                                                                        var $4133 = self.fst;
                                                                                                        var $4134 = $4133;
                                                                                                        return $4134;
                                                                                                };
                                                                                            })()));
                                                                                            return $4132;
                                                                                        }), (() => {
                                                                                            var self = _ctor$22;
                                                                                            switch (self._) {
                                                                                                case 'Kindelia.Constructor.new':
                                                                                                    var $4135 = self.fprm;
                                                                                                    var $4136 = $4135;
                                                                                                    return $4136;
                                                                                            };
                                                                                        })());
                                                                                        var _subst$28 = Kindelia$extend$($4114, _nams$27, $4120);
                                                                                        var $4131 = Kindelia$reduce$(Kindelia$Runtime$new$($4113, _subst$28, $4115, $4116, $4130));
                                                                                        var $4129 = $4131;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $4137 = _state$1;
                                                                                        var $4129 = $4137;
                                                                                        break;
                                                                                };
                                                                                var $4127 = $4129;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4138 = _state$1;
                                                                                var $4127 = $4138;
                                                                                break;
                                                                        };
                                                                        var $4126 = $4127;
                                                                        break;
                                                                };
                                                                var $4124 = $4126;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $4139 = _state$1;
                                                                var $4124 = $4139;
                                                                break;
                                                        };
                                                        var $4123 = $4124;
                                                        break;
                                                };
                                                var $4121 = $4123;
                                                break;
                                            case 'Maybe.none':
                                                var $4140 = _state$1;
                                                var $4121 = $4140;
                                                break;
                                        };
                                        var $4118 = $4121;
                                        break;
                                    case 'Kindelia.Term.var':
                                    case 'Kindelia.Term.call':
                                    case 'Kindelia.Term.let':
                                    case 'Kindelia.Term.match':
                                    case 'Kindelia.Term.word':
                                    case 'Kindelia.Term.compare':
                                    case 'Kindelia.Term.operate':
                                    case 'Kindelia.Term.set':
                                    case 'Kindelia.Term.get':
                                    case 'Kindelia.Term.bind':
                                    case 'Kindelia.Term.return':
                                        var $4141 = _state$1;
                                        var $4118 = $4141;
                                        break;
                                };
                                var $4112 = $4118;
                                break;
                        };
                        var $4080 = $4112;
                        break;
                    case 'Kindelia.Term.compare':
                        var $4142 = self.val0;
                        var $4143 = self.val1;
                        var $4144 = self.iflt;
                        var $4145 = self.ifeq;
                        var $4146 = self.ifgt;
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4075, $4076, $4077, $4078, $4142));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4148 = self.world;
                                var $4149 = self.subst;
                                var $4150 = self.fresh;
                                var $4151 = self.gas;
                                var $4152 = self.term;
                                var self = Kindelia$reduce$(Kindelia$Runtime$new$($4148, $4149, $4150, $4151, $4143));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4154 = self.world;
                                        var $4155 = self.subst;
                                        var $4156 = self.fresh;
                                        var $4157 = self.gas;
                                        var $4158 = self.term;
                                        var self = $4152;
                                        switch (self._) {
                                            case 'Kindelia.Term.word':
                                                var $4160 = self.numb;
                                                var self = $4158;
                                                switch (self._) {
                                                    case 'Kindelia.Term.word':
                                                        var $4162 = self.numb;
                                                        var self = U64$cmp$($4160, $4162);
                                                        switch (self._) {
                                                            case 'Cmp.ltn':
                                                                var $4164 = Kindelia$reduce$(Kindelia$Runtime$new$($4154, $4155, $4156, $4157, $4144));
                                                                var $4163 = $4164;
                                                                break;
                                                            case 'Cmp.eql':
                                                                var $4165 = Kindelia$reduce$(Kindelia$Runtime$new$($4154, $4155, $4156, $4157, $4145));
                                                                var $4163 = $4165;
                                                                break;
                                                            case 'Cmp.gtn':
                                                                var $4166 = Kindelia$reduce$(Kindelia$Runtime$new$($4154, $4155, $4156, $4157, $4146));
                                                                var $4163 = $4166;
                                                                break;
                                                        };
                                                        var $4161 = $4163;
                                                        break;
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4167 = _state$1;
                                                        var $4161 = $4167;
                                                        break;
                                                };
                                                var $4159 = $4161;
                                                break;
                                            case 'Kindelia.Term.var':
                                            case 'Kindelia.Term.return':
                                                var self = $4158;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4169 = _state$1;
                                                        var $4168 = $4169;
                                                        break;
                                                };
                                                var $4159 = $4168;
                                                break;
                                            case 'Kindelia.Term.call':
                                            case 'Kindelia.Term.create':
                                                var self = $4158;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4171 = _state$1;
                                                        var $4170 = $4171;
                                                        break;
                                                };
                                                var $4159 = $4170;
                                                break;
                                            case 'Kindelia.Term.let':
                                            case 'Kindelia.Term.bind':
                                                var self = $4158;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4173 = _state$1;
                                                        var $4172 = $4173;
                                                        break;
                                                };
                                                var $4159 = $4172;
                                                break;
                                            case 'Kindelia.Term.match':
                                            case 'Kindelia.Term.operate':
                                            case 'Kindelia.Term.set':
                                            case 'Kindelia.Term.get':
                                                var self = $4158;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4175 = _state$1;
                                                        var $4174 = $4175;
                                                        break;
                                                };
                                                var $4159 = $4174;
                                                break;
                                            case 'Kindelia.Term.compare':
                                                var self = $4158;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4177 = _state$1;
                                                        var $4176 = $4177;
                                                        break;
                                                };
                                                var $4159 = $4176;
                                                break;
                                        };
                                        var $4153 = $4159;
                                        break;
                                };
                                var $4147 = $4153;
                                break;
                        };
                        var $4080 = $4147;
                        break;
                    case 'Kindelia.Term.operate':
                        var $4178 = self.oper;
                        var $4179 = self.val0;
                        var $4180 = self.val1;
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4075, $4076, $4077, $4078, $4179));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4182 = self.world;
                                var $4183 = self.subst;
                                var $4184 = self.fresh;
                                var $4185 = self.gas;
                                var $4186 = self.term;
                                var self = Kindelia$reduce$(Kindelia$Runtime$new$($4182, $4183, $4184, $4185, $4180));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4188 = self.world;
                                        var $4189 = self.subst;
                                        var $4190 = self.fresh;
                                        var $4191 = self.gas;
                                        var $4192 = self.term;
                                        var self = $4186;
                                        switch (self._) {
                                            case 'Kindelia.Term.word':
                                                var $4194 = self.numb;
                                                var self = $4192;
                                                switch (self._) {
                                                    case 'Kindelia.Term.word':
                                                        var $4196 = self.numb;
                                                        var self = $4178;
                                                        switch (self._) {
                                                            case 'Kindelia.Operation.add':
                                                                var $4198 = Kindelia$Runtime$new$($4188, $4189, $4190, $4191, Kindelia$Term$word$((($4194 + $4196) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4197 = $4198;
                                                                break;
                                                            case 'Kindelia.Operation.sub':
                                                                var $4199 = Kindelia$Runtime$new$($4188, $4189, $4190, $4191, Kindelia$Term$word$((($4194 - $4196) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4197 = $4199;
                                                                break;
                                                            case 'Kindelia.Operation.mul':
                                                                var $4200 = Kindelia$Runtime$new$($4188, $4189, $4190, $4191, Kindelia$Term$word$((($4194 * $4196) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4197 = $4200;
                                                                break;
                                                            case 'Kindelia.Operation.div':
                                                                var $4201 = Kindelia$Runtime$new$($4188, $4189, $4190, $4191, Kindelia$Term$word$((($4194 / $4196) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4197 = $4201;
                                                                break;
                                                            case 'Kindelia.Operation.mod':
                                                                var $4202 = Kindelia$Runtime$new$($4188, $4189, $4190, $4191, Kindelia$Term$word$(($4194 % $4196)));
                                                                var $4197 = $4202;
                                                                break;
                                                            case 'Kindelia.Operation.or':
                                                                var $4203 = Kindelia$Runtime$new$($4188, $4189, $4190, $4191, Kindelia$Term$word$(($4194 | $4196)));
                                                                var $4197 = $4203;
                                                                break;
                                                            case 'Kindelia.Operation.and':
                                                                var $4204 = Kindelia$Runtime$new$($4188, $4189, $4190, $4191, Kindelia$Term$word$(($4194 & $4196)));
                                                                var $4197 = $4204;
                                                                break;
                                                            case 'Kindelia.Operation.xor':
                                                                var $4205 = Kindelia$Runtime$new$($4188, $4189, $4190, $4191, Kindelia$Term$word$(($4194 ^ $4196)));
                                                                var $4197 = $4205;
                                                                break;
                                                        };
                                                        var $4195 = $4197;
                                                        break;
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4206 = _state$1;
                                                        var $4195 = $4206;
                                                        break;
                                                };
                                                var $4193 = $4195;
                                                break;
                                            case 'Kindelia.Term.var':
                                            case 'Kindelia.Term.return':
                                                var self = $4192;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4208 = _state$1;
                                                        var $4207 = $4208;
                                                        break;
                                                };
                                                var $4193 = $4207;
                                                break;
                                            case 'Kindelia.Term.call':
                                            case 'Kindelia.Term.create':
                                                var self = $4192;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4210 = _state$1;
                                                        var $4209 = $4210;
                                                        break;
                                                };
                                                var $4193 = $4209;
                                                break;
                                            case 'Kindelia.Term.let':
                                            case 'Kindelia.Term.bind':
                                                var self = $4192;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4212 = _state$1;
                                                        var $4211 = $4212;
                                                        break;
                                                };
                                                var $4193 = $4211;
                                                break;
                                            case 'Kindelia.Term.match':
                                            case 'Kindelia.Term.operate':
                                            case 'Kindelia.Term.set':
                                            case 'Kindelia.Term.get':
                                                var self = $4192;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4214 = _state$1;
                                                        var $4213 = $4214;
                                                        break;
                                                };
                                                var $4193 = $4213;
                                                break;
                                            case 'Kindelia.Term.compare':
                                                var self = $4192;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4216 = _state$1;
                                                        var $4215 = $4216;
                                                        break;
                                                };
                                                var $4193 = $4215;
                                                break;
                                        };
                                        var $4187 = $4193;
                                        break;
                                };
                                var $4181 = $4187;
                                break;
                        };
                        var $4080 = $4181;
                        break;
                    case 'Kindelia.Term.create':
                    case 'Kindelia.Term.word':
                    case 'Kindelia.Term.set':
                    case 'Kindelia.Term.get':
                    case 'Kindelia.Term.bind':
                    case 'Kindelia.Term.return':
                        var $4217 = _state$1;
                        var $4080 = $4217;
                        break;
                };
                var $4074 = $4080;
                break;
        };
        return $4074;
    };
    const Kindelia$reduce = x0 => Kindelia$reduce$(x0);

    function Kindelia$normalize$many$(_state$1) {
        var self = _state$1;
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4219 = self.world;
                var $4220 = self.subst;
                var $4221 = self.fresh;
                var $4222 = self.gas;
                var $4223 = self.term;
                var self = $4223;
                switch (self._) {
                    case 'List.cons':
                        var $4225 = self.head;
                        var $4226 = self.tail;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4219, $4220, $4221, $4222, $4225));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4228 = self.world;
                                var $4229 = self.subst;
                                var $4230 = self.fresh;
                                var $4231 = self.gas;
                                var $4232 = self.term;
                                var self = Kindelia$normalize$many$(Kindelia$Runtime$new$($4228, $4229, $4230, $4231, $4226));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4234 = self.world;
                                        var $4235 = self.subst;
                                        var $4236 = self.fresh;
                                        var $4237 = self.gas;
                                        var $4238 = self.term;
                                        var $4239 = Kindelia$Runtime$new$($4234, $4235, $4236, $4237, List$cons$($4232, $4238));
                                        var $4233 = $4239;
                                        break;
                                };
                                var $4227 = $4233;
                                break;
                        };
                        var $4224 = $4227;
                        break;
                    case 'List.nil':
                        var $4240 = _state$1;
                        var $4224 = $4240;
                        break;
                };
                var $4218 = $4224;
                break;
        };
        return $4218;
    };
    const Kindelia$normalize$many = x0 => Kindelia$normalize$many$(x0);

    function Kindelia$normalize$cases$(_ctrs$1, _name$2, _state$3) {
        var self = _state$3;
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4242 = self.world;
                var $4243 = self.subst;
                var $4244 = self.fresh;
                var $4245 = self.gas;
                var $4246 = self.term;
                var self = _ctrs$1;
                switch (self._) {
                    case 'List.cons':
                        var $4248 = self.head;
                        var $4249 = self.tail;
                        var self = $4246;
                        switch (self._) {
                            case 'List.cons':
                                var $4251 = self.head;
                                var $4252 = self.tail;
                                var _nams$13 = List$map$((_fprm$13 => {
                                    var $4254 = (_name$2 + ("." + (() => {
                                        var self = _fprm$13;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $4255 = self.fst;
                                                var $4256 = $4255;
                                                return $4256;
                                        };
                                    })()));
                                    return $4254;
                                }), (() => {
                                    var self = $4248;
                                    switch (self._) {
                                        case 'Kindelia.Constructor.new':
                                            var $4257 = self.fprm;
                                            var $4258 = $4257;
                                            return $4258;
                                    };
                                })());
                                var _vals$14 = List$map$(Kindelia$Term$var, _nams$13);
                                var _subst$15 = Kindelia$extend$($4243, _nams$13, _vals$14);
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4242, _subst$15, $4244, $4245, $4251));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4259 = self.world;
                                        var $4260 = self.subst;
                                        var $4261 = self.fresh;
                                        var $4262 = self.gas;
                                        var $4263 = self.term;
                                        var self = Kindelia$normalize$cases$($4249, _name$2, Kindelia$Runtime$new$($4259, $4260, $4261, $4262, $4252));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4265 = self.world;
                                                var $4266 = self.subst;
                                                var $4267 = self.fresh;
                                                var $4268 = self.gas;
                                                var $4269 = self.term;
                                                var $4270 = Kindelia$Runtime$new$($4265, $4266, $4267, $4268, List$cons$($4263, $4269));
                                                var $4264 = $4270;
                                                break;
                                        };
                                        var $4253 = $4264;
                                        break;
                                };
                                var $4250 = $4253;
                                break;
                            case 'List.nil':
                                var $4271 = _state$3;
                                var $4250 = $4271;
                                break;
                        };
                        var $4247 = $4250;
                        break;
                    case 'List.nil':
                        var self = $4246;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $4273 = _state$3;
                                var $4272 = $4273;
                                break;
                        };
                        var $4247 = $4272;
                        break;
                };
                var $4241 = $4247;
                break;
        };
        return $4241;
    };
    const Kindelia$normalize$cases = x0 => x1 => x2 => Kindelia$normalize$cases$(x0, x1, x2);

    function Kindelia$normalize$(_state$1) {
        var self = Kindelia$reduce$(_state$1);
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4275 = self.world;
                var $4276 = self.subst;
                var $4277 = self.fresh;
                var $4278 = self.gas;
                var $4279 = self.term;
                var self = $4279;
                switch (self._) {
                    case 'Kindelia.Term.create':
                        var $4281 = self.ctor;
                        var $4282 = self.vals;
                        var self = Kindelia$normalize$many$(Kindelia$Runtime$new$($4275, $4276, $4277, $4278, $4282));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4284 = self.world;
                                var $4285 = self.subst;
                                var $4286 = self.fresh;
                                var $4287 = self.gas;
                                var $4288 = self.term;
                                var $4289 = Kindelia$Runtime$new$($4284, $4285, $4286, $4287, Kindelia$Term$create$($4281, $4288));
                                var $4283 = $4289;
                                break;
                        };
                        var $4280 = $4283;
                        break;
                    case 'Kindelia.Term.match':
                        var $4290 = self.name;
                        var $4291 = self.data;
                        var $4292 = self.cses;
                        var self = Kindelia$get_constructors$($4275, $4291);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4294 = self.value;
                                var _ctrs$11 = $4294;
                                var self = _ctrs$11;
                                switch (self._) {
                                    case 'List.nil':
                                        var self = Kindelia$normalize$cases$(_ctrs$11, $4290, Kindelia$Runtime$new$($4275, $4276, $4277, $4278, $4292));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4297 = self.world;
                                                var $4298 = self.subst;
                                                var $4299 = self.fresh;
                                                var $4300 = self.gas;
                                                var $4301 = self.term;
                                                var $4302 = Kindelia$Runtime$new$($4297, $4298, $4299, $4300, Kindelia$Term$match$($4290, $4291, $4301));
                                                var $4296 = $4302;
                                                break;
                                        };
                                        var $4295 = $4296;
                                        break;
                                    case 'List.cons':
                                        var self = Kindelia$normalize$cases$(_ctrs$11, $4290, Kindelia$Runtime$new$($4275, $4276, $4277, $4278, $4292));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4304 = self.world;
                                                var $4305 = self.subst;
                                                var $4306 = self.fresh;
                                                var $4307 = self.gas;
                                                var $4308 = self.term;
                                                var $4309 = Kindelia$Runtime$new$($4304, $4305, $4306, $4307, Kindelia$Term$match$($4290, $4291, $4308));
                                                var $4303 = $4309;
                                                break;
                                        };
                                        var $4295 = $4303;
                                        break;
                                };
                                var $4293 = $4295;
                                break;
                            case 'Maybe.none':
                                var $4310 = Kindelia$Runtime$new$($4275, $4276, $4277, $4278, $4279);
                                var $4293 = $4310;
                                break;
                        };
                        var $4280 = $4293;
                        break;
                    case 'Kindelia.Term.compare':
                        var $4311 = self.val0;
                        var $4312 = self.val1;
                        var $4313 = self.iflt;
                        var $4314 = self.ifeq;
                        var $4315 = self.ifgt;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4275, $4276, $4277, $4278, $4311));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4317 = self.world;
                                var $4318 = self.subst;
                                var $4319 = self.fresh;
                                var $4320 = self.gas;
                                var $4321 = self.term;
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4317, $4318, $4319, $4320, $4312));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4323 = self.world;
                                        var $4324 = self.subst;
                                        var $4325 = self.fresh;
                                        var $4326 = self.gas;
                                        var $4327 = self.term;
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4323, $4324, $4325, $4326, $4313));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4329 = self.world;
                                                var $4330 = self.subst;
                                                var $4331 = self.fresh;
                                                var $4332 = self.gas;
                                                var $4333 = self.term;
                                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4329, $4330, $4331, $4332, $4314));
                                                switch (self._) {
                                                    case 'Kindelia.Runtime.new':
                                                        var $4335 = self.world;
                                                        var $4336 = self.subst;
                                                        var $4337 = self.fresh;
                                                        var $4338 = self.gas;
                                                        var $4339 = self.term;
                                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4335, $4336, $4337, $4338, $4315));
                                                        switch (self._) {
                                                            case 'Kindelia.Runtime.new':
                                                                var $4341 = self.world;
                                                                var $4342 = self.subst;
                                                                var $4343 = self.fresh;
                                                                var $4344 = self.gas;
                                                                var $4345 = self.term;
                                                                var $4346 = Kindelia$Runtime$new$($4341, $4342, $4343, $4344, Kindelia$Term$compare$($4321, $4327, $4333, $4339, $4345));
                                                                var $4340 = $4346;
                                                                break;
                                                        };
                                                        var $4334 = $4340;
                                                        break;
                                                };
                                                var $4328 = $4334;
                                                break;
                                        };
                                        var $4322 = $4328;
                                        break;
                                };
                                var $4316 = $4322;
                                break;
                        };
                        var $4280 = $4316;
                        break;
                    case 'Kindelia.Term.operate':
                        var $4347 = self.oper;
                        var $4348 = self.val0;
                        var $4349 = self.val1;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4275, $4276, $4277, $4278, $4348));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4351 = self.world;
                                var $4352 = self.subst;
                                var $4353 = self.fresh;
                                var $4354 = self.gas;
                                var $4355 = self.term;
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4351, $4352, $4353, $4354, $4349));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4357 = self.world;
                                        var $4358 = self.subst;
                                        var $4359 = self.fresh;
                                        var $4360 = self.gas;
                                        var $4361 = self.term;
                                        var $4362 = Kindelia$Runtime$new$($4357, $4358, $4359, $4360, Kindelia$Term$operate$($4347, $4355, $4361));
                                        var $4356 = $4362;
                                        break;
                                };
                                var $4350 = $4356;
                                break;
                        };
                        var $4280 = $4350;
                        break;
                    case 'Kindelia.Term.set':
                        var $4363 = self.file;
                        var $4364 = self.expr;
                        var $4365 = self.body;
                        var self = Kindelia$get_file$($4275, $4363);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4367 = self.value;
                                var _file$11 = $4367;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4275, $4276, $4277, $4278, $4364));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4370 = self.world;
                                                var $4371 = self.subst;
                                                var $4372 = self.fresh;
                                                var $4373 = self.gas;
                                                var $4374 = self.term;
                                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4370, $4371, $4372, $4373, $4365));
                                                switch (self._) {
                                                    case 'Kindelia.Runtime.new':
                                                        var $4376 = self.world;
                                                        var $4377 = self.subst;
                                                        var $4378 = self.fresh;
                                                        var $4379 = self.gas;
                                                        var $4380 = self.term;
                                                        var $4381 = Kindelia$Runtime$new$($4376, $4377, $4378, $4379, Kindelia$Term$set$($4363, $4374, $4380));
                                                        var $4375 = $4381;
                                                        break;
                                                };
                                                var $4369 = $4375;
                                                break;
                                        };
                                        var $4368 = $4369;
                                        break;
                                };
                                var $4366 = $4368;
                                break;
                            case 'Maybe.none':
                                var $4382 = _state$1;
                                var $4366 = $4382;
                                break;
                        };
                        var $4280 = $4366;
                        break;
                    case 'Kindelia.Term.get':
                        var $4383 = self.name;
                        var $4384 = self.file;
                        var $4385 = self.body;
                        var self = Kindelia$get_file$($4275, $4384);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4387 = self.value;
                                var _file$11 = $4387;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4275, Map$set$($4383, Kindelia$Term$var$($4383), $4276), $4277, $4278, $4385));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4390 = self.world;
                                                var $4391 = self.subst;
                                                var $4392 = self.fresh;
                                                var $4393 = self.gas;
                                                var $4394 = self.term;
                                                var $4395 = Kindelia$Runtime$new$($4390, $4391, $4392, $4393, Kindelia$Term$get$($4383, $4384, $4394));
                                                var $4389 = $4395;
                                                break;
                                        };
                                        var $4388 = $4389;
                                        break;
                                };
                                var $4386 = $4388;
                                break;
                            case 'Maybe.none':
                                var $4396 = _state$1;
                                var $4386 = $4396;
                                break;
                        };
                        var $4280 = $4386;
                        break;
                    case 'Kindelia.Term.bind':
                        var $4397 = self.name;
                        var $4398 = self.type;
                        var $4399 = self.expr;
                        var $4400 = self.body;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4275, $4276, $4277, $4278, $4399));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4402 = self.world;
                                var $4403 = self.subst;
                                var $4404 = self.fresh;
                                var $4405 = self.gas;
                                var $4406 = self.term;
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4402, Map$set$($4397, Kindelia$Term$var$($4397), $4403), $4404, $4405, $4400));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4408 = self.world;
                                        var $4409 = self.subst;
                                        var $4410 = self.fresh;
                                        var $4411 = self.gas;
                                        var $4412 = self.term;
                                        var $4413 = Kindelia$Runtime$new$($4408, $4409, $4410, $4411, Kindelia$Term$bind$($4397, $4398, $4406, $4412));
                                        var $4407 = $4413;
                                        break;
                                };
                                var $4401 = $4407;
                                break;
                        };
                        var $4280 = $4401;
                        break;
                    case 'Kindelia.Term.return':
                        var $4414 = self.expr;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4275, $4276, $4277, $4278, $4414));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4416 = self.world;
                                var $4417 = self.subst;
                                var $4418 = self.fresh;
                                var $4419 = self.gas;
                                var $4420 = self.term;
                                var $4421 = Kindelia$Runtime$new$($4416, $4417, $4418, $4419, Kindelia$Term$return$($4420));
                                var $4415 = $4421;
                                break;
                        };
                        var $4280 = $4415;
                        break;
                    case 'Kindelia.Term.var':
                    case 'Kindelia.Term.call':
                    case 'Kindelia.Term.let':
                    case 'Kindelia.Term.word':
                        var $4422 = Kindelia$Runtime$new$($4275, $4276, $4277, $4278, $4279);
                        var $4280 = $4422;
                        break;
                };
                var $4274 = $4280;
                break;
        };
        return $4274;
    };
    const Kindelia$normalize = x0 => Kindelia$normalize$(x0);

    function Kindelia$run$(_state$1) {
        var self = Kindelia$reduce$(_state$1);
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4424 = self.world;
                var $4425 = self.subst;
                var $4426 = self.fresh;
                var $4427 = self.gas;
                var $4428 = self.term;
                var self = $4428;
                switch (self._) {
                    case 'Kindelia.Term.set':
                        var $4430 = self.file;
                        var $4431 = self.expr;
                        var $4432 = self.body;
                        var self = Kindelia$get_file$($4424, $4430);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4434 = self.value;
                                var _file$11 = $4434;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4424, $4425, $4426, $4427, $4431));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4437 = self.world;
                                                var $4438 = self.subst;
                                                var $4439 = self.fresh;
                                                var $4440 = self.gas;
                                                var $4441 = self.term;
                                                var _new_entry$21 = Kindelia$Entry$file$((() => {
                                                    var self = _file$11;
                                                    switch (self._) {
                                                        case 'Kindelia.File.new':
                                                            var $4443 = self.name;
                                                            var $4444 = self.ownr;
                                                            var $4445 = self.type;
                                                            var $4446 = Kindelia$File$new$($4443, $4444, $4445, $4441);
                                                            return $4446;
                                                    };
                                                })());
                                                var _new_world$22 = Map$set$($4430, _new_entry$21, $4437);
                                                var $4442 = Kindelia$run$(Kindelia$Runtime$new$(_new_world$22, $4438, $4439, $4440, $4432));
                                                var $4436 = $4442;
                                                break;
                                        };
                                        var $4435 = $4436;
                                        break;
                                };
                                var $4433 = $4435;
                                break;
                            case 'Maybe.none':
                                var $4447 = _state$1;
                                var $4433 = $4447;
                                break;
                        };
                        var $4429 = $4433;
                        break;
                    case 'Kindelia.Term.get':
                        var $4448 = self.name;
                        var $4449 = self.file;
                        var $4450 = self.body;
                        var self = Kindelia$get_file$($4424, $4449);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4452 = self.value;
                                var _file$11 = $4452;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var $4454 = self.expr;
                                        var $4455 = Kindelia$run$(Kindelia$Runtime$new$($4424, Map$set$($4448, $4454, $4425), $4426, $4427, $4450));
                                        var $4453 = $4455;
                                        break;
                                };
                                var $4451 = $4453;
                                break;
                            case 'Maybe.none':
                                var $4456 = _state$1;
                                var $4451 = $4456;
                                break;
                        };
                        var $4429 = $4451;
                        break;
                    case 'Kindelia.Term.bind':
                        var $4457 = self.name;
                        var $4458 = self.type;
                        var $4459 = self.expr;
                        var $4460 = self.body;
                        var self = Kindelia$run$(Kindelia$Runtime$new$($4424, $4425, $4426, $4427, $4459));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4462 = self.world;
                                var $4463 = self.subst;
                                var $4464 = self.fresh;
                                var $4465 = self.gas;
                                var $4466 = self.term;
                                var self = $4466;
                                switch (self._) {
                                    case 'Kindelia.Term.return':
                                        var $4468 = self.expr;
                                        var $4469 = Kindelia$run$(Kindelia$Runtime$new$($4462, Map$set$($4457, $4468, $4463), $4464, $4465, $4460));
                                        var $4467 = $4469;
                                        break;
                                    case 'Kindelia.Term.var':
                                    case 'Kindelia.Term.call':
                                    case 'Kindelia.Term.let':
                                    case 'Kindelia.Term.create':
                                    case 'Kindelia.Term.match':
                                    case 'Kindelia.Term.word':
                                    case 'Kindelia.Term.compare':
                                    case 'Kindelia.Term.operate':
                                    case 'Kindelia.Term.set':
                                    case 'Kindelia.Term.get':
                                    case 'Kindelia.Term.bind':
                                        var $4470 = Kindelia$Runtime$new$($4462, $4463, $4464, $4465, Kindelia$Term$bind$($4457, $4458, $4466, $4460));
                                        var $4467 = $4470;
                                        break;
                                };
                                var $4461 = $4467;
                                break;
                        };
                        var $4429 = $4461;
                        break;
                    case 'Kindelia.Term.var':
                    case 'Kindelia.Term.call':
                    case 'Kindelia.Term.let':
                    case 'Kindelia.Term.create':
                    case 'Kindelia.Term.match':
                    case 'Kindelia.Term.word':
                    case 'Kindelia.Term.compare':
                    case 'Kindelia.Term.operate':
                    case 'Kindelia.Term.return':
                        var $4471 = Kindelia$Runtime$new$($4424, $4425, $4426, $4427, $4428);
                        var $4429 = $4471;
                        break;
                };
                var $4423 = $4429;
                break;
        };
        return $4423;
    };
    const Kindelia$run = x0 => Kindelia$run$(x0);

    function Kindelia$show$type$(_world$1, _type$2) {
        var self = _type$2;
        switch (self._) {
            case 'Kindelia.Type.data':
                var $4473 = self.name;
                var $4474 = $4473;
                var $4472 = $4474;
                break;
            case 'Kindelia.Type.effe':
                var $4475 = self.rety;
                var $4476 = ("& " + Kindelia$show$type$(_world$1, $4475));
                var $4472 = $4476;
                break;
            case 'Kindelia.Type.word':
                var $4477 = "#word";
                var $4472 = $4477;
                break;
        };
        return $4472;
    };
    const Kindelia$show$type = x0 => x1 => Kindelia$show$type$(x0, x1);

    function Word$show$(_size$1, _a$2) {
        var $4478 = Nat$show$(Word$to_nat$(_a$2));
        return $4478;
    };
    const Word$show = x0 => x1 => Word$show$(x0, x1);
    const U64$show = a0 => (String(a0));

    function String$is_empty$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $4480 = Bool$true;
            var $4479 = $4480;
        } else {
            var $4481 = self.charCodeAt(0);
            var $4482 = self.slice(1);
            var $4483 = Bool$false;
            var $4479 = $4483;
        };
        return $4479;
    };
    const String$is_empty = x0 => String$is_empty$(x0);

    function Kindelia$show$term$(_world$1, _term$2) {
        var self = _term$2;
        switch (self._) {
            case 'Kindelia.Term.var':
                var $4485 = self.name;
                var $4486 = $4485;
                var $4484 = $4486;
                break;
            case 'Kindelia.Term.call':
                var $4487 = self.bond;
                var $4488 = self.args;
                var _bond$5 = $4487;
                var _args$6 = List$map$(Kindelia$show$term(_world$1), $4488);
                var $4489 = (_bond$5 + ("(" + (String$join$(",", _args$6) + ")")));
                var $4484 = $4489;
                break;
            case 'Kindelia.Term.let':
                var $4490 = self.name;
                var $4491 = self.type;
                var $4492 = self.expr;
                var $4493 = self.body;
                var _name$7 = $4490;
                var _type$8 = Kindelia$show$type$(_world$1, $4491);
                var _expr$9 = Kindelia$show$term$(_world$1, $4492);
                var _body$10 = Kindelia$show$term$(_world$1, $4493);
                var $4494 = ("let " + (_name$7 + (" : " + (_type$8 + (" = " + (_expr$9 + (" " + _body$10)))))));
                var $4484 = $4494;
                break;
            case 'Kindelia.Term.create':
                var $4495 = self.ctor;
                var $4496 = self.vals;
                var _vals$5 = List$mapped$($4496, Kindelia$show$term(_world$1));
                var $4497 = ($4495 + ("{" + (String$join$(",", _vals$5) + "}")));
                var $4484 = $4497;
                break;
            case 'Kindelia.Term.match':
                var $4498 = self.name;
                var $4499 = self.data;
                var $4500 = self.cses;
                var self = Kindelia$get_data$(_world$1, $4499);
                switch (self._) {
                    case 'Maybe.some':
                        var $4502 = self.value;
                        var _data$7 = $4502;
                        var self = _data$7;
                        switch (self._) {
                            case 'Kindelia.Data.new':
                                var $4504 = self.constructors;
                                var _name$10 = $4498;
                                var _cses$11 = List$zipped_with$($4504, $4500, (_case_ctor$11 => _case_body$12 => {
                                    var $4506 = ((() => {
                                        var self = _case_ctor$11;
                                        switch (self._) {
                                            case 'Kindelia.Constructor.new':
                                                var $4507 = self.name;
                                                var $4508 = $4507;
                                                return $4508;
                                        };
                                    })() + (": " + Kindelia$show$term$(_world$1, _case_body$12)));
                                    return $4506;
                                }));
                                var $4505 = ("case " + (_name$10 + (" : " + ($4499 + (" { " + (String$join$(", ", _cses$11) + " }"))))));
                                var $4503 = $4505;
                                break;
                        };
                        var $4501 = $4503;
                        break;
                    case 'Maybe.none':
                        var $4509 = "?";
                        var $4501 = $4509;
                        break;
                };
                var $4484 = $4501;
                break;
            case 'Kindelia.Term.word':
                var $4510 = self.numb;
                var $4511 = ("#" + (String($4510)));
                var $4484 = $4511;
                break;
            case 'Kindelia.Term.compare':
                var $4512 = self.val0;
                var $4513 = self.val1;
                var $4514 = self.iflt;
                var $4515 = self.ifeq;
                var $4516 = self.ifgt;
                var _val0$8 = Kindelia$show$term$(_world$1, $4512);
                var _val1$9 = Kindelia$show$term$(_world$1, $4513);
                var _iflt$10 = Kindelia$show$term$(_world$1, $4514);
                var _ifeq$11 = Kindelia$show$term$(_world$1, $4515);
                var _ifgt$12 = Kindelia$show$term$(_world$1, $4516);
                var $4517 = ("compare " + (_val0$8 + (" " + (_val1$9 + (" { _<_: " + (_iflt$10 + (" _=_: " + (_ifeq$11 + (" _>_: " + (_ifgt$12 + " }"))))))))));
                var $4484 = $4517;
                break;
            case 'Kindelia.Term.operate':
                var $4518 = self.oper;
                var $4519 = self.val0;
                var $4520 = self.val1;
                var self = $4518;
                switch (self._) {
                    case 'Kindelia.Operation.add':
                        var $4522 = "+";
                        var _oper$6 = $4522;
                        break;
                    case 'Kindelia.Operation.sub':
                        var $4523 = "-";
                        var _oper$6 = $4523;
                        break;
                    case 'Kindelia.Operation.mul':
                        var $4524 = "*";
                        var _oper$6 = $4524;
                        break;
                    case 'Kindelia.Operation.div':
                        var $4525 = "/";
                        var _oper$6 = $4525;
                        break;
                    case 'Kindelia.Operation.mod':
                        var $4526 = "%";
                        var _oper$6 = $4526;
                        break;
                    case 'Kindelia.Operation.or':
                        var $4527 = "|";
                        var _oper$6 = $4527;
                        break;
                    case 'Kindelia.Operation.and':
                        var $4528 = "&";
                        var _oper$6 = $4528;
                        break;
                    case 'Kindelia.Operation.xor':
                        var $4529 = "^";
                        var _oper$6 = $4529;
                        break;
                };
                var _val0$7 = Kindelia$show$term$(_world$1, $4519);
                var _val1$8 = Kindelia$show$term$(_world$1, $4520);
                var $4521 = (_oper$6 + ("(" + (_val0$7 + ("," + (_val1$8 + ")")))));
                var $4484 = $4521;
                break;
            case 'Kindelia.Term.set':
                var $4530 = self.file;
                var $4531 = self.expr;
                var $4532 = self.body;
                var _file$6 = $4530;
                var _expr$7 = Kindelia$show$term$(_world$1, $4531);
                var _body$8 = Kindelia$show$term$(_world$1, $4532);
                var $4533 = ("set " + (_file$6 + (" = " + (_expr$7 + ("; " + _body$8)))));
                var $4484 = $4533;
                break;
            case 'Kindelia.Term.get':
                var $4534 = self.name;
                var $4535 = self.file;
                var $4536 = self.body;
                var _file$6 = $4535;
                var _name$7 = $4534;
                var _body$8 = Kindelia$show$term$(_world$1, $4536);
                var $4537 = ("get " + (_name$7 + (" = " + (_file$6 + ("; " + _body$8)))));
                var $4484 = $4537;
                break;
            case 'Kindelia.Term.bind':
                var $4538 = self.name;
                var $4539 = self.type;
                var $4540 = self.expr;
                var $4541 = self.body;
                var _name$7 = $4538;
                var _type$8 = Kindelia$show$type$(_world$1, $4539);
                var _expr$9 = Kindelia$show$term$(_world$1, $4540);
                var _body$10 = Kindelia$show$term$(_world$1, $4541);
                var self = String$is_empty$(_name$7);
                if (self) {
                    var $4543 = ("run " + (_expr$9 + ("; " + _body$10)));
                    var $4542 = $4543;
                } else {
                    var $4544 = ("run " + (_name$7 + (" : " + (_type$8 + (" = " + (_expr$9 + ("; " + _body$10)))))));
                    var $4542 = $4544;
                };
                var $4484 = $4542;
                break;
            case 'Kindelia.Term.return':
                var $4545 = self.expr;
                var _expr$4 = Kindelia$show$term$(_world$1, $4545);
                var $4546 = ("return " + _expr$4);
                var $4484 = $4546;
                break;
        };
        return $4484;
    };
    const Kindelia$show$term = x0 => x1 => Kindelia$show$term$(x0, x1);

    function Kindelia$transact$(_world$1, _transaction$2) {
        var self = _transaction$2;
        switch (self._) {
            case 'Kindelia.Transaction.new_data':
                var $4548 = self.data;
                var _data$4 = $4548;
                var self = _data$4;
                switch (self._) {
                    case 'Kindelia.Data.new':
                        var $4550 = self.name;
                        var self = Map$get$($4550, _world$1);
                        switch (self._) {
                            case 'Maybe.none':
                                var _world$7 = Map$set$($4550, Kindelia$Entry$data$(_data$4), _world$1);
                                var $4552 = Maybe$some$(Pair$new$(_world$7, ("[data] " + $4550)));
                                var $4551 = $4552;
                                break;
                            case 'Maybe.some':
                                var $4553 = Maybe$none;
                                var $4551 = $4553;
                                break;
                        };
                        var $4549 = $4551;
                        break;
                };
                var $4547 = $4549;
                break;
            case 'Kindelia.Transaction.new_bond':
                var $4554 = self.bond;
                var _bond$4 = $4554;
                var self = _bond$4;
                switch (self._) {
                    case 'Kindelia.Bond.new':
                        var $4556 = self.name;
                        var $4557 = self.iprm;
                        var $4558 = self.otyp;
                        var $4559 = self.main;
                        var self = Map$get$($4556, _world$1);
                        switch (self._) {
                            case 'Maybe.none':
                                var _world$9 = Map$set$($4556, Kindelia$Entry$bond$(_bond$4), _world$1);
                                var self = List$unzip$($4557);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $4562 = self.fst;
                                        var $4563 = self.snd;
                                        var _context$12 = Kindelia$extend$(Map$from_list$(List$nil), $4562, $4563);
                                        var self = Kindelia$check$(_context$12, _world$9, $4559, $4558, Maybe$some$($4556));
                                        if (self) {
                                            var $4565 = Maybe$some$(Pair$new$(_world$9, ("[bond] " + $4556)));
                                            var $4564 = $4565;
                                        } else {
                                            var $4566 = Maybe$none;
                                            var $4564 = $4566;
                                        };
                                        var $4561 = $4564;
                                        break;
                                };
                                var $4560 = $4561;
                                break;
                            case 'Maybe.some':
                                var $4567 = Maybe$none;
                                var $4560 = $4567;
                                break;
                        };
                        var $4555 = $4560;
                        break;
                };
                var $4547 = $4555;
                break;
            case 'Kindelia.Transaction.new_file':
                var $4568 = self.file;
                var _file$4 = $4568;
                var self = _file$4;
                switch (self._) {
                    case 'Kindelia.File.new':
                        var $4570 = self.name;
                        var $4571 = self.type;
                        var $4572 = self.expr;
                        var self = Map$get$($4570, _world$1);
                        switch (self._) {
                            case 'Maybe.none':
                                var _world$9 = Map$set$($4570, Kindelia$Entry$file$(_file$4), _world$1);
                                var self = Kindelia$check$(Map$from_list$(List$nil), _world$9, $4572, $4571, Maybe$none);
                                if (self) {
                                    var $4575 = Maybe$some$(Pair$new$(_world$9, ("[file] " + $4570)));
                                    var $4574 = $4575;
                                } else {
                                    var $4576 = Maybe$none;
                                    var $4574 = $4576;
                                };
                                var $4573 = $4574;
                                break;
                            case 'Maybe.some':
                                var $4577 = Maybe$none;
                                var $4573 = $4577;
                                break;
                        };
                        var $4569 = $4573;
                        break;
                };
                var $4547 = $4569;
                break;
            case 'Kindelia.Transaction.new_eval':
                var $4578 = self.eval;
                var _eval$4 = $4578;
                var self = _eval$4;
                switch (self._) {
                    case 'Kindelia.Eval.new':
                        var $4580 = self.term;
                        var $4581 = self.type;
                        var self = Kindelia$check$(Map$from_list$(List$nil), _world$1, $4580, $4581, Maybe$none);
                        if (self) {
                            var _fresh$7 = 0n;
                            var self = Kindelia$sanitize$(_world$1, Map$from_list$(List$nil), _fresh$7, $4580);
                            switch (self._) {
                                case 'Pair.new':
                                    var $4584 = self.fst;
                                    var $4585 = self.snd;
                                    var self = $4581;
                                    switch (self._) {
                                        case 'Kindelia.Type.word':
                                        case 'Kindelia.Type.data':
                                            var $4587 = Kindelia$normalize$(Kindelia$Runtime$new$(_world$1, Map$from_list$(List$nil), $4584, 0n, $4585));
                                            var self = $4587;
                                            break;
                                        case 'Kindelia.Type.effe':
                                            var $4588 = Kindelia$normalize$(Kindelia$run$(Kindelia$Runtime$new$(_world$1, Map$from_list$(List$nil), $4584, 0n, $4585)));
                                            var self = $4588;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kindelia.Runtime.new':
                                            var $4589 = self.world;
                                            var $4590 = self.term;
                                            var $4591 = Maybe$some$(Pair$new$($4589, ("[eval] " + Kindelia$show$term$($4589, $4590))));
                                            var $4586 = $4591;
                                            break;
                                    };
                                    var $4583 = $4586;
                                    break;
                            };
                            var $4582 = $4583;
                        } else {
                            var $4592 = Maybe$none;
                            var $4582 = $4592;
                        };
                        var $4579 = $4582;
                        break;
                };
                var $4547 = $4579;
                break;
        };
        return $4547;
    };
    const Kindelia$transact = x0 => x1 => Kindelia$transact$(x0, x1);

    function Kindelia$api$run$go$transactions$(_world$1, _block_number$2, _code$3, _transactions$4) {
        var self = _transactions$4;
        switch (self._) {
            case 'List.cons':
                var $4594 = self.head;
                var $4595 = self.tail;
                var self = Kindelia$transact$(_world$1, $4594);
                switch (self._) {
                    case 'Maybe.some':
                        var $4597 = self.value;
                        var self = $4597;
                        switch (self._) {
                            case 'Pair.new':
                                var $4599 = self.fst;
                                var $4600 = self.snd;
                                var $4601 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                                    var $4602 = _m$bind$10;
                                    return $4602;
                                }))(IO$print$(("- " + $4600)))((_$10 => {
                                    var $4603 = Kindelia$api$run$go$transactions$($4599, _block_number$2, _code$3, $4595);
                                    return $4603;
                                }));
                                var $4598 = $4601;
                                break;
                        };
                        var $4596 = $4598;
                        break;
                    case 'Maybe.none':
                        var $4604 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                            var $4605 = _m$bind$7;
                            return $4605;
                        }))(IO$print$("- [fail]"))((_$7 => {
                            var $4606 = Kindelia$api$run$go$transactions$(_world$1, _block_number$2, _code$3, $4595);
                            return $4606;
                        }));
                        var $4596 = $4604;
                        break;
                };
                var $4593 = $4596;
                break;
            case 'List.nil':
                var $4607 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $4608 = _m$bind$5;
                    return $4608;
                }))(IO$print$(""))((_$5 => {
                    var $4609 = Kindelia$api$run$go$(_world$1, Nat$succ$(_block_number$2), _code$3);
                    return $4609;
                }));
                var $4593 = $4607;
                break;
        };
        return $4593;
    };
    const Kindelia$api$run$go$transactions = x0 => x1 => x2 => x3 => Kindelia$api$run$go$transactions$(x0, x1, x2, x3);

    function Kindelia$api$run$go$(_world$1, _block_number$2, _code$3) {
        var _parsed$4 = Kindelia$parse$block$(_world$1)(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$3));
        var self = _parsed$4;
        switch (self._) {
            case 'Parser.Reply.error':
                var $4611 = self.err;
                var self = $4611;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $4613 = self.nam;
                        var $4614 = self.ini;
                        var $4615 = self.idx;
                        var $4616 = self.msg;
                        var self = ($4615 < String$length$(_code$3));
                        if (self) {
                            var _err$10 = ($4616 + (() => {
                                var self = $4613;
                                if (self.length === 0) {
                                    var $4619 = "";
                                    return $4619;
                                } else {
                                    var $4620 = self.charCodeAt(0);
                                    var $4621 = self.slice(1);
                                    var $4622 = (" Inside " + ($4613 + ":"));
                                    return $4622;
                                };
                            })());
                            var _hig$11 = Kind$Code$highlight$(_code$3, $4614, $4615, Nat$succ$($4615));
                            var _str$12 = String$flatten$(List$cons$(_err$10, List$cons$("\u{a}", List$cons$(_hig$11, List$nil))));
                            var $4618 = IO$monad$((_m$bind$13 => _m$pure$14 => {
                                var $4623 = _m$bind$13;
                                return $4623;
                            }))(IO$print$(("Error parsing block #" + Nat$show$(_block_number$2))))((_$13 => {
                                var $4624 = IO$print$(_str$12);
                                return $4624;
                            }));
                            var $4617 = $4618;
                        } else {
                            var $4625 = IO$print$("Done.");
                            var $4617 = $4625;
                        };
                        var $4612 = $4617;
                        break;
                };
                var $4610 = $4612;
                break;
            case 'Parser.Reply.value':
                var $4626 = self.pst;
                var $4627 = self.val;
                var _block$7 = $4627;
                var $4628 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                    var $4629 = _m$bind$8;
                    return $4629;
                }))(IO$print$(("Block #" + Nat$show$(_block_number$2))))((_$8 => {
                    var _bits_0$9 = Kindelia$serialize$block$(_world$1, _block$7);
                    var _bits_1$10 = Kindelia$serialize$block$(_world$1, (() => {
                        var self = Kindelia$deserialize$block$(_world$1, _bits_0$9);
                        switch (self._) {
                            case 'Pair.new':
                                var $4631 = self.snd;
                                var $4632 = $4631;
                                return $4632;
                        };
                    })());
                    var $4630 = IO$monad$((_m$bind$11 => _m$pure$12 => {
                        var $4633 = _m$bind$11;
                        return $4633;
                    }))(IO$print$(("$ " + (Bits$hex$encode$(_bits_0$9) + (" " + (() => {
                        var self = (_bits_1$10 === _bits_0$9);
                        if (self) {
                            var $4634 = "ok";
                            return $4634;
                        } else {
                            var $4635 = "bad_serialization";
                            return $4635;
                        };
                    })())))))((_$11 => {
                        var $4636 = Kindelia$api$run$go$transactions$(_world$1, _block_number$2, (() => {
                            var self = $4626;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4637 = self.str;
                                    var $4638 = $4637;
                                    return $4638;
                            };
                        })(), _block$7);
                        return $4636;
                    }));
                    return $4630;
                }));
                var $4610 = $4628;
                break;
        };
        return $4610;
    };
    const Kindelia$api$run$go = x0 => x1 => x2 => Kindelia$api$run$go$(x0, x1, x2);
    const Kindelia$genesis = Map$from_list$(List$nil);

    function Kindelia$api$run$(_code$1) {
        var $4639 = Kindelia$api$run$go$(Kindelia$genesis, 0n, _code$1);
        return $4639;
    };
    const Kindelia$api$run = x0 => Kindelia$api$run$(x0);
    const Kindelia = (() => {
        var _x$1 = Kindelia$api$run;
        var $4640 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $4641 = _m$pure$3;
            return $4641;
        }))(Unit$new);
        return $4640;
    })();
    return {
        '$main$': () => run(Kindelia),
        'run': run,
        'Parser.Reply': Parser$Reply,
        'List': List,
        'Parser.Reply.error': Parser$Reply$error,
        'Bool.false': Bool$false,
        'Bool.true': Bool$true,
        'Nat.gtn': Nat$gtn,
        'Parser.Error.combine': Parser$Error$combine,
        'List.cons': List$cons,
        'Parser.Reply.value': Parser$Reply$value,
        'List.reverse.go': List$reverse$go,
        'List.nil': List$nil,
        'List.reverse': List$reverse,
        'Parser.until.go': Parser$until$go,
        'Parser.until': Parser$until,
        'Parser.many.go': Parser$many$go,
        'Parser.many': Parser$many,
        'Parser.Error.new': Parser$Error$new,
        'Parser.Reply.fail': Parser$Reply$fail,
        'Maybe.some': Maybe$some,
        'Maybe': Maybe,
        'Maybe.none': Maybe$none,
        'Parser.Error.maybe_combine': Parser$Error$maybe_combine,
        'Parser.State.new': Parser$State$new,
        'Parser.choice': Parser$choice,
        'Parser': Parser,
        'Unit.new': Unit$new,
        'String.cons': String$cons,
        'String.concat': String$concat,
        'Cmp.as_eql': Cmp$as_eql,
        'Cmp.ltn': Cmp$ltn,
        'Cmp.gtn': Cmp$gtn,
        'Word.cmp.go': Word$cmp$go,
        'Cmp.eql': Cmp$eql,
        'Word.cmp': Word$cmp,
        'Word.eql': Word$eql,
        'Nat.succ': Nat$succ,
        'Nat.zero': Nat$zero,
        'U16.eql': U16$eql,
        'String.nil': String$nil,
        'Parser.text.go': Parser$text$go,
        'Parser.text': Parser$text,
        'Parser.eof': Parser$eof,
        'Parser.one': Parser$one,
        'Kindelia.parse.ignore': Kindelia$parse$ignore,
        'Kindelia.parse.text': Kindelia$parse$text,
        'Parser.letter': Parser$letter,
        'Bool.and': Bool$and,
        'Cmp.as_lte': Cmp$as_lte,
        'Word.lte': Word$lte,
        'U16.lte': U16$lte,
        'U16.btw': U16$btw,
        'Kindelia.parse.letter': Kindelia$parse$letter,
        'List.fold': List$fold,
        'Kindelia.parse.name': Kindelia$parse$name,
        'Parser.wrap': Parser$wrap,
        'Pair': Pair,
        'Parser.maybe': Parser$maybe,
        'Kindelia.Type.effe': Kindelia$Type$effe,
        'Kindelia.Type.word': Kindelia$Type$word,
        'Kindelia.Type.data': Kindelia$Type$data,
        'Kindelia.parse.type': Kindelia$parse$type,
        'Pair.new': Pair$new,
        'Kindelia.parse.ann': Kindelia$parse$ann,
        'Kindelia.Constructor.new': Kindelia$Constructor$new,
        'Kindelia.parse.constructor': Kindelia$parse$constructor,
        'Kindelia.Data.new': Kindelia$Data$new,
        'Kindelia.parse.data': Kindelia$parse$data,
        'Kindelia.Transaction.new_data': Kindelia$Transaction$new_data,
        'Kindelia.Term.let': Kindelia$Term$let,
        'Kindelia.parse.term.let': Kindelia$parse$term$let,
        'Kindelia.Term.create': Kindelia$Term$create,
        'Kindelia.parse.term.create': Kindelia$parse$term$create,
        'Maybe.bind': Maybe$bind,
        'Maybe.monad': Maybe$monad,
        'BBT.lookup': BBT$lookup,
        'Cmp.as_ltn': Cmp$as_ltn,
        'Word.ltn': Word$ltn,
        'U16.ltn': U16$ltn,
        'U16.cmp': U16$cmp,
        'String.cmp': String$cmp,
        'Map.get': Map$get,
        'Kindelia.get_data': Kindelia$get_data,
        'Parser.fail': Parser$fail,
        'Kindelia.parse.term.match.cases': Kindelia$parse$term$match$cases,
        'Kindelia.Term.match': Kindelia$Term$match,
        'Kindelia.parse.term.match': Kindelia$parse$term$match,
        'Parser.many1': Parser$many1,
        'Parser.digit': Parser$digit,
        'Nat.add': Nat$add,
        'Nat.mul': Nat$mul,
        'Nat.from_base.go': Nat$from_base$go,
        'Nat.from_base': Nat$from_base,
        'Parser.nat': Parser$nat,
        'Nat.gte': Nat$gte,
        'Nat.pow': Nat$pow,
        'Kindelia.Term.word': Kindelia$Term$word,
        'U64.new': U64$new,
        'Nat.apply': Nat$apply,
        'Word': Word,
        'Word.e': Word$e,
        'Word.i': Word$i,
        'Word.o': Word$o,
        'Word.inc': Word$inc,
        'Word.zero': Word$zero,
        'Nat.to_word': Nat$to_word,
        'Nat.to_u64': Nat$to_u64,
        'Kindelia.parse.term.word': Kindelia$parse$term$word,
        'Kindelia.Term.compare': Kindelia$Term$compare,
        'Kindelia.parse.term.compare': Kindelia$parse$term$compare,
        'Kindelia.Operation.add': Kindelia$Operation$add,
        'Kindelia.Operation.sub': Kindelia$Operation$sub,
        'Kindelia.Operation.mul': Kindelia$Operation$mul,
        'Kindelia.Operation.div': Kindelia$Operation$div,
        'Kindelia.Operation.mod': Kindelia$Operation$mod,
        'Kindelia.Operation.or': Kindelia$Operation$or,
        'Kindelia.Operation.and': Kindelia$Operation$and,
        'Kindelia.Operation.xor': Kindelia$Operation$xor,
        'Kindelia.parse.term.operation': Kindelia$parse$term$operation,
        'Kindelia.Term.operate': Kindelia$Term$operate,
        'Kindelia.parse.term.operate': Kindelia$parse$term$operate,
        'Kindelia.Term.set': Kindelia$Term$set,
        'Kindelia.parse.term.set': Kindelia$parse$term$set,
        'Kindelia.Term.get': Kindelia$Term$get,
        'Kindelia.parse.term.get': Kindelia$parse$term$get,
        'Kindelia.Term.bind': Kindelia$Term$bind,
        'Kindelia.parse.term.bind': Kindelia$parse$term$bind,
        'Kindelia.Term.return': Kindelia$Term$return,
        'Kindelia.parse.term.return': Kindelia$parse$term$return,
        'Kindelia.Term.call': Kindelia$Term$call,
        'Kindelia.parse.term.call': Kindelia$parse$term$call,
        'Kindelia.Term.var': Kindelia$Term$var,
        'Kindelia.parse.term.var': Kindelia$parse$term$var,
        'Kindelia.parse.term': Kindelia$parse$term,
        'Kindelia.Bond.new': Kindelia$Bond$new,
        'Kindelia.parse.bond': Kindelia$parse$bond,
        'Kindelia.Transaction.new_bond': Kindelia$Transaction$new_bond,
        'Maybe.default': Maybe$default,
        'Kindelia.File.new': Kindelia$File$new,
        'Kindelia.parse.file': Kindelia$parse$file,
        'Kindelia.Transaction.new_file': Kindelia$Transaction$new_file,
        'Kindelia.Eval.new': Kindelia$Eval$new,
        'Kindelia.parse.eval': Kindelia$parse$eval,
        'Kindelia.Transaction.new_eval': Kindelia$Transaction$new_eval,
        'Kindelia.parse.transaction': Kindelia$parse$transaction,
        'Kindelia.parse.block': Kindelia$parse$block,
        'IO': IO,
        'Nat.ltn': Nat$ltn,
        'String.length.go': String$length$go,
        'String.length': String$length,
        'String.flatten.go': String$flatten$go,
        'String.flatten': String$flatten,
        'String.join.go': String$join$go,
        'String.join': String$join,
        'Kind.Code.highlight.end': Kind$Code$highlight$end,
        'Maybe.extract': Maybe$extract,
        'Nat.is_zero': Nat$is_zero,
        'Nat.double': Nat$double,
        'Nat.pred': Nat$pred,
        'String.reverse.go': String$reverse$go,
        'String.reverse': String$reverse,
        'String.pad_right': String$pad_right,
        'String.pad_left': String$pad_left,
        'Nat.lte': Nat$lte,
        'Nat.sub': Nat$sub,
        'Nat.div_mod.go': Nat$div_mod$go,
        'Nat.div_mod': Nat$div_mod,
        'Nat.to_base.go': Nat$to_base$go,
        'Nat.to_base': Nat$to_base,
        'Pair.snd': Pair$snd,
        'Nat.mod': Nat$mod,
        'List.at': List$at,
        'Nat.show_digit': Nat$show_digit,
        'Nat.to_string_base': Nat$to_string_base,
        'Nat.show': Nat$show,
        'Bool.not': Bool$not,
        'U16.new': U16$new,
        'Nat.to_u16': Nat$to_u16,
        'Kind.Code.color': Kind$Code$color,
        'Nat.eql': Nat$eql,
        'List.take': List$take,
        'Kind.Code.highlight.go': Kind$Code$highlight$go,
        'Kind.Code.highlight': Kind$Code$highlight,
        'IO.ask': IO$ask,
        'IO.bind': IO$bind,
        'IO.end': IO$end,
        'IO.monad': IO$monad,
        'IO.put_string': IO$put_string,
        'IO.print': IO$print,
        'Bits.e': Bits$e,
        'Bits.o': Bits$o,
        'Word.subber': Word$subber,
        'Word.sub': Word$sub,
        'U16.sub': U16$sub,
        'Word.adder': Word$adder,
        'Word.add': Word$add,
        'U16.add': U16$add,
        'Pair.fst': Pair$fst,
        'Nat.div': Nat$div,
        'Bits.i': Bits$i,
        'Kindelia.serialize.fixlen': Kindelia$serialize$fixlen,
        'Word.fold': Word$fold,
        'Word.to_nat': Word$to_nat,
        'U16.to_nat': U16$to_nat,
        'Bits.concat': Bits$concat,
        'Kindelia.serialize.name': Kindelia$serialize$name,
        'Kindelia.serialize.list': Kindelia$serialize$list,
        'Kindelia.serialize.pair': Kindelia$serialize$pair,
        'Kindelia.serialize.type': Kindelia$serialize$type,
        'Kindelia.serialize.constructor': Kindelia$serialize$constructor,
        'Kindelia.serialize.data': Kindelia$serialize$data,
        'List.mapped': List$mapped,
        'List.find_index.go': List$find_index$go,
        'List.find_index': List$find_index,
        'String.eql': String$eql,
        'Kindelia.serialize.varlen.go': Kindelia$serialize$varlen$go,
        'Kindelia.serialize.varlen': Kindelia$serialize$varlen,
        'Kindelia.serialize.name.local': Kindelia$serialize$name$local,
        'List.map': List$map,
        'List.concat': List$concat,
        'Kindelia.serialize.cases': Kindelia$serialize$cases,
        'Kindelia.get_constructors': Kindelia$get_constructors,
        'U64.to_nat': U64$to_nat,
        'Kindelia.serialize.term': Kindelia$serialize$term,
        'Kindelia.serialize.bond': Kindelia$serialize$bond,
        'Kindelia.serialize.file': Kindelia$serialize$file,
        'Kindelia.serialize.eval': Kindelia$serialize$eval,
        'Kindelia.serialize.transaction': Kindelia$serialize$transaction,
        'Kindelia.serialize.block': Kindelia$serialize$block,
        'Bits.is_empty': Bits$is_empty,
        'Kindelia.deserialize.fixlen': Kindelia$deserialize$fixlen,
        'U16.from_nat': U16$from_nat,
        'Kindelia.deserialize.name': Kindelia$deserialize$name,
        'Kindelia.deserialize.list': Kindelia$deserialize$list,
        'Kindelia.deserialize.pair': Kindelia$deserialize$pair,
        'Kindelia.deserialize.type': Kindelia$deserialize$type,
        'Kindelia.deserialize.constructor': Kindelia$deserialize$constructor,
        'Kindelia.deserialize.data': Kindelia$deserialize$data,
        'U64.from_nat': U64$from_nat,
        'Kindelia.deserialize.varlen.go': Kindelia$deserialize$varlen$go,
        'Kindelia.deserialize.varlen': Kindelia$deserialize$varlen,
        'List.get': List$get,
        'Kindelia.deserialize.name.local': Kindelia$deserialize$name$local,
        'Kindelia.deserialize.cases': Kindelia$deserialize$cases,
        'Kindelia.deserialize.term': Kindelia$deserialize$term,
        'Kindelia.deserialize.bond': Kindelia$deserialize$bond,
        'Kindelia.deserialize.file': Kindelia$deserialize$file,
        'Kindelia.deserialize.eval': Kindelia$deserialize$eval,
        'Kindelia.deserialize.transaction': Kindelia$deserialize$transaction,
        'Kindelia.deserialize.block': Kindelia$deserialize$block,
        'Bits.hex.encode': Bits$hex$encode,
        'Bits.eql': Bits$eql,
        'BBT': BBT,
        'Map': Map,
        'BBT.bin': BBT$bin,
        'U32.new': U32$new,
        'Nat.to_u32': Nat$to_u32,
        'BBT.tip': BBT$tip,
        'BBT.singleton': BBT$singleton,
        'BBT.size': BBT$size,
        'U32.add': U32$add,
        'Word.shift_left.one.go': Word$shift_left$one$go,
        'Word.shift_left.one': Word$shift_left$one,
        'Word.shift_left': Word$shift_left,
        'Word.mul.go': Word$mul$go,
        'Word.to_zero': Word$to_zero,
        'Word.mul': Word$mul,
        'U32.mul': U32$mul,
        'BBT.w': BBT$w,
        'U32.ltn': U32$ltn,
        'U32.from_nat': U32$from_nat,
        'BBT.node': BBT$node,
        'Cmp.as_gtn': Cmp$as_gtn,
        'Word.gtn': Word$gtn,
        'U32.gtn': U32$gtn,
        'BBT.balance': BBT$balance,
        'BBT.insert': BBT$insert,
        'Map.set': Map$set,
        'Kindelia.Entry.data': Kindelia$Entry$data,
        'Kindelia.Entry.bond': Kindelia$Entry$bond,
        'List.unzip': List$unzip,
        'Kindelia.extend': Kindelia$extend,
        'BBT.from_list.go': BBT$from_list$go,
        'BBT.from_list': BBT$from_list,
        'Map.from_list': Map$from_list,
        'Kindelia.equal': Kindelia$equal,
        'Kindelia.get_bond': Kindelia$get_bond,
        'List.zip': List$zip,
        'List.all': List$all,
        'Maybe.mapped': Maybe$mapped,
        'List.ifind.go': List$ifind$go,
        'List.ifind': List$ifind,
        'Kindelia.get_constructor_value': Kindelia$get_constructor_value,
        'List.length': List$length,
        'List.zip_with': List$zip_with,
        'List.zipped_with': List$zipped_with,
        'List.and': List$and,
        'Kindelia.get_file': Kindelia$get_file,
        'List.is_empty': List$is_empty,
        'Maybe.if': Maybe$if,
        'List.find': List$find,
        'List.in': List$in,
        'Bool.or': Bool$or,
        'Kindelia.check': Kindelia$check,
        'Kindelia.Entry.file': Kindelia$Entry$file,
        'Kindelia.sanitize.many': Kindelia$sanitize$many,
        'Triple.new': Triple$new,
        'Kindelia.rename': Kindelia$rename,
        'List.for': List$for,
        'Kindelia.sanitize.cases': Kindelia$sanitize$cases,
        'Kindelia.sanitize': Kindelia$sanitize,
        'Kindelia.Runtime': Kindelia$Runtime,
        'Kindelia.Runtime.new': Kindelia$Runtime$new,
        'Triple': Triple,
        'Kindelia.rename.many': Kindelia$rename$many,
        'Kindelia.get_constructor_index': Kindelia$get_constructor_index,
        'U64.ltn': U64$ltn,
        'U64.eql': U64$eql,
        'U64.cmp': U64$cmp,
        'U64.add': U64$add,
        'U64.sub': U64$sub,
        'U64.mul': U64$mul,
        'Word.bit_length.go': Word$bit_length$go,
        'Word.bit_length': Word$bit_length,
        'Cmp.as_gte': Cmp$as_gte,
        'Word.gte': Word$gte,
        'Word.or': Word$or,
        'Word.shift_right.one.go': Word$shift_right$one$go,
        'Word.shift_right.one': Word$shift_right$one,
        'Word.shift_right': Word$shift_right,
        'Word.div.go': Word$div$go,
        'Word.div': Word$div,
        'U64.div': U64$div,
        'Word.mod': Word$mod,
        'U64.mod': U64$mod,
        'U64.or': U64$or,
        'Word.and': Word$and,
        'U64.and': U64$and,
        'Word.xor': Word$xor,
        'U64.xor': U64$xor,
        'Kindelia.reduce': Kindelia$reduce,
        'Kindelia.normalize.many': Kindelia$normalize$many,
        'Kindelia.normalize.cases': Kindelia$normalize$cases,
        'Kindelia.normalize': Kindelia$normalize,
        'Kindelia.run': Kindelia$run,
        'Kindelia.show.type': Kindelia$show$type,
        'Word.show': Word$show,
        'U64.show': U64$show,
        'String.is_empty': String$is_empty,
        'Kindelia.show.term': Kindelia$show$term,
        'Kindelia.transact': Kindelia$transact,
        'Kindelia.api.run.go.transactions': Kindelia$api$run$go$transactions,
        'Kindelia.api.run.go': Kindelia$api$run$go,
        'Kindelia.genesis': Kindelia$genesis,
        'Kindelia.api.run': Kindelia$api$run,
        'Kindelia': Kindelia,
    };
})();
module.exports['$main$']();