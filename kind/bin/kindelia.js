module.exports = (function() {
    function word_to_u16(w) {
        var u = 0;
        for (var i = 0; i < 16; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u16_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 16; ++i) {
            w = {
                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u16_to_bits(x) {
        var s = '';
        for (var i = 0; i < 16; ++i) {
            s = (x & 1 ? '1' : '0') + s;
            x = x >>> 1;
        }
        return s;
    };

    function word_to_u32(w) {
        var u = 0;
        for (var i = 0; i < 32; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u32_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 32; ++i) {
            w = {
                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u32_for(state, from, til, func) {
        for (var i = from; i < til; ++i) {
            state = func(i)(state);
        }
        return state;
    };

    function word_to_u64(w) {
        var u = 0n;
        for (var i = 0n; i < 64n; i += 1n) {
            u = u | (w._ === 'Word.i' ? 1n << i : 0n);
            w = w.pred;
        };
        return u;
    };

    function u64_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0n; i < 64n; i += 1n) {
            w = {
                _: (u >> (64n - i - 1n)) & 1n ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };
    var list_for = list => nil => cons => {
        while (list._ !== 'List.nil') {
            nil = cons(list.head)(nil);
            list = list.tail;
        }
        return nil;
    };
    var list_length = list => {
        var len = 0;
        while (list._ === 'List.cons') {
            len += 1;
            list = list.tail;
        };
        return BigInt(len);
    };
    const inst_unit = x => x(null);
    const elim_unit = (x => {
        var $1 = (() => c0 => {
            var self = x;
            switch ("unit") {
                case 'unit':
                    var $0 = c0;
                    return $0;
            };
        })();
        return $1;
    });
    const inst_bool = x => x(true)(false);
    const elim_bool = (x => {
        var $4 = (() => c0 => c1 => {
            var self = x;
            if (self) {
                var $2 = c0;
                return $2;
            } else {
                var $3 = c1;
                return $3;
            };
        })();
        return $4;
    });
    const inst_nat = x => x(0n)(x0 => 1n + x0);
    const elim_nat = (x => {
        var $8 = (() => c0 => c1 => {
            var self = x;
            if (self === 0n) {
                var $5 = c0;
                return $5;
            } else {
                var $6 = (self - 1n);
                var $7 = c1($6);
                return $7;
            };
        })();
        return $8;
    });
    const inst_bits = x => x('')(x0 => x0 + '0')(x0 => x0 + '1');
    const elim_bits = (x => {
        var $14 = (() => c0 => c1 => c2 => {
            var self = x;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $9 = self.slice(0, -1);
                    var $10 = c1($9);
                    return $10;
                case 'i':
                    var $11 = self.slice(0, -1);
                    var $12 = c2($11);
                    return $12;
                case 'e':
                    var $13 = c0;
                    return $13;
            };
        })();
        return $14;
    });
    const inst_u16 = x => x(x0 => word_to_u16(x0));
    const elim_u16 = (x => {
        var $17 = (() => c0 => {
            var self = x;
            switch ('u16') {
                case 'u16':
                    var $15 = u16_to_word(self);
                    var $16 = c0($15);
                    return $16;
            };
        })();
        return $17;
    });
    const inst_u32 = x => x(x0 => word_to_u32(x0));
    const elim_u32 = (x => {
        var $20 = (() => c0 => {
            var self = x;
            switch ('u32') {
                case 'u32':
                    var $18 = u32_to_word(self);
                    var $19 = c0($18);
                    return $19;
            };
        })();
        return $20;
    });
    const inst_u64 = x => x(x0 => word_to_u64(x0));
    const elim_u64 = (x => {
        var $23 = (() => c0 => {
            var self = x;
            switch ('u64') {
                case 'u64':
                    var $21 = u64_to_word(self);
                    var $22 = c0($21);
                    return $22;
            };
        })();
        return $23;
    });
    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));
    const elim_string = (x => {
        var $28 = (() => c0 => c1 => {
            var self = x;
            if (self.length === 0) {
                var $24 = c0;
                return $24;
            } else {
                var $25 = self.charCodeAt(0);
                var $26 = self.slice(1);
                var $27 = c1($25)($26);
                return $27;
            };
        })();
        return $28;
    });
    var run = (p) => {
        if (typeof window === 'undefined') {
            var rl = eval("require('readline')").createInterface({
                input: process.stdin,
                output: process.stdout,
                terminal: false
            });
            var fs = eval("require('fs')");
            var pc = eval("process");
            var ht = eval("require('http')");
            var hs = eval("require('https')");
            var dg = eval("require('dgram')");
        } else {
            var rl = {
                question: (x, f) => f(''),
                close: () => {}
            };
            var fs = {
                readFileSync: () => ''
            };
            var pc = {
                exit: () => {},
                argv: []
            };
            var ht = null;
            var hs = null;
            var dg = null;
        };
        var lib = {
            rl,
            fs,
            pc,
            ht,
            hs,
            dg
        };
        return run_io(lib, p)
            .then((x) => {
                rl.close();
                return x;
            })
            .catch((e) => {
                rl.close();
                throw e;
            });
    };
    var set_file = (lib, param) => {
        var path = '';
        for (var i = 0; i < param.length && param[i] !== '='; ++i) {
            path += param[i];
        };
        var data = param.slice(i + 1);
        lib.fs.mkdirSync(path.split('/').slice(0, -1).join('/'), {
            recursive: true
        });
        lib.fs.writeFileSync(path, data);
        return '';
    };
    var del_file = (lib, param) => {
        try {
            lib.fs.unlinkSync(param);
            return '';
        } catch (e) {
            if (e.message.indexOf('EPERM') !== -1) {
                lib.fs.rmdirSync(param);
                return '';
            } else {
                throw e;
            }
        }
    };
    var get_file = (lib, param) => {
        return lib.fs.readFileSync(param, 'utf8');
    }
    var get_dir = (lib, param) => {
        return lib.fs.readdirSync(param).join(';');
    };
    var get_file_mtime = (lib, param) => {
        return String(lib.fs.statSync(param).mtime.getTime());
    };
    var request = (lib, param) => {
        if (typeof fetch === 'undefined') {
            return new Promise((res, err) => {
                (/^https/.test(param) ? lib.hs : lib.ht).get(param, r => {
                    let data = '';
                    r.on('data', chunk => {
                        data += chunk;
                    });
                    r.on('end', () => res(data));
                }).on('error', e => res(''));
            });
        } else {
            return fetch(param).then(res => res.text()).catch(e => '');
        }
    }
    let PORTS = {};

    function init_udp(lib, port_num) {
        return new Promise((resolve, reject) => {
            if (!PORTS[port_num]) {
                PORTS[port_num] = {
                    socket: lib.dg.createSocket('udp4'),
                    mailbox: []
                };
                PORTS[port_num].socket.bind(port_num);
                PORTS[port_num].socket.on('listening', () => resolve(PORTS[port_num]));
                PORTS[port_num].socket.on('message', (data, peer) => {
                    var ip = peer.address;
                    var port = peer.port;
                    PORTS[port_num].mailbox.push({
                        ip: peer.address,
                        port: peer.port,
                        data: data.toString('hex')
                    });
                })
                PORTS[port_num].socket.on('error', (err) => {
                    console.log('err');
                    reject('UDP init error.');
                });
            } else {
                resolve(PORTS[port_num]);
            }
        });
    }
    async function send_udp(lib, port_num, to_ip, to_port_num, data) {
        var port = await init_udp(lib, port_num);
        port.socket.send(Buffer.from(data, 'hex'), to_port_num, to_ip);
        return null;
    }
    async function recv_udp(lib, port_num) {
        var port = await init_udp(lib, port_num);
        var mailbox = port.mailbox;
        port.mailbox = [];
        return mailbox;
    }
    async function stop_udp(lib, port_num) {
        PORTS[port_num].socket.close();
        delete PORTS[port_num];
    }
    var file_error = e => {
        if (e.message.indexOf('NOENT') !== -1) {
            return '';
        } else {
            throw e;
        }
    };
    var io_action = {
        print: async (lib, param) => {
            console.log(param);
            return '';
        },
        put_string: async (lib, param) => {
            process.stdout.write(param);
            return '';
        },
        get_file: async (lib, param) => {
            try {
                return get_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        set_file: async (lib, param) => {
            try {
                return set_file(lib, param)
            } catch (e) {
                return file_error(e);
            }
        },
        del_file: async (lib, param) => {
            try {
                return del_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_dir: async (lib, param) => {
            try {
                return get_dir(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_file_mtime: async (lib, param) => {
            try {
                return get_file_mtime(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        exit: async (lib, param) => {
            lib.pc.exit();
            return '';
        },
        request: async (lib, param) => {
            return request(lib, param);
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        get_line: async (lib, param) => {
            return await new Promise((res, err) => {
                lib.rl.question(param, (line) => res(line));
            });
        },
        get_args: async (lib, param) => {
            return lib.pc.argv[2] || '';
        },
        init_udp: async (lib, param) => {
            try {
                await init_udp(lib, Number(param));
                return '';
            } catch (e) {
                return '';
            }
        },
        send_udp: async (lib, param) => {
            let [port_num, to_ip, to_port_num, data] = param.split(';');
            await send_udp(lib, Number(port_num), to_ip, Number(to_port_num), data);
            return '';
        },
        recv_udp: async (lib, param) => {
            var mailbox = await recv_udp(lib, Number(param));
            var reply = mailbox.map(x => x.ip + ',' + x.port + ',' + x.data).join(';');
            return reply;
        },
        stop_udp: async (lib, param) => {
            await stop_udp(lib, Number(param));
            return '';
        },
        sleep: async (lib, param) => {
            return await new Promise((resolve, reject) => {
                setTimeout(() => resolve(''), Number(param));
            });
        },
    };
    var run_io = async (lib, io, depth = 0) => {
        switch (io._) {
            case 'IO.end':
                return Promise.resolve(io.value);
            case 'IO.ask':
                var action = io_action[io.query];
                var answer = await action(lib, io.param);
                return await run_io(lib, io.then(answer), depth + 1);
        }
    };

    function Parser$Reply$(_V$1) {
        var $29 = null;
        return $29;
    };
    const Parser$Reply = x0 => Parser$Reply$(x0);

    function List$(_A$1) {
        var $30 = null;
        return $30;
    };
    const List = x0 => List$(x0);

    function Parser$Reply$error$(_err$2) {
        var $31 = ({
            _: 'Parser.Reply.error',
            'err': _err$2
        });
        return $31;
    };
    const Parser$Reply$error = x0 => Parser$Reply$error$(x0);
    const Bool$false = false;
    const Bool$true = true;
    const Nat$gtn = a0 => a1 => (a0 > a1);

    function Parser$Error$combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Parser.Error.new':
                var $33 = self.idx;
                var self = _b$2;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $35 = self.idx;
                        var self = ($33 > $35);
                        if (self) {
                            var $37 = _a$1;
                            var $36 = $37;
                        } else {
                            var $38 = _b$2;
                            var $36 = $38;
                        };
                        var $34 = $36;
                        break;
                };
                var $32 = $34;
                break;
        };
        return $32;
    };
    const Parser$Error$combine = x0 => x1 => Parser$Error$combine$(x0, x1);

    function List$cons$(_head$2, _tail$3) {
        var $39 = ({
            _: 'List.cons',
            'head': _head$2,
            'tail': _tail$3
        });
        return $39;
    };
    const List$cons = x0 => x1 => List$cons$(x0, x1);

    function Parser$Reply$value$(_pst$2, _val$3) {
        var $40 = ({
            _: 'Parser.Reply.value',
            'pst': _pst$2,
            'val': _val$3
        });
        return $40;
    };
    const Parser$Reply$value = x0 => x1 => Parser$Reply$value$(x0, x1);

    function List$reverse$go$(_xs$2, _res$3) {
        var List$reverse$go$ = (_xs$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _res$3]
        });
        var List$reverse$go = _xs$2 => _res$3 => List$reverse$go$(_xs$2, _res$3);
        var arg = [_xs$2, _res$3];
        while (true) {
            let [_xs$2, _res$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $41 = self.head;
                        var $42 = self.tail;
                        var $43 = List$reverse$go$($42, List$cons$($41, _res$3));
                        return $43;
                    case 'List.nil':
                        var $44 = _res$3;
                        return $44;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$reverse$go = x0 => x1 => List$reverse$go$(x0, x1);
    const List$nil = ({
        _: 'List.nil'
    });

    function List$reverse$(_xs$2) {
        var $45 = List$reverse$go$(_xs$2, List$nil);
        return $45;
    };
    const List$reverse = x0 => List$reverse$(x0);

    function Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5) {
        var Parser$until$go$ = (_until$2, _parse$3, _values$4, _pst$5) => ({
            ctr: 'TCO',
            arg: [_until$2, _parse$3, _values$4, _pst$5]
        });
        var Parser$until$go = _until$2 => _parse$3 => _values$4 => _pst$5 => Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5);
        var arg = [_until$2, _parse$3, _values$4, _pst$5];
        while (true) {
            let [_until$2, _parse$3, _values$4, _pst$5] = arg;
            var R = (() => {
                var _until_reply$6 = _until$2(_pst$5);
                var self = _until_reply$6;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $47 = self.err;
                        var _reply$8 = _parse$3(_pst$5);
                        var self = _reply$8;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $49 = self.err;
                                var $50 = Parser$Reply$error$(Parser$Error$combine$($49, $47));
                                var $48 = $50;
                                break;
                            case 'Parser.Reply.value':
                                var $51 = self.pst;
                                var $52 = self.val;
                                var $53 = Parser$until$go$(_until$2, _parse$3, List$cons$($52, _values$4), $51);
                                var $48 = $53;
                                break;
                        };
                        var $46 = $48;
                        break;
                    case 'Parser.Reply.value':
                        var $54 = self.pst;
                        var $55 = Parser$Reply$value$($54, List$reverse$(_values$4));
                        var $46 = $55;
                        break;
                };
                return $46;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$until$go = x0 => x1 => x2 => x3 => Parser$until$go$(x0, x1, x2, x3);

    function Parser$until$(_until$2, _parse$3) {
        var $56 = Parser$until$go(_until$2)(_parse$3)(List$nil);
        return $56;
    };
    const Parser$until = x0 => x1 => Parser$until$(x0, x1);

    function Parser$many$go$(_parse$2, _values$3, _pst$4) {
        var Parser$many$go$ = (_parse$2, _values$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_parse$2, _values$3, _pst$4]
        });
        var Parser$many$go = _parse$2 => _values$3 => _pst$4 => Parser$many$go$(_parse$2, _values$3, _pst$4);
        var arg = [_parse$2, _values$3, _pst$4];
        while (true) {
            let [_parse$2, _values$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var self = _parse$2(_pst$4);
                        switch (self._) {
                            case 'Parser.Reply.value':
                                var $58 = self.pst;
                                var $59 = self.val;
                                var $60 = Parser$many$go$(_parse$2, (_xs$12 => {
                                    var $61 = _values$3(List$cons$($59, _xs$12));
                                    return $61;
                                }), $58);
                                var $57 = $60;
                                break;
                            case 'Parser.Reply.error':
                                var $62 = Parser$Reply$value$(_pst$4, _values$3(List$nil));
                                var $57 = $62;
                                break;
                        };
                        return $57;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$many$go = x0 => x1 => x2 => Parser$many$go$(x0, x1, x2);

    function Parser$many$(_parser$2) {
        var $63 = Parser$many$go(_parser$2)((_x$3 => {
            var $64 = _x$3;
            return $64;
        }));
        return $63;
    };
    const Parser$many = x0 => Parser$many$(x0);

    function Parser$Error$new$(_nam$1, _ini$2, _idx$3, _msg$4) {
        var $65 = ({
            _: 'Parser.Error.new',
            'nam': _nam$1,
            'ini': _ini$2,
            'idx': _idx$3,
            'msg': _msg$4
        });
        return $65;
    };
    const Parser$Error$new = x0 => x1 => x2 => x3 => Parser$Error$new$(x0, x1, x2, x3);

    function Parser$Reply$fail$(_nam$2, _ini$3, _idx$4, _msg$5) {
        var $66 = Parser$Reply$error$(Parser$Error$new$(_nam$2, _ini$3, _idx$4, _msg$5));
        return $66;
    };
    const Parser$Reply$fail = x0 => x1 => x2 => x3 => Parser$Reply$fail$(x0, x1, x2, x3);

    function Maybe$some$(_value$2) {
        var $67 = ({
            _: 'Maybe.some',
            'value': _value$2
        });
        return $67;
    };
    const Maybe$some = x0 => Maybe$some$(x0);

    function Maybe$(_A$1) {
        var $68 = null;
        return $68;
    };
    const Maybe = x0 => Maybe$(x0);
    const Maybe$none = ({
        _: 'Maybe.none'
    });

    function Parser$Error$maybe_combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Maybe.some':
                var $70 = self.value;
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $72 = self.value;
                        var $73 = Maybe$some$(Parser$Error$combine$($70, $72));
                        var $71 = $73;
                        break;
                    case 'Maybe.none':
                        var $74 = _a$1;
                        var $71 = $74;
                        break;
                };
                var $69 = $71;
                break;
            case 'Maybe.none':
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.none':
                        var $76 = Maybe$none;
                        var $75 = $76;
                        break;
                    case 'Maybe.some':
                        var $77 = _b$2;
                        var $75 = $77;
                        break;
                };
                var $69 = $75;
                break;
        };
        return $69;
    };
    const Parser$Error$maybe_combine = x0 => x1 => Parser$Error$maybe_combine$(x0, x1);

    function Parser$State$new$(_err$1, _nam$2, _ini$3, _idx$4, _str$5) {
        var $78 = ({
            _: 'Parser.State.new',
            'err': _err$1,
            'nam': _nam$2,
            'ini': _ini$3,
            'idx': _idx$4,
            'str': _str$5
        });
        return $78;
    };
    const Parser$State$new = x0 => x1 => x2 => x3 => x4 => Parser$State$new$(x0, x1, x2, x3, x4);

    function Parser$choice$(_pars$2, _pst$3) {
        var Parser$choice$ = (_pars$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_pars$2, _pst$3]
        });
        var Parser$choice = _pars$2 => _pst$3 => Parser$choice$(_pars$2, _pst$3);
        var arg = [_pars$2, _pst$3];
        while (true) {
            let [_pars$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $79 = self.err;
                        var $80 = self.nam;
                        var $81 = self.ini;
                        var $82 = self.idx;
                        var $83 = self.str;
                        var self = _pars$2;
                        switch (self._) {
                            case 'List.cons':
                                var $85 = self.head;
                                var $86 = self.tail;
                                var _parsed$11 = $85(_pst$3);
                                var self = _parsed$11;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $88 = self.err;
                                        var _cur_err$13 = Maybe$some$($88);
                                        var _far_err$14 = Parser$Error$maybe_combine$($79, _cur_err$13);
                                        var _new_pst$15 = Parser$State$new$(_far_err$14, $80, $81, $82, $83);
                                        var $89 = Parser$choice$($86, _new_pst$15);
                                        var $87 = $89;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $90 = self.pst;
                                        var $91 = self.val;
                                        var $92 = Parser$Reply$value$($90, $91);
                                        var $87 = $92;
                                        break;
                                };
                                var $84 = $87;
                                break;
                            case 'List.nil':
                                var self = $79;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $94 = self.value;
                                        var $95 = Parser$Reply$error$($94);
                                        var $93 = $95;
                                        break;
                                    case 'Maybe.none':
                                        var $96 = Parser$Reply$fail$($80, $81, $82, "No parse.");
                                        var $93 = $96;
                                        break;
                                };
                                var $84 = $93;
                                break;
                        };
                        return $84;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$choice = x0 => x1 => Parser$choice$(x0, x1);

    function Parser$(_V$1) {
        var $97 = null;
        return $97;
    };
    const Parser = x0 => Parser$(x0);
    const Unit$new = null;

    function String$cons$(_head$1, _tail$2) {
        var $98 = (String.fromCharCode(_head$1) + _tail$2);
        return $98;
    };
    const String$cons = x0 => x1 => String$cons$(x0, x1);
    const String$concat = a0 => a1 => (a0 + a1);

    function Cmp$as_eql$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.gtn':
                var $100 = Bool$false;
                var $99 = $100;
                break;
            case 'Cmp.eql':
                var $101 = Bool$true;
                var $99 = $101;
                break;
        };
        return $99;
    };
    const Cmp$as_eql = x0 => Cmp$as_eql$(x0);
    const Cmp$ltn = ({
        _: 'Cmp.ltn'
    });
    const Cmp$gtn = ({
        _: 'Cmp.gtn'
    });

    function Word$cmp$go$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $103 = self.pred;
                var $104 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $106 = self.pred;
                            var $107 = (_a$pred$10 => {
                                var $108 = Word$cmp$go$(_a$pred$10, $106, _c$4);
                                return $108;
                            });
                            var $105 = $107;
                            break;
                        case 'Word.i':
                            var $109 = self.pred;
                            var $110 = (_a$pred$10 => {
                                var $111 = Word$cmp$go$(_a$pred$10, $109, Cmp$ltn);
                                return $111;
                            });
                            var $105 = $110;
                            break;
                        case 'Word.e':
                            var $112 = (_a$pred$8 => {
                                var $113 = _c$4;
                                return $113;
                            });
                            var $105 = $112;
                            break;
                    };
                    var $105 = $105($103);
                    return $105;
                });
                var $102 = $104;
                break;
            case 'Word.i':
                var $114 = self.pred;
                var $115 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $117 = self.pred;
                            var $118 = (_a$pred$10 => {
                                var $119 = Word$cmp$go$(_a$pred$10, $117, Cmp$gtn);
                                return $119;
                            });
                            var $116 = $118;
                            break;
                        case 'Word.i':
                            var $120 = self.pred;
                            var $121 = (_a$pred$10 => {
                                var $122 = Word$cmp$go$(_a$pred$10, $120, _c$4);
                                return $122;
                            });
                            var $116 = $121;
                            break;
                        case 'Word.e':
                            var $123 = (_a$pred$8 => {
                                var $124 = _c$4;
                                return $124;
                            });
                            var $116 = $123;
                            break;
                    };
                    var $116 = $116($114);
                    return $116;
                });
                var $102 = $115;
                break;
            case 'Word.e':
                var $125 = (_b$5 => {
                    var $126 = _c$4;
                    return $126;
                });
                var $102 = $125;
                break;
        };
        var $102 = $102(_b$3);
        return $102;
    };
    const Word$cmp$go = x0 => x1 => x2 => Word$cmp$go$(x0, x1, x2);
    const Cmp$eql = ({
        _: 'Cmp.eql'
    });

    function Word$cmp$(_a$2, _b$3) {
        var $127 = Word$cmp$go$(_a$2, _b$3, Cmp$eql);
        return $127;
    };
    const Word$cmp = x0 => x1 => Word$cmp$(x0, x1);

    function Word$eql$(_a$2, _b$3) {
        var $128 = Cmp$as_eql$(Word$cmp$(_a$2, _b$3));
        return $128;
    };
    const Word$eql = x0 => x1 => Word$eql$(x0, x1);

    function Nat$succ$(_pred$1) {
        var $129 = 1n + _pred$1;
        return $129;
    };
    const Nat$succ = x0 => Nat$succ$(x0);
    const Nat$zero = 0n;
    const U16$eql = a0 => a1 => (a0 === a1);
    const String$nil = '';

    function Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4) {
        var Parser$text$go$ = (_ini_idx$1, _ini_txt$2, _text$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_ini_idx$1, _ini_txt$2, _text$3, _pst$4]
        });
        var Parser$text$go = _ini_idx$1 => _ini_txt$2 => _text$3 => _pst$4 => Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4);
        var arg = [_ini_idx$1, _ini_txt$2, _text$3, _pst$4];
        while (true) {
            let [_ini_idx$1, _ini_txt$2, _text$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var $130 = self.err;
                        var $131 = self.nam;
                        var $132 = self.ini;
                        var $133 = self.idx;
                        var $134 = self.str;
                        var self = _text$3;
                        if (self.length === 0) {
                            var $136 = Parser$Reply$value$(_pst$4, Unit$new);
                            var $135 = $136;
                        } else {
                            var $137 = self.charCodeAt(0);
                            var $138 = self.slice(1);
                            var self = $134;
                            if (self.length === 0) {
                                var _error_msg$12 = ("Expected \'" + (_ini_txt$2 + "\', found end of file."));
                                var $140 = Parser$Reply$fail$($131, $132, _ini_idx$1, _error_msg$12);
                                var $139 = $140;
                            } else {
                                var $141 = self.charCodeAt(0);
                                var $142 = self.slice(1);
                                var self = ($137 === $141);
                                if (self) {
                                    var _pst$14 = Parser$State$new$($130, $131, $132, Nat$succ$($133), $142);
                                    var $144 = Parser$text$go$(_ini_idx$1, _ini_txt$2, $138, _pst$14);
                                    var $143 = $144;
                                } else {
                                    var _chr$14 = String$cons$($141, String$nil);
                                    var _err$15 = ("Expected \'" + (_ini_txt$2 + ("\', found \'" + (_chr$14 + "\'."))));
                                    var $145 = Parser$Reply$fail$($131, $132, _ini_idx$1, _err$15);
                                    var $143 = $145;
                                };
                                var $139 = $143;
                            };
                            var $135 = $139;
                        };
                        return $135;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$text$go = x0 => x1 => x2 => x3 => Parser$text$go$(x0, x1, x2, x3);

    function Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $147 = self.idx;
                var self = Parser$text$go$($147, _text$1, _text$1, _pst$2);
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $149 = self.err;
                        var $150 = Parser$Reply$error$($149);
                        var $148 = $150;
                        break;
                    case 'Parser.Reply.value':
                        var $151 = self.pst;
                        var $152 = self.val;
                        var $153 = Parser$Reply$value$($151, $152);
                        var $148 = $153;
                        break;
                };
                var $146 = $148;
                break;
        };
        return $146;
    };
    const Parser$text = x0 => x1 => Parser$text$(x0, x1);

    function Parser$eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $155 = self.nam;
                var $156 = self.ini;
                var $157 = self.idx;
                var $158 = self.str;
                var self = $158;
                if (self.length === 0) {
                    var $160 = Parser$Reply$value$(_pst$1, Unit$new);
                    var $159 = $160;
                } else {
                    var $161 = self.charCodeAt(0);
                    var $162 = self.slice(1);
                    var $163 = Parser$Reply$fail$($155, $156, $157, "Expected end-of-file.");
                    var $159 = $163;
                };
                var $154 = $159;
                break;
        };
        return $154;
    };
    const Parser$eof = x0 => Parser$eof$(x0);

    function Parser$one$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $165 = self.err;
                var $166 = self.nam;
                var $167 = self.ini;
                var $168 = self.idx;
                var $169 = self.str;
                var self = $169;
                if (self.length === 0) {
                    var $171 = Parser$Reply$fail$($166, $167, $168, "Unexpected end of file.");
                    var $170 = $171;
                } else {
                    var $172 = self.charCodeAt(0);
                    var $173 = self.slice(1);
                    var _pst$9 = Parser$State$new$($165, $166, $167, Nat$succ$($168), $173);
                    var $174 = Parser$Reply$value$(_pst$9, $172);
                    var $170 = $174;
                };
                var $164 = $170;
                break;
        };
        return $164;
    };
    const Parser$one = x0 => Parser$one$(x0);
    const Kindelia$parse$ignore = Parser$many$(Parser$choice(List$cons$(Parser$text(" "), List$cons$(Parser$text("\u{9}"), List$cons$(Parser$text("\u{d}"), List$cons$(Parser$text("\u{a}"), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $176 = self.err;
                var _reply$7 = Parser$text$("//", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $178 = self.err;
                        var self = $176;
                        switch (self._) {
                            case 'Maybe.some':
                                var $180 = self.value;
                                var $181 = Parser$Reply$error$(Parser$Error$combine$($180, $178));
                                var $179 = $181;
                                break;
                            case 'Maybe.none':
                                var $182 = Parser$Reply$error$($178);
                                var $179 = $182;
                                break;
                        };
                        var $177 = $179;
                        break;
                    case 'Parser.Reply.value':
                        var $183 = self.pst;
                        var self = $183;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $185 = self.err;
                                var $186 = self.nam;
                                var $187 = self.ini;
                                var $188 = self.idx;
                                var $189 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($176, $185), $186, $187, $188, $189);
                                var _end$16 = Parser$choice(List$cons$(Parser$text("\u{a}"), List$cons$(Parser$eof, List$nil)));
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $191 = self.err;
                                        var _reply$22 = Parser$until$(_end$16, Parser$one)(_reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $193 = self.err;
                                                var self = $191;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $195 = self.value;
                                                        var $196 = Parser$Reply$error$(Parser$Error$combine$($195, $193));
                                                        var $194 = $196;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $197 = Parser$Reply$error$($193);
                                                        var $194 = $197;
                                                        break;
                                                };
                                                var $192 = $194;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $198 = self.pst;
                                                var self = $198;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $200 = self.err;
                                                        var $201 = self.nam;
                                                        var $202 = self.ini;
                                                        var $203 = self.idx;
                                                        var $204 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($191, $200), $201, $202, $203, $204);
                                                        var $205 = Parser$Reply$value$(_reply$pst$30, Unit$new);
                                                        var $199 = $205;
                                                        break;
                                                };
                                                var $192 = $199;
                                                break;
                                        };
                                        var $190 = $192;
                                        break;
                                };
                                var $184 = $190;
                                break;
                        };
                        var $177 = $184;
                        break;
                };
                var $175 = $177;
                break;
        };
        return $175;
    }), List$nil)))))));

    function Kindelia$parse$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $207 = self.err;
                var _reply$8 = Kindelia$parse$ignore(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $209 = self.err;
                        var self = $207;
                        switch (self._) {
                            case 'Maybe.some':
                                var $211 = self.value;
                                var $212 = Parser$Reply$error$(Parser$Error$combine$($211, $209));
                                var $210 = $212;
                                break;
                            case 'Maybe.none':
                                var $213 = Parser$Reply$error$($209);
                                var $210 = $213;
                                break;
                        };
                        var $208 = $210;
                        break;
                    case 'Parser.Reply.value':
                        var $214 = self.pst;
                        var self = $214;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $216 = self.err;
                                var $217 = self.nam;
                                var $218 = self.ini;
                                var $219 = self.idx;
                                var $220 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($207, $216), $217, $218, $219, $220);
                                var $221 = Parser$text$(_text$1, _reply$pst$16);
                                var $215 = $221;
                                break;
                        };
                        var $208 = $215;
                        break;
                };
                var $206 = $208;
                break;
        };
        return $206;
    };
    const Kindelia$parse$text = x0 => x1 => Kindelia$parse$text$(x0, x1);

    function Parser$letter$(_is_letter$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $223 = self.err;
                var $224 = self.nam;
                var $225 = self.ini;
                var $226 = self.idx;
                var $227 = self.str;
                var self = $227;
                if (self.length === 0) {
                    var $229 = Parser$Reply$fail$($224, $225, $226, "Unexpected eof.");
                    var $228 = $229;
                } else {
                    var $230 = self.charCodeAt(0);
                    var $231 = self.slice(1);
                    var self = _is_letter$1($230);
                    if (self) {
                        var $233 = Parser$Reply$value$(Parser$State$new$($223, $224, $225, Nat$succ$($226), $231), $230);
                        var $232 = $233;
                    } else {
                        var $234 = Parser$Reply$fail$($224, $225, $226, "Expected letter.");
                        var $232 = $234;
                    };
                    var $228 = $232;
                };
                var $222 = $228;
                break;
        };
        return $222;
    };
    const Parser$letter = x0 => x1 => Parser$letter$(x0, x1);
    const Bool$and = a0 => a1 => (a0 && a1);

    function Cmp$as_lte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $236 = Bool$true;
                var $235 = $236;
                break;
            case 'Cmp.gtn':
                var $237 = Bool$false;
                var $235 = $237;
                break;
        };
        return $235;
    };
    const Cmp$as_lte = x0 => Cmp$as_lte$(x0);

    function Word$lte$(_a$2, _b$3) {
        var $238 = Cmp$as_lte$(Word$cmp$(_a$2, _b$3));
        return $238;
    };
    const Word$lte = x0 => x1 => Word$lte$(x0, x1);
    const U16$lte = a0 => a1 => (a0 <= a1);

    function U16$btw$(_a$1, _b$2, _c$3) {
        var $239 = ((_a$1 <= _b$2) && (_b$2 <= _c$3));
        return $239;
    };
    const U16$btw = x0 => x1 => x2 => U16$btw$(x0, x1, x2);
    const Kindelia$parse$letter = Parser$letter((_chr$1 => {
        var self = U16$btw$(65, _chr$1, 90);
        if (self) {
            var $241 = Bool$true;
            var $240 = $241;
        } else {
            var self = U16$btw$(97, _chr$1, 122);
            if (self) {
                var $243 = Bool$true;
                var $242 = $243;
            } else {
                var self = U16$btw$(48, _chr$1, 57);
                if (self) {
                    var $245 = Bool$true;
                    var $244 = $245;
                } else {
                    var self = (46 === _chr$1);
                    if (self) {
                        var $247 = Bool$true;
                        var $246 = $247;
                    } else {
                        var self = (95 === _chr$1);
                        if (self) {
                            var $249 = Bool$true;
                            var $248 = $249;
                        } else {
                            var self = (94 === _chr$1);
                            if (self) {
                                var $251 = Bool$true;
                                var $250 = $251;
                            } else {
                                var $252 = Bool$false;
                                var $250 = $252;
                            };
                            var $248 = $250;
                        };
                        var $246 = $248;
                    };
                    var $244 = $246;
                };
                var $242 = $244;
            };
            var $240 = $242;
        };
        return $240;
    }));

    function List$fold$(_list$2, _nil$4, _cons$5) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $254 = self.head;
                var $255 = self.tail;
                var $256 = _cons$5($254)(List$fold$($255, _nil$4, _cons$5));
                var $253 = $256;
                break;
            case 'List.nil':
                var $257 = _nil$4;
                var $253 = $257;
                break;
        };
        return $253;
    };
    const List$fold = x0 => x1 => x2 => List$fold$(x0, x1, x2);

    function Kindelia$parse$name$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $259 = self.err;
                var _reply$7 = Kindelia$parse$ignore(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $261 = self.err;
                        var self = $259;
                        switch (self._) {
                            case 'Maybe.some':
                                var $263 = self.value;
                                var $264 = Parser$Reply$error$(Parser$Error$combine$($263, $261));
                                var $262 = $264;
                                break;
                            case 'Maybe.none':
                                var $265 = Parser$Reply$error$($261);
                                var $262 = $265;
                                break;
                        };
                        var $260 = $262;
                        break;
                    case 'Parser.Reply.value':
                        var $266 = self.pst;
                        var self = $266;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $268 = self.err;
                                var $269 = self.nam;
                                var $270 = self.ini;
                                var $271 = self.idx;
                                var $272 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($259, $268), $269, $270, $271, $272);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $274 = self.err;
                                        var _reply$21 = Kindelia$parse$letter(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $276 = self.err;
                                                var self = $274;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $278 = self.value;
                                                        var $279 = Parser$Reply$error$(Parser$Error$combine$($278, $276));
                                                        var $277 = $279;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $280 = Parser$Reply$error$($276);
                                                        var $277 = $280;
                                                        break;
                                                };
                                                var $275 = $277;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $281 = self.pst;
                                                var $282 = self.val;
                                                var self = $281;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $284 = self.err;
                                                        var $285 = self.nam;
                                                        var $286 = self.ini;
                                                        var $287 = self.idx;
                                                        var $288 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($274, $284), $285, $286, $287, $288);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $290 = self.err;
                                                                var _reply$35 = Parser$many$(Kindelia$parse$letter)(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $292 = self.err;
                                                                        var self = $290;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $294 = self.value;
                                                                                var $295 = Parser$Reply$error$(Parser$Error$combine$($294, $292));
                                                                                var $293 = $295;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $296 = Parser$Reply$error$($292);
                                                                                var $293 = $296;
                                                                                break;
                                                                        };
                                                                        var $291 = $293;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $297 = self.pst;
                                                                        var $298 = self.val;
                                                                        var self = $297;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $300 = self.err;
                                                                                var $301 = self.nam;
                                                                                var $302 = self.ini;
                                                                                var $303 = self.idx;
                                                                                var $304 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($290, $300), $301, $302, $303, $304);
                                                                                var $305 = Parser$Reply$value$(_reply$pst$43, String$cons$($282, List$fold$($298, String$nil, String$cons)));
                                                                                var $299 = $305;
                                                                                break;
                                                                        };
                                                                        var $291 = $299;
                                                                        break;
                                                                };
                                                                var $289 = $291;
                                                                break;
                                                        };
                                                        var $283 = $289;
                                                        break;
                                                };
                                                var $275 = $283;
                                                break;
                                        };
                                        var $273 = $275;
                                        break;
                                };
                                var $267 = $273;
                                break;
                        };
                        var $260 = $267;
                        break;
                };
                var $258 = $260;
                break;
        };
        return $258;
    };
    const Kindelia$parse$name = x0 => Kindelia$parse$name$(x0);

    function Parser$wrap$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $307 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $309 = self.err;
                        var self = $307;
                        switch (self._) {
                            case 'Maybe.some':
                                var $311 = self.value;
                                var $312 = Parser$Reply$error$(Parser$Error$combine$($311, $309));
                                var $310 = $312;
                                break;
                            case 'Maybe.none':
                                var $313 = Parser$Reply$error$($309);
                                var $310 = $313;
                                break;
                        };
                        var $308 = $310;
                        break;
                    case 'Parser.Reply.value':
                        var $314 = self.pst;
                        var self = $314;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $316 = self.err;
                                var $317 = self.nam;
                                var $318 = self.ini;
                                var $319 = self.idx;
                                var $320 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($307, $316), $317, $318, $319, $320);
                                var $321 = Parser$until$(_close$4, _parse$3)(_reply$pst$19);
                                var $315 = $321;
                                break;
                        };
                        var $308 = $315;
                        break;
                };
                var $306 = $308;
                break;
        };
        return $306;
    };
    const Parser$wrap = x0 => x1 => x2 => x3 => Parser$wrap$(x0, x1, x2, x3);

    function Pair$(_A$1, _B$2) {
        var $322 = null;
        return $322;
    };
    const Pair = x0 => x1 => Pair$(x0, x1);

    function Parser$maybe$(_parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var self = _parse$2(_pst$3);
                switch (self._) {
                    case 'Parser.Reply.value':
                        var $325 = self.pst;
                        var $326 = self.val;
                        var $327 = Parser$Reply$value$($325, Maybe$some$($326));
                        var $324 = $327;
                        break;
                    case 'Parser.Reply.error':
                        var $328 = Parser$Reply$value$(_pst$3, Maybe$none);
                        var $324 = $328;
                        break;
                };
                var $323 = $324;
                break;
        };
        return $323;
    };
    const Parser$maybe = x0 => x1 => Parser$maybe$(x0, x1);

    function Kindelia$Type$effe$(_rety$1) {
        var $329 = ({
            _: 'Kindelia.Type.effe',
            'rety': _rety$1
        });
        return $329;
    };
    const Kindelia$Type$effe = x0 => Kindelia$Type$effe$(x0);
    const Kindelia$Type$word = ({
        _: 'Kindelia.Type.word'
    });

    function Kindelia$Type$data$(_name$1) {
        var $330 = ({
            _: 'Kindelia.Type.data',
            'name': _name$1
        });
        return $330;
    };
    const Kindelia$Type$data = x0 => Kindelia$Type$data$(x0);

    function Kindelia$parse$type$(_world$1) {
        var $331 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $333 = self.err;
                    var _reply$8 = Kindelia$parse$text$("&", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $335 = self.err;
                            var self = $333;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $337 = self.value;
                                    var $338 = Parser$Reply$error$(Parser$Error$combine$($337, $335));
                                    var $336 = $338;
                                    break;
                                case 'Maybe.none':
                                    var $339 = Parser$Reply$error$($335);
                                    var $336 = $339;
                                    break;
                            };
                            var $334 = $336;
                            break;
                        case 'Parser.Reply.value':
                            var $340 = self.pst;
                            var self = $340;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $342 = self.err;
                                    var $343 = self.nam;
                                    var $344 = self.ini;
                                    var $345 = self.idx;
                                    var $346 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($333, $342), $343, $344, $345, $346);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $348 = self.err;
                                            var _reply$22 = Kindelia$parse$type$(_world$1)(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $350 = self.err;
                                                    var self = $348;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $352 = self.value;
                                                            var $353 = Parser$Reply$error$(Parser$Error$combine$($352, $350));
                                                            var $351 = $353;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $354 = Parser$Reply$error$($350);
                                                            var $351 = $354;
                                                            break;
                                                    };
                                                    var $349 = $351;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $355 = self.pst;
                                                    var $356 = self.val;
                                                    var self = $355;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $358 = self.err;
                                                            var $359 = self.nam;
                                                            var $360 = self.ini;
                                                            var $361 = self.idx;
                                                            var $362 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($348, $358), $359, $360, $361, $362);
                                                            var $363 = Parser$Reply$value$(_reply$pst$30, Kindelia$Type$effe$($356));
                                                            var $357 = $363;
                                                            break;
                                                    };
                                                    var $349 = $357;
                                                    break;
                                            };
                                            var $347 = $349;
                                            break;
                                    };
                                    var $341 = $347;
                                    break;
                            };
                            var $334 = $341;
                            break;
                    };
                    var $332 = $334;
                    break;
            };
            return $332;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $365 = self.err;
                    var _reply$8 = Kindelia$parse$text$("#word", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $367 = self.err;
                            var self = $365;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $369 = self.value;
                                    var $370 = Parser$Reply$error$(Parser$Error$combine$($369, $367));
                                    var $368 = $370;
                                    break;
                                case 'Maybe.none':
                                    var $371 = Parser$Reply$error$($367);
                                    var $368 = $371;
                                    break;
                            };
                            var $366 = $368;
                            break;
                        case 'Parser.Reply.value':
                            var $372 = self.pst;
                            var self = $372;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $374 = self.err;
                                    var $375 = self.nam;
                                    var $376 = self.ini;
                                    var $377 = self.idx;
                                    var $378 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($365, $374), $375, $376, $377, $378);
                                    var $379 = Parser$Reply$value$(_reply$pst$16, Kindelia$Type$word);
                                    var $373 = $379;
                                    break;
                            };
                            var $366 = $373;
                            break;
                    };
                    var $364 = $366;
                    break;
            };
            return $364;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $381 = self.err;
                    var _reply$8 = Kindelia$parse$name$(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $383 = self.err;
                            var self = $381;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $385 = self.value;
                                    var $386 = Parser$Reply$error$(Parser$Error$combine$($385, $383));
                                    var $384 = $386;
                                    break;
                                case 'Maybe.none':
                                    var $387 = Parser$Reply$error$($383);
                                    var $384 = $387;
                                    break;
                            };
                            var $382 = $384;
                            break;
                        case 'Parser.Reply.value':
                            var $388 = self.pst;
                            var $389 = self.val;
                            var self = $388;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $391 = self.err;
                                    var $392 = self.nam;
                                    var $393 = self.ini;
                                    var $394 = self.idx;
                                    var $395 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($381, $391), $392, $393, $394, $395);
                                    var $396 = Parser$Reply$value$(_reply$pst$16, Kindelia$Type$data$($389));
                                    var $390 = $396;
                                    break;
                            };
                            var $382 = $390;
                            break;
                    };
                    var $380 = $382;
                    break;
            };
            return $380;
        }), List$nil))));
        return $331;
    };
    const Kindelia$parse$type = x0 => Kindelia$parse$type$(x0);

    function Pair$new$(_fst$3, _snd$4) {
        var $397 = ({
            _: 'Pair.new',
            'fst': _fst$3,
            'snd': _snd$4
        });
        return $397;
    };
    const Pair$new = x0 => x1 => Pair$new$(x0, x1);

    function Kindelia$parse$ann$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $399 = self.err;
                var _reply$8 = Parser$maybe$(Kindelia$parse$text(","), _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $401 = self.err;
                        var self = $399;
                        switch (self._) {
                            case 'Maybe.some':
                                var $403 = self.value;
                                var $404 = Parser$Reply$error$(Parser$Error$combine$($403, $401));
                                var $402 = $404;
                                break;
                            case 'Maybe.none':
                                var $405 = Parser$Reply$error$($401);
                                var $402 = $405;
                                break;
                        };
                        var $400 = $402;
                        break;
                    case 'Parser.Reply.value':
                        var $406 = self.pst;
                        var self = $406;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $408 = self.err;
                                var $409 = self.nam;
                                var $410 = self.ini;
                                var $411 = self.idx;
                                var $412 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($399, $408), $409, $410, $411, $412);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $414 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $416 = self.err;
                                                var self = $414;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $418 = self.value;
                                                        var $419 = Parser$Reply$error$(Parser$Error$combine$($418, $416));
                                                        var $417 = $419;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $420 = Parser$Reply$error$($416);
                                                        var $417 = $420;
                                                        break;
                                                };
                                                var $415 = $417;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $421 = self.pst;
                                                var $422 = self.val;
                                                var self = $421;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $424 = self.err;
                                                        var $425 = self.nam;
                                                        var $426 = self.ini;
                                                        var $427 = self.idx;
                                                        var $428 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($414, $424), $425, $426, $427, $428);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $430 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $432 = self.err;
                                                                        var self = $430;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $434 = self.value;
                                                                                var $435 = Parser$Reply$error$(Parser$Error$combine$($434, $432));
                                                                                var $433 = $435;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $436 = Parser$Reply$error$($432);
                                                                                var $433 = $436;
                                                                                break;
                                                                        };
                                                                        var $431 = $433;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $437 = self.pst;
                                                                        var self = $437;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $439 = self.err;
                                                                                var $440 = self.nam;
                                                                                var $441 = self.ini;
                                                                                var $442 = self.idx;
                                                                                var $443 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($430, $439), $440, $441, $442, $443);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $445 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$type$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $447 = self.err;
                                                                                                var self = $445;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $449 = self.value;
                                                                                                        var $450 = Parser$Reply$error$(Parser$Error$combine$($449, $447));
                                                                                                        var $448 = $450;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $451 = Parser$Reply$error$($447);
                                                                                                        var $448 = $451;
                                                                                                        break;
                                                                                                };
                                                                                                var $446 = $448;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $452 = self.pst;
                                                                                                var $453 = self.val;
                                                                                                var self = $452;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $455 = self.err;
                                                                                                        var $456 = self.nam;
                                                                                                        var $457 = self.ini;
                                                                                                        var $458 = self.idx;
                                                                                                        var $459 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($445, $455), $456, $457, $458, $459);
                                                                                                        var $460 = Parser$Reply$value$(_reply$pst$58, Pair$new$($422, $453));
                                                                                                        var $454 = $460;
                                                                                                        break;
                                                                                                };
                                                                                                var $446 = $454;
                                                                                                break;
                                                                                        };
                                                                                        var $444 = $446;
                                                                                        break;
                                                                                };
                                                                                var $438 = $444;
                                                                                break;
                                                                        };
                                                                        var $431 = $438;
                                                                        break;
                                                                };
                                                                var $429 = $431;
                                                                break;
                                                        };
                                                        var $423 = $429;
                                                        break;
                                                };
                                                var $415 = $423;
                                                break;
                                        };
                                        var $413 = $415;
                                        break;
                                };
                                var $407 = $413;
                                break;
                        };
                        var $400 = $407;
                        break;
                };
                var $398 = $400;
                break;
        };
        return $398;
    };
    const Kindelia$parse$ann = x0 => x1 => Kindelia$parse$ann$(x0, x1);

    function Kindelia$Constructor$new$(_name$1, _fprm$2) {
        var $461 = ({
            _: 'Kindelia.Constructor.new',
            'name': _name$1,
            'fprm': _fprm$2
        });
        return $461;
    };
    const Kindelia$Constructor$new = x0 => x1 => Kindelia$Constructor$new$(x0, x1);

    function Kindelia$parse$constructor$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $463 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $465 = self.err;
                        var self = $463;
                        switch (self._) {
                            case 'Maybe.some':
                                var $467 = self.value;
                                var $468 = Parser$Reply$error$(Parser$Error$combine$($467, $465));
                                var $466 = $468;
                                break;
                            case 'Maybe.none':
                                var $469 = Parser$Reply$error$($465);
                                var $466 = $469;
                                break;
                        };
                        var $464 = $466;
                        break;
                    case 'Parser.Reply.value':
                        var $470 = self.pst;
                        var $471 = self.val;
                        var self = $470;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $473 = self.err;
                                var $474 = self.nam;
                                var $475 = self.ini;
                                var $476 = self.idx;
                                var $477 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($463, $473), $474, $475, $476, $477);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $479 = self.err;
                                        var _reply$22 = Parser$wrap$(Kindelia$parse$text("{"), Kindelia$parse$ann(_world$1), Kindelia$parse$text("}"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $481 = self.err;
                                                var self = $479;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $483 = self.value;
                                                        var $484 = Parser$Reply$error$(Parser$Error$combine$($483, $481));
                                                        var $482 = $484;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $485 = Parser$Reply$error$($481);
                                                        var $482 = $485;
                                                        break;
                                                };
                                                var $480 = $482;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $486 = self.pst;
                                                var $487 = self.val;
                                                var self = $486;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $489 = self.err;
                                                        var $490 = self.nam;
                                                        var $491 = self.ini;
                                                        var $492 = self.idx;
                                                        var $493 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($479, $489), $490, $491, $492, $493);
                                                        var $494 = Parser$Reply$value$(_reply$pst$30, Kindelia$Constructor$new$($471, $487));
                                                        var $488 = $494;
                                                        break;
                                                };
                                                var $480 = $488;
                                                break;
                                        };
                                        var $478 = $480;
                                        break;
                                };
                                var $472 = $478;
                                break;
                        };
                        var $464 = $472;
                        break;
                };
                var $462 = $464;
                break;
        };
        return $462;
    };
    const Kindelia$parse$constructor = x0 => x1 => Kindelia$parse$constructor$(x0, x1);

    function Kindelia$Data$new$(_name$1, _constructors$2) {
        var $495 = ({
            _: 'Kindelia.Data.new',
            'name': _name$1,
            'constructors': _constructors$2
        });
        return $495;
    };
    const Kindelia$Data$new = x0 => x1 => Kindelia$Data$new$(x0, x1);

    function Kindelia$parse$data$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $497 = self.err;
                var _reply$8 = Kindelia$parse$text$("type", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $499 = self.err;
                        var self = $497;
                        switch (self._) {
                            case 'Maybe.some':
                                var $501 = self.value;
                                var $502 = Parser$Reply$error$(Parser$Error$combine$($501, $499));
                                var $500 = $502;
                                break;
                            case 'Maybe.none':
                                var $503 = Parser$Reply$error$($499);
                                var $500 = $503;
                                break;
                        };
                        var $498 = $500;
                        break;
                    case 'Parser.Reply.value':
                        var $504 = self.pst;
                        var self = $504;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $506 = self.err;
                                var $507 = self.nam;
                                var $508 = self.ini;
                                var $509 = self.idx;
                                var $510 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($497, $506), $507, $508, $509, $510);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $512 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $514 = self.err;
                                                var self = $512;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $516 = self.value;
                                                        var $517 = Parser$Reply$error$(Parser$Error$combine$($516, $514));
                                                        var $515 = $517;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $518 = Parser$Reply$error$($514);
                                                        var $515 = $518;
                                                        break;
                                                };
                                                var $513 = $515;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $519 = self.pst;
                                                var $520 = self.val;
                                                var self = $519;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $522 = self.err;
                                                        var $523 = self.nam;
                                                        var $524 = self.ini;
                                                        var $525 = self.idx;
                                                        var $526 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($512, $522), $523, $524, $525, $526);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $528 = self.err;
                                                                var _reply$36 = Parser$wrap$(Kindelia$parse$text("{"), (_pst$36 => {
                                                                    var self = _pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $531 = self.err;
                                                                            var _reply$42 = Kindelia$parse$constructor$(_world$1, _pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $533 = self.err;
                                                                                    var self = $531;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $535 = self.value;
                                                                                            var $536 = Parser$Reply$error$(Parser$Error$combine$($535, $533));
                                                                                            var $534 = $536;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $537 = Parser$Reply$error$($533);
                                                                                            var $534 = $537;
                                                                                            break;
                                                                                    };
                                                                                    var $532 = $534;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $538 = self.pst;
                                                                                    var $539 = self.val;
                                                                                    var self = $538;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $541 = self.err;
                                                                                            var $542 = self.nam;
                                                                                            var $543 = self.ini;
                                                                                            var $544 = self.idx;
                                                                                            var $545 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($531, $541), $542, $543, $544, $545);
                                                                                            var self = _reply$pst$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $547 = self.err;
                                                                                                    var _reply$56 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$50);
                                                                                                    var self = _reply$56;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $549 = self.err;
                                                                                                            var self = $547;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $551 = self.value;
                                                                                                                    var $552 = Parser$Reply$error$(Parser$Error$combine$($551, $549));
                                                                                                                    var $550 = $552;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $553 = Parser$Reply$error$($549);
                                                                                                                    var $550 = $553;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $548 = $550;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $554 = self.pst;
                                                                                                            var self = $554;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $556 = self.err;
                                                                                                                    var $557 = self.nam;
                                                                                                                    var $558 = self.ini;
                                                                                                                    var $559 = self.idx;
                                                                                                                    var $560 = self.str;
                                                                                                                    var _reply$pst$64 = Parser$State$new$(Parser$Error$maybe_combine$($547, $556), $557, $558, $559, $560);
                                                                                                                    var $561 = Parser$Reply$value$(_reply$pst$64, $539);
                                                                                                                    var $555 = $561;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $548 = $555;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $546 = $548;
                                                                                                    break;
                                                                                            };
                                                                                            var $540 = $546;
                                                                                            break;
                                                                                    };
                                                                                    var $532 = $540;
                                                                                    break;
                                                                            };
                                                                            var $530 = $532;
                                                                            break;
                                                                    };
                                                                    return $530;
                                                                }), Kindelia$parse$text("}"), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $562 = self.err;
                                                                        var self = $528;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $564 = self.value;
                                                                                var $565 = Parser$Reply$error$(Parser$Error$combine$($564, $562));
                                                                                var $563 = $565;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $566 = Parser$Reply$error$($562);
                                                                                var $563 = $566;
                                                                                break;
                                                                        };
                                                                        var $529 = $563;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $567 = self.pst;
                                                                        var $568 = self.val;
                                                                        var self = $567;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $570 = self.err;
                                                                                var $571 = self.nam;
                                                                                var $572 = self.ini;
                                                                                var $573 = self.idx;
                                                                                var $574 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($528, $570), $571, $572, $573, $574);
                                                                                var $575 = Parser$Reply$value$(_reply$pst$44, Kindelia$Data$new$($520, $568));
                                                                                var $569 = $575;
                                                                                break;
                                                                        };
                                                                        var $529 = $569;
                                                                        break;
                                                                };
                                                                var $527 = $529;
                                                                break;
                                                        };
                                                        var $521 = $527;
                                                        break;
                                                };
                                                var $513 = $521;
                                                break;
                                        };
                                        var $511 = $513;
                                        break;
                                };
                                var $505 = $511;
                                break;
                        };
                        var $498 = $505;
                        break;
                };
                var $496 = $498;
                break;
        };
        return $496;
    };
    const Kindelia$parse$data = x0 => x1 => Kindelia$parse$data$(x0, x1);

    function Kindelia$Transaction$new_data$(_data$1) {
        var $576 = ({
            _: 'Kindelia.Transaction.new_data',
            'data': _data$1
        });
        return $576;
    };
    const Kindelia$Transaction$new_data = x0 => Kindelia$Transaction$new_data$(x0);

    function Kindelia$Term$let$(_name$1, _type$2, _expr$3, _body$4) {
        var $577 = ({
            _: 'Kindelia.Term.let',
            'name': _name$1,
            'type': _type$2,
            'expr': _expr$3,
            'body': _body$4
        });
        return $577;
    };
    const Kindelia$Term$let = x0 => x1 => x2 => x3 => Kindelia$Term$let$(x0, x1, x2, x3);

    function Kindelia$parse$term$let$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $579 = self.err;
                var _reply$8 = Kindelia$parse$text$("let", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $581 = self.err;
                        var self = $579;
                        switch (self._) {
                            case 'Maybe.some':
                                var $583 = self.value;
                                var $584 = Parser$Reply$error$(Parser$Error$combine$($583, $581));
                                var $582 = $584;
                                break;
                            case 'Maybe.none':
                                var $585 = Parser$Reply$error$($581);
                                var $582 = $585;
                                break;
                        };
                        var $580 = $582;
                        break;
                    case 'Parser.Reply.value':
                        var $586 = self.pst;
                        var self = $586;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $588 = self.err;
                                var $589 = self.nam;
                                var $590 = self.ini;
                                var $591 = self.idx;
                                var $592 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($579, $588), $589, $590, $591, $592);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $594 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $596 = self.err;
                                                var self = $594;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $598 = self.value;
                                                        var $599 = Parser$Reply$error$(Parser$Error$combine$($598, $596));
                                                        var $597 = $599;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $600 = Parser$Reply$error$($596);
                                                        var $597 = $600;
                                                        break;
                                                };
                                                var $595 = $597;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $601 = self.pst;
                                                var $602 = self.val;
                                                var self = $601;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $604 = self.err;
                                                        var $605 = self.nam;
                                                        var $606 = self.ini;
                                                        var $607 = self.idx;
                                                        var $608 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($594, $604), $605, $606, $607, $608);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $610 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $612 = self.err;
                                                                        var self = $610;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $614 = self.value;
                                                                                var $615 = Parser$Reply$error$(Parser$Error$combine$($614, $612));
                                                                                var $613 = $615;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $616 = Parser$Reply$error$($612);
                                                                                var $613 = $616;
                                                                                break;
                                                                        };
                                                                        var $611 = $613;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $617 = self.pst;
                                                                        var self = $617;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $619 = self.err;
                                                                                var $620 = self.nam;
                                                                                var $621 = self.ini;
                                                                                var $622 = self.idx;
                                                                                var $623 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($610, $619), $620, $621, $622, $623);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $625 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$type$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $627 = self.err;
                                                                                                var self = $625;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $629 = self.value;
                                                                                                        var $630 = Parser$Reply$error$(Parser$Error$combine$($629, $627));
                                                                                                        var $628 = $630;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $631 = Parser$Reply$error$($627);
                                                                                                        var $628 = $631;
                                                                                                        break;
                                                                                                };
                                                                                                var $626 = $628;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $632 = self.pst;
                                                                                                var $633 = self.val;
                                                                                                var self = $632;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $635 = self.err;
                                                                                                        var $636 = self.nam;
                                                                                                        var $637 = self.ini;
                                                                                                        var $638 = self.idx;
                                                                                                        var $639 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($625, $635), $636, $637, $638, $639);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $641 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$text$("=", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $643 = self.err;
                                                                                                                        var self = $641;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $645 = self.value;
                                                                                                                                var $646 = Parser$Reply$error$(Parser$Error$combine$($645, $643));
                                                                                                                                var $644 = $646;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $647 = Parser$Reply$error$($643);
                                                                                                                                var $644 = $647;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $642 = $644;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $648 = self.pst;
                                                                                                                        var self = $648;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $650 = self.err;
                                                                                                                                var $651 = self.nam;
                                                                                                                                var $652 = self.ini;
                                                                                                                                var $653 = self.idx;
                                                                                                                                var $654 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($641, $650), $651, $652, $653, $654);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $656 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $658 = self.err;
                                                                                                                                                var self = $656;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $660 = self.value;
                                                                                                                                                        var $661 = Parser$Reply$error$(Parser$Error$combine$($660, $658));
                                                                                                                                                        var $659 = $661;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $662 = Parser$Reply$error$($658);
                                                                                                                                                        var $659 = $662;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $657 = $659;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $663 = self.pst;
                                                                                                                                                var $664 = self.val;
                                                                                                                                                var self = $663;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $666 = self.err;
                                                                                                                                                        var $667 = self.nam;
                                                                                                                                                        var $668 = self.ini;
                                                                                                                                                        var $669 = self.idx;
                                                                                                                                                        var $670 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($656, $666), $667, $668, $669, $670);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $672 = self.err;
                                                                                                                                                                var _reply$92 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $674 = self.err;
                                                                                                                                                                        var self = $672;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $676 = self.value;
                                                                                                                                                                                var $677 = Parser$Reply$error$(Parser$Error$combine$($676, $674));
                                                                                                                                                                                var $675 = $677;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $678 = Parser$Reply$error$($674);
                                                                                                                                                                                var $675 = $678;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $673 = $675;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $679 = self.pst;
                                                                                                                                                                        var self = $679;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $681 = self.err;
                                                                                                                                                                                var $682 = self.nam;
                                                                                                                                                                                var $683 = self.ini;
                                                                                                                                                                                var $684 = self.idx;
                                                                                                                                                                                var $685 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($672, $681), $682, $683, $684, $685);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $687 = self.err;
                                                                                                                                                                                        var _reply$106 = Kindelia$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $689 = self.err;
                                                                                                                                                                                                var self = $687;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $691 = self.value;
                                                                                                                                                                                                        var $692 = Parser$Reply$error$(Parser$Error$combine$($691, $689));
                                                                                                                                                                                                        var $690 = $692;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $693 = Parser$Reply$error$($689);
                                                                                                                                                                                                        var $690 = $693;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $688 = $690;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $694 = self.pst;
                                                                                                                                                                                                var $695 = self.val;
                                                                                                                                                                                                var self = $694;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $697 = self.err;
                                                                                                                                                                                                        var $698 = self.nam;
                                                                                                                                                                                                        var $699 = self.ini;
                                                                                                                                                                                                        var $700 = self.idx;
                                                                                                                                                                                                        var $701 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($687, $697), $698, $699, $700, $701);
                                                                                                                                                                                                        var $702 = Parser$Reply$value$(_reply$pst$114, Kindelia$Term$let$($602, $633, $664, $695));
                                                                                                                                                                                                        var $696 = $702;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $688 = $696;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $686 = $688;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $680 = $686;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $673 = $680;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $671 = $673;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $665 = $671;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $657 = $665;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $655 = $657;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $649 = $655;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $642 = $649;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $640 = $642;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $634 = $640;
                                                                                                        break;
                                                                                                };
                                                                                                var $626 = $634;
                                                                                                break;
                                                                                        };
                                                                                        var $624 = $626;
                                                                                        break;
                                                                                };
                                                                                var $618 = $624;
                                                                                break;
                                                                        };
                                                                        var $611 = $618;
                                                                        break;
                                                                };
                                                                var $609 = $611;
                                                                break;
                                                        };
                                                        var $603 = $609;
                                                        break;
                                                };
                                                var $595 = $603;
                                                break;
                                        };
                                        var $593 = $595;
                                        break;
                                };
                                var $587 = $593;
                                break;
                        };
                        var $580 = $587;
                        break;
                };
                var $578 = $580;
                break;
        };
        return $578;
    };
    const Kindelia$parse$term$let = x0 => x1 => Kindelia$parse$term$let$(x0, x1);

    function Kindelia$Term$create$(_ctor$1, _vals$2) {
        var $703 = ({
            _: 'Kindelia.Term.create',
            'ctor': _ctor$1,
            'vals': _vals$2
        });
        return $703;
    };
    const Kindelia$Term$create = x0 => x1 => Kindelia$Term$create$(x0, x1);

    function Kindelia$parse$term$create$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $705 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $707 = self.err;
                        var self = $705;
                        switch (self._) {
                            case 'Maybe.some':
                                var $709 = self.value;
                                var $710 = Parser$Reply$error$(Parser$Error$combine$($709, $707));
                                var $708 = $710;
                                break;
                            case 'Maybe.none':
                                var $711 = Parser$Reply$error$($707);
                                var $708 = $711;
                                break;
                        };
                        var $706 = $708;
                        break;
                    case 'Parser.Reply.value':
                        var $712 = self.pst;
                        var $713 = self.val;
                        var self = $712;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $715 = self.err;
                                var $716 = self.nam;
                                var $717 = self.ini;
                                var $718 = self.idx;
                                var $719 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($705, $715), $716, $717, $718, $719);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $721 = self.err;
                                        var _reply$22 = Parser$wrap$(Kindelia$parse$text("{"), (_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $724 = self.err;
                                                    var _reply$28 = Kindelia$parse$term$(_world$1)(_pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $726 = self.err;
                                                            var self = $724;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $728 = self.value;
                                                                    var $729 = Parser$Reply$error$(Parser$Error$combine$($728, $726));
                                                                    var $727 = $729;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $730 = Parser$Reply$error$($726);
                                                                    var $727 = $730;
                                                                    break;
                                                            };
                                                            var $725 = $727;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $731 = self.pst;
                                                            var $732 = self.val;
                                                            var self = $731;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $734 = self.err;
                                                                    var $735 = self.nam;
                                                                    var $736 = self.ini;
                                                                    var $737 = self.idx;
                                                                    var $738 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($724, $734), $735, $736, $737, $738);
                                                                    var self = _reply$pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $740 = self.err;
                                                                            var _reply$42 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $742 = self.err;
                                                                                    var self = $740;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $744 = self.value;
                                                                                            var $745 = Parser$Reply$error$(Parser$Error$combine$($744, $742));
                                                                                            var $743 = $745;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $746 = Parser$Reply$error$($742);
                                                                                            var $743 = $746;
                                                                                            break;
                                                                                    };
                                                                                    var $741 = $743;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $747 = self.pst;
                                                                                    var self = $747;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $749 = self.err;
                                                                                            var $750 = self.nam;
                                                                                            var $751 = self.ini;
                                                                                            var $752 = self.idx;
                                                                                            var $753 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($740, $749), $750, $751, $752, $753);
                                                                                            var $754 = Parser$Reply$value$(_reply$pst$50, $732);
                                                                                            var $748 = $754;
                                                                                            break;
                                                                                    };
                                                                                    var $741 = $748;
                                                                                    break;
                                                                            };
                                                                            var $739 = $741;
                                                                            break;
                                                                    };
                                                                    var $733 = $739;
                                                                    break;
                                                            };
                                                            var $725 = $733;
                                                            break;
                                                    };
                                                    var $723 = $725;
                                                    break;
                                            };
                                            return $723;
                                        }), Kindelia$parse$text("}"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $755 = self.err;
                                                var self = $721;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $757 = self.value;
                                                        var $758 = Parser$Reply$error$(Parser$Error$combine$($757, $755));
                                                        var $756 = $758;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $759 = Parser$Reply$error$($755);
                                                        var $756 = $759;
                                                        break;
                                                };
                                                var $722 = $756;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $760 = self.pst;
                                                var $761 = self.val;
                                                var self = $760;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $763 = self.err;
                                                        var $764 = self.nam;
                                                        var $765 = self.ini;
                                                        var $766 = self.idx;
                                                        var $767 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($721, $763), $764, $765, $766, $767);
                                                        var $768 = Parser$Reply$value$(_reply$pst$30, Kindelia$Term$create$($713, $761));
                                                        var $762 = $768;
                                                        break;
                                                };
                                                var $722 = $762;
                                                break;
                                        };
                                        var $720 = $722;
                                        break;
                                };
                                var $714 = $720;
                                break;
                        };
                        var $706 = $714;
                        break;
                };
                var $704 = $706;
                break;
        };
        return $704;
    };
    const Kindelia$parse$term$create = x0 => x1 => Kindelia$parse$term$create$(x0, x1);

    function Maybe$bind$(_m$3, _f$4) {
        var self = _m$3;
        switch (self._) {
            case 'Maybe.some':
                var $770 = self.value;
                var $771 = _f$4($770);
                var $769 = $771;
                break;
            case 'Maybe.none':
                var $772 = Maybe$none;
                var $769 = $772;
                break;
        };
        return $769;
    };
    const Maybe$bind = x0 => x1 => Maybe$bind$(x0, x1);

    function Maybe$monad$(_new$2) {
        var $773 = _new$2(Maybe$bind)(Maybe$some);
        return $773;
    };
    const Maybe$monad = x0 => Maybe$monad$(x0);

    function BBT$lookup$(_cmp$3, _key$4, _map$5) {
        var BBT$lookup$ = (_cmp$3, _key$4, _map$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _key$4, _map$5]
        });
        var BBT$lookup = _cmp$3 => _key$4 => _map$5 => BBT$lookup$(_cmp$3, _key$4, _map$5);
        var arg = [_cmp$3, _key$4, _map$5];
        while (true) {
            let [_cmp$3, _key$4, _map$5] = arg;
            var R = (() => {
                var self = _map$5;
                switch (self._) {
                    case 'BBT.bin':
                        var $774 = self.key;
                        var $775 = self.val;
                        var $776 = self.left;
                        var $777 = self.right;
                        var self = _cmp$3(_key$4)($774);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $779 = BBT$lookup$(_cmp$3, _key$4, $776);
                                var $778 = $779;
                                break;
                            case 'Cmp.eql':
                                var $780 = Maybe$some$($775);
                                var $778 = $780;
                                break;
                            case 'Cmp.gtn':
                                var $781 = BBT$lookup$(_cmp$3, _key$4, $777);
                                var $778 = $781;
                                break;
                        };
                        return $778;
                    case 'BBT.tip':
                        var $782 = Maybe$none;
                        return $782;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$lookup = x0 => x1 => x2 => BBT$lookup$(x0, x1, x2);

    function Cmp$as_ltn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $784 = Bool$true;
                var $783 = $784;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $785 = Bool$false;
                var $783 = $785;
                break;
        };
        return $783;
    };
    const Cmp$as_ltn = x0 => Cmp$as_ltn$(x0);

    function Word$ltn$(_a$2, _b$3) {
        var $786 = Cmp$as_ltn$(Word$cmp$(_a$2, _b$3));
        return $786;
    };
    const Word$ltn = x0 => x1 => Word$ltn$(x0, x1);
    const U16$ltn = a0 => a1 => (a0 < a1);

    function U16$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $788 = Cmp$ltn;
            var $787 = $788;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $790 = Cmp$eql;
                var $789 = $790;
            } else {
                var $791 = Cmp$gtn;
                var $789 = $791;
            };
            var $787 = $789;
        };
        return $787;
    };
    const U16$cmp = x0 => x1 => U16$cmp$(x0, x1);

    function String$cmp$(_a$1, _b$2) {
        var String$cmp$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var String$cmp = _a$1 => _b$2 => String$cmp$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                if (self.length === 0) {
                    var self = _b$2;
                    if (self.length === 0) {
                        var $793 = Cmp$eql;
                        var $792 = $793;
                    } else {
                        var $794 = self.charCodeAt(0);
                        var $795 = self.slice(1);
                        var $796 = Cmp$ltn;
                        var $792 = $796;
                    };
                    return $792;
                } else {
                    var $797 = self.charCodeAt(0);
                    var $798 = self.slice(1);
                    var self = _b$2;
                    if (self.length === 0) {
                        var $800 = Cmp$gtn;
                        var $799 = $800;
                    } else {
                        var $801 = self.charCodeAt(0);
                        var $802 = self.slice(1);
                        var self = U16$cmp$($797, $801);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $804 = Cmp$ltn;
                                var $803 = $804;
                                break;
                            case 'Cmp.eql':
                                var $805 = String$cmp$($798, $802);
                                var $803 = $805;
                                break;
                            case 'Cmp.gtn':
                                var $806 = Cmp$gtn;
                                var $803 = $806;
                                break;
                        };
                        var $799 = $803;
                    };
                    return $799;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$cmp = x0 => x1 => String$cmp$(x0, x1);

    function Map$get$(_key$2, _map$3) {
        var $807 = BBT$lookup$(String$cmp, _key$2, _map$3);
        return $807;
    };
    const Map$get = x0 => x1 => Map$get$(x0, x1);

    function Kindelia$get_data$(_world$1, _name$2) {
        var self = _world$1;
        switch (self._) {
            case 'Kindelia.World.new':
                var $809 = self.entry;
                var $810 = Maybe$monad$((_m$bind$4 => _m$pure$5 => {
                    var $811 = _m$bind$4;
                    return $811;
                }))(Map$get$(_name$2, $809))((_entry$4 => {
                    var self = _entry$4;
                    switch (self._) {
                        case 'Kindelia.Entry.data':
                            var $813 = self.value;
                            var $814 = Maybe$some$($813);
                            var $812 = $814;
                            break;
                        case 'Kindelia.Entry.bond':
                        case 'Kindelia.Entry.file':
                            var $815 = Maybe$none;
                            var $812 = $815;
                            break;
                    };
                    return $812;
                }));
                var $808 = $810;
                break;
        };
        return $808;
    };
    const Kindelia$get_data = x0 => x1 => Kindelia$get_data$(x0, x1);

    function Parser$fail$(_error$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $817 = self.nam;
                var $818 = self.ini;
                var $819 = self.idx;
                var $820 = Parser$Reply$fail$($817, $818, $819, _error$2);
                var $816 = $820;
                break;
        };
        return $816;
    };
    const Parser$fail = x0 => x1 => Parser$fail$(x0, x1);

    function Kindelia$parse$term$match$cases$(_world$1, _constructors$2) {
        var self = _constructors$2;
        switch (self._) {
            case 'List.cons':
                var $822 = self.head;
                var $823 = self.tail;
                var _ctor$5 = $822;
                var self = _ctor$5;
                switch (self._) {
                    case 'Kindelia.Constructor.new':
                        var $825 = self.name;
                        var $826 = (_pst$8 => {
                            var self = _pst$8;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $828 = self.err;
                                    var _reply$14 = Kindelia$parse$text$($825, _pst$8);
                                    var self = _reply$14;
                                    switch (self._) {
                                        case 'Parser.Reply.error':
                                            var $830 = self.err;
                                            var self = $828;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $832 = self.value;
                                                    var $833 = Parser$Reply$error$(Parser$Error$combine$($832, $830));
                                                    var $831 = $833;
                                                    break;
                                                case 'Maybe.none':
                                                    var $834 = Parser$Reply$error$($830);
                                                    var $831 = $834;
                                                    break;
                                            };
                                            var $829 = $831;
                                            break;
                                        case 'Parser.Reply.value':
                                            var $835 = self.pst;
                                            var self = $835;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $837 = self.err;
                                                    var $838 = self.nam;
                                                    var $839 = self.ini;
                                                    var $840 = self.idx;
                                                    var $841 = self.str;
                                                    var _reply$pst$22 = Parser$State$new$(Parser$Error$maybe_combine$($828, $837), $838, $839, $840, $841);
                                                    var self = _reply$pst$22;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $843 = self.err;
                                                            var _reply$28 = Kindelia$parse$text$(":", _reply$pst$22);
                                                            var self = _reply$28;
                                                            switch (self._) {
                                                                case 'Parser.Reply.error':
                                                                    var $845 = self.err;
                                                                    var self = $843;
                                                                    switch (self._) {
                                                                        case 'Maybe.some':
                                                                            var $847 = self.value;
                                                                            var $848 = Parser$Reply$error$(Parser$Error$combine$($847, $845));
                                                                            var $846 = $848;
                                                                            break;
                                                                        case 'Maybe.none':
                                                                            var $849 = Parser$Reply$error$($845);
                                                                            var $846 = $849;
                                                                            break;
                                                                    };
                                                                    var $844 = $846;
                                                                    break;
                                                                case 'Parser.Reply.value':
                                                                    var $850 = self.pst;
                                                                    var self = $850;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $852 = self.err;
                                                                            var $853 = self.nam;
                                                                            var $854 = self.ini;
                                                                            var $855 = self.idx;
                                                                            var $856 = self.str;
                                                                            var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($843, $852), $853, $854, $855, $856);
                                                                            var self = _reply$pst$36;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $858 = self.err;
                                                                                    var _reply$42 = Kindelia$parse$term$(_world$1)(_reply$pst$36);
                                                                                    var self = _reply$42;
                                                                                    switch (self._) {
                                                                                        case 'Parser.Reply.error':
                                                                                            var $860 = self.err;
                                                                                            var self = $858;
                                                                                            switch (self._) {
                                                                                                case 'Maybe.some':
                                                                                                    var $862 = self.value;
                                                                                                    var $863 = Parser$Reply$error$(Parser$Error$combine$($862, $860));
                                                                                                    var $861 = $863;
                                                                                                    break;
                                                                                                case 'Maybe.none':
                                                                                                    var $864 = Parser$Reply$error$($860);
                                                                                                    var $861 = $864;
                                                                                                    break;
                                                                                            };
                                                                                            var $859 = $861;
                                                                                            break;
                                                                                        case 'Parser.Reply.value':
                                                                                            var $865 = self.pst;
                                                                                            var $866 = self.val;
                                                                                            var self = $865;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $868 = self.err;
                                                                                                    var $869 = self.nam;
                                                                                                    var $870 = self.ini;
                                                                                                    var $871 = self.idx;
                                                                                                    var $872 = self.str;
                                                                                                    var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($858, $868), $869, $870, $871, $872);
                                                                                                    var self = _reply$pst$50;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $874 = self.err;
                                                                                                            var _reply$56 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$50);
                                                                                                            var self = _reply$56;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.Reply.error':
                                                                                                                    var $876 = self.err;
                                                                                                                    var self = $874;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Maybe.some':
                                                                                                                            var $878 = self.value;
                                                                                                                            var $879 = Parser$Reply$error$(Parser$Error$combine$($878, $876));
                                                                                                                            var $877 = $879;
                                                                                                                            break;
                                                                                                                        case 'Maybe.none':
                                                                                                                            var $880 = Parser$Reply$error$($876);
                                                                                                                            var $877 = $880;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $875 = $877;
                                                                                                                    break;
                                                                                                                case 'Parser.Reply.value':
                                                                                                                    var $881 = self.pst;
                                                                                                                    var self = $881;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.State.new':
                                                                                                                            var $883 = self.err;
                                                                                                                            var $884 = self.nam;
                                                                                                                            var $885 = self.ini;
                                                                                                                            var $886 = self.idx;
                                                                                                                            var $887 = self.str;
                                                                                                                            var _reply$pst$64 = Parser$State$new$(Parser$Error$maybe_combine$($874, $883), $884, $885, $886, $887);
                                                                                                                            var self = _reply$pst$64;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $889 = self.err;
                                                                                                                                    var _reply$70 = Kindelia$parse$term$match$cases$(_world$1, $823)(_reply$pst$64);
                                                                                                                                    var self = _reply$70;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                            var $891 = self.err;
                                                                                                                                            var self = $889;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Maybe.some':
                                                                                                                                                    var $893 = self.value;
                                                                                                                                                    var $894 = Parser$Reply$error$(Parser$Error$combine$($893, $891));
                                                                                                                                                    var $892 = $894;
                                                                                                                                                    break;
                                                                                                                                                case 'Maybe.none':
                                                                                                                                                    var $895 = Parser$Reply$error$($891);
                                                                                                                                                    var $892 = $895;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $890 = $892;
                                                                                                                                            break;
                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                            var $896 = self.pst;
                                                                                                                                            var $897 = self.val;
                                                                                                                                            var self = $896;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $899 = self.err;
                                                                                                                                                    var $900 = self.nam;
                                                                                                                                                    var $901 = self.ini;
                                                                                                                                                    var $902 = self.idx;
                                                                                                                                                    var $903 = self.str;
                                                                                                                                                    var _reply$pst$78 = Parser$State$new$(Parser$Error$maybe_combine$($889, $899), $900, $901, $902, $903);
                                                                                                                                                    var $904 = Parser$Reply$value$(_reply$pst$78, List$cons$($866, $897));
                                                                                                                                                    var $898 = $904;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $890 = $898;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $888 = $890;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $882 = $888;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $875 = $882;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $873 = $875;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $867 = $873;
                                                                                                    break;
                                                                                            };
                                                                                            var $859 = $867;
                                                                                            break;
                                                                                    };
                                                                                    var $857 = $859;
                                                                                    break;
                                                                            };
                                                                            var $851 = $857;
                                                                            break;
                                                                    };
                                                                    var $844 = $851;
                                                                    break;
                                                            };
                                                            var $842 = $844;
                                                            break;
                                                    };
                                                    var $836 = $842;
                                                    break;
                                            };
                                            var $829 = $836;
                                            break;
                                    };
                                    var $827 = $829;
                                    break;
                            };
                            return $827;
                        });
                        var $824 = $826;
                        break;
                };
                var $821 = $824;
                break;
            case 'List.nil':
                var $905 = (_pst$3 => {
                    var $906 = Parser$Reply$value$(_pst$3, List$nil);
                    return $906;
                });
                var $821 = $905;
                break;
        };
        return $821;
    };
    const Kindelia$parse$term$match$cases = x0 => x1 => Kindelia$parse$term$match$cases$(x0, x1);

    function Kindelia$Term$match$(_name$1, _data$2, _cses$3) {
        var $907 = ({
            _: 'Kindelia.Term.match',
            'name': _name$1,
            'data': _data$2,
            'cses': _cses$3
        });
        return $907;
    };
    const Kindelia$Term$match = x0 => x1 => x2 => Kindelia$Term$match$(x0, x1, x2);

    function Kindelia$parse$term$match$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $909 = self.err;
                var _reply$8 = Kindelia$parse$text$("case ", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $911 = self.err;
                        var self = $909;
                        switch (self._) {
                            case 'Maybe.some':
                                var $913 = self.value;
                                var $914 = Parser$Reply$error$(Parser$Error$combine$($913, $911));
                                var $912 = $914;
                                break;
                            case 'Maybe.none':
                                var $915 = Parser$Reply$error$($911);
                                var $912 = $915;
                                break;
                        };
                        var $910 = $912;
                        break;
                    case 'Parser.Reply.value':
                        var $916 = self.pst;
                        var self = $916;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $918 = self.err;
                                var $919 = self.nam;
                                var $920 = self.ini;
                                var $921 = self.idx;
                                var $922 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($909, $918), $919, $920, $921, $922);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $924 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $926 = self.err;
                                                var self = $924;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $928 = self.value;
                                                        var $929 = Parser$Reply$error$(Parser$Error$combine$($928, $926));
                                                        var $927 = $929;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $930 = Parser$Reply$error$($926);
                                                        var $927 = $930;
                                                        break;
                                                };
                                                var $925 = $927;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $931 = self.pst;
                                                var $932 = self.val;
                                                var self = $931;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $934 = self.err;
                                                        var $935 = self.nam;
                                                        var $936 = self.ini;
                                                        var $937 = self.idx;
                                                        var $938 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($924, $934), $935, $936, $937, $938);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $940 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $942 = self.err;
                                                                        var self = $940;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $944 = self.value;
                                                                                var $945 = Parser$Reply$error$(Parser$Error$combine$($944, $942));
                                                                                var $943 = $945;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $946 = Parser$Reply$error$($942);
                                                                                var $943 = $946;
                                                                                break;
                                                                        };
                                                                        var $941 = $943;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $947 = self.pst;
                                                                        var self = $947;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $949 = self.err;
                                                                                var $950 = self.nam;
                                                                                var $951 = self.ini;
                                                                                var $952 = self.idx;
                                                                                var $953 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($940, $949), $950, $951, $952, $953);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $955 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$name$(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $957 = self.err;
                                                                                                var self = $955;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $959 = self.value;
                                                                                                        var $960 = Parser$Reply$error$(Parser$Error$combine$($959, $957));
                                                                                                        var $958 = $960;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $961 = Parser$Reply$error$($957);
                                                                                                        var $958 = $961;
                                                                                                        break;
                                                                                                };
                                                                                                var $956 = $958;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $962 = self.pst;
                                                                                                var $963 = self.val;
                                                                                                var self = $962;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $965 = self.err;
                                                                                                        var $966 = self.nam;
                                                                                                        var $967 = self.ini;
                                                                                                        var $968 = self.idx;
                                                                                                        var $969 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($955, $965), $966, $967, $968, $969);
                                                                                                        var self = Kindelia$get_data$(_world$1, $963);
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $971 = self.value;
                                                                                                                var _data$60 = $971;
                                                                                                                var self = _data$60;
                                                                                                                switch (self._) {
                                                                                                                    case 'Kindelia.Data.new':
                                                                                                                        var $973 = self.constructors;
                                                                                                                        var $974 = (_pst$63 => {
                                                                                                                            var self = _pst$63;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $976 = self.err;
                                                                                                                                    var _reply$69 = Kindelia$parse$text$("{", _pst$63);
                                                                                                                                    var self = _reply$69;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                            var $978 = self.err;
                                                                                                                                            var self = $976;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Maybe.some':
                                                                                                                                                    var $980 = self.value;
                                                                                                                                                    var $981 = Parser$Reply$error$(Parser$Error$combine$($980, $978));
                                                                                                                                                    var $979 = $981;
                                                                                                                                                    break;
                                                                                                                                                case 'Maybe.none':
                                                                                                                                                    var $982 = Parser$Reply$error$($978);
                                                                                                                                                    var $979 = $982;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $977 = $979;
                                                                                                                                            break;
                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                            var $983 = self.pst;
                                                                                                                                            var self = $983;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $985 = self.err;
                                                                                                                                                    var $986 = self.nam;
                                                                                                                                                    var $987 = self.ini;
                                                                                                                                                    var $988 = self.idx;
                                                                                                                                                    var $989 = self.str;
                                                                                                                                                    var _reply$pst$77 = Parser$State$new$(Parser$Error$maybe_combine$($976, $985), $986, $987, $988, $989);
                                                                                                                                                    var self = _reply$pst$77;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $991 = self.err;
                                                                                                                                                            var _reply$83 = Kindelia$parse$term$match$cases$(_world$1, $973)(_reply$pst$77);
                                                                                                                                                            var self = _reply$83;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                    var $993 = self.err;
                                                                                                                                                                    var self = $991;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                            var $995 = self.value;
                                                                                                                                                                            var $996 = Parser$Reply$error$(Parser$Error$combine$($995, $993));
                                                                                                                                                                            var $994 = $996;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                            var $997 = Parser$Reply$error$($993);
                                                                                                                                                                            var $994 = $997;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $992 = $994;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                    var $998 = self.pst;
                                                                                                                                                                    var $999 = self.val;
                                                                                                                                                                    var self = $998;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $1001 = self.err;
                                                                                                                                                                            var $1002 = self.nam;
                                                                                                                                                                            var $1003 = self.ini;
                                                                                                                                                                            var $1004 = self.idx;
                                                                                                                                                                            var $1005 = self.str;
                                                                                                                                                                            var _reply$pst$91 = Parser$State$new$(Parser$Error$maybe_combine$($991, $1001), $1002, $1003, $1004, $1005);
                                                                                                                                                                            var self = _reply$pst$91;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $1007 = self.err;
                                                                                                                                                                                    var _reply$97 = Kindelia$parse$text$("}", _reply$pst$91);
                                                                                                                                                                                    var self = _reply$97;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                            var $1009 = self.err;
                                                                                                                                                                                            var self = $1007;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                    var $1011 = self.value;
                                                                                                                                                                                                    var $1012 = Parser$Reply$error$(Parser$Error$combine$($1011, $1009));
                                                                                                                                                                                                    var $1010 = $1012;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                    var $1013 = Parser$Reply$error$($1009);
                                                                                                                                                                                                    var $1010 = $1013;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $1008 = $1010;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                            var $1014 = self.pst;
                                                                                                                                                                                            var self = $1014;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                    var $1016 = self.err;
                                                                                                                                                                                                    var $1017 = self.nam;
                                                                                                                                                                                                    var $1018 = self.ini;
                                                                                                                                                                                                    var $1019 = self.idx;
                                                                                                                                                                                                    var $1020 = self.str;
                                                                                                                                                                                                    var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($1007, $1016), $1017, $1018, $1019, $1020);
                                                                                                                                                                                                    var $1021 = Parser$Reply$value$(_reply$pst$105, Kindelia$Term$match$($932, $963, $999));
                                                                                                                                                                                                    var $1015 = $1021;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $1008 = $1015;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $1006 = $1008;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1000 = $1006;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $992 = $1000;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $990 = $992;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $984 = $990;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $977 = $984;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $975 = $977;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            return $975;
                                                                                                                        });
                                                                                                                        var $972 = $974;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $970 = $972;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $1022 = Parser$fail("Type not found.");
                                                                                                                var $970 = $1022;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $970 = $970(_reply$pst$58);
                                                                                                        var $964 = $970;
                                                                                                        break;
                                                                                                };
                                                                                                var $956 = $964;
                                                                                                break;
                                                                                        };
                                                                                        var $954 = $956;
                                                                                        break;
                                                                                };
                                                                                var $948 = $954;
                                                                                break;
                                                                        };
                                                                        var $941 = $948;
                                                                        break;
                                                                };
                                                                var $939 = $941;
                                                                break;
                                                        };
                                                        var $933 = $939;
                                                        break;
                                                };
                                                var $925 = $933;
                                                break;
                                        };
                                        var $923 = $925;
                                        break;
                                };
                                var $917 = $923;
                                break;
                        };
                        var $910 = $917;
                        break;
                };
                var $908 = $910;
                break;
        };
        return $908;
    };
    const Kindelia$parse$term$match = x0 => x1 => Kindelia$parse$term$match$(x0, x1);

    function Parser$many1$(_parser$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $1024 = self.err;
                var _reply$9 = _parser$2(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1026 = self.err;
                        var self = $1024;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1028 = self.value;
                                var $1029 = Parser$Reply$error$(Parser$Error$combine$($1028, $1026));
                                var $1027 = $1029;
                                break;
                            case 'Maybe.none':
                                var $1030 = Parser$Reply$error$($1026);
                                var $1027 = $1030;
                                break;
                        };
                        var $1025 = $1027;
                        break;
                    case 'Parser.Reply.value':
                        var $1031 = self.pst;
                        var $1032 = self.val;
                        var self = $1031;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1034 = self.err;
                                var $1035 = self.nam;
                                var $1036 = self.ini;
                                var $1037 = self.idx;
                                var $1038 = self.str;
                                var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($1024, $1034), $1035, $1036, $1037, $1038);
                                var self = _reply$pst$17;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1040 = self.err;
                                        var _reply$23 = Parser$many$(_parser$2)(_reply$pst$17);
                                        var self = _reply$23;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1042 = self.err;
                                                var self = $1040;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1044 = self.value;
                                                        var $1045 = Parser$Reply$error$(Parser$Error$combine$($1044, $1042));
                                                        var $1043 = $1045;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1046 = Parser$Reply$error$($1042);
                                                        var $1043 = $1046;
                                                        break;
                                                };
                                                var $1041 = $1043;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1047 = self.pst;
                                                var $1048 = self.val;
                                                var self = $1047;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1050 = self.err;
                                                        var $1051 = self.nam;
                                                        var $1052 = self.ini;
                                                        var $1053 = self.idx;
                                                        var $1054 = self.str;
                                                        var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($1040, $1050), $1051, $1052, $1053, $1054);
                                                        var $1055 = Parser$Reply$value$(_reply$pst$31, List$cons$($1032, $1048));
                                                        var $1049 = $1055;
                                                        break;
                                                };
                                                var $1041 = $1049;
                                                break;
                                        };
                                        var $1039 = $1041;
                                        break;
                                };
                                var $1033 = $1039;
                                break;
                        };
                        var $1025 = $1033;
                        break;
                };
                var $1023 = $1025;
                break;
        };
        return $1023;
    };
    const Parser$many1 = x0 => x1 => Parser$many1$(x0, x1);

    function Parser$digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1057 = self.err;
                var $1058 = self.nam;
                var $1059 = self.ini;
                var $1060 = self.idx;
                var $1061 = self.str;
                var self = $1061;
                if (self.length === 0) {
                    var $1063 = Parser$Reply$fail$($1058, $1059, $1060, "Not a digit.");
                    var $1062 = $1063;
                } else {
                    var $1064 = self.charCodeAt(0);
                    var $1065 = self.slice(1);
                    var _pst$9 = Parser$State$new$($1057, $1058, $1059, Nat$succ$($1060), $1065);
                    var self = ($1064 === 48);
                    if (self) {
                        var $1067 = Parser$Reply$value$(_pst$9, 0n);
                        var $1066 = $1067;
                    } else {
                        var self = ($1064 === 49);
                        if (self) {
                            var $1069 = Parser$Reply$value$(_pst$9, 1n);
                            var $1068 = $1069;
                        } else {
                            var self = ($1064 === 50);
                            if (self) {
                                var $1071 = Parser$Reply$value$(_pst$9, 2n);
                                var $1070 = $1071;
                            } else {
                                var self = ($1064 === 51);
                                if (self) {
                                    var $1073 = Parser$Reply$value$(_pst$9, 3n);
                                    var $1072 = $1073;
                                } else {
                                    var self = ($1064 === 52);
                                    if (self) {
                                        var $1075 = Parser$Reply$value$(_pst$9, 4n);
                                        var $1074 = $1075;
                                    } else {
                                        var self = ($1064 === 53);
                                        if (self) {
                                            var $1077 = Parser$Reply$value$(_pst$9, 5n);
                                            var $1076 = $1077;
                                        } else {
                                            var self = ($1064 === 54);
                                            if (self) {
                                                var $1079 = Parser$Reply$value$(_pst$9, 6n);
                                                var $1078 = $1079;
                                            } else {
                                                var self = ($1064 === 55);
                                                if (self) {
                                                    var $1081 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $1080 = $1081;
                                                } else {
                                                    var self = ($1064 === 56);
                                                    if (self) {
                                                        var $1083 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $1082 = $1083;
                                                    } else {
                                                        var self = ($1064 === 57);
                                                        if (self) {
                                                            var $1085 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $1084 = $1085;
                                                        } else {
                                                            var $1086 = Parser$Reply$fail$($1058, $1059, $1060, "Not a digit.");
                                                            var $1084 = $1086;
                                                        };
                                                        var $1082 = $1084;
                                                    };
                                                    var $1080 = $1082;
                                                };
                                                var $1078 = $1080;
                                            };
                                            var $1076 = $1078;
                                        };
                                        var $1074 = $1076;
                                    };
                                    var $1072 = $1074;
                                };
                                var $1070 = $1072;
                            };
                            var $1068 = $1070;
                        };
                        var $1066 = $1068;
                    };
                    var $1062 = $1066;
                };
                var $1056 = $1062;
                break;
        };
        return $1056;
    };
    const Parser$digit = x0 => Parser$digit$(x0);
    const Nat$add = a0 => a1 => (a0 + a1);
    const Nat$mul = a0 => a1 => (a0 * a1);

    function Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4) {
        var Nat$from_base$go$ = (_b$1, _ds$2, _p$3, _res$4) => ({
            ctr: 'TCO',
            arg: [_b$1, _ds$2, _p$3, _res$4]
        });
        var Nat$from_base$go = _b$1 => _ds$2 => _p$3 => _res$4 => Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4);
        var arg = [_b$1, _ds$2, _p$3, _res$4];
        while (true) {
            let [_b$1, _ds$2, _p$3, _res$4] = arg;
            var R = (() => {
                var self = _ds$2;
                switch (self._) {
                    case 'List.cons':
                        var $1087 = self.head;
                        var $1088 = self.tail;
                        var $1089 = Nat$from_base$go$(_b$1, $1088, (_b$1 * _p$3), (($1087 * _p$3) + _res$4));
                        return $1089;
                    case 'List.nil':
                        var $1090 = _res$4;
                        return $1090;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$from_base$go = x0 => x1 => x2 => x3 => Nat$from_base$go$(x0, x1, x2, x3);

    function Nat$from_base$(_base$1, _ds$2) {
        var $1091 = Nat$from_base$go$(_base$1, List$reverse$(_ds$2), 1n, 0n);
        return $1091;
    };
    const Nat$from_base = x0 => x1 => Nat$from_base$(x0, x1);

    function Parser$nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1093 = self.err;
                var _reply$7 = Parser$many1$(Parser$digit, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1095 = self.err;
                        var self = $1093;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1097 = self.value;
                                var $1098 = Parser$Reply$error$(Parser$Error$combine$($1097, $1095));
                                var $1096 = $1098;
                                break;
                            case 'Maybe.none':
                                var $1099 = Parser$Reply$error$($1095);
                                var $1096 = $1099;
                                break;
                        };
                        var $1094 = $1096;
                        break;
                    case 'Parser.Reply.value':
                        var $1100 = self.pst;
                        var $1101 = self.val;
                        var self = $1100;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1103 = self.err;
                                var $1104 = self.nam;
                                var $1105 = self.ini;
                                var $1106 = self.idx;
                                var $1107 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1093, $1103), $1104, $1105, $1106, $1107);
                                var $1108 = Parser$Reply$value$(_reply$pst$15, Nat$from_base$(10n, $1101));
                                var $1102 = $1108;
                                break;
                        };
                        var $1094 = $1102;
                        break;
                };
                var $1092 = $1094;
                break;
        };
        return $1092;
    };
    const Parser$nat = x0 => Parser$nat$(x0);
    const Nat$gte = a0 => a1 => (a0 >= a1);

    function Nat$pow$aux$(_x$1, _y$2, _aux$3) {
        var Nat$pow$aux$ = (_x$1, _y$2, _aux$3) => ({
            ctr: 'TCO',
            arg: [_x$1, _y$2, _aux$3]
        });
        var Nat$pow$aux = _x$1 => _y$2 => _aux$3 => Nat$pow$aux$(_x$1, _y$2, _aux$3);
        var arg = [_x$1, _y$2, _aux$3];
        while (true) {
            let [_x$1, _y$2, _aux$3] = arg;
            var R = (() => {
                var self = _y$2;
                if (self === 0n) {
                    var $1109 = _x$1;
                    return $1109;
                } else {
                    var $1110 = (self - 1n);
                    var $1111 = Nat$pow$aux$(_x$1, $1110, (_aux$3 * 2n));
                    return $1111;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$pow$aux = x0 => x1 => x2 => Nat$pow$aux$(x0, x1, x2);
    const Nat$pow = a0 => a1 => (a0 ** a1);

    function Kindelia$Term$word$(_numb$1) {
        var $1112 = ({
            _: 'Kindelia.Term.word',
            'numb': _numb$1
        });
        return $1112;
    };
    const Kindelia$Term$word = x0 => Kindelia$Term$word$(x0);

    function U64$new$(_value$1) {
        var $1113 = word_to_u64(_value$1);
        return $1113;
    };
    const U64$new = x0 => U64$new$(x0);

    function Nat$apply$(_n$2, _f$3, _x$4) {
        var Nat$apply$ = (_n$2, _f$3, _x$4) => ({
            ctr: 'TCO',
            arg: [_n$2, _f$3, _x$4]
        });
        var Nat$apply = _n$2 => _f$3 => _x$4 => Nat$apply$(_n$2, _f$3, _x$4);
        var arg = [_n$2, _f$3, _x$4];
        while (true) {
            let [_n$2, _f$3, _x$4] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $1114 = _x$4;
                    return $1114;
                } else {
                    var $1115 = (self - 1n);
                    var $1116 = Nat$apply$($1115, _f$3, _f$3(_x$4));
                    return $1116;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$apply = x0 => x1 => x2 => Nat$apply$(x0, x1, x2);

    function Word$(_size$1) {
        var $1117 = null;
        return $1117;
    };
    const Word = x0 => Word$(x0);
    const Word$e = ({
        _: 'Word.e'
    });

    function Word$i$(_pred$2) {
        var $1118 = ({
            _: 'Word.i',
            'pred': _pred$2
        });
        return $1118;
    };
    const Word$i = x0 => Word$i$(x0);

    function Word$o$(_pred$2) {
        var $1119 = ({
            _: 'Word.o',
            'pred': _pred$2
        });
        return $1119;
    };
    const Word$o = x0 => Word$o$(x0);

    function Word$inc$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $1121 = self.pred;
                var $1122 = Word$i$($1121);
                var $1120 = $1122;
                break;
            case 'Word.i':
                var $1123 = self.pred;
                var $1124 = Word$o$(Word$inc$($1123));
                var $1120 = $1124;
                break;
            case 'Word.e':
                var $1125 = Word$e;
                var $1120 = $1125;
                break;
        };
        return $1120;
    };
    const Word$inc = x0 => Word$inc$(x0);

    function Word$zero$(_size$1) {
        var self = _size$1;
        if (self === 0n) {
            var $1127 = Word$e;
            var $1126 = $1127;
        } else {
            var $1128 = (self - 1n);
            var $1129 = Word$o$(Word$zero$($1128));
            var $1126 = $1129;
        };
        return $1126;
    };
    const Word$zero = x0 => Word$zero$(x0);

    function Nat$to_word$(_size$1, _n$2) {
        var $1130 = Nat$apply$(_n$2, Word$inc, Word$zero$(_size$1));
        return $1130;
    };
    const Nat$to_word = x0 => x1 => Nat$to_word$(x0, x1);
    const Nat$to_u64 = a0 => (a0 & 0xFFFFFFFFFFFFFFFFn);

    function Kindelia$parse$term$word$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1132 = self.err;
                var _reply$8 = Kindelia$parse$text$("#", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1134 = self.err;
                        var self = $1132;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1136 = self.value;
                                var $1137 = Parser$Reply$error$(Parser$Error$combine$($1136, $1134));
                                var $1135 = $1137;
                                break;
                            case 'Maybe.none':
                                var $1138 = Parser$Reply$error$($1134);
                                var $1135 = $1138;
                                break;
                        };
                        var $1133 = $1135;
                        break;
                    case 'Parser.Reply.value':
                        var $1139 = self.pst;
                        var self = $1139;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1141 = self.err;
                                var $1142 = self.nam;
                                var $1143 = self.ini;
                                var $1144 = self.idx;
                                var $1145 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1132, $1141), $1142, $1143, $1144, $1145);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1147 = self.err;
                                        var _reply$22 = Parser$nat$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1149 = self.err;
                                                var self = $1147;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1151 = self.value;
                                                        var $1152 = Parser$Reply$error$(Parser$Error$combine$($1151, $1149));
                                                        var $1150 = $1152;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1153 = Parser$Reply$error$($1149);
                                                        var $1150 = $1153;
                                                        break;
                                                };
                                                var $1148 = $1150;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1154 = self.pst;
                                                var $1155 = self.val;
                                                var self = $1154;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1157 = self.err;
                                                        var $1158 = self.nam;
                                                        var $1159 = self.ini;
                                                        var $1160 = self.idx;
                                                        var $1161 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1147, $1157), $1158, $1159, $1160, $1161);
                                                        var self = ($1155 >= (2n ** 64n));
                                                        if (self) {
                                                            var $1163 = Parser$fail("Number out of bound");
                                                            var $1162 = $1163;
                                                        } else {
                                                            var $1164 = (_pst$31 => {
                                                                var $1165 = Parser$Reply$value$(_pst$31, Kindelia$Term$word$(($1155 & 0xFFFFFFFFFFFFFFFFn)));
                                                                return $1165;
                                                            });
                                                            var $1162 = $1164;
                                                        };
                                                        var $1162 = $1162(_reply$pst$30);
                                                        var $1156 = $1162;
                                                        break;
                                                };
                                                var $1148 = $1156;
                                                break;
                                        };
                                        var $1146 = $1148;
                                        break;
                                };
                                var $1140 = $1146;
                                break;
                        };
                        var $1133 = $1140;
                        break;
                };
                var $1131 = $1133;
                break;
        };
        return $1131;
    };
    const Kindelia$parse$term$word = x0 => x1 => Kindelia$parse$term$word$(x0, x1);

    function Kindelia$Term$compare$(_val0$1, _val1$2, _iflt$3, _ifeq$4, _ifgt$5) {
        var $1166 = ({
            _: 'Kindelia.Term.compare',
            'val0': _val0$1,
            'val1': _val1$2,
            'iflt': _iflt$3,
            'ifeq': _ifeq$4,
            'ifgt': _ifgt$5
        });
        return $1166;
    };
    const Kindelia$Term$compare = x0 => x1 => x2 => x3 => x4 => Kindelia$Term$compare$(x0, x1, x2, x3, x4);

    function Kindelia$parse$term$compare$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1168 = self.err;
                var _reply$8 = Kindelia$parse$text$("compare", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1170 = self.err;
                        var self = $1168;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1172 = self.value;
                                var $1173 = Parser$Reply$error$(Parser$Error$combine$($1172, $1170));
                                var $1171 = $1173;
                                break;
                            case 'Maybe.none':
                                var $1174 = Parser$Reply$error$($1170);
                                var $1171 = $1174;
                                break;
                        };
                        var $1169 = $1171;
                        break;
                    case 'Parser.Reply.value':
                        var $1175 = self.pst;
                        var self = $1175;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1177 = self.err;
                                var $1178 = self.nam;
                                var $1179 = self.ini;
                                var $1180 = self.idx;
                                var $1181 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1168, $1177), $1178, $1179, $1180, $1181);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1183 = self.err;
                                        var _reply$22 = Kindelia$parse$term$(_world$1)(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1185 = self.err;
                                                var self = $1183;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1187 = self.value;
                                                        var $1188 = Parser$Reply$error$(Parser$Error$combine$($1187, $1185));
                                                        var $1186 = $1188;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1189 = Parser$Reply$error$($1185);
                                                        var $1186 = $1189;
                                                        break;
                                                };
                                                var $1184 = $1186;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1190 = self.pst;
                                                var $1191 = self.val;
                                                var self = $1190;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1193 = self.err;
                                                        var $1194 = self.nam;
                                                        var $1195 = self.ini;
                                                        var $1196 = self.idx;
                                                        var $1197 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1183, $1193), $1194, $1195, $1196, $1197);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1199 = self.err;
                                                                var _reply$36 = Kindelia$parse$term$(_world$1)(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1201 = self.err;
                                                                        var self = $1199;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1203 = self.value;
                                                                                var $1204 = Parser$Reply$error$(Parser$Error$combine$($1203, $1201));
                                                                                var $1202 = $1204;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1205 = Parser$Reply$error$($1201);
                                                                                var $1202 = $1205;
                                                                                break;
                                                                        };
                                                                        var $1200 = $1202;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1206 = self.pst;
                                                                        var $1207 = self.val;
                                                                        var self = $1206;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1209 = self.err;
                                                                                var $1210 = self.nam;
                                                                                var $1211 = self.ini;
                                                                                var $1212 = self.idx;
                                                                                var $1213 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1199, $1209), $1210, $1211, $1212, $1213);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1215 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$text$("{", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1217 = self.err;
                                                                                                var self = $1215;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1219 = self.value;
                                                                                                        var $1220 = Parser$Reply$error$(Parser$Error$combine$($1219, $1217));
                                                                                                        var $1218 = $1220;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1221 = Parser$Reply$error$($1217);
                                                                                                        var $1218 = $1221;
                                                                                                        break;
                                                                                                };
                                                                                                var $1216 = $1218;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1222 = self.pst;
                                                                                                var self = $1222;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1224 = self.err;
                                                                                                        var $1225 = self.nam;
                                                                                                        var $1226 = self.ini;
                                                                                                        var $1227 = self.idx;
                                                                                                        var $1228 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1215, $1224), $1225, $1226, $1227, $1228);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1230 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$text$("_<_:", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1232 = self.err;
                                                                                                                        var self = $1230;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1234 = self.value;
                                                                                                                                var $1235 = Parser$Reply$error$(Parser$Error$combine$($1234, $1232));
                                                                                                                                var $1233 = $1235;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1236 = Parser$Reply$error$($1232);
                                                                                                                                var $1233 = $1236;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1231 = $1233;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1237 = self.pst;
                                                                                                                        var self = $1237;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1239 = self.err;
                                                                                                                                var $1240 = self.nam;
                                                                                                                                var $1241 = self.ini;
                                                                                                                                var $1242 = self.idx;
                                                                                                                                var $1243 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1230, $1239), $1240, $1241, $1242, $1243);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1245 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1247 = self.err;
                                                                                                                                                var self = $1245;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1249 = self.value;
                                                                                                                                                        var $1250 = Parser$Reply$error$(Parser$Error$combine$($1249, $1247));
                                                                                                                                                        var $1248 = $1250;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1251 = Parser$Reply$error$($1247);
                                                                                                                                                        var $1248 = $1251;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1246 = $1248;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1252 = self.pst;
                                                                                                                                                var $1253 = self.val;
                                                                                                                                                var self = $1252;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1255 = self.err;
                                                                                                                                                        var $1256 = self.nam;
                                                                                                                                                        var $1257 = self.ini;
                                                                                                                                                        var $1258 = self.idx;
                                                                                                                                                        var $1259 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1245, $1255), $1256, $1257, $1258, $1259);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $1261 = self.err;
                                                                                                                                                                var _reply$92 = Kindelia$parse$text$("_=_:", _reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $1263 = self.err;
                                                                                                                                                                        var self = $1261;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $1265 = self.value;
                                                                                                                                                                                var $1266 = Parser$Reply$error$(Parser$Error$combine$($1265, $1263));
                                                                                                                                                                                var $1264 = $1266;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $1267 = Parser$Reply$error$($1263);
                                                                                                                                                                                var $1264 = $1267;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $1262 = $1264;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $1268 = self.pst;
                                                                                                                                                                        var self = $1268;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $1270 = self.err;
                                                                                                                                                                                var $1271 = self.nam;
                                                                                                                                                                                var $1272 = self.ini;
                                                                                                                                                                                var $1273 = self.idx;
                                                                                                                                                                                var $1274 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($1261, $1270), $1271, $1272, $1273, $1274);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $1276 = self.err;
                                                                                                                                                                                        var _reply$106 = Kindelia$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $1278 = self.err;
                                                                                                                                                                                                var self = $1276;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $1280 = self.value;
                                                                                                                                                                                                        var $1281 = Parser$Reply$error$(Parser$Error$combine$($1280, $1278));
                                                                                                                                                                                                        var $1279 = $1281;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $1282 = Parser$Reply$error$($1278);
                                                                                                                                                                                                        var $1279 = $1282;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $1277 = $1279;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $1283 = self.pst;
                                                                                                                                                                                                var $1284 = self.val;
                                                                                                                                                                                                var self = $1283;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $1286 = self.err;
                                                                                                                                                                                                        var $1287 = self.nam;
                                                                                                                                                                                                        var $1288 = self.ini;
                                                                                                                                                                                                        var $1289 = self.idx;
                                                                                                                                                                                                        var $1290 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($1276, $1286), $1287, $1288, $1289, $1290);
                                                                                                                                                                                                        var self = _reply$pst$114;
                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                var $1292 = self.err;
                                                                                                                                                                                                                var _reply$120 = Kindelia$parse$text$("_>_:", _reply$pst$114);
                                                                                                                                                                                                                var self = _reply$120;
                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                        var $1294 = self.err;
                                                                                                                                                                                                                        var self = $1292;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                var $1296 = self.value;
                                                                                                                                                                                                                                var $1297 = Parser$Reply$error$(Parser$Error$combine$($1296, $1294));
                                                                                                                                                                                                                                var $1295 = $1297;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                var $1298 = Parser$Reply$error$($1294);
                                                                                                                                                                                                                                var $1295 = $1298;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $1293 = $1295;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                        var $1299 = self.pst;
                                                                                                                                                                                                                        var self = $1299;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                var $1301 = self.err;
                                                                                                                                                                                                                                var $1302 = self.nam;
                                                                                                                                                                                                                                var $1303 = self.ini;
                                                                                                                                                                                                                                var $1304 = self.idx;
                                                                                                                                                                                                                                var $1305 = self.str;
                                                                                                                                                                                                                                var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($1292, $1301), $1302, $1303, $1304, $1305);
                                                                                                                                                                                                                                var self = _reply$pst$128;
                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                        var $1307 = self.err;
                                                                                                                                                                                                                                        var _reply$134 = Kindelia$parse$term$(_world$1)(_reply$pst$128);
                                                                                                                                                                                                                                        var self = _reply$134;
                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                var $1309 = self.err;
                                                                                                                                                                                                                                                var self = $1307;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                        var $1311 = self.value;
                                                                                                                                                                                                                                                        var $1312 = Parser$Reply$error$(Parser$Error$combine$($1311, $1309));
                                                                                                                                                                                                                                                        var $1310 = $1312;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                        var $1313 = Parser$Reply$error$($1309);
                                                                                                                                                                                                                                                        var $1310 = $1313;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $1308 = $1310;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                var $1314 = self.pst;
                                                                                                                                                                                                                                                var $1315 = self.val;
                                                                                                                                                                                                                                                var self = $1314;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                        var $1317 = self.err;
                                                                                                                                                                                                                                                        var $1318 = self.nam;
                                                                                                                                                                                                                                                        var $1319 = self.ini;
                                                                                                                                                                                                                                                        var $1320 = self.idx;
                                                                                                                                                                                                                                                        var $1321 = self.str;
                                                                                                                                                                                                                                                        var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($1307, $1317), $1318, $1319, $1320, $1321);
                                                                                                                                                                                                                                                        var self = _reply$pst$142;
                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                var $1323 = self.err;
                                                                                                                                                                                                                                                                var _reply$148 = Kindelia$parse$text$("}", _reply$pst$142);
                                                                                                                                                                                                                                                                var self = _reply$148;
                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                        var $1325 = self.err;
                                                                                                                                                                                                                                                                        var self = $1323;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                                                                var $1327 = self.value;
                                                                                                                                                                                                                                                                                var $1328 = Parser$Reply$error$(Parser$Error$combine$($1327, $1325));
                                                                                                                                                                                                                                                                                var $1326 = $1328;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                                                                var $1329 = Parser$Reply$error$($1325);
                                                                                                                                                                                                                                                                                var $1326 = $1329;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $1324 = $1326;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                        var $1330 = self.pst;
                                                                                                                                                                                                                                                                        var self = $1330;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                                var $1332 = self.err;
                                                                                                                                                                                                                                                                                var $1333 = self.nam;
                                                                                                                                                                                                                                                                                var $1334 = self.ini;
                                                                                                                                                                                                                                                                                var $1335 = self.idx;
                                                                                                                                                                                                                                                                                var $1336 = self.str;
                                                                                                                                                                                                                                                                                var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($1323, $1332), $1333, $1334, $1335, $1336);
                                                                                                                                                                                                                                                                                var $1337 = Parser$Reply$value$(_reply$pst$156, Kindelia$Term$compare$($1191, $1207, $1253, $1284, $1315));
                                                                                                                                                                                                                                                                                var $1331 = $1337;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $1324 = $1331;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                var $1322 = $1324;
                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                        var $1316 = $1322;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $1308 = $1316;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                        var $1306 = $1308;
                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                var $1300 = $1306;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $1293 = $1300;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                };
                                                                                                                                                                                                                var $1291 = $1293;
                                                                                                                                                                                                                break;
                                                                                                                                                                                                        };
                                                                                                                                                                                                        var $1285 = $1291;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $1277 = $1285;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $1275 = $1277;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $1269 = $1275;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $1262 = $1269;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $1260 = $1262;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $1254 = $1260;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1246 = $1254;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1244 = $1246;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1238 = $1244;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1231 = $1238;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1229 = $1231;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1223 = $1229;
                                                                                                        break;
                                                                                                };
                                                                                                var $1216 = $1223;
                                                                                                break;
                                                                                        };
                                                                                        var $1214 = $1216;
                                                                                        break;
                                                                                };
                                                                                var $1208 = $1214;
                                                                                break;
                                                                        };
                                                                        var $1200 = $1208;
                                                                        break;
                                                                };
                                                                var $1198 = $1200;
                                                                break;
                                                        };
                                                        var $1192 = $1198;
                                                        break;
                                                };
                                                var $1184 = $1192;
                                                break;
                                        };
                                        var $1182 = $1184;
                                        break;
                                };
                                var $1176 = $1182;
                                break;
                        };
                        var $1169 = $1176;
                        break;
                };
                var $1167 = $1169;
                break;
        };
        return $1167;
    };
    const Kindelia$parse$term$compare = x0 => x1 => Kindelia$parse$term$compare$(x0, x1);
    const Kindelia$Operation$add = ({
        _: 'Kindelia.Operation.add'
    });
    const Kindelia$Operation$sub = ({
        _: 'Kindelia.Operation.sub'
    });
    const Kindelia$Operation$mul = ({
        _: 'Kindelia.Operation.mul'
    });
    const Kindelia$Operation$div = ({
        _: 'Kindelia.Operation.div'
    });
    const Kindelia$Operation$mod = ({
        _: 'Kindelia.Operation.mod'
    });
    const Kindelia$Operation$or = ({
        _: 'Kindelia.Operation.or'
    });
    const Kindelia$Operation$and = ({
        _: 'Kindelia.Operation.and'
    });
    const Kindelia$Operation$xor = ({
        _: 'Kindelia.Operation.xor'
    });
    const Kindelia$parse$term$operation = Parser$choice(List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1339 = self.err;
                var _reply$7 = Kindelia$parse$text$("+", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1341 = self.err;
                        var self = $1339;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1343 = self.value;
                                var $1344 = Parser$Reply$error$(Parser$Error$combine$($1343, $1341));
                                var $1342 = $1344;
                                break;
                            case 'Maybe.none':
                                var $1345 = Parser$Reply$error$($1341);
                                var $1342 = $1345;
                                break;
                        };
                        var $1340 = $1342;
                        break;
                    case 'Parser.Reply.value':
                        var $1346 = self.pst;
                        var self = $1346;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1348 = self.err;
                                var $1349 = self.nam;
                                var $1350 = self.ini;
                                var $1351 = self.idx;
                                var $1352 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1339, $1348), $1349, $1350, $1351, $1352);
                                var $1353 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$add));
                                var $1347 = $1353;
                                break;
                        };
                        var $1340 = $1347;
                        break;
                };
                var $1338 = $1340;
                break;
        };
        return $1338;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1355 = self.err;
                var _reply$7 = Kindelia$parse$text$("-", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1357 = self.err;
                        var self = $1355;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1359 = self.value;
                                var $1360 = Parser$Reply$error$(Parser$Error$combine$($1359, $1357));
                                var $1358 = $1360;
                                break;
                            case 'Maybe.none':
                                var $1361 = Parser$Reply$error$($1357);
                                var $1358 = $1361;
                                break;
                        };
                        var $1356 = $1358;
                        break;
                    case 'Parser.Reply.value':
                        var $1362 = self.pst;
                        var self = $1362;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1364 = self.err;
                                var $1365 = self.nam;
                                var $1366 = self.ini;
                                var $1367 = self.idx;
                                var $1368 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1355, $1364), $1365, $1366, $1367, $1368);
                                var $1369 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$sub));
                                var $1363 = $1369;
                                break;
                        };
                        var $1356 = $1363;
                        break;
                };
                var $1354 = $1356;
                break;
        };
        return $1354;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1371 = self.err;
                var _reply$7 = Kindelia$parse$text$("*", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1373 = self.err;
                        var self = $1371;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1375 = self.value;
                                var $1376 = Parser$Reply$error$(Parser$Error$combine$($1375, $1373));
                                var $1374 = $1376;
                                break;
                            case 'Maybe.none':
                                var $1377 = Parser$Reply$error$($1373);
                                var $1374 = $1377;
                                break;
                        };
                        var $1372 = $1374;
                        break;
                    case 'Parser.Reply.value':
                        var $1378 = self.pst;
                        var self = $1378;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1380 = self.err;
                                var $1381 = self.nam;
                                var $1382 = self.ini;
                                var $1383 = self.idx;
                                var $1384 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1371, $1380), $1381, $1382, $1383, $1384);
                                var $1385 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$mul));
                                var $1379 = $1385;
                                break;
                        };
                        var $1372 = $1379;
                        break;
                };
                var $1370 = $1372;
                break;
        };
        return $1370;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1387 = self.err;
                var _reply$7 = Kindelia$parse$text$("/", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1389 = self.err;
                        var self = $1387;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1391 = self.value;
                                var $1392 = Parser$Reply$error$(Parser$Error$combine$($1391, $1389));
                                var $1390 = $1392;
                                break;
                            case 'Maybe.none':
                                var $1393 = Parser$Reply$error$($1389);
                                var $1390 = $1393;
                                break;
                        };
                        var $1388 = $1390;
                        break;
                    case 'Parser.Reply.value':
                        var $1394 = self.pst;
                        var self = $1394;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1396 = self.err;
                                var $1397 = self.nam;
                                var $1398 = self.ini;
                                var $1399 = self.idx;
                                var $1400 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1387, $1396), $1397, $1398, $1399, $1400);
                                var $1401 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$div));
                                var $1395 = $1401;
                                break;
                        };
                        var $1388 = $1395;
                        break;
                };
                var $1386 = $1388;
                break;
        };
        return $1386;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1403 = self.err;
                var _reply$7 = Kindelia$parse$text$("%", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1405 = self.err;
                        var self = $1403;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1407 = self.value;
                                var $1408 = Parser$Reply$error$(Parser$Error$combine$($1407, $1405));
                                var $1406 = $1408;
                                break;
                            case 'Maybe.none':
                                var $1409 = Parser$Reply$error$($1405);
                                var $1406 = $1409;
                                break;
                        };
                        var $1404 = $1406;
                        break;
                    case 'Parser.Reply.value':
                        var $1410 = self.pst;
                        var self = $1410;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1412 = self.err;
                                var $1413 = self.nam;
                                var $1414 = self.ini;
                                var $1415 = self.idx;
                                var $1416 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1403, $1412), $1413, $1414, $1415, $1416);
                                var $1417 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$mod));
                                var $1411 = $1417;
                                break;
                        };
                        var $1404 = $1411;
                        break;
                };
                var $1402 = $1404;
                break;
        };
        return $1402;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1419 = self.err;
                var _reply$7 = Kindelia$parse$text$("|", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1421 = self.err;
                        var self = $1419;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1423 = self.value;
                                var $1424 = Parser$Reply$error$(Parser$Error$combine$($1423, $1421));
                                var $1422 = $1424;
                                break;
                            case 'Maybe.none':
                                var $1425 = Parser$Reply$error$($1421);
                                var $1422 = $1425;
                                break;
                        };
                        var $1420 = $1422;
                        break;
                    case 'Parser.Reply.value':
                        var $1426 = self.pst;
                        var self = $1426;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1428 = self.err;
                                var $1429 = self.nam;
                                var $1430 = self.ini;
                                var $1431 = self.idx;
                                var $1432 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1419, $1428), $1429, $1430, $1431, $1432);
                                var $1433 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$or));
                                var $1427 = $1433;
                                break;
                        };
                        var $1420 = $1427;
                        break;
                };
                var $1418 = $1420;
                break;
        };
        return $1418;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1435 = self.err;
                var _reply$7 = Kindelia$parse$text$("&", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1437 = self.err;
                        var self = $1435;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1439 = self.value;
                                var $1440 = Parser$Reply$error$(Parser$Error$combine$($1439, $1437));
                                var $1438 = $1440;
                                break;
                            case 'Maybe.none':
                                var $1441 = Parser$Reply$error$($1437);
                                var $1438 = $1441;
                                break;
                        };
                        var $1436 = $1438;
                        break;
                    case 'Parser.Reply.value':
                        var $1442 = self.pst;
                        var self = $1442;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1444 = self.err;
                                var $1445 = self.nam;
                                var $1446 = self.ini;
                                var $1447 = self.idx;
                                var $1448 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1435, $1444), $1445, $1446, $1447, $1448);
                                var $1449 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$and));
                                var $1443 = $1449;
                                break;
                        };
                        var $1436 = $1443;
                        break;
                };
                var $1434 = $1436;
                break;
        };
        return $1434;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1451 = self.err;
                var _reply$7 = Kindelia$parse$text$("^", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1453 = self.err;
                        var self = $1451;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1455 = self.value;
                                var $1456 = Parser$Reply$error$(Parser$Error$combine$($1455, $1453));
                                var $1454 = $1456;
                                break;
                            case 'Maybe.none':
                                var $1457 = Parser$Reply$error$($1453);
                                var $1454 = $1457;
                                break;
                        };
                        var $1452 = $1454;
                        break;
                    case 'Parser.Reply.value':
                        var $1458 = self.pst;
                        var self = $1458;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1460 = self.err;
                                var $1461 = self.nam;
                                var $1462 = self.ini;
                                var $1463 = self.idx;
                                var $1464 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1451, $1460), $1461, $1462, $1463, $1464);
                                var $1465 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$xor));
                                var $1459 = $1465;
                                break;
                        };
                        var $1452 = $1459;
                        break;
                };
                var $1450 = $1452;
                break;
        };
        return $1450;
    }), List$cons$((_pst$1 => {
        var $1466 = Parser$Reply$value$(_pst$1, Maybe$none);
        return $1466;
    }), List$nil))))))))));

    function Kindelia$Term$operate$(_oper$1, _val0$2, _val1$3) {
        var $1467 = ({
            _: 'Kindelia.Term.operate',
            'oper': _oper$1,
            'val0': _val0$2,
            'val1': _val1$3
        });
        return $1467;
    };
    const Kindelia$Term$operate = x0 => x1 => x2 => Kindelia$Term$operate$(x0, x1, x2);

    function Kindelia$parse$term$operate$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1469 = self.err;
                var _reply$8 = Kindelia$parse$term$operation(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1471 = self.err;
                        var self = $1469;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1473 = self.value;
                                var $1474 = Parser$Reply$error$(Parser$Error$combine$($1473, $1471));
                                var $1472 = $1474;
                                break;
                            case 'Maybe.none':
                                var $1475 = Parser$Reply$error$($1471);
                                var $1472 = $1475;
                                break;
                        };
                        var $1470 = $1472;
                        break;
                    case 'Parser.Reply.value':
                        var $1476 = self.pst;
                        var $1477 = self.val;
                        var self = $1476;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1479 = self.err;
                                var $1480 = self.nam;
                                var $1481 = self.ini;
                                var $1482 = self.idx;
                                var $1483 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1469, $1479), $1480, $1481, $1482, $1483);
                                var self = $1477;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $1485 = self.value;
                                        var $1486 = (_pst$18 => {
                                            var self = _pst$18;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $1488 = self.err;
                                                    var _reply$24 = Kindelia$parse$text$("(", _pst$18);
                                                    var self = _reply$24;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $1490 = self.err;
                                                            var self = $1488;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $1492 = self.value;
                                                                    var $1493 = Parser$Reply$error$(Parser$Error$combine$($1492, $1490));
                                                                    var $1491 = $1493;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $1494 = Parser$Reply$error$($1490);
                                                                    var $1491 = $1494;
                                                                    break;
                                                            };
                                                            var $1489 = $1491;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $1495 = self.pst;
                                                            var self = $1495;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1497 = self.err;
                                                                    var $1498 = self.nam;
                                                                    var $1499 = self.ini;
                                                                    var $1500 = self.idx;
                                                                    var $1501 = self.str;
                                                                    var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($1488, $1497), $1498, $1499, $1500, $1501);
                                                                    var self = _reply$pst$32;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $1503 = self.err;
                                                                            var _reply$38 = Kindelia$parse$term$(_world$1)(_reply$pst$32);
                                                                            var self = _reply$38;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $1505 = self.err;
                                                                                    var self = $1503;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $1507 = self.value;
                                                                                            var $1508 = Parser$Reply$error$(Parser$Error$combine$($1507, $1505));
                                                                                            var $1506 = $1508;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $1509 = Parser$Reply$error$($1505);
                                                                                            var $1506 = $1509;
                                                                                            break;
                                                                                    };
                                                                                    var $1504 = $1506;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $1510 = self.pst;
                                                                                    var $1511 = self.val;
                                                                                    var self = $1510;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1513 = self.err;
                                                                                            var $1514 = self.nam;
                                                                                            var $1515 = self.ini;
                                                                                            var $1516 = self.idx;
                                                                                            var $1517 = self.str;
                                                                                            var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($1503, $1513), $1514, $1515, $1516, $1517);
                                                                                            var self = _reply$pst$46;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $1519 = self.err;
                                                                                                    var _reply$52 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$46);
                                                                                                    var self = _reply$52;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $1521 = self.err;
                                                                                                            var self = $1519;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $1523 = self.value;
                                                                                                                    var $1524 = Parser$Reply$error$(Parser$Error$combine$($1523, $1521));
                                                                                                                    var $1522 = $1524;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $1525 = Parser$Reply$error$($1521);
                                                                                                                    var $1522 = $1525;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1520 = $1522;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $1526 = self.pst;
                                                                                                            var self = $1526;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $1528 = self.err;
                                                                                                                    var $1529 = self.nam;
                                                                                                                    var $1530 = self.ini;
                                                                                                                    var $1531 = self.idx;
                                                                                                                    var $1532 = self.str;
                                                                                                                    var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($1519, $1528), $1529, $1530, $1531, $1532);
                                                                                                                    var self = _reply$pst$60;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.State.new':
                                                                                                                            var $1534 = self.err;
                                                                                                                            var _reply$66 = Kindelia$parse$term$(_world$1)(_reply$pst$60);
                                                                                                                            var self = _reply$66;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                    var $1536 = self.err;
                                                                                                                                    var self = $1534;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Maybe.some':
                                                                                                                                            var $1538 = self.value;
                                                                                                                                            var $1539 = Parser$Reply$error$(Parser$Error$combine$($1538, $1536));
                                                                                                                                            var $1537 = $1539;
                                                                                                                                            break;
                                                                                                                                        case 'Maybe.none':
                                                                                                                                            var $1540 = Parser$Reply$error$($1536);
                                                                                                                                            var $1537 = $1540;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1535 = $1537;
                                                                                                                                    break;
                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                    var $1541 = self.pst;
                                                                                                                                    var $1542 = self.val;
                                                                                                                                    var self = $1541;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $1544 = self.err;
                                                                                                                                            var $1545 = self.nam;
                                                                                                                                            var $1546 = self.ini;
                                                                                                                                            var $1547 = self.idx;
                                                                                                                                            var $1548 = self.str;
                                                                                                                                            var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($1534, $1544), $1545, $1546, $1547, $1548);
                                                                                                                                            var self = _reply$pst$74;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $1550 = self.err;
                                                                                                                                                    var _reply$80 = Kindelia$parse$text$(")", _reply$pst$74);
                                                                                                                                                    var self = _reply$80;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $1552 = self.err;
                                                                                                                                                            var self = $1550;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $1554 = self.value;
                                                                                                                                                                    var $1555 = Parser$Reply$error$(Parser$Error$combine$($1554, $1552));
                                                                                                                                                                    var $1553 = $1555;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $1556 = Parser$Reply$error$($1552);
                                                                                                                                                                    var $1553 = $1556;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1551 = $1553;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $1557 = self.pst;
                                                                                                                                                            var self = $1557;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $1559 = self.err;
                                                                                                                                                                    var $1560 = self.nam;
                                                                                                                                                                    var $1561 = self.ini;
                                                                                                                                                                    var $1562 = self.idx;
                                                                                                                                                                    var $1563 = self.str;
                                                                                                                                                                    var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($1550, $1559), $1560, $1561, $1562, $1563);
                                                                                                                                                                    var $1564 = Parser$Reply$value$(_reply$pst$88, Kindelia$Term$operate$($1485, $1511, $1542));
                                                                                                                                                                    var $1558 = $1564;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1551 = $1558;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1549 = $1551;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1543 = $1549;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1535 = $1543;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1533 = $1535;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1527 = $1533;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1520 = $1527;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1518 = $1520;
                                                                                                    break;
                                                                                            };
                                                                                            var $1512 = $1518;
                                                                                            break;
                                                                                    };
                                                                                    var $1504 = $1512;
                                                                                    break;
                                                                            };
                                                                            var $1502 = $1504;
                                                                            break;
                                                                    };
                                                                    var $1496 = $1502;
                                                                    break;
                                                            };
                                                            var $1489 = $1496;
                                                            break;
                                                    };
                                                    var $1487 = $1489;
                                                    break;
                                            };
                                            return $1487;
                                        });
                                        var $1484 = $1486;
                                        break;
                                    case 'Maybe.none':
                                        var $1565 = Parser$fail("Not an operation.");
                                        var $1484 = $1565;
                                        break;
                                };
                                var $1484 = $1484(_reply$pst$16);
                                var $1478 = $1484;
                                break;
                        };
                        var $1470 = $1478;
                        break;
                };
                var $1468 = $1470;
                break;
        };
        return $1468;
    };
    const Kindelia$parse$term$operate = x0 => x1 => Kindelia$parse$term$operate$(x0, x1);

    function Kindelia$Term$set$(_file$1, _expr$2, _body$3) {
        var $1566 = ({
            _: 'Kindelia.Term.set',
            'file': _file$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $1566;
    };
    const Kindelia$Term$set = x0 => x1 => x2 => Kindelia$Term$set$(x0, x1, x2);

    function Kindelia$parse$term$set$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1568 = self.err;
                var _reply$8 = Kindelia$parse$text$("set", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1570 = self.err;
                        var self = $1568;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1572 = self.value;
                                var $1573 = Parser$Reply$error$(Parser$Error$combine$($1572, $1570));
                                var $1571 = $1573;
                                break;
                            case 'Maybe.none':
                                var $1574 = Parser$Reply$error$($1570);
                                var $1571 = $1574;
                                break;
                        };
                        var $1569 = $1571;
                        break;
                    case 'Parser.Reply.value':
                        var $1575 = self.pst;
                        var self = $1575;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1577 = self.err;
                                var $1578 = self.nam;
                                var $1579 = self.ini;
                                var $1580 = self.idx;
                                var $1581 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1568, $1577), $1578, $1579, $1580, $1581);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1583 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1585 = self.err;
                                                var self = $1583;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1587 = self.value;
                                                        var $1588 = Parser$Reply$error$(Parser$Error$combine$($1587, $1585));
                                                        var $1586 = $1588;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1589 = Parser$Reply$error$($1585);
                                                        var $1586 = $1589;
                                                        break;
                                                };
                                                var $1584 = $1586;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1590 = self.pst;
                                                var $1591 = self.val;
                                                var self = $1590;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1593 = self.err;
                                                        var $1594 = self.nam;
                                                        var $1595 = self.ini;
                                                        var $1596 = self.idx;
                                                        var $1597 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1583, $1593), $1594, $1595, $1596, $1597);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1599 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$("=", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1601 = self.err;
                                                                        var self = $1599;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1603 = self.value;
                                                                                var $1604 = Parser$Reply$error$(Parser$Error$combine$($1603, $1601));
                                                                                var $1602 = $1604;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1605 = Parser$Reply$error$($1601);
                                                                                var $1602 = $1605;
                                                                                break;
                                                                        };
                                                                        var $1600 = $1602;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1606 = self.pst;
                                                                        var self = $1606;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1608 = self.err;
                                                                                var $1609 = self.nam;
                                                                                var $1610 = self.ini;
                                                                                var $1611 = self.idx;
                                                                                var $1612 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1599, $1608), $1609, $1610, $1611, $1612);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1614 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$term$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1616 = self.err;
                                                                                                var self = $1614;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1618 = self.value;
                                                                                                        var $1619 = Parser$Reply$error$(Parser$Error$combine$($1618, $1616));
                                                                                                        var $1617 = $1619;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1620 = Parser$Reply$error$($1616);
                                                                                                        var $1617 = $1620;
                                                                                                        break;
                                                                                                };
                                                                                                var $1615 = $1617;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1621 = self.pst;
                                                                                                var $1622 = self.val;
                                                                                                var self = $1621;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1624 = self.err;
                                                                                                        var $1625 = self.nam;
                                                                                                        var $1626 = self.ini;
                                                                                                        var $1627 = self.idx;
                                                                                                        var $1628 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1614, $1624), $1625, $1626, $1627, $1628);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1630 = self.err;
                                                                                                                var _reply$64 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1632 = self.err;
                                                                                                                        var self = $1630;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1634 = self.value;
                                                                                                                                var $1635 = Parser$Reply$error$(Parser$Error$combine$($1634, $1632));
                                                                                                                                var $1633 = $1635;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1636 = Parser$Reply$error$($1632);
                                                                                                                                var $1633 = $1636;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1631 = $1633;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1637 = self.pst;
                                                                                                                        var self = $1637;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1639 = self.err;
                                                                                                                                var $1640 = self.nam;
                                                                                                                                var $1641 = self.ini;
                                                                                                                                var $1642 = self.idx;
                                                                                                                                var $1643 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1630, $1639), $1640, $1641, $1642, $1643);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1645 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1647 = self.err;
                                                                                                                                                var self = $1645;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1649 = self.value;
                                                                                                                                                        var $1650 = Parser$Reply$error$(Parser$Error$combine$($1649, $1647));
                                                                                                                                                        var $1648 = $1650;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1651 = Parser$Reply$error$($1647);
                                                                                                                                                        var $1648 = $1651;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1646 = $1648;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1652 = self.pst;
                                                                                                                                                var $1653 = self.val;
                                                                                                                                                var self = $1652;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1655 = self.err;
                                                                                                                                                        var $1656 = self.nam;
                                                                                                                                                        var $1657 = self.ini;
                                                                                                                                                        var $1658 = self.idx;
                                                                                                                                                        var $1659 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1645, $1655), $1656, $1657, $1658, $1659);
                                                                                                                                                        var $1660 = Parser$Reply$value$(_reply$pst$86, Kindelia$Term$set$($1591, $1622, $1653));
                                                                                                                                                        var $1654 = $1660;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1646 = $1654;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1644 = $1646;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1638 = $1644;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1631 = $1638;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1629 = $1631;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1623 = $1629;
                                                                                                        break;
                                                                                                };
                                                                                                var $1615 = $1623;
                                                                                                break;
                                                                                        };
                                                                                        var $1613 = $1615;
                                                                                        break;
                                                                                };
                                                                                var $1607 = $1613;
                                                                                break;
                                                                        };
                                                                        var $1600 = $1607;
                                                                        break;
                                                                };
                                                                var $1598 = $1600;
                                                                break;
                                                        };
                                                        var $1592 = $1598;
                                                        break;
                                                };
                                                var $1584 = $1592;
                                                break;
                                        };
                                        var $1582 = $1584;
                                        break;
                                };
                                var $1576 = $1582;
                                break;
                        };
                        var $1569 = $1576;
                        break;
                };
                var $1567 = $1569;
                break;
        };
        return $1567;
    };
    const Kindelia$parse$term$set = x0 => x1 => Kindelia$parse$term$set$(x0, x1);

    function Kindelia$Term$get$(_name$1, _file$2, _body$3) {
        var $1661 = ({
            _: 'Kindelia.Term.get',
            'name': _name$1,
            'file': _file$2,
            'body': _body$3
        });
        return $1661;
    };
    const Kindelia$Term$get = x0 => x1 => x2 => Kindelia$Term$get$(x0, x1, x2);

    function Kindelia$parse$term$get$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1663 = self.err;
                var _reply$8 = Kindelia$parse$text$("get", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1665 = self.err;
                        var self = $1663;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1667 = self.value;
                                var $1668 = Parser$Reply$error$(Parser$Error$combine$($1667, $1665));
                                var $1666 = $1668;
                                break;
                            case 'Maybe.none':
                                var $1669 = Parser$Reply$error$($1665);
                                var $1666 = $1669;
                                break;
                        };
                        var $1664 = $1666;
                        break;
                    case 'Parser.Reply.value':
                        var $1670 = self.pst;
                        var self = $1670;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1672 = self.err;
                                var $1673 = self.nam;
                                var $1674 = self.ini;
                                var $1675 = self.idx;
                                var $1676 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1663, $1672), $1673, $1674, $1675, $1676);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1678 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1680 = self.err;
                                                var self = $1678;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1682 = self.value;
                                                        var $1683 = Parser$Reply$error$(Parser$Error$combine$($1682, $1680));
                                                        var $1681 = $1683;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1684 = Parser$Reply$error$($1680);
                                                        var $1681 = $1684;
                                                        break;
                                                };
                                                var $1679 = $1681;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1685 = self.pst;
                                                var $1686 = self.val;
                                                var self = $1685;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1688 = self.err;
                                                        var $1689 = self.nam;
                                                        var $1690 = self.ini;
                                                        var $1691 = self.idx;
                                                        var $1692 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1678, $1688), $1689, $1690, $1691, $1692);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1694 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$("=", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1696 = self.err;
                                                                        var self = $1694;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1698 = self.value;
                                                                                var $1699 = Parser$Reply$error$(Parser$Error$combine$($1698, $1696));
                                                                                var $1697 = $1699;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1700 = Parser$Reply$error$($1696);
                                                                                var $1697 = $1700;
                                                                                break;
                                                                        };
                                                                        var $1695 = $1697;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1701 = self.pst;
                                                                        var self = $1701;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1703 = self.err;
                                                                                var $1704 = self.nam;
                                                                                var $1705 = self.ini;
                                                                                var $1706 = self.idx;
                                                                                var $1707 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1694, $1703), $1704, $1705, $1706, $1707);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1709 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$name$(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1711 = self.err;
                                                                                                var self = $1709;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1713 = self.value;
                                                                                                        var $1714 = Parser$Reply$error$(Parser$Error$combine$($1713, $1711));
                                                                                                        var $1712 = $1714;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1715 = Parser$Reply$error$($1711);
                                                                                                        var $1712 = $1715;
                                                                                                        break;
                                                                                                };
                                                                                                var $1710 = $1712;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1716 = self.pst;
                                                                                                var $1717 = self.val;
                                                                                                var self = $1716;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1719 = self.err;
                                                                                                        var $1720 = self.nam;
                                                                                                        var $1721 = self.ini;
                                                                                                        var $1722 = self.idx;
                                                                                                        var $1723 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1709, $1719), $1720, $1721, $1722, $1723);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1725 = self.err;
                                                                                                                var _reply$64 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1727 = self.err;
                                                                                                                        var self = $1725;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1729 = self.value;
                                                                                                                                var $1730 = Parser$Reply$error$(Parser$Error$combine$($1729, $1727));
                                                                                                                                var $1728 = $1730;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1731 = Parser$Reply$error$($1727);
                                                                                                                                var $1728 = $1731;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1726 = $1728;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1732 = self.pst;
                                                                                                                        var self = $1732;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1734 = self.err;
                                                                                                                                var $1735 = self.nam;
                                                                                                                                var $1736 = self.ini;
                                                                                                                                var $1737 = self.idx;
                                                                                                                                var $1738 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1725, $1734), $1735, $1736, $1737, $1738);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1740 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1742 = self.err;
                                                                                                                                                var self = $1740;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1744 = self.value;
                                                                                                                                                        var $1745 = Parser$Reply$error$(Parser$Error$combine$($1744, $1742));
                                                                                                                                                        var $1743 = $1745;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1746 = Parser$Reply$error$($1742);
                                                                                                                                                        var $1743 = $1746;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1741 = $1743;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1747 = self.pst;
                                                                                                                                                var $1748 = self.val;
                                                                                                                                                var self = $1747;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1750 = self.err;
                                                                                                                                                        var $1751 = self.nam;
                                                                                                                                                        var $1752 = self.ini;
                                                                                                                                                        var $1753 = self.idx;
                                                                                                                                                        var $1754 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1740, $1750), $1751, $1752, $1753, $1754);
                                                                                                                                                        var $1755 = Parser$Reply$value$(_reply$pst$86, Kindelia$Term$get$($1686, $1717, $1748));
                                                                                                                                                        var $1749 = $1755;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1741 = $1749;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1739 = $1741;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1733 = $1739;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1726 = $1733;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1724 = $1726;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1718 = $1724;
                                                                                                        break;
                                                                                                };
                                                                                                var $1710 = $1718;
                                                                                                break;
                                                                                        };
                                                                                        var $1708 = $1710;
                                                                                        break;
                                                                                };
                                                                                var $1702 = $1708;
                                                                                break;
                                                                        };
                                                                        var $1695 = $1702;
                                                                        break;
                                                                };
                                                                var $1693 = $1695;
                                                                break;
                                                        };
                                                        var $1687 = $1693;
                                                        break;
                                                };
                                                var $1679 = $1687;
                                                break;
                                        };
                                        var $1677 = $1679;
                                        break;
                                };
                                var $1671 = $1677;
                                break;
                        };
                        var $1664 = $1671;
                        break;
                };
                var $1662 = $1664;
                break;
        };
        return $1662;
    };
    const Kindelia$parse$term$get = x0 => x1 => Kindelia$parse$term$get$(x0, x1);

    function Kindelia$Term$bind$(_name$1, _type$2, _expr$3, _body$4) {
        var $1756 = ({
            _: 'Kindelia.Term.bind',
            'name': _name$1,
            'type': _type$2,
            'expr': _expr$3,
            'body': _body$4
        });
        return $1756;
    };
    const Kindelia$Term$bind = x0 => x1 => x2 => x3 => Kindelia$Term$bind$(x0, x1, x2, x3);

    function Kindelia$parse$term$bind$(_world$1) {
        var $1757 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1759 = self.err;
                    var _reply$8 = Kindelia$parse$text$("run", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1761 = self.err;
                            var self = $1759;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1763 = self.value;
                                    var $1764 = Parser$Reply$error$(Parser$Error$combine$($1763, $1761));
                                    var $1762 = $1764;
                                    break;
                                case 'Maybe.none':
                                    var $1765 = Parser$Reply$error$($1761);
                                    var $1762 = $1765;
                                    break;
                            };
                            var $1760 = $1762;
                            break;
                        case 'Parser.Reply.value':
                            var $1766 = self.pst;
                            var self = $1766;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1768 = self.err;
                                    var $1769 = self.nam;
                                    var $1770 = self.ini;
                                    var $1771 = self.idx;
                                    var $1772 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1759, $1768), $1769, $1770, $1771, $1772);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1774 = self.err;
                                            var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1776 = self.err;
                                                    var self = $1774;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1778 = self.value;
                                                            var $1779 = Parser$Reply$error$(Parser$Error$combine$($1778, $1776));
                                                            var $1777 = $1779;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1780 = Parser$Reply$error$($1776);
                                                            var $1777 = $1780;
                                                            break;
                                                    };
                                                    var $1775 = $1777;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1781 = self.pst;
                                                    var $1782 = self.val;
                                                    var self = $1781;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1784 = self.err;
                                                            var $1785 = self.nam;
                                                            var $1786 = self.ini;
                                                            var $1787 = self.idx;
                                                            var $1788 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1774, $1784), $1785, $1786, $1787, $1788);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1790 = self.err;
                                                                    var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1792 = self.err;
                                                                            var self = $1790;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1794 = self.value;
                                                                                    var $1795 = Parser$Reply$error$(Parser$Error$combine$($1794, $1792));
                                                                                    var $1793 = $1795;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1796 = Parser$Reply$error$($1792);
                                                                                    var $1793 = $1796;
                                                                                    break;
                                                                            };
                                                                            var $1791 = $1793;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1797 = self.pst;
                                                                            var self = $1797;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1799 = self.err;
                                                                                    var $1800 = self.nam;
                                                                                    var $1801 = self.ini;
                                                                                    var $1802 = self.idx;
                                                                                    var $1803 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1790, $1799), $1800, $1801, $1802, $1803);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1805 = self.err;
                                                                                            var _reply$50 = Kindelia$parse$type$(_world$1)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $1807 = self.err;
                                                                                                    var self = $1805;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $1809 = self.value;
                                                                                                            var $1810 = Parser$Reply$error$(Parser$Error$combine$($1809, $1807));
                                                                                                            var $1808 = $1810;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $1811 = Parser$Reply$error$($1807);
                                                                                                            var $1808 = $1811;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1806 = $1808;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $1812 = self.pst;
                                                                                                    var $1813 = self.val;
                                                                                                    var self = $1812;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $1815 = self.err;
                                                                                                            var $1816 = self.nam;
                                                                                                            var $1817 = self.ini;
                                                                                                            var $1818 = self.idx;
                                                                                                            var $1819 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1805, $1815), $1816, $1817, $1818, $1819);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $1821 = self.err;
                                                                                                                    var _reply$64 = Kindelia$parse$text$("=", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $1823 = self.err;
                                                                                                                            var self = $1821;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $1825 = self.value;
                                                                                                                                    var $1826 = Parser$Reply$error$(Parser$Error$combine$($1825, $1823));
                                                                                                                                    var $1824 = $1826;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $1827 = Parser$Reply$error$($1823);
                                                                                                                                    var $1824 = $1827;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1822 = $1824;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $1828 = self.pst;
                                                                                                                            var self = $1828;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $1830 = self.err;
                                                                                                                                    var $1831 = self.nam;
                                                                                                                                    var $1832 = self.ini;
                                                                                                                                    var $1833 = self.idx;
                                                                                                                                    var $1834 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1821, $1830), $1831, $1832, $1833, $1834);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $1836 = self.err;
                                                                                                                                            var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $1838 = self.err;
                                                                                                                                                    var self = $1836;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $1840 = self.value;
                                                                                                                                                            var $1841 = Parser$Reply$error$(Parser$Error$combine$($1840, $1838));
                                                                                                                                                            var $1839 = $1841;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $1842 = Parser$Reply$error$($1838);
                                                                                                                                                            var $1839 = $1842;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1837 = $1839;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $1843 = self.pst;
                                                                                                                                                    var $1844 = self.val;
                                                                                                                                                    var self = $1843;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $1846 = self.err;
                                                                                                                                                            var $1847 = self.nam;
                                                                                                                                                            var $1848 = self.ini;
                                                                                                                                                            var $1849 = self.idx;
                                                                                                                                                            var $1850 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1836, $1846), $1847, $1848, $1849, $1850);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $1852 = self.err;
                                                                                                                                                                    var _reply$92 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $1854 = self.err;
                                                                                                                                                                            var self = $1852;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $1856 = self.value;
                                                                                                                                                                                    var $1857 = Parser$Reply$error$(Parser$Error$combine$($1856, $1854));
                                                                                                                                                                                    var $1855 = $1857;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $1858 = Parser$Reply$error$($1854);
                                                                                                                                                                                    var $1855 = $1858;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1853 = $1855;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $1859 = self.pst;
                                                                                                                                                                            var self = $1859;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $1861 = self.err;
                                                                                                                                                                                    var $1862 = self.nam;
                                                                                                                                                                                    var $1863 = self.ini;
                                                                                                                                                                                    var $1864 = self.idx;
                                                                                                                                                                                    var $1865 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($1852, $1861), $1862, $1863, $1864, $1865);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $1867 = self.err;
                                                                                                                                                                                            var _reply$106 = Kindelia$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $1869 = self.err;
                                                                                                                                                                                                    var self = $1867;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $1871 = self.value;
                                                                                                                                                                                                            var $1872 = Parser$Reply$error$(Parser$Error$combine$($1871, $1869));
                                                                                                                                                                                                            var $1870 = $1872;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $1873 = Parser$Reply$error$($1869);
                                                                                                                                                                                                            var $1870 = $1873;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $1868 = $1870;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $1874 = self.pst;
                                                                                                                                                                                                    var $1875 = self.val;
                                                                                                                                                                                                    var self = $1874;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $1877 = self.err;
                                                                                                                                                                                                            var $1878 = self.nam;
                                                                                                                                                                                                            var $1879 = self.ini;
                                                                                                                                                                                                            var $1880 = self.idx;
                                                                                                                                                                                                            var $1881 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($1867, $1877), $1878, $1879, $1880, $1881);
                                                                                                                                                                                                            var $1882 = Parser$Reply$value$(_reply$pst$114, Kindelia$Term$bind$($1782, $1813, $1844, $1875));
                                                                                                                                                                                                            var $1876 = $1882;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $1868 = $1876;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $1866 = $1868;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $1860 = $1866;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1853 = $1860;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $1851 = $1853;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1845 = $1851;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1837 = $1845;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1835 = $1837;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1829 = $1835;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1822 = $1829;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1820 = $1822;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1814 = $1820;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1806 = $1814;
                                                                                                    break;
                                                                                            };
                                                                                            var $1804 = $1806;
                                                                                            break;
                                                                                    };
                                                                                    var $1798 = $1804;
                                                                                    break;
                                                                            };
                                                                            var $1791 = $1798;
                                                                            break;
                                                                    };
                                                                    var $1789 = $1791;
                                                                    break;
                                                            };
                                                            var $1783 = $1789;
                                                            break;
                                                    };
                                                    var $1775 = $1783;
                                                    break;
                                            };
                                            var $1773 = $1775;
                                            break;
                                    };
                                    var $1767 = $1773;
                                    break;
                            };
                            var $1760 = $1767;
                            break;
                    };
                    var $1758 = $1760;
                    break;
            };
            return $1758;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1884 = self.err;
                    var _reply$8 = Kindelia$parse$text$("run", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1886 = self.err;
                            var self = $1884;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1888 = self.value;
                                    var $1889 = Parser$Reply$error$(Parser$Error$combine$($1888, $1886));
                                    var $1887 = $1889;
                                    break;
                                case 'Maybe.none':
                                    var $1890 = Parser$Reply$error$($1886);
                                    var $1887 = $1890;
                                    break;
                            };
                            var $1885 = $1887;
                            break;
                        case 'Parser.Reply.value':
                            var $1891 = self.pst;
                            var self = $1891;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1893 = self.err;
                                    var $1894 = self.nam;
                                    var $1895 = self.ini;
                                    var $1896 = self.idx;
                                    var $1897 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1884, $1893), $1894, $1895, $1896, $1897);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1899 = self.err;
                                            var _reply$22 = Kindelia$parse$term$(_world$1)(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1901 = self.err;
                                                    var self = $1899;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1903 = self.value;
                                                            var $1904 = Parser$Reply$error$(Parser$Error$combine$($1903, $1901));
                                                            var $1902 = $1904;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1905 = Parser$Reply$error$($1901);
                                                            var $1902 = $1905;
                                                            break;
                                                    };
                                                    var $1900 = $1902;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1906 = self.pst;
                                                    var $1907 = self.val;
                                                    var self = $1906;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1909 = self.err;
                                                            var $1910 = self.nam;
                                                            var $1911 = self.ini;
                                                            var $1912 = self.idx;
                                                            var $1913 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1899, $1909), $1910, $1911, $1912, $1913);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1915 = self.err;
                                                                    var _reply$36 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1917 = self.err;
                                                                            var self = $1915;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1919 = self.value;
                                                                                    var $1920 = Parser$Reply$error$(Parser$Error$combine$($1919, $1917));
                                                                                    var $1918 = $1920;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1921 = Parser$Reply$error$($1917);
                                                                                    var $1918 = $1921;
                                                                                    break;
                                                                            };
                                                                            var $1916 = $1918;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1922 = self.pst;
                                                                            var self = $1922;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1924 = self.err;
                                                                                    var $1925 = self.nam;
                                                                                    var $1926 = self.ini;
                                                                                    var $1927 = self.idx;
                                                                                    var $1928 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1915, $1924), $1925, $1926, $1927, $1928);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1930 = self.err;
                                                                                            var _reply$50 = Kindelia$parse$term$(_world$1)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $1932 = self.err;
                                                                                                    var self = $1930;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $1934 = self.value;
                                                                                                            var $1935 = Parser$Reply$error$(Parser$Error$combine$($1934, $1932));
                                                                                                            var $1933 = $1935;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $1936 = Parser$Reply$error$($1932);
                                                                                                            var $1933 = $1936;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1931 = $1933;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $1937 = self.pst;
                                                                                                    var $1938 = self.val;
                                                                                                    var self = $1937;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $1940 = self.err;
                                                                                                            var $1941 = self.nam;
                                                                                                            var $1942 = self.ini;
                                                                                                            var $1943 = self.idx;
                                                                                                            var $1944 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1930, $1940), $1941, $1942, $1943, $1944);
                                                                                                            var $1945 = Parser$Reply$value$(_reply$pst$58, Kindelia$Term$bind$("", Kindelia$Type$word, $1907, $1938));
                                                                                                            var $1939 = $1945;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1931 = $1939;
                                                                                                    break;
                                                                                            };
                                                                                            var $1929 = $1931;
                                                                                            break;
                                                                                    };
                                                                                    var $1923 = $1929;
                                                                                    break;
                                                                            };
                                                                            var $1916 = $1923;
                                                                            break;
                                                                    };
                                                                    var $1914 = $1916;
                                                                    break;
                                                            };
                                                            var $1908 = $1914;
                                                            break;
                                                    };
                                                    var $1900 = $1908;
                                                    break;
                                            };
                                            var $1898 = $1900;
                                            break;
                                    };
                                    var $1892 = $1898;
                                    break;
                            };
                            var $1885 = $1892;
                            break;
                    };
                    var $1883 = $1885;
                    break;
            };
            return $1883;
        }), List$nil)));
        return $1757;
    };
    const Kindelia$parse$term$bind = x0 => Kindelia$parse$term$bind$(x0);

    function Kindelia$Term$return$(_expr$1) {
        var $1946 = ({
            _: 'Kindelia.Term.return',
            'expr': _expr$1
        });
        return $1946;
    };
    const Kindelia$Term$return = x0 => Kindelia$Term$return$(x0);

    function Kindelia$parse$term$return$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1948 = self.err;
                var _reply$8 = Kindelia$parse$text$("return", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1950 = self.err;
                        var self = $1948;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1952 = self.value;
                                var $1953 = Parser$Reply$error$(Parser$Error$combine$($1952, $1950));
                                var $1951 = $1953;
                                break;
                            case 'Maybe.none':
                                var $1954 = Parser$Reply$error$($1950);
                                var $1951 = $1954;
                                break;
                        };
                        var $1949 = $1951;
                        break;
                    case 'Parser.Reply.value':
                        var $1955 = self.pst;
                        var self = $1955;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1957 = self.err;
                                var $1958 = self.nam;
                                var $1959 = self.ini;
                                var $1960 = self.idx;
                                var $1961 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1948, $1957), $1958, $1959, $1960, $1961);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1963 = self.err;
                                        var _reply$22 = Kindelia$parse$term$(_world$1)(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1965 = self.err;
                                                var self = $1963;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1967 = self.value;
                                                        var $1968 = Parser$Reply$error$(Parser$Error$combine$($1967, $1965));
                                                        var $1966 = $1968;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1969 = Parser$Reply$error$($1965);
                                                        var $1966 = $1969;
                                                        break;
                                                };
                                                var $1964 = $1966;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1970 = self.pst;
                                                var $1971 = self.val;
                                                var self = $1970;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1973 = self.err;
                                                        var $1974 = self.nam;
                                                        var $1975 = self.ini;
                                                        var $1976 = self.idx;
                                                        var $1977 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1963, $1973), $1974, $1975, $1976, $1977);
                                                        var $1978 = Parser$Reply$value$(_reply$pst$30, Kindelia$Term$return$($1971));
                                                        var $1972 = $1978;
                                                        break;
                                                };
                                                var $1964 = $1972;
                                                break;
                                        };
                                        var $1962 = $1964;
                                        break;
                                };
                                var $1956 = $1962;
                                break;
                        };
                        var $1949 = $1956;
                        break;
                };
                var $1947 = $1949;
                break;
        };
        return $1947;
    };
    const Kindelia$parse$term$return = x0 => x1 => Kindelia$parse$term$return$(x0, x1);

    function Kindelia$Term$call$(_bond$1, _args$2) {
        var $1979 = ({
            _: 'Kindelia.Term.call',
            'bond': _bond$1,
            'args': _args$2
        });
        return $1979;
    };
    const Kindelia$Term$call = x0 => x1 => Kindelia$Term$call$(x0, x1);

    function Kindelia$parse$term$call$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1981 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1983 = self.err;
                        var self = $1981;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1985 = self.value;
                                var $1986 = Parser$Reply$error$(Parser$Error$combine$($1985, $1983));
                                var $1984 = $1986;
                                break;
                            case 'Maybe.none':
                                var $1987 = Parser$Reply$error$($1983);
                                var $1984 = $1987;
                                break;
                        };
                        var $1982 = $1984;
                        break;
                    case 'Parser.Reply.value':
                        var $1988 = self.pst;
                        var $1989 = self.val;
                        var self = $1988;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1991 = self.err;
                                var $1992 = self.nam;
                                var $1993 = self.ini;
                                var $1994 = self.idx;
                                var $1995 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1981, $1991), $1992, $1993, $1994, $1995);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1997 = self.err;
                                        var _reply$22 = Parser$wrap$(Kindelia$parse$text("("), (_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $2000 = self.err;
                                                    var _reply$28 = Kindelia$parse$term$(_world$1)(_pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $2002 = self.err;
                                                            var self = $2000;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $2004 = self.value;
                                                                    var $2005 = Parser$Reply$error$(Parser$Error$combine$($2004, $2002));
                                                                    var $2003 = $2005;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $2006 = Parser$Reply$error$($2002);
                                                                    var $2003 = $2006;
                                                                    break;
                                                            };
                                                            var $2001 = $2003;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $2007 = self.pst;
                                                            var $2008 = self.val;
                                                            var self = $2007;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2010 = self.err;
                                                                    var $2011 = self.nam;
                                                                    var $2012 = self.ini;
                                                                    var $2013 = self.idx;
                                                                    var $2014 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($2000, $2010), $2011, $2012, $2013, $2014);
                                                                    var self = _reply$pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $2016 = self.err;
                                                                            var _reply$42 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $2018 = self.err;
                                                                                    var self = $2016;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $2020 = self.value;
                                                                                            var $2021 = Parser$Reply$error$(Parser$Error$combine$($2020, $2018));
                                                                                            var $2019 = $2021;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $2022 = Parser$Reply$error$($2018);
                                                                                            var $2019 = $2022;
                                                                                            break;
                                                                                    };
                                                                                    var $2017 = $2019;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $2023 = self.pst;
                                                                                    var self = $2023;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2025 = self.err;
                                                                                            var $2026 = self.nam;
                                                                                            var $2027 = self.ini;
                                                                                            var $2028 = self.idx;
                                                                                            var $2029 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($2016, $2025), $2026, $2027, $2028, $2029);
                                                                                            var $2030 = Parser$Reply$value$(_reply$pst$50, $2008);
                                                                                            var $2024 = $2030;
                                                                                            break;
                                                                                    };
                                                                                    var $2017 = $2024;
                                                                                    break;
                                                                            };
                                                                            var $2015 = $2017;
                                                                            break;
                                                                    };
                                                                    var $2009 = $2015;
                                                                    break;
                                                            };
                                                            var $2001 = $2009;
                                                            break;
                                                    };
                                                    var $1999 = $2001;
                                                    break;
                                            };
                                            return $1999;
                                        }), Kindelia$parse$text(")"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2031 = self.err;
                                                var self = $1997;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2033 = self.value;
                                                        var $2034 = Parser$Reply$error$(Parser$Error$combine$($2033, $2031));
                                                        var $2032 = $2034;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2035 = Parser$Reply$error$($2031);
                                                        var $2032 = $2035;
                                                        break;
                                                };
                                                var $1998 = $2032;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2036 = self.pst;
                                                var $2037 = self.val;
                                                var self = $2036;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2039 = self.err;
                                                        var $2040 = self.nam;
                                                        var $2041 = self.ini;
                                                        var $2042 = self.idx;
                                                        var $2043 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1997, $2039), $2040, $2041, $2042, $2043);
                                                        var $2044 = Parser$Reply$value$(_reply$pst$30, Kindelia$Term$call$($1989, $2037));
                                                        var $2038 = $2044;
                                                        break;
                                                };
                                                var $1998 = $2038;
                                                break;
                                        };
                                        var $1996 = $1998;
                                        break;
                                };
                                var $1990 = $1996;
                                break;
                        };
                        var $1982 = $1990;
                        break;
                };
                var $1980 = $1982;
                break;
        };
        return $1980;
    };
    const Kindelia$parse$term$call = x0 => x1 => Kindelia$parse$term$call$(x0, x1);

    function Kindelia$Term$var$(_name$1) {
        var $2045 = ({
            _: 'Kindelia.Term.var',
            'name': _name$1
        });
        return $2045;
    };
    const Kindelia$Term$var = x0 => Kindelia$Term$var$(x0);

    function Kindelia$parse$term$var$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2047 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2049 = self.err;
                        var self = $2047;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2051 = self.value;
                                var $2052 = Parser$Reply$error$(Parser$Error$combine$($2051, $2049));
                                var $2050 = $2052;
                                break;
                            case 'Maybe.none':
                                var $2053 = Parser$Reply$error$($2049);
                                var $2050 = $2053;
                                break;
                        };
                        var $2048 = $2050;
                        break;
                    case 'Parser.Reply.value':
                        var $2054 = self.pst;
                        var $2055 = self.val;
                        var self = $2054;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2057 = self.err;
                                var $2058 = self.nam;
                                var $2059 = self.ini;
                                var $2060 = self.idx;
                                var $2061 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2047, $2057), $2058, $2059, $2060, $2061);
                                var $2062 = Parser$Reply$value$(_reply$pst$16, Kindelia$Term$var$($2055));
                                var $2056 = $2062;
                                break;
                        };
                        var $2048 = $2056;
                        break;
                };
                var $2046 = $2048;
                break;
        };
        return $2046;
    };
    const Kindelia$parse$term$var = x0 => x1 => Kindelia$parse$term$var$(x0, x1);

    function Kindelia$parse$term$(_world$1) {
        var $2063 = Parser$choice(List$cons$(Kindelia$parse$term$let(_world$1), List$cons$(Kindelia$parse$term$create(_world$1), List$cons$(Kindelia$parse$term$match(_world$1), List$cons$(Kindelia$parse$term$word(_world$1), List$cons$(Kindelia$parse$term$compare(_world$1), List$cons$(Kindelia$parse$term$operate(_world$1), List$cons$(Kindelia$parse$term$set(_world$1), List$cons$(Kindelia$parse$term$get(_world$1), List$cons$(Kindelia$parse$term$bind$(_world$1), List$cons$(Kindelia$parse$term$return(_world$1), List$cons$(Kindelia$parse$term$call(_world$1), List$cons$(Kindelia$parse$term$var(_world$1), List$nil)))))))))))));
        return $2063;
    };
    const Kindelia$parse$term = x0 => Kindelia$parse$term$(x0);

    function Kindelia$Bond$new$(_name$1, _iprm$2, _otyp$3, _main$4) {
        var $2064 = ({
            _: 'Kindelia.Bond.new',
            'name': _name$1,
            'iprm': _iprm$2,
            'otyp': _otyp$3,
            'main': _main$4
        });
        return $2064;
    };
    const Kindelia$Bond$new = x0 => x1 => x2 => x3 => Kindelia$Bond$new$(x0, x1, x2, x3);

    function Kindelia$parse$bond$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2066 = self.err;
                var _reply$8 = Kindelia$parse$text$("bond", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2068 = self.err;
                        var self = $2066;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2070 = self.value;
                                var $2071 = Parser$Reply$error$(Parser$Error$combine$($2070, $2068));
                                var $2069 = $2071;
                                break;
                            case 'Maybe.none':
                                var $2072 = Parser$Reply$error$($2068);
                                var $2069 = $2072;
                                break;
                        };
                        var $2067 = $2069;
                        break;
                    case 'Parser.Reply.value':
                        var $2073 = self.pst;
                        var self = $2073;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2075 = self.err;
                                var $2076 = self.nam;
                                var $2077 = self.ini;
                                var $2078 = self.idx;
                                var $2079 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2066, $2075), $2076, $2077, $2078, $2079);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2081 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2083 = self.err;
                                                var self = $2081;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2085 = self.value;
                                                        var $2086 = Parser$Reply$error$(Parser$Error$combine$($2085, $2083));
                                                        var $2084 = $2086;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2087 = Parser$Reply$error$($2083);
                                                        var $2084 = $2087;
                                                        break;
                                                };
                                                var $2082 = $2084;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2088 = self.pst;
                                                var $2089 = self.val;
                                                var self = $2088;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2091 = self.err;
                                                        var $2092 = self.nam;
                                                        var $2093 = self.ini;
                                                        var $2094 = self.idx;
                                                        var $2095 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2081, $2091), $2092, $2093, $2094, $2095);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2097 = self.err;
                                                                var _reply$36 = Parser$wrap$(Kindelia$parse$text("("), Kindelia$parse$ann(_world$1), Kindelia$parse$text(")"), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2099 = self.err;
                                                                        var self = $2097;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2101 = self.value;
                                                                                var $2102 = Parser$Reply$error$(Parser$Error$combine$($2101, $2099));
                                                                                var $2100 = $2102;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2103 = Parser$Reply$error$($2099);
                                                                                var $2100 = $2103;
                                                                                break;
                                                                        };
                                                                        var $2098 = $2100;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2104 = self.pst;
                                                                        var $2105 = self.val;
                                                                        var self = $2104;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2107 = self.err;
                                                                                var $2108 = self.nam;
                                                                                var $2109 = self.ini;
                                                                                var $2110 = self.idx;
                                                                                var $2111 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2097, $2107), $2108, $2109, $2110, $2111);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2113 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$text$(":", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2115 = self.err;
                                                                                                var self = $2113;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2117 = self.value;
                                                                                                        var $2118 = Parser$Reply$error$(Parser$Error$combine$($2117, $2115));
                                                                                                        var $2116 = $2118;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2119 = Parser$Reply$error$($2115);
                                                                                                        var $2116 = $2119;
                                                                                                        break;
                                                                                                };
                                                                                                var $2114 = $2116;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2120 = self.pst;
                                                                                                var self = $2120;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2122 = self.err;
                                                                                                        var $2123 = self.nam;
                                                                                                        var $2124 = self.ini;
                                                                                                        var $2125 = self.idx;
                                                                                                        var $2126 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2113, $2122), $2123, $2124, $2125, $2126);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2128 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$type$(_world$1)(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2130 = self.err;
                                                                                                                        var self = $2128;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2132 = self.value;
                                                                                                                                var $2133 = Parser$Reply$error$(Parser$Error$combine$($2132, $2130));
                                                                                                                                var $2131 = $2133;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2134 = Parser$Reply$error$($2130);
                                                                                                                                var $2131 = $2134;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2129 = $2131;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2135 = self.pst;
                                                                                                                        var $2136 = self.val;
                                                                                                                        var self = $2135;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2138 = self.err;
                                                                                                                                var $2139 = self.nam;
                                                                                                                                var $2140 = self.ini;
                                                                                                                                var $2141 = self.idx;
                                                                                                                                var $2142 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2128, $2138), $2139, $2140, $2141, $2142);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2144 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$text$("{", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2146 = self.err;
                                                                                                                                                var self = $2144;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2148 = self.value;
                                                                                                                                                        var $2149 = Parser$Reply$error$(Parser$Error$combine$($2148, $2146));
                                                                                                                                                        var $2147 = $2149;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2150 = Parser$Reply$error$($2146);
                                                                                                                                                        var $2147 = $2150;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2145 = $2147;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2151 = self.pst;
                                                                                                                                                var self = $2151;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2153 = self.err;
                                                                                                                                                        var $2154 = self.nam;
                                                                                                                                                        var $2155 = self.ini;
                                                                                                                                                        var $2156 = self.idx;
                                                                                                                                                        var $2157 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2144, $2153), $2154, $2155, $2156, $2157);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $2159 = self.err;
                                                                                                                                                                var _reply$92 = Kindelia$parse$term$(_world$1)(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $2161 = self.err;
                                                                                                                                                                        var self = $2159;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $2163 = self.value;
                                                                                                                                                                                var $2164 = Parser$Reply$error$(Parser$Error$combine$($2163, $2161));
                                                                                                                                                                                var $2162 = $2164;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $2165 = Parser$Reply$error$($2161);
                                                                                                                                                                                var $2162 = $2165;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2160 = $2162;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $2166 = self.pst;
                                                                                                                                                                        var $2167 = self.val;
                                                                                                                                                                        var self = $2166;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $2169 = self.err;
                                                                                                                                                                                var $2170 = self.nam;
                                                                                                                                                                                var $2171 = self.ini;
                                                                                                                                                                                var $2172 = self.idx;
                                                                                                                                                                                var $2173 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2159, $2169), $2170, $2171, $2172, $2173);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $2175 = self.err;
                                                                                                                                                                                        var _reply$106 = Kindelia$parse$text$("}", _reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $2177 = self.err;
                                                                                                                                                                                                var self = $2175;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $2179 = self.value;
                                                                                                                                                                                                        var $2180 = Parser$Reply$error$(Parser$Error$combine$($2179, $2177));
                                                                                                                                                                                                        var $2178 = $2180;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $2181 = Parser$Reply$error$($2177);
                                                                                                                                                                                                        var $2178 = $2181;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $2176 = $2178;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $2182 = self.pst;
                                                                                                                                                                                                var self = $2182;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $2184 = self.err;
                                                                                                                                                                                                        var $2185 = self.nam;
                                                                                                                                                                                                        var $2186 = self.ini;
                                                                                                                                                                                                        var $2187 = self.idx;
                                                                                                                                                                                                        var $2188 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2175, $2184), $2185, $2186, $2187, $2188);
                                                                                                                                                                                                        var $2189 = Parser$Reply$value$(_reply$pst$114, Kindelia$Bond$new$($2089, $2105, $2136, $2167));
                                                                                                                                                                                                        var $2183 = $2189;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $2176 = $2183;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $2174 = $2176;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $2168 = $2174;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2160 = $2168;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $2158 = $2160;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $2152 = $2158;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2145 = $2152;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2143 = $2145;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2137 = $2143;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2129 = $2137;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2127 = $2129;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2121 = $2127;
                                                                                                        break;
                                                                                                };
                                                                                                var $2114 = $2121;
                                                                                                break;
                                                                                        };
                                                                                        var $2112 = $2114;
                                                                                        break;
                                                                                };
                                                                                var $2106 = $2112;
                                                                                break;
                                                                        };
                                                                        var $2098 = $2106;
                                                                        break;
                                                                };
                                                                var $2096 = $2098;
                                                                break;
                                                        };
                                                        var $2090 = $2096;
                                                        break;
                                                };
                                                var $2082 = $2090;
                                                break;
                                        };
                                        var $2080 = $2082;
                                        break;
                                };
                                var $2074 = $2080;
                                break;
                        };
                        var $2067 = $2074;
                        break;
                };
                var $2065 = $2067;
                break;
        };
        return $2065;
    };
    const Kindelia$parse$bond = x0 => x1 => Kindelia$parse$bond$(x0, x1);

    function Kindelia$Transaction$new_bond$(_bond$1) {
        var $2190 = ({
            _: 'Kindelia.Transaction.new_bond',
            'bond': _bond$1
        });
        return $2190;
    };
    const Kindelia$Transaction$new_bond = x0 => Kindelia$Transaction$new_bond$(x0);

    function Maybe$default$(_m$2, _a$3) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $2192 = self.value;
                var $2193 = $2192;
                var $2191 = $2193;
                break;
            case 'Maybe.none':
                var $2194 = _a$3;
                var $2191 = $2194;
                break;
        };
        return $2191;
    };
    const Maybe$default = x0 => x1 => Maybe$default$(x0, x1);

    function Kindelia$File$new$(_name$1, _ownr$2, _type$3, _expr$4) {
        var $2195 = ({
            _: 'Kindelia.File.new',
            'name': _name$1,
            'ownr': _ownr$2,
            'type': _type$3,
            'expr': _expr$4
        });
        return $2195;
    };
    const Kindelia$File$new = x0 => x1 => x2 => x3 => Kindelia$File$new$(x0, x1, x2, x3);

    function Kindelia$parse$file$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2197 = self.err;
                var _reply$8 = Kindelia$parse$text$("file", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2199 = self.err;
                        var self = $2197;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2201 = self.value;
                                var $2202 = Parser$Reply$error$(Parser$Error$combine$($2201, $2199));
                                var $2200 = $2202;
                                break;
                            case 'Maybe.none':
                                var $2203 = Parser$Reply$error$($2199);
                                var $2200 = $2203;
                                break;
                        };
                        var $2198 = $2200;
                        break;
                    case 'Parser.Reply.value':
                        var $2204 = self.pst;
                        var self = $2204;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2206 = self.err;
                                var $2207 = self.nam;
                                var $2208 = self.ini;
                                var $2209 = self.idx;
                                var $2210 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2197, $2206), $2207, $2208, $2209, $2210);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2212 = self.err;
                                        var _reply$22 = Parser$maybe$((_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $2215 = self.err;
                                                    var _reply$28 = Parser$many$((_pst$28 => {
                                                        var self = _pst$28;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2218 = self.err;
                                                                var _reply$34 = Kindelia$parse$name$(_pst$28);
                                                                var self = _reply$34;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2220 = self.err;
                                                                        var self = $2218;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2222 = self.value;
                                                                                var $2223 = Parser$Reply$error$(Parser$Error$combine$($2222, $2220));
                                                                                var $2221 = $2223;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2224 = Parser$Reply$error$($2220);
                                                                                var $2221 = $2224;
                                                                                break;
                                                                        };
                                                                        var $2219 = $2221;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2225 = self.pst;
                                                                        var $2226 = self.val;
                                                                        var self = $2225;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2228 = self.err;
                                                                                var $2229 = self.nam;
                                                                                var $2230 = self.ini;
                                                                                var $2231 = self.idx;
                                                                                var $2232 = self.str;
                                                                                var _reply$pst$42 = Parser$State$new$(Parser$Error$maybe_combine$($2218, $2228), $2229, $2230, $2231, $2232);
                                                                                var self = _reply$pst$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2234 = self.err;
                                                                                        var _reply$48 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$42);
                                                                                        var self = _reply$48;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2236 = self.err;
                                                                                                var self = $2234;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2238 = self.value;
                                                                                                        var $2239 = Parser$Reply$error$(Parser$Error$combine$($2238, $2236));
                                                                                                        var $2237 = $2239;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2240 = Parser$Reply$error$($2236);
                                                                                                        var $2237 = $2240;
                                                                                                        break;
                                                                                                };
                                                                                                var $2235 = $2237;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2241 = self.pst;
                                                                                                var self = $2241;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2243 = self.err;
                                                                                                        var $2244 = self.nam;
                                                                                                        var $2245 = self.ini;
                                                                                                        var $2246 = self.idx;
                                                                                                        var $2247 = self.str;
                                                                                                        var _reply$pst$56 = Parser$State$new$(Parser$Error$maybe_combine$($2234, $2243), $2244, $2245, $2246, $2247);
                                                                                                        var $2248 = Parser$Reply$value$(_reply$pst$56, $2226);
                                                                                                        var $2242 = $2248;
                                                                                                        break;
                                                                                                };
                                                                                                var $2235 = $2242;
                                                                                                break;
                                                                                        };
                                                                                        var $2233 = $2235;
                                                                                        break;
                                                                                };
                                                                                var $2227 = $2233;
                                                                                break;
                                                                        };
                                                                        var $2219 = $2227;
                                                                        break;
                                                                };
                                                                var $2217 = $2219;
                                                                break;
                                                        };
                                                        return $2217;
                                                    }))(_pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $2249 = self.err;
                                                            var self = $2215;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $2251 = self.value;
                                                                    var $2252 = Parser$Reply$error$(Parser$Error$combine$($2251, $2249));
                                                                    var $2250 = $2252;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $2253 = Parser$Reply$error$($2249);
                                                                    var $2250 = $2253;
                                                                    break;
                                                            };
                                                            var $2216 = $2250;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $2254 = self.pst;
                                                            var $2255 = self.val;
                                                            var self = $2254;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2257 = self.err;
                                                                    var $2258 = self.nam;
                                                                    var $2259 = self.ini;
                                                                    var $2260 = self.idx;
                                                                    var $2261 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($2215, $2257), $2258, $2259, $2260, $2261);
                                                                    var self = $2255;
                                                                    switch (self._) {
                                                                        case 'List.nil':
                                                                            var $2263 = (_pst$37 => {
                                                                                var $2264 = Parser$Reply$value$(_pst$37, List$nil);
                                                                                return $2264;
                                                                            });
                                                                            var $2262 = $2263;
                                                                            break;
                                                                        case 'List.cons':
                                                                            var $2265 = (_pst$39 => {
                                                                                var self = _pst$39;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2267 = self.err;
                                                                                        var _reply$45 = Kindelia$parse$text$("@", _pst$39);
                                                                                        var self = _reply$45;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2269 = self.err;
                                                                                                var self = $2267;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2271 = self.value;
                                                                                                        var $2272 = Parser$Reply$error$(Parser$Error$combine$($2271, $2269));
                                                                                                        var $2270 = $2272;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2273 = Parser$Reply$error$($2269);
                                                                                                        var $2270 = $2273;
                                                                                                        break;
                                                                                                };
                                                                                                var $2268 = $2270;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2274 = self.pst;
                                                                                                var self = $2274;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2276 = self.err;
                                                                                                        var $2277 = self.nam;
                                                                                                        var $2278 = self.ini;
                                                                                                        var $2279 = self.idx;
                                                                                                        var $2280 = self.str;
                                                                                                        var _reply$pst$53 = Parser$State$new$(Parser$Error$maybe_combine$($2267, $2276), $2277, $2278, $2279, $2280);
                                                                                                        var $2281 = Parser$Reply$value$(_reply$pst$53, $2255);
                                                                                                        var $2275 = $2281;
                                                                                                        break;
                                                                                                };
                                                                                                var $2268 = $2275;
                                                                                                break;
                                                                                        };
                                                                                        var $2266 = $2268;
                                                                                        break;
                                                                                };
                                                                                return $2266;
                                                                            });
                                                                            var $2262 = $2265;
                                                                            break;
                                                                    };
                                                                    var $2262 = $2262(_reply$pst$36);
                                                                    var $2256 = $2262;
                                                                    break;
                                                            };
                                                            var $2216 = $2256;
                                                            break;
                                                    };
                                                    var $2214 = $2216;
                                                    break;
                                            };
                                            return $2214;
                                        }), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2282 = self.err;
                                                var self = $2212;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2284 = self.value;
                                                        var $2285 = Parser$Reply$error$(Parser$Error$combine$($2284, $2282));
                                                        var $2283 = $2285;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2286 = Parser$Reply$error$($2282);
                                                        var $2283 = $2286;
                                                        break;
                                                };
                                                var $2213 = $2283;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2287 = self.pst;
                                                var $2288 = self.val;
                                                var self = $2287;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2290 = self.err;
                                                        var $2291 = self.nam;
                                                        var $2292 = self.ini;
                                                        var $2293 = self.idx;
                                                        var $2294 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2212, $2290), $2291, $2292, $2293, $2294);
                                                        var _ownr$31 = Maybe$default$($2288, List$nil);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2296 = self.err;
                                                                var _reply$37 = Kindelia$parse$name$(_reply$pst$30);
                                                                var self = _reply$37;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2298 = self.err;
                                                                        var self = $2296;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2300 = self.value;
                                                                                var $2301 = Parser$Reply$error$(Parser$Error$combine$($2300, $2298));
                                                                                var $2299 = $2301;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2302 = Parser$Reply$error$($2298);
                                                                                var $2299 = $2302;
                                                                                break;
                                                                        };
                                                                        var $2297 = $2299;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2303 = self.pst;
                                                                        var $2304 = self.val;
                                                                        var self = $2303;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2306 = self.err;
                                                                                var $2307 = self.nam;
                                                                                var $2308 = self.ini;
                                                                                var $2309 = self.idx;
                                                                                var $2310 = self.str;
                                                                                var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($2296, $2306), $2307, $2308, $2309, $2310);
                                                                                var self = _reply$pst$45;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2312 = self.err;
                                                                                        var _reply$51 = Kindelia$parse$text$(":", _reply$pst$45);
                                                                                        var self = _reply$51;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2314 = self.err;
                                                                                                var self = $2312;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2316 = self.value;
                                                                                                        var $2317 = Parser$Reply$error$(Parser$Error$combine$($2316, $2314));
                                                                                                        var $2315 = $2317;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2318 = Parser$Reply$error$($2314);
                                                                                                        var $2315 = $2318;
                                                                                                        break;
                                                                                                };
                                                                                                var $2313 = $2315;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2319 = self.pst;
                                                                                                var self = $2319;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2321 = self.err;
                                                                                                        var $2322 = self.nam;
                                                                                                        var $2323 = self.ini;
                                                                                                        var $2324 = self.idx;
                                                                                                        var $2325 = self.str;
                                                                                                        var _reply$pst$59 = Parser$State$new$(Parser$Error$maybe_combine$($2312, $2321), $2322, $2323, $2324, $2325);
                                                                                                        var self = _reply$pst$59;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2327 = self.err;
                                                                                                                var _reply$65 = Kindelia$parse$type$(_world$1)(_reply$pst$59);
                                                                                                                var self = _reply$65;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2329 = self.err;
                                                                                                                        var self = $2327;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2331 = self.value;
                                                                                                                                var $2332 = Parser$Reply$error$(Parser$Error$combine$($2331, $2329));
                                                                                                                                var $2330 = $2332;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2333 = Parser$Reply$error$($2329);
                                                                                                                                var $2330 = $2333;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2328 = $2330;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2334 = self.pst;
                                                                                                                        var $2335 = self.val;
                                                                                                                        var self = $2334;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2337 = self.err;
                                                                                                                                var $2338 = self.nam;
                                                                                                                                var $2339 = self.ini;
                                                                                                                                var $2340 = self.idx;
                                                                                                                                var $2341 = self.str;
                                                                                                                                var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($2327, $2337), $2338, $2339, $2340, $2341);
                                                                                                                                var self = _reply$pst$73;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2343 = self.err;
                                                                                                                                        var _reply$79 = Kindelia$parse$text$("=", _reply$pst$73);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2345 = self.err;
                                                                                                                                                var self = $2343;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2347 = self.value;
                                                                                                                                                        var $2348 = Parser$Reply$error$(Parser$Error$combine$($2347, $2345));
                                                                                                                                                        var $2346 = $2348;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2349 = Parser$Reply$error$($2345);
                                                                                                                                                        var $2346 = $2349;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2344 = $2346;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2350 = self.pst;
                                                                                                                                                var self = $2350;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2352 = self.err;
                                                                                                                                                        var $2353 = self.nam;
                                                                                                                                                        var $2354 = self.ini;
                                                                                                                                                        var $2355 = self.idx;
                                                                                                                                                        var $2356 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2343, $2352), $2353, $2354, $2355, $2356);
                                                                                                                                                        var self = _reply$pst$87;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $2358 = self.err;
                                                                                                                                                                var _reply$93 = Kindelia$parse$term$(_world$1)(_reply$pst$87);
                                                                                                                                                                var self = _reply$93;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $2360 = self.err;
                                                                                                                                                                        var self = $2358;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $2362 = self.value;
                                                                                                                                                                                var $2363 = Parser$Reply$error$(Parser$Error$combine$($2362, $2360));
                                                                                                                                                                                var $2361 = $2363;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $2364 = Parser$Reply$error$($2360);
                                                                                                                                                                                var $2361 = $2364;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2359 = $2361;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $2365 = self.pst;
                                                                                                                                                                        var $2366 = self.val;
                                                                                                                                                                        var self = $2365;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $2368 = self.err;
                                                                                                                                                                                var $2369 = self.nam;
                                                                                                                                                                                var $2370 = self.ini;
                                                                                                                                                                                var $2371 = self.idx;
                                                                                                                                                                                var $2372 = self.str;
                                                                                                                                                                                var _reply$pst$101 = Parser$State$new$(Parser$Error$maybe_combine$($2358, $2368), $2369, $2370, $2371, $2372);
                                                                                                                                                                                var $2373 = Parser$Reply$value$(_reply$pst$101, Kindelia$File$new$($2304, _ownr$31, $2335, $2366));
                                                                                                                                                                                var $2367 = $2373;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2359 = $2367;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $2357 = $2359;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $2351 = $2357;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2344 = $2351;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2342 = $2344;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2336 = $2342;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2328 = $2336;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2326 = $2328;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2320 = $2326;
                                                                                                        break;
                                                                                                };
                                                                                                var $2313 = $2320;
                                                                                                break;
                                                                                        };
                                                                                        var $2311 = $2313;
                                                                                        break;
                                                                                };
                                                                                var $2305 = $2311;
                                                                                break;
                                                                        };
                                                                        var $2297 = $2305;
                                                                        break;
                                                                };
                                                                var $2295 = $2297;
                                                                break;
                                                        };
                                                        var $2289 = $2295;
                                                        break;
                                                };
                                                var $2213 = $2289;
                                                break;
                                        };
                                        var $2211 = $2213;
                                        break;
                                };
                                var $2205 = $2211;
                                break;
                        };
                        var $2198 = $2205;
                        break;
                };
                var $2196 = $2198;
                break;
        };
        return $2196;
    };
    const Kindelia$parse$file = x0 => x1 => Kindelia$parse$file$(x0, x1);

    function Kindelia$Transaction$new_file$(_file$1) {
        var $2374 = ({
            _: 'Kindelia.Transaction.new_file',
            'file': _file$1
        });
        return $2374;
    };
    const Kindelia$Transaction$new_file = x0 => Kindelia$Transaction$new_file$(x0);

    function Kindelia$Eval$new$(_term$1, _type$2) {
        var $2375 = ({
            _: 'Kindelia.Eval.new',
            'term': _term$1,
            'type': _type$2
        });
        return $2375;
    };
    const Kindelia$Eval$new = x0 => x1 => Kindelia$Eval$new$(x0, x1);

    function Kindelia$parse$eval$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2377 = self.err;
                var _reply$8 = Kindelia$parse$text$("eval", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2379 = self.err;
                        var self = $2377;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2381 = self.value;
                                var $2382 = Parser$Reply$error$(Parser$Error$combine$($2381, $2379));
                                var $2380 = $2382;
                                break;
                            case 'Maybe.none':
                                var $2383 = Parser$Reply$error$($2379);
                                var $2380 = $2383;
                                break;
                        };
                        var $2378 = $2380;
                        break;
                    case 'Parser.Reply.value':
                        var $2384 = self.pst;
                        var self = $2384;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2386 = self.err;
                                var $2387 = self.nam;
                                var $2388 = self.ini;
                                var $2389 = self.idx;
                                var $2390 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2377, $2386), $2387, $2388, $2389, $2390);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2392 = self.err;
                                        var _reply$22 = Kindelia$parse$text$("{", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2394 = self.err;
                                                var self = $2392;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2396 = self.value;
                                                        var $2397 = Parser$Reply$error$(Parser$Error$combine$($2396, $2394));
                                                        var $2395 = $2397;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2398 = Parser$Reply$error$($2394);
                                                        var $2395 = $2398;
                                                        break;
                                                };
                                                var $2393 = $2395;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2399 = self.pst;
                                                var self = $2399;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2401 = self.err;
                                                        var $2402 = self.nam;
                                                        var $2403 = self.ini;
                                                        var $2404 = self.idx;
                                                        var $2405 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2392, $2401), $2402, $2403, $2404, $2405);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2407 = self.err;
                                                                var _reply$36 = Kindelia$parse$term$(_world$1)(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2409 = self.err;
                                                                        var self = $2407;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2411 = self.value;
                                                                                var $2412 = Parser$Reply$error$(Parser$Error$combine$($2411, $2409));
                                                                                var $2410 = $2412;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2413 = Parser$Reply$error$($2409);
                                                                                var $2410 = $2413;
                                                                                break;
                                                                        };
                                                                        var $2408 = $2410;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2414 = self.pst;
                                                                        var $2415 = self.val;
                                                                        var self = $2414;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2417 = self.err;
                                                                                var $2418 = self.nam;
                                                                                var $2419 = self.ini;
                                                                                var $2420 = self.idx;
                                                                                var $2421 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2407, $2417), $2418, $2419, $2420, $2421);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2423 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$text$("}", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2425 = self.err;
                                                                                                var self = $2423;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2427 = self.value;
                                                                                                        var $2428 = Parser$Reply$error$(Parser$Error$combine$($2427, $2425));
                                                                                                        var $2426 = $2428;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2429 = Parser$Reply$error$($2425);
                                                                                                        var $2426 = $2429;
                                                                                                        break;
                                                                                                };
                                                                                                var $2424 = $2426;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2430 = self.pst;
                                                                                                var self = $2430;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2432 = self.err;
                                                                                                        var $2433 = self.nam;
                                                                                                        var $2434 = self.ini;
                                                                                                        var $2435 = self.idx;
                                                                                                        var $2436 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2423, $2432), $2433, $2434, $2435, $2436);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2438 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$text$(":", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2440 = self.err;
                                                                                                                        var self = $2438;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2442 = self.value;
                                                                                                                                var $2443 = Parser$Reply$error$(Parser$Error$combine$($2442, $2440));
                                                                                                                                var $2441 = $2443;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2444 = Parser$Reply$error$($2440);
                                                                                                                                var $2441 = $2444;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2439 = $2441;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2445 = self.pst;
                                                                                                                        var self = $2445;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2447 = self.err;
                                                                                                                                var $2448 = self.nam;
                                                                                                                                var $2449 = self.ini;
                                                                                                                                var $2450 = self.idx;
                                                                                                                                var $2451 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2438, $2447), $2448, $2449, $2450, $2451);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2453 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$type$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2455 = self.err;
                                                                                                                                                var self = $2453;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2457 = self.value;
                                                                                                                                                        var $2458 = Parser$Reply$error$(Parser$Error$combine$($2457, $2455));
                                                                                                                                                        var $2456 = $2458;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2459 = Parser$Reply$error$($2455);
                                                                                                                                                        var $2456 = $2459;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2454 = $2456;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2460 = self.pst;
                                                                                                                                                var $2461 = self.val;
                                                                                                                                                var self = $2460;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2463 = self.err;
                                                                                                                                                        var $2464 = self.nam;
                                                                                                                                                        var $2465 = self.ini;
                                                                                                                                                        var $2466 = self.idx;
                                                                                                                                                        var $2467 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2453, $2463), $2464, $2465, $2466, $2467);
                                                                                                                                                        var $2468 = Parser$Reply$value$(_reply$pst$86, Kindelia$Eval$new$($2415, $2461));
                                                                                                                                                        var $2462 = $2468;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2454 = $2462;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2452 = $2454;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2446 = $2452;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2439 = $2446;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2437 = $2439;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2431 = $2437;
                                                                                                        break;
                                                                                                };
                                                                                                var $2424 = $2431;
                                                                                                break;
                                                                                        };
                                                                                        var $2422 = $2424;
                                                                                        break;
                                                                                };
                                                                                var $2416 = $2422;
                                                                                break;
                                                                        };
                                                                        var $2408 = $2416;
                                                                        break;
                                                                };
                                                                var $2406 = $2408;
                                                                break;
                                                        };
                                                        var $2400 = $2406;
                                                        break;
                                                };
                                                var $2393 = $2400;
                                                break;
                                        };
                                        var $2391 = $2393;
                                        break;
                                };
                                var $2385 = $2391;
                                break;
                        };
                        var $2378 = $2385;
                        break;
                };
                var $2376 = $2378;
                break;
        };
        return $2376;
    };
    const Kindelia$parse$eval = x0 => x1 => Kindelia$parse$eval$(x0, x1);

    function Kindelia$Transaction$new_eval$(_eval$1) {
        var $2469 = ({
            _: 'Kindelia.Transaction.new_eval',
            'eval': _eval$1
        });
        return $2469;
    };
    const Kindelia$Transaction$new_eval = x0 => Kindelia$Transaction$new_eval$(x0);

    function Kindelia$parse$transaction$(_world$1) {
        var $2470 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2472 = self.err;
                    var _reply$8 = Kindelia$parse$data$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2474 = self.err;
                            var self = $2472;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2476 = self.value;
                                    var $2477 = Parser$Reply$error$(Parser$Error$combine$($2476, $2474));
                                    var $2475 = $2477;
                                    break;
                                case 'Maybe.none':
                                    var $2478 = Parser$Reply$error$($2474);
                                    var $2475 = $2478;
                                    break;
                            };
                            var $2473 = $2475;
                            break;
                        case 'Parser.Reply.value':
                            var $2479 = self.pst;
                            var $2480 = self.val;
                            var self = $2479;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2482 = self.err;
                                    var $2483 = self.nam;
                                    var $2484 = self.ini;
                                    var $2485 = self.idx;
                                    var $2486 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2472, $2482), $2483, $2484, $2485, $2486);
                                    var $2487 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_data$($2480));
                                    var $2481 = $2487;
                                    break;
                            };
                            var $2473 = $2481;
                            break;
                    };
                    var $2471 = $2473;
                    break;
            };
            return $2471;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2489 = self.err;
                    var _reply$8 = Kindelia$parse$bond$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2491 = self.err;
                            var self = $2489;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2493 = self.value;
                                    var $2494 = Parser$Reply$error$(Parser$Error$combine$($2493, $2491));
                                    var $2492 = $2494;
                                    break;
                                case 'Maybe.none':
                                    var $2495 = Parser$Reply$error$($2491);
                                    var $2492 = $2495;
                                    break;
                            };
                            var $2490 = $2492;
                            break;
                        case 'Parser.Reply.value':
                            var $2496 = self.pst;
                            var $2497 = self.val;
                            var self = $2496;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2499 = self.err;
                                    var $2500 = self.nam;
                                    var $2501 = self.ini;
                                    var $2502 = self.idx;
                                    var $2503 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2489, $2499), $2500, $2501, $2502, $2503);
                                    var $2504 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_bond$($2497));
                                    var $2498 = $2504;
                                    break;
                            };
                            var $2490 = $2498;
                            break;
                    };
                    var $2488 = $2490;
                    break;
            };
            return $2488;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2506 = self.err;
                    var _reply$8 = Kindelia$parse$file$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2508 = self.err;
                            var self = $2506;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2510 = self.value;
                                    var $2511 = Parser$Reply$error$(Parser$Error$combine$($2510, $2508));
                                    var $2509 = $2511;
                                    break;
                                case 'Maybe.none':
                                    var $2512 = Parser$Reply$error$($2508);
                                    var $2509 = $2512;
                                    break;
                            };
                            var $2507 = $2509;
                            break;
                        case 'Parser.Reply.value':
                            var $2513 = self.pst;
                            var $2514 = self.val;
                            var self = $2513;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2516 = self.err;
                                    var $2517 = self.nam;
                                    var $2518 = self.ini;
                                    var $2519 = self.idx;
                                    var $2520 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2506, $2516), $2517, $2518, $2519, $2520);
                                    var $2521 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_file$($2514));
                                    var $2515 = $2521;
                                    break;
                            };
                            var $2507 = $2515;
                            break;
                    };
                    var $2505 = $2507;
                    break;
            };
            return $2505;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2523 = self.err;
                    var _reply$8 = Kindelia$parse$eval$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2525 = self.err;
                            var self = $2523;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2527 = self.value;
                                    var $2528 = Parser$Reply$error$(Parser$Error$combine$($2527, $2525));
                                    var $2526 = $2528;
                                    break;
                                case 'Maybe.none':
                                    var $2529 = Parser$Reply$error$($2525);
                                    var $2526 = $2529;
                                    break;
                            };
                            var $2524 = $2526;
                            break;
                        case 'Parser.Reply.value':
                            var $2530 = self.pst;
                            var $2531 = self.val;
                            var self = $2530;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2533 = self.err;
                                    var $2534 = self.nam;
                                    var $2535 = self.ini;
                                    var $2536 = self.idx;
                                    var $2537 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2523, $2533), $2534, $2535, $2536, $2537);
                                    var $2538 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_eval$($2531));
                                    var $2532 = $2538;
                                    break;
                            };
                            var $2524 = $2532;
                            break;
                    };
                    var $2522 = $2524;
                    break;
            };
            return $2522;
        }), List$nil)))));
        return $2470;
    };
    const Kindelia$parse$transaction = x0 => Kindelia$parse$transaction$(x0);

    function Kindelia$parse$block$(_world$1) {
        var $2539 = Parser$until$(Kindelia$parse$text("save"), Kindelia$parse$transaction$(_world$1));
        return $2539;
    };
    const Kindelia$parse$block = x0 => Kindelia$parse$block$(x0);

    function IO$(_A$1) {
        var $2540 = null;
        return $2540;
    };
    const IO = x0 => IO$(x0);
    const Nat$ltn = a0 => a1 => (a0 < a1);

    function String$length$go$(_xs$1, _n$2) {
        var String$length$go$ = (_xs$1, _n$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _n$2]
        });
        var String$length$go = _xs$1 => _n$2 => String$length$go$(_xs$1, _n$2);
        var arg = [_xs$1, _n$2];
        while (true) {
            let [_xs$1, _n$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $2541 = _n$2;
                    return $2541;
                } else {
                    var $2542 = self.charCodeAt(0);
                    var $2543 = self.slice(1);
                    var $2544 = String$length$go$($2543, Nat$succ$(_n$2));
                    return $2544;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$length$go = x0 => x1 => String$length$go$(x0, x1);

    function String$length$(_xs$1) {
        var $2545 = String$length$go$(_xs$1, 0n);
        return $2545;
    };
    const String$length = x0 => String$length$(x0);

    function String$flatten$go$(_xs$1, _res$2) {
        var String$flatten$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$flatten$go = _xs$1 => _res$2 => String$flatten$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                switch (self._) {
                    case 'List.cons':
                        var $2546 = self.head;
                        var $2547 = self.tail;
                        var $2548 = String$flatten$go$($2547, (_res$2 + $2546));
                        return $2548;
                    case 'List.nil':
                        var $2549 = _res$2;
                        return $2549;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$flatten$go = x0 => x1 => String$flatten$go$(x0, x1);

    function String$flatten$(_xs$1) {
        var $2550 = String$flatten$go$(_xs$1, "");
        return $2550;
    };
    const String$flatten = x0 => String$flatten$(x0);

    function String$join$go$(_sep$1, _list$2, _fst$3) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $2552 = self.head;
                var $2553 = self.tail;
                var $2554 = String$flatten$(List$cons$((() => {
                    var self = _fst$3;
                    if (self) {
                        var $2555 = "";
                        return $2555;
                    } else {
                        var $2556 = _sep$1;
                        return $2556;
                    };
                })(), List$cons$($2552, List$cons$(String$join$go$(_sep$1, $2553, Bool$false), List$nil))));
                var $2551 = $2554;
                break;
            case 'List.nil':
                var $2557 = "";
                var $2551 = $2557;
                break;
        };
        return $2551;
    };
    const String$join$go = x0 => x1 => x2 => String$join$go$(x0, x1, x2);

    function String$join$(_sep$1, _list$2) {
        var $2558 = String$join$go$(_sep$1, _list$2, Bool$true);
        return $2558;
    };
    const String$join = x0 => x1 => String$join$(x0, x1);

    function Kind$Code$highlight$end$(_col$1, _row$2, _res$3) {
        var $2559 = String$join$("\u{a}", _res$3);
        return $2559;
    };
    const Kind$Code$highlight$end = x0 => x1 => x2 => Kind$Code$highlight$end$(x0, x1, x2);

    function Maybe$extract$(_m$2, _a$4, _f$5) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $2561 = self.value;
                var $2562 = _f$5($2561);
                var $2560 = $2562;
                break;
            case 'Maybe.none':
                var $2563 = _a$4;
                var $2560 = $2563;
                break;
        };
        return $2560;
    };
    const Maybe$extract = x0 => x1 => x2 => Maybe$extract$(x0, x1, x2);

    function Nat$is_zero$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2565 = Bool$true;
            var $2564 = $2565;
        } else {
            var $2566 = (self - 1n);
            var $2567 = Bool$false;
            var $2564 = $2567;
        };
        return $2564;
    };
    const Nat$is_zero = x0 => Nat$is_zero$(x0);

    function Nat$double$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2569 = Nat$zero;
            var $2568 = $2569;
        } else {
            var $2570 = (self - 1n);
            var $2571 = Nat$succ$(Nat$succ$(Nat$double$($2570)));
            var $2568 = $2571;
        };
        return $2568;
    };
    const Nat$double = x0 => Nat$double$(x0);

    function Nat$pred$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2573 = Nat$zero;
            var $2572 = $2573;
        } else {
            var $2574 = (self - 1n);
            var $2575 = $2574;
            var $2572 = $2575;
        };
        return $2572;
    };
    const Nat$pred = x0 => Nat$pred$(x0);

    function String$reverse$go$(_xs$1, _res$2) {
        var String$reverse$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$reverse$go = _xs$1 => _res$2 => String$reverse$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $2576 = _res$2;
                    return $2576;
                } else {
                    var $2577 = self.charCodeAt(0);
                    var $2578 = self.slice(1);
                    var $2579 = String$reverse$go$($2578, String$cons$($2577, _res$2));
                    return $2579;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$reverse$go = x0 => x1 => String$reverse$go$(x0, x1);

    function String$reverse$(_xs$1) {
        var $2580 = String$reverse$go$(_xs$1, String$nil);
        return $2580;
    };
    const String$reverse = x0 => String$reverse$(x0);

    function String$pad_right$(_size$1, _chr$2, _str$3) {
        var self = _size$1;
        if (self === 0n) {
            var $2582 = _str$3;
            var $2581 = $2582;
        } else {
            var $2583 = (self - 1n);
            var self = _str$3;
            if (self.length === 0) {
                var $2585 = String$cons$(_chr$2, String$pad_right$($2583, _chr$2, ""));
                var $2584 = $2585;
            } else {
                var $2586 = self.charCodeAt(0);
                var $2587 = self.slice(1);
                var $2588 = String$cons$($2586, String$pad_right$($2583, _chr$2, $2587));
                var $2584 = $2588;
            };
            var $2581 = $2584;
        };
        return $2581;
    };
    const String$pad_right = x0 => x1 => x2 => String$pad_right$(x0, x1, x2);

    function String$pad_left$(_size$1, _chr$2, _str$3) {
        var $2589 = String$reverse$(String$pad_right$(_size$1, _chr$2, String$reverse$(_str$3)));
        return $2589;
    };
    const String$pad_left = x0 => x1 => x2 => String$pad_left$(x0, x1, x2);

    function Either$(_A$1, _B$2) {
        var $2590 = null;
        return $2590;
    };
    const Either = x0 => x1 => Either$(x0, x1);

    function Either$left$(_value$3) {
        var $2591 = ({
            _: 'Either.left',
            'value': _value$3
        });
        return $2591;
    };
    const Either$left = x0 => Either$left$(x0);

    function Either$right$(_value$3) {
        var $2592 = ({
            _: 'Either.right',
            'value': _value$3
        });
        return $2592;
    };
    const Either$right = x0 => Either$right$(x0);

    function Nat$sub_rem$(_n$1, _m$2) {
        var Nat$sub_rem$ = (_n$1, _m$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2]
        });
        var Nat$sub_rem = _n$1 => _m$2 => Nat$sub_rem$(_n$1, _m$2);
        var arg = [_n$1, _m$2];
        while (true) {
            let [_n$1, _m$2] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $2593 = Either$left$(_n$1);
                    return $2593;
                } else {
                    var $2594 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $2596 = Either$right$(Nat$succ$($2594));
                        var $2595 = $2596;
                    } else {
                        var $2597 = (self - 1n);
                        var $2598 = Nat$sub_rem$($2597, $2594);
                        var $2595 = $2598;
                    };
                    return $2595;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$sub_rem = x0 => x1 => Nat$sub_rem$(x0, x1);

    function Nat$div_mod$go$(_n$1, _m$2, _d$3) {
        var Nat$div_mod$go$ = (_n$1, _m$2, _d$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _d$3]
        });
        var Nat$div_mod$go = _n$1 => _m$2 => _d$3 => Nat$div_mod$go$(_n$1, _m$2, _d$3);
        var arg = [_n$1, _m$2, _d$3];
        while (true) {
            let [_n$1, _m$2, _d$3] = arg;
            var R = (() => {
                var self = Nat$sub_rem$(_n$1, _m$2);
                switch (self._) {
                    case 'Either.left':
                        var $2599 = self.value;
                        var $2600 = Nat$div_mod$go$($2599, _m$2, Nat$succ$(_d$3));
                        return $2600;
                    case 'Either.right':
                        var $2601 = Pair$new$(_d$3, _n$1);
                        return $2601;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$div_mod$go = x0 => x1 => x2 => Nat$div_mod$go$(x0, x1, x2);
    const Nat$div_mod = a0 => a1 => (({
        _: 'Pair.new',
        'fst': a0 / a1,
        'snd': a0 % a1
    }));

    function Nat$to_base$go$(_base$1, _nat$2, _res$3) {
        var Nat$to_base$go$ = (_base$1, _nat$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_base$1, _nat$2, _res$3]
        });
        var Nat$to_base$go = _base$1 => _nat$2 => _res$3 => Nat$to_base$go$(_base$1, _nat$2, _res$3);
        var arg = [_base$1, _nat$2, _res$3];
        while (true) {
            let [_base$1, _nat$2, _res$3] = arg;
            var R = (() => {
                var self = (({
                    _: 'Pair.new',
                    'fst': _nat$2 / _base$1,
                    'snd': _nat$2 % _base$1
                }));
                switch (self._) {
                    case 'Pair.new':
                        var $2602 = self.fst;
                        var $2603 = self.snd;
                        var self = $2602;
                        if (self === 0n) {
                            var $2605 = List$cons$($2603, _res$3);
                            var $2604 = $2605;
                        } else {
                            var $2606 = (self - 1n);
                            var $2607 = Nat$to_base$go$(_base$1, $2602, List$cons$($2603, _res$3));
                            var $2604 = $2607;
                        };
                        return $2604;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$to_base$go = x0 => x1 => x2 => Nat$to_base$go$(x0, x1, x2);

    function Nat$to_base$(_base$1, _nat$2) {
        var $2608 = Nat$to_base$go$(_base$1, _nat$2, List$nil);
        return $2608;
    };
    const Nat$to_base = x0 => x1 => Nat$to_base$(x0, x1);

    function Nat$mod$go$(_n$1, _m$2, _r$3) {
        var Nat$mod$go$ = (_n$1, _m$2, _r$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _r$3]
        });
        var Nat$mod$go = _n$1 => _m$2 => _r$3 => Nat$mod$go$(_n$1, _m$2, _r$3);
        var arg = [_n$1, _m$2, _r$3];
        while (true) {
            let [_n$1, _m$2, _r$3] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $2609 = Nat$mod$go$(_n$1, _r$3, _m$2);
                    return $2609;
                } else {
                    var $2610 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $2612 = _r$3;
                        var $2611 = $2612;
                    } else {
                        var $2613 = (self - 1n);
                        var $2614 = Nat$mod$go$($2613, $2610, Nat$succ$(_r$3));
                        var $2611 = $2614;
                    };
                    return $2611;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$mod$go = x0 => x1 => x2 => Nat$mod$go$(x0, x1, x2);
    const Nat$mod = a0 => a1 => (a0 % a1);
    const Nat$lte = a0 => a1 => (a0 <= a1);

    function List$at$(_index$2, _list$3) {
        var List$at$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$at = _index$2 => _list$3 => List$at$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $2615 = self.head;
                        var $2616 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $2618 = Maybe$some$($2615);
                            var $2617 = $2618;
                        } else {
                            var $2619 = (self - 1n);
                            var $2620 = List$at$($2619, $2616);
                            var $2617 = $2620;
                        };
                        return $2617;
                    case 'List.nil':
                        var $2621 = Maybe$none;
                        return $2621;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$at = x0 => x1 => List$at$(x0, x1);

    function Nat$show_digit$(_base$1, _n$2) {
        var _m$3 = (_n$2 % _base$1);
        var _base64$4 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$cons$(97, List$cons$(98, List$cons$(99, List$cons$(100, List$cons$(101, List$cons$(102, List$cons$(103, List$cons$(104, List$cons$(105, List$cons$(106, List$cons$(107, List$cons$(108, List$cons$(109, List$cons$(110, List$cons$(111, List$cons$(112, List$cons$(113, List$cons$(114, List$cons$(115, List$cons$(116, List$cons$(117, List$cons$(118, List$cons$(119, List$cons$(120, List$cons$(121, List$cons$(122, List$cons$(65, List$cons$(66, List$cons$(67, List$cons$(68, List$cons$(69, List$cons$(70, List$cons$(71, List$cons$(72, List$cons$(73, List$cons$(74, List$cons$(75, List$cons$(76, List$cons$(77, List$cons$(78, List$cons$(79, List$cons$(80, List$cons$(81, List$cons$(82, List$cons$(83, List$cons$(84, List$cons$(85, List$cons$(86, List$cons$(87, List$cons$(88, List$cons$(89, List$cons$(90, List$cons$(43, List$cons$(47, List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
        var self = ((_base$1 > 0n) && (_base$1 <= 64n));
        if (self) {
            var self = List$at$(_m$3, _base64$4);
            switch (self._) {
                case 'Maybe.some':
                    var $2624 = self.value;
                    var $2625 = $2624;
                    var $2623 = $2625;
                    break;
                case 'Maybe.none':
                    var $2626 = 35;
                    var $2623 = $2626;
                    break;
            };
            var $2622 = $2623;
        } else {
            var $2627 = 35;
            var $2622 = $2627;
        };
        return $2622;
    };
    const Nat$show_digit = x0 => x1 => Nat$show_digit$(x0, x1);

    function Nat$to_string_base$(_base$1, _nat$2) {
        var $2628 = List$fold$(Nat$to_base$(_base$1, _nat$2), String$nil, (_n$3 => _str$4 => {
            var $2629 = String$cons$(Nat$show_digit$(_base$1, _n$3), _str$4);
            return $2629;
        }));
        return $2628;
    };
    const Nat$to_string_base = x0 => x1 => Nat$to_string_base$(x0, x1);

    function Nat$show$(_n$1) {
        var $2630 = Nat$to_string_base$(10n, _n$1);
        return $2630;
    };
    const Nat$show = x0 => Nat$show$(x0);
    const Bool$not = a0 => (!a0);

    function U16$new$(_value$1) {
        var $2631 = word_to_u16(_value$1);
        return $2631;
    };
    const U16$new = x0 => U16$new$(x0);
    const Nat$to_u16 = a0 => (Number(a0) & 0xFFFF);

    function Kind$Code$color$(_col$1, _str$2) {
        var $2632 = String$cons$(27, ("[" + (_col$1 + ("m" + (_str$2 + String$cons$(27, "[0m"))))));
        return $2632;
    };
    const Kind$Code$color = x0 => x1 => Kind$Code$color$(x0, x1);
    const Nat$eql = a0 => a1 => (a0 === a1);

    function List$take$(_n$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $2634 = self.head;
                var $2635 = self.tail;
                var self = _n$2;
                if (self === 0n) {
                    var $2637 = List$nil;
                    var $2636 = $2637;
                } else {
                    var $2638 = (self - 1n);
                    var $2639 = List$cons$($2634, List$take$($2638, $2635));
                    var $2636 = $2639;
                };
                var $2633 = $2636;
                break;
            case 'List.nil':
                var $2640 = List$nil;
                var $2633 = $2640;
                break;
        };
        return $2633;
    };
    const List$take = x0 => x1 => List$take$(x0, x1);

    function Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) {
        var Kind$Code$highlight$go$ = (_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) => ({
            ctr: 'TCO',
            arg: [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9]
        });
        var Kind$Code$highlight$go = _code$1 => _ixi$2 => _ix0$3 => _ix1$4 => _col$5 => _row$6 => _lft$7 => _lin$8 => _res$9 => Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9);
        var arg = [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9];
        while (true) {
            let [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9] = arg;
            var R = (() => {
                var _spa$10 = 3n;
                var self = _code$1;
                if (self.length === 0) {
                    var $2642 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                    var $2641 = $2642;
                } else {
                    var $2643 = self.charCodeAt(0);
                    var $2644 = self.slice(1);
                    var self = ($2643 === 10);
                    if (self) {
                        var _stp$13 = Maybe$extract$(_lft$7, Bool$false, Nat$is_zero);
                        var self = _stp$13;
                        if (self) {
                            var $2647 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                            var $2646 = $2647;
                        } else {
                            var _siz$14 = Nat$succ$(Nat$double$(_spa$10));
                            var self = _ix1$4;
                            if (self === 0n) {
                                var self = _lft$7;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $2650 = self.value;
                                        var $2651 = Maybe$some$(Nat$pred$($2650));
                                        var $2649 = $2651;
                                        break;
                                    case 'Maybe.none':
                                        var $2652 = Maybe$some$(_spa$10);
                                        var $2649 = $2652;
                                        break;
                                };
                                var _lft$15 = $2649;
                            } else {
                                var $2653 = (self - 1n);
                                var $2654 = _lft$7;
                                var _lft$15 = $2654;
                            };
                            var _ixi$16 = Nat$pred$(_ixi$2);
                            var _ix0$17 = Nat$pred$(_ix0$3);
                            var _ix1$18 = Nat$pred$(_ix1$4);
                            var _col$19 = 0n;
                            var _row$20 = Nat$succ$(_row$6);
                            var _res$21 = List$cons$(String$reverse$(_lin$8), _res$9);
                            var _lin$22 = String$reverse$(String$flatten$(List$cons$(String$pad_left$(4n, 32, Nat$show$(_row$20)), List$cons$(" | ", List$nil))));
                            var $2648 = Kind$Code$highlight$go$($2644, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$20, _lft$15, _lin$22, _res$21);
                            var $2646 = $2648;
                        };
                        var $2645 = $2646;
                    } else {
                        var _chr$13 = String$cons$($2643, String$nil);
                        var self = (Nat$is_zero$(_ix0$3) && (!Nat$is_zero$(_ix1$4)));
                        if (self) {
                            var $2656 = String$reverse$(Kind$Code$color$("41", Kind$Code$color$("37", _chr$13)));
                            var _chr$14 = $2656;
                        } else {
                            var self = (Nat$is_zero$(_ixi$2) && (!Nat$is_zero$(_ix1$4)));
                            if (self) {
                                var $2658 = String$reverse$(Kind$Code$color$("31", Kind$Code$color$("4", _chr$13)));
                                var $2657 = $2658;
                            } else {
                                var $2659 = _chr$13;
                                var $2657 = $2659;
                            };
                            var _chr$14 = $2657;
                        };
                        var self = (_ix0$3 === 1n);
                        if (self) {
                            var $2660 = List$take$(_spa$10, _res$9);
                            var _res$15 = $2660;
                        } else {
                            var $2661 = _res$9;
                            var _res$15 = $2661;
                        };
                        var _ixi$16 = Nat$pred$(_ixi$2);
                        var _ix0$17 = Nat$pred$(_ix0$3);
                        var _ix1$18 = Nat$pred$(_ix1$4);
                        var _col$19 = Nat$succ$(_col$5);
                        var _lin$20 = String$flatten$(List$cons$(_chr$14, List$cons$(_lin$8, List$nil)));
                        var $2655 = Kind$Code$highlight$go$($2644, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$6, _lft$7, _lin$20, _res$15);
                        var $2645 = $2655;
                    };
                    var $2641 = $2645;
                };
                return $2641;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$highlight$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Code$highlight$go$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Code$highlight$(_code$1, _init$2, _idx0$3, _idx1$4) {
        var $2662 = Kind$Code$highlight$go$((_code$1 + " \u{a}"), _init$2, _idx0$3, _idx1$4, 0n, 1n, Maybe$none, String$reverse$("   1 | "), List$nil);
        return $2662;
    };
    const Kind$Code$highlight = x0 => x1 => x2 => x3 => Kind$Code$highlight$(x0, x1, x2, x3);

    function IO$ask$(_query$2, _param$3, _then$4) {
        var $2663 = ({
            _: 'IO.ask',
            'query': _query$2,
            'param': _param$3,
            'then': _then$4
        });
        return $2663;
    };
    const IO$ask = x0 => x1 => x2 => IO$ask$(x0, x1, x2);

    function IO$bind$(_a$3, _f$4) {
        var self = _a$3;
        switch (self._) {
            case 'IO.end':
                var $2665 = self.value;
                var $2666 = _f$4($2665);
                var $2664 = $2666;
                break;
            case 'IO.ask':
                var $2667 = self.query;
                var $2668 = self.param;
                var $2669 = self.then;
                var $2670 = IO$ask$($2667, $2668, (_x$8 => {
                    var $2671 = IO$bind$($2669(_x$8), _f$4);
                    return $2671;
                }));
                var $2664 = $2670;
                break;
        };
        return $2664;
    };
    const IO$bind = x0 => x1 => IO$bind$(x0, x1);

    function IO$end$(_value$2) {
        var $2672 = ({
            _: 'IO.end',
            'value': _value$2
        });
        return $2672;
    };
    const IO$end = x0 => IO$end$(x0);

    function IO$monad$(_new$2) {
        var $2673 = _new$2(IO$bind)(IO$end);
        return $2673;
    };
    const IO$monad = x0 => IO$monad$(x0);

    function IO$put_string$(_text$1) {
        var $2674 = IO$ask$("put_string", _text$1, (_skip$2 => {
            var $2675 = IO$end$(Unit$new);
            return $2675;
        }));
        return $2674;
    };
    const IO$put_string = x0 => IO$put_string$(x0);

    function IO$print$(_text$1) {
        var $2676 = IO$put_string$((_text$1 + "\u{a}"));
        return $2676;
    };
    const IO$print = x0 => IO$print$(x0);
    const Bits$e = '';
    const Bits$o = a0 => (a0 + '0');

    function Word$subber$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $2678 = self.pred;
                var $2679 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2681 = self.pred;
                            var $2682 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2684 = Word$i$(Word$subber$(_a$pred$10, $2681, Bool$true));
                                    var $2683 = $2684;
                                } else {
                                    var $2685 = Word$o$(Word$subber$(_a$pred$10, $2681, Bool$false));
                                    var $2683 = $2685;
                                };
                                return $2683;
                            });
                            var $2680 = $2682;
                            break;
                        case 'Word.i':
                            var $2686 = self.pred;
                            var $2687 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2689 = Word$o$(Word$subber$(_a$pred$10, $2686, Bool$true));
                                    var $2688 = $2689;
                                } else {
                                    var $2690 = Word$i$(Word$subber$(_a$pred$10, $2686, Bool$true));
                                    var $2688 = $2690;
                                };
                                return $2688;
                            });
                            var $2680 = $2687;
                            break;
                        case 'Word.e':
                            var $2691 = (_a$pred$8 => {
                                var $2692 = Word$e;
                                return $2692;
                            });
                            var $2680 = $2691;
                            break;
                    };
                    var $2680 = $2680($2678);
                    return $2680;
                });
                var $2677 = $2679;
                break;
            case 'Word.i':
                var $2693 = self.pred;
                var $2694 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2696 = self.pred;
                            var $2697 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2699 = Word$o$(Word$subber$(_a$pred$10, $2696, Bool$false));
                                    var $2698 = $2699;
                                } else {
                                    var $2700 = Word$i$(Word$subber$(_a$pred$10, $2696, Bool$false));
                                    var $2698 = $2700;
                                };
                                return $2698;
                            });
                            var $2695 = $2697;
                            break;
                        case 'Word.i':
                            var $2701 = self.pred;
                            var $2702 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2704 = Word$i$(Word$subber$(_a$pred$10, $2701, Bool$true));
                                    var $2703 = $2704;
                                } else {
                                    var $2705 = Word$o$(Word$subber$(_a$pred$10, $2701, Bool$false));
                                    var $2703 = $2705;
                                };
                                return $2703;
                            });
                            var $2695 = $2702;
                            break;
                        case 'Word.e':
                            var $2706 = (_a$pred$8 => {
                                var $2707 = Word$e;
                                return $2707;
                            });
                            var $2695 = $2706;
                            break;
                    };
                    var $2695 = $2695($2693);
                    return $2695;
                });
                var $2677 = $2694;
                break;
            case 'Word.e':
                var $2708 = (_b$5 => {
                    var $2709 = Word$e;
                    return $2709;
                });
                var $2677 = $2708;
                break;
        };
        var $2677 = $2677(_b$3);
        return $2677;
    };
    const Word$subber = x0 => x1 => x2 => Word$subber$(x0, x1, x2);

    function Word$sub$(_a$2, _b$3) {
        var $2710 = Word$subber$(_a$2, _b$3, Bool$false);
        return $2710;
    };
    const Word$sub = x0 => x1 => Word$sub$(x0, x1);
    const U16$sub = a0 => a1 => ((a0 - a1) & 0xFFFF);

    function Word$adder$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $2712 = self.pred;
                var $2713 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2715 = self.pred;
                            var $2716 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2718 = Word$i$(Word$adder$(_a$pred$10, $2715, Bool$false));
                                    var $2717 = $2718;
                                } else {
                                    var $2719 = Word$o$(Word$adder$(_a$pred$10, $2715, Bool$false));
                                    var $2717 = $2719;
                                };
                                return $2717;
                            });
                            var $2714 = $2716;
                            break;
                        case 'Word.i':
                            var $2720 = self.pred;
                            var $2721 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2723 = Word$o$(Word$adder$(_a$pred$10, $2720, Bool$true));
                                    var $2722 = $2723;
                                } else {
                                    var $2724 = Word$i$(Word$adder$(_a$pred$10, $2720, Bool$false));
                                    var $2722 = $2724;
                                };
                                return $2722;
                            });
                            var $2714 = $2721;
                            break;
                        case 'Word.e':
                            var $2725 = (_a$pred$8 => {
                                var $2726 = Word$e;
                                return $2726;
                            });
                            var $2714 = $2725;
                            break;
                    };
                    var $2714 = $2714($2712);
                    return $2714;
                });
                var $2711 = $2713;
                break;
            case 'Word.i':
                var $2727 = self.pred;
                var $2728 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2730 = self.pred;
                            var $2731 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2733 = Word$o$(Word$adder$(_a$pred$10, $2730, Bool$true));
                                    var $2732 = $2733;
                                } else {
                                    var $2734 = Word$i$(Word$adder$(_a$pred$10, $2730, Bool$false));
                                    var $2732 = $2734;
                                };
                                return $2732;
                            });
                            var $2729 = $2731;
                            break;
                        case 'Word.i':
                            var $2735 = self.pred;
                            var $2736 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2738 = Word$i$(Word$adder$(_a$pred$10, $2735, Bool$true));
                                    var $2737 = $2738;
                                } else {
                                    var $2739 = Word$o$(Word$adder$(_a$pred$10, $2735, Bool$true));
                                    var $2737 = $2739;
                                };
                                return $2737;
                            });
                            var $2729 = $2736;
                            break;
                        case 'Word.e':
                            var $2740 = (_a$pred$8 => {
                                var $2741 = Word$e;
                                return $2741;
                            });
                            var $2729 = $2740;
                            break;
                    };
                    var $2729 = $2729($2727);
                    return $2729;
                });
                var $2711 = $2728;
                break;
            case 'Word.e':
                var $2742 = (_b$5 => {
                    var $2743 = Word$e;
                    return $2743;
                });
                var $2711 = $2742;
                break;
        };
        var $2711 = $2711(_b$3);
        return $2711;
    };
    const Word$adder = x0 => x1 => x2 => Word$adder$(x0, x1, x2);

    function Word$add$(_a$2, _b$3) {
        var $2744 = Word$adder$(_a$2, _b$3, Bool$false);
        return $2744;
    };
    const Word$add = x0 => x1 => Word$add$(x0, x1);
    const U16$add = a0 => a1 => ((a0 + a1) & 0xFFFF);

    function Pair$fst$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $2746 = self.fst;
                var $2747 = $2746;
                var $2745 = $2747;
                break;
        };
        return $2745;
    };
    const Pair$fst = x0 => Pair$fst$(x0);
    const Nat$div = a0 => a1 => (a0 / a1);
    const Bits$i = a0 => (a0 + '1');

    function Kindelia$serialize$fixlen$(_size$1, _value$2) {
        var self = _size$1;
        if (self === 0n) {
            var $2749 = Bits$e;
            var $2748 = $2749;
        } else {
            var $2750 = (self - 1n);
            var self = ((_value$2 % 2n) === 0n);
            if (self) {
                var $2752 = (Kindelia$serialize$fixlen$($2750, (_value$2 / 2n)) + '0');
                var $2751 = $2752;
            } else {
                var $2753 = (Kindelia$serialize$fixlen$($2750, (_value$2 / 2n)) + '1');
                var $2751 = $2753;
            };
            var $2748 = $2751;
        };
        return $2748;
    };
    const Kindelia$serialize$fixlen = x0 => x1 => Kindelia$serialize$fixlen$(x0, x1);

    function Word$fold$(_nil$3, _w0$4, _w1$5, _word$6) {
        var self = _word$6;
        switch (self._) {
            case 'Word.o':
                var $2755 = self.pred;
                var $2756 = _w0$4(Word$fold$(_nil$3, _w0$4, _w1$5, $2755));
                var $2754 = $2756;
                break;
            case 'Word.i':
                var $2757 = self.pred;
                var $2758 = _w1$5(Word$fold$(_nil$3, _w0$4, _w1$5, $2757));
                var $2754 = $2758;
                break;
            case 'Word.e':
                var $2759 = _nil$3;
                var $2754 = $2759;
                break;
        };
        return $2754;
    };
    const Word$fold = x0 => x1 => x2 => x3 => Word$fold$(x0, x1, x2, x3);

    function Word$to_nat$(_word$2) {
        var $2760 = Word$fold$(0n, a1 => (2n * a1), (_x$4 => {
            var $2761 = Nat$succ$((2n * _x$4));
            return $2761;
        }), _word$2);
        return $2760;
    };
    const Word$to_nat = x0 => Word$to_nat$(x0);
    const U16$to_nat = a0 => (BigInt(a0));
    const Bits$concat = a0 => a1 => (a1 + a0);

    function Kindelia$serialize$name$(_name$1) {
        var self = _name$1;
        if (self.length === 0) {
            var $2763 = (Bits$e + '0');
            var $2762 = $2763;
        } else {
            var $2764 = self.charCodeAt(0);
            var $2765 = self.slice(1);
            var self = U16$btw$(48, $2764, 57);
            if (self) {
                var $2767 = (($2764 - 48) & 0xFFFF);
                var _numb$4 = $2767;
            } else {
                var self = U16$btw$(65, $2764, 90);
                if (self) {
                    var $2769 = (((($2764 - 65) & 0xFFFF) + 10) & 0xFFFF);
                    var $2768 = $2769;
                } else {
                    var self = U16$btw$(97, $2764, 122);
                    if (self) {
                        var $2771 = (((($2764 - 97) & 0xFFFF) + 36) & 0xFFFF);
                        var $2770 = $2771;
                    } else {
                        var self = U16$btw$(95, $2764, 95);
                        if (self) {
                            var $2773 = 62;
                            var $2772 = $2773;
                        } else {
                            var $2774 = 63;
                            var $2772 = $2774;
                        };
                        var $2770 = $2772;
                    };
                    var $2768 = $2770;
                };
                var _numb$4 = $2768;
            };
            var _head$5 = Kindelia$serialize$fixlen$(6n, (BigInt(_numb$4)));
            var _tail$6 = Kindelia$serialize$name$($2765);
            var $2766 = ((_tail$6 + _head$5) + '1');
            var $2762 = $2766;
        };
        return $2762;
    };
    const Kindelia$serialize$name = x0 => Kindelia$serialize$name$(x0);

    function Kindelia$serialize$list$(_item$2, _list$3) {
        var self = _list$3;
        switch (self._) {
            case 'List.cons':
                var $2776 = self.head;
                var $2777 = self.tail;
                var $2778 = ((Kindelia$serialize$list$(_item$2, $2777) + _item$2($2776)) + '1');
                var $2775 = $2778;
                break;
            case 'List.nil':
                var $2779 = (Bits$e + '0');
                var $2775 = $2779;
                break;
        };
        return $2775;
    };
    const Kindelia$serialize$list = x0 => x1 => Kindelia$serialize$list$(x0, x1);

    function Kindelia$serialize$pair$(_first$3, _second$4, _pair$5) {
        var self = _pair$5;
        switch (self._) {
            case 'Pair.new':
                var $2781 = self.fst;
                var $2782 = self.snd;
                var _fst$8 = _first$3($2781);
                var _snd$9 = _second$4($2782);
                var $2783 = (_snd$9 + _fst$8);
                var $2780 = $2783;
                break;
        };
        return $2780;
    };
    const Kindelia$serialize$pair = x0 => x1 => x2 => Kindelia$serialize$pair$(x0, x1, x2);

    function Kindelia$serialize$type$(_world$1, _typ$2) {
        var self = _typ$2;
        switch (self._) {
            case 'Kindelia.Type.data':
                var $2785 = self.name;
                var $2786 = ((Kindelia$serialize$name$($2785) + '0') + '1');
                var $2784 = $2786;
                break;
            case 'Kindelia.Type.effe':
                var $2787 = self.rety;
                var $2788 = ((Kindelia$serialize$type$(_world$1, $2787) + '1') + '0');
                var $2784 = $2788;
                break;
            case 'Kindelia.Type.word':
                var $2789 = ((Bits$e + '0') + '0');
                var $2784 = $2789;
                break;
        };
        return $2784;
    };
    const Kindelia$serialize$type = x0 => x1 => Kindelia$serialize$type$(x0, x1);

    function Kindelia$serialize$constructor$(_world$1, _ctor$2) {
        var self = _ctor$2;
        switch (self._) {
            case 'Kindelia.Constructor.new':
                var $2791 = self.name;
                var $2792 = self.fprm;
                var _name$5 = Kindelia$serialize$name$($2791);
                var _fprm$6 = Kindelia$serialize$list$(Kindelia$serialize$pair(Kindelia$serialize$name)(Kindelia$serialize$type(_world$1)), $2792);
                var $2793 = (_fprm$6 + _name$5);
                var $2790 = $2793;
                break;
        };
        return $2790;
    };
    const Kindelia$serialize$constructor = x0 => x1 => Kindelia$serialize$constructor$(x0, x1);

    function Kindelia$serialize$data$(_world$1, _data$2) {
        var self = _data$2;
        switch (self._) {
            case 'Kindelia.Data.new':
                var $2795 = self.name;
                var $2796 = self.constructors;
                var _name$5 = Kindelia$serialize$name$($2795);
                var _ctrs$6 = Kindelia$serialize$list$(Kindelia$serialize$constructor(_world$1), $2796);
                var $2797 = (_ctrs$6 + _name$5);
                var $2794 = $2797;
                break;
        };
        return $2794;
    };
    const Kindelia$serialize$data = x0 => x1 => Kindelia$serialize$data$(x0, x1);

    function List$mapped$(_as$2, _f$4) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $2799 = self.head;
                var $2800 = self.tail;
                var $2801 = List$cons$(_f$4($2799), List$mapped$($2800, _f$4));
                var $2798 = $2801;
                break;
            case 'List.nil':
                var $2802 = List$nil;
                var $2798 = $2802;
                break;
        };
        return $2798;
    };
    const List$mapped = x0 => x1 => List$mapped$(x0, x1);

    function List$find_index$go$(_xs$2, _f$3, _i$4) {
        var List$find_index$go$ = (_xs$2, _f$3, _i$4) => ({
            ctr: 'TCO',
            arg: [_xs$2, _f$3, _i$4]
        });
        var List$find_index$go = _xs$2 => _f$3 => _i$4 => List$find_index$go$(_xs$2, _f$3, _i$4);
        var arg = [_xs$2, _f$3, _i$4];
        while (true) {
            let [_xs$2, _f$3, _i$4] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $2803 = self.head;
                        var $2804 = self.tail;
                        var self = _f$3($2803);
                        if (self) {
                            var $2806 = Maybe$some$(_i$4);
                            var $2805 = $2806;
                        } else {
                            var $2807 = List$find_index$go$($2804, _f$3, Nat$succ$(_i$4));
                            var $2805 = $2807;
                        };
                        return $2805;
                    case 'List.nil':
                        var $2808 = Maybe$none;
                        return $2808;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$find_index$go = x0 => x1 => x2 => List$find_index$go$(x0, x1, x2);

    function List$find_index$(_xs$2, _f$3) {
        var $2809 = List$find_index$go$(_xs$2, _f$3, Nat$zero);
        return $2809;
    };
    const List$find_index = x0 => x1 => List$find_index$(x0, x1);
    const String$eql = a0 => a1 => (a0 === a1);

    function Kindelia$serialize$varlen$go$(_value$1) {
        var self = _value$1;
        if (self === 0n) {
            var $2811 = Bits$e;
            var $2810 = $2811;
        } else {
            var $2812 = (self - 1n);
            var self = (_value$1 === 1n);
            if (self) {
                var $2814 = (Bits$e + '0');
                var $2813 = $2814;
            } else {
                var self = ((_value$1 % 2n) === 0n);
                if (self) {
                    var $2816 = ((Kindelia$serialize$varlen$go$((_value$1 / 2n)) + '0') + '1');
                    var $2815 = $2816;
                } else {
                    var $2817 = ((Kindelia$serialize$varlen$go$((_value$1 / 2n)) + '1') + '1');
                    var $2815 = $2817;
                };
                var $2813 = $2815;
            };
            var $2810 = $2813;
        };
        return $2810;
    };
    const Kindelia$serialize$varlen$go = x0 => Kindelia$serialize$varlen$go$(x0);

    function Kindelia$serialize$varlen$(_value$1) {
        var $2818 = Kindelia$serialize$varlen$go$((_value$1 + 1n));
        return $2818;
    };
    const Kindelia$serialize$varlen = x0 => Kindelia$serialize$varlen$(x0);

    function Kindelia$serialize$name$local$(_world$1, _vars$2, _name$3) {
        var self = List$find_index$(_vars$2, a1 => (_name$3 === a1));
        switch (self._) {
            case 'Maybe.some':
                var $2820 = self.value;
                var $2821 = Kindelia$serialize$varlen$($2820);
                var $2819 = $2821;
                break;
            case 'Maybe.none':
                var $2822 = Bits$e;
                var $2819 = $2822;
                break;
        };
        return $2819;
    };
    const Kindelia$serialize$name$local = x0 => x1 => x2 => Kindelia$serialize$name$local$(x0, x1, x2);

    function List$map$(_f$3, _as$4) {
        var self = _as$4;
        switch (self._) {
            case 'List.cons':
                var $2824 = self.head;
                var $2825 = self.tail;
                var $2826 = List$cons$(_f$3($2824), List$map$(_f$3, $2825));
                var $2823 = $2826;
                break;
            case 'List.nil':
                var $2827 = List$nil;
                var $2823 = $2827;
                break;
        };
        return $2823;
    };
    const List$map = x0 => x1 => List$map$(x0, x1);

    function List$concat$(_as$2, _bs$3) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $2829 = self.head;
                var $2830 = self.tail;
                var $2831 = List$cons$($2829, List$concat$($2830, _bs$3));
                var $2828 = $2831;
                break;
            case 'List.nil':
                var $2832 = _bs$3;
                var $2828 = $2832;
                break;
        };
        return $2828;
    };
    const List$concat = x0 => x1 => List$concat$(x0, x1);

    function Kindelia$serialize$cases$(_world$1, _vars$2, _name$3, _ctors$4, _cases$5) {
        var self = _ctors$4;
        switch (self._) {
            case 'List.cons':
                var $2834 = self.head;
                var $2835 = self.tail;
                var self = _cases$5;
                switch (self._) {
                    case 'List.cons':
                        var $2837 = self.head;
                        var $2838 = self.tail;
                        var _flds$10 = List$map$((_fprm$10 => {
                            var $2840 = (_name$3 + ("." + (() => {
                                var self = _fprm$10;
                                switch (self._) {
                                    case 'Pair.new':
                                        var $2841 = self.fst;
                                        var $2842 = $2841;
                                        return $2842;
                                };
                            })()));
                            return $2840;
                        }), (() => {
                            var self = $2834;
                            switch (self._) {
                                case 'Kindelia.Constructor.new':
                                    var $2843 = self.fprm;
                                    var $2844 = $2843;
                                    return $2844;
                            };
                        })());
                        var _head$11 = Kindelia$serialize$term$(_world$1, List$concat$(List$reverse$(_flds$10), _vars$2), $2837);
                        var _tail$12 = Kindelia$serialize$cases$(_world$1, _vars$2, _name$3, $2835, $2838);
                        var $2839 = (_tail$12 + _head$11);
                        var $2836 = $2839;
                        break;
                    case 'List.nil':
                        var $2845 = Bits$e;
                        var $2836 = $2845;
                        break;
                };
                var $2833 = $2836;
                break;
            case 'List.nil':
                var self = _cases$5;
                switch (self._) {
                    case 'List.nil':
                    case 'List.cons':
                        var $2847 = Bits$e;
                        var $2846 = $2847;
                        break;
                };
                var $2833 = $2846;
                break;
        };
        return $2833;
    };
    const Kindelia$serialize$cases = x0 => x1 => x2 => x3 => x4 => Kindelia$serialize$cases$(x0, x1, x2, x3, x4);

    function Kindelia$get_constructors$(_world$1, _name$2) {
        var self = Kindelia$get_data$(_world$1, _name$2);
        switch (self._) {
            case 'Maybe.some':
                var $2849 = self.value;
                var $2850 = Maybe$some$((() => {
                    var self = $2849;
                    switch (self._) {
                        case 'Kindelia.Data.new':
                            var $2851 = self.constructors;
                            var $2852 = $2851;
                            return $2852;
                    };
                })());
                var $2848 = $2850;
                break;
            case 'Maybe.none':
                var $2853 = Maybe$none;
                var $2848 = $2853;
                break;
        };
        return $2848;
    };
    const Kindelia$get_constructors = x0 => x1 => Kindelia$get_constructors$(x0, x1);
    const U64$to_nat = a0 => (a0);

    function Kindelia$serialize$term$(_world$1, _vars$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kindelia.Term.var':
                var $2855 = self.name;
                var $2856 = (Kindelia$serialize$name$local$(_world$1, _vars$2, $2855) + '0');
                var $2854 = $2856;
                break;
            case 'Kindelia.Term.call':
                var $2857 = self.bond;
                var $2858 = self.args;
                var _bond$6 = Kindelia$serialize$name$($2857);
                var _args$7 = Kindelia$serialize$list$(Kindelia$serialize$term(_world$1)(_vars$2), $2858);
                var $2859 = (((((_args$7 + _bond$6) + '0') + '0') + '1') + '1');
                var $2854 = $2859;
                break;
            case 'Kindelia.Term.let':
                var $2860 = self.name;
                var $2861 = self.type;
                var $2862 = self.expr;
                var $2863 = self.body;
                var _name$8 = Kindelia$serialize$name$($2860);
                var _type$9 = Kindelia$serialize$type$(_world$1, $2861);
                var _expr$10 = Kindelia$serialize$term$(_world$1, _vars$2, $2862);
                var _body$11 = Kindelia$serialize$term$(_world$1, List$cons$($2860, _vars$2), $2863);
                var $2864 = (((((((_body$11 + _expr$10) + _type$9) + _name$8) + '0') + '0') + '0') + '1');
                var $2854 = $2864;
                break;
            case 'Kindelia.Term.create':
                var $2865 = self.ctor;
                var $2866 = self.vals;
                var _ctor$6 = Kindelia$serialize$name$($2865);
                var _vals$7 = Kindelia$serialize$list$(Kindelia$serialize$term(_world$1)(_vars$2), $2866);
                var $2867 = (((((_vals$7 + _ctor$6) + '0') + '1') + '0') + '1');
                var $2854 = $2867;
                break;
            case 'Kindelia.Term.match':
                var $2868 = self.name;
                var $2869 = self.data;
                var $2870 = self.cses;
                var _name$7 = Kindelia$serialize$name$local$(_world$1, _vars$2, $2868);
                var _data$8 = Kindelia$serialize$name$($2869);
                var _cses$9 = Kindelia$serialize$cases$(_world$1, _vars$2, $2868, Maybe$default$(Kindelia$get_constructors$(_world$1, $2869), List$nil), $2870);
                var $2871 = ((((((_cses$9 + _data$8) + _name$7) + '0') + '1') + '1') + '1');
                var $2854 = $2871;
                break;
            case 'Kindelia.Term.word':
                var $2872 = self.numb;
                var _numb$5 = Kindelia$serialize$fixlen$(64n, ($2872));
                var $2873 = ((((_numb$5 + '1') + '0') + '0') + '1');
                var $2854 = $2873;
                break;
            case 'Kindelia.Term.compare':
                var $2874 = self.val0;
                var $2875 = self.val1;
                var $2876 = self.iflt;
                var $2877 = self.ifeq;
                var $2878 = self.ifgt;
                var _val0$9 = Kindelia$serialize$term$(_world$1, _vars$2, $2874);
                var _val1$10 = Kindelia$serialize$term$(_world$1, _vars$2, $2875);
                var _iflt$11 = Kindelia$serialize$term$(_world$1, _vars$2, $2876);
                var _ifeq$12 = Kindelia$serialize$term$(_world$1, _vars$2, $2877);
                var _ifgt$13 = Kindelia$serialize$term$(_world$1, _vars$2, $2878);
                var $2879 = ((((((((_ifgt$13 + _ifeq$12) + _iflt$11) + _val1$10) + _val0$9) + '1') + '0') + '1') + '1');
                var $2854 = $2879;
                break;
            case 'Kindelia.Term.operate':
                var $2880 = self.oper;
                var $2881 = self.val0;
                var $2882 = self.val1;
                var _oper$7 = Kindelia$serialize$fixlen$(3n, (() => {
                    var self = $2880;
                    switch (self._) {
                        case 'Kindelia.Operation.add':
                            var $2884 = 0n;
                            return $2884;
                        case 'Kindelia.Operation.sub':
                            var $2885 = 1n;
                            return $2885;
                        case 'Kindelia.Operation.mul':
                            var $2886 = 2n;
                            return $2886;
                        case 'Kindelia.Operation.div':
                            var $2887 = 3n;
                            return $2887;
                        case 'Kindelia.Operation.mod':
                            var $2888 = 4n;
                            return $2888;
                        case 'Kindelia.Operation.or':
                            var $2889 = 5n;
                            return $2889;
                        case 'Kindelia.Operation.and':
                            var $2890 = 6n;
                            return $2890;
                        case 'Kindelia.Operation.xor':
                            var $2891 = 7n;
                            return $2891;
                    };
                })());
                var _val0$8 = Kindelia$serialize$term$(_world$1, _vars$2, $2881);
                var _val1$9 = Kindelia$serialize$term$(_world$1, _vars$2, $2882);
                var $2883 = ((((((_val1$9 + _val0$8) + _oper$7) + '1') + '1') + '0') + '1');
                var $2854 = $2883;
                break;
            case 'Kindelia.Term.set':
                var $2892 = self.file;
                var $2893 = self.expr;
                var $2894 = self.body;
                var _slit$7 = Kindelia$serialize$name$($2892);
                var _expr$8 = Kindelia$serialize$term$(_world$1, _vars$2, $2893);
                var _body$9 = Kindelia$serialize$term$(_world$1, _vars$2, $2894);
                var $2895 = ((((((((_body$9 + _expr$8) + _slit$7) + '0') + '0') + '1') + '1') + '1') + '1');
                var $2854 = $2895;
                break;
            case 'Kindelia.Term.get':
                var $2896 = self.name;
                var $2897 = self.file;
                var $2898 = self.body;
                var _slit$7 = Kindelia$serialize$name$($2897);
                var _name$8 = Kindelia$serialize$name$($2896);
                var _body$9 = Kindelia$serialize$term$(_world$1, List$cons$($2896, _vars$2), $2898);
                var $2899 = ((((((((_body$9 + _name$8) + _slit$7) + '0') + '1') + '1') + '1') + '1') + '1');
                var $2854 = $2899;
                break;
            case 'Kindelia.Term.bind':
                var $2900 = self.name;
                var $2901 = self.type;
                var $2902 = self.expr;
                var $2903 = self.body;
                var _name$8 = Kindelia$serialize$name$($2900);
                var _type$9 = Kindelia$serialize$type$(_world$1, $2901);
                var _expr$10 = Kindelia$serialize$term$(_world$1, _vars$2, $2902);
                var _body$11 = Kindelia$serialize$term$(_world$1, List$cons$($2900, _vars$2), $2903);
                var $2904 = (((((((((_body$11 + _expr$10) + _type$9) + _name$8) + '1') + '0') + '1') + '1') + '1') + '1');
                var $2854 = $2904;
                break;
            case 'Kindelia.Term.return':
                var $2905 = self.expr;
                var _expr$5 = Kindelia$serialize$term$(_world$1, _vars$2, $2905);
                var $2906 = ((((((_expr$5 + '1') + '1') + '1') + '1') + '1') + '1');
                var $2854 = $2906;
                break;
        };
        return $2854;
    };
    const Kindelia$serialize$term = x0 => x1 => x2 => Kindelia$serialize$term$(x0, x1, x2);

    function Kindelia$serialize$bond$(_world$1, _bond$2) {
        var self = _bond$2;
        switch (self._) {
            case 'Kindelia.Bond.new':
                var $2908 = self.name;
                var $2909 = self.iprm;
                var $2910 = self.otyp;
                var $2911 = self.main;
                var _name$7 = Kindelia$serialize$name$($2908);
                var _iprm$8 = Kindelia$serialize$list$(Kindelia$serialize$pair(Kindelia$serialize$name)(Kindelia$serialize$type(_world$1)), $2909);
                var _otyp$9 = Kindelia$serialize$type$(_world$1, $2910);
                var _inam$10 = List$reverse$(List$mapped$($2909, Pair$fst));
                var _main$11 = Kindelia$serialize$term$(_world$1, _inam$10, $2911);
                var $2912 = (((_main$11 + _otyp$9) + _iprm$8) + _name$7);
                var $2907 = $2912;
                break;
        };
        return $2907;
    };
    const Kindelia$serialize$bond = x0 => x1 => Kindelia$serialize$bond$(x0, x1);

    function Kindelia$serialize$file$(_world$1, _file$2) {
        var self = _file$2;
        switch (self._) {
            case 'Kindelia.File.new':
                var $2914 = self.name;
                var $2915 = self.ownr;
                var $2916 = self.type;
                var $2917 = self.expr;
                var _name$7 = Kindelia$serialize$name$($2914);
                var _ownr$8 = Kindelia$serialize$list$(Kindelia$serialize$name, $2915);
                var _type$9 = Kindelia$serialize$type$(_world$1, $2916);
                var _expr$10 = Kindelia$serialize$term$(_world$1, List$nil, $2917);
                var $2918 = (((_expr$10 + _type$9) + _ownr$8) + _name$7);
                var $2913 = $2918;
                break;
        };
        return $2913;
    };
    const Kindelia$serialize$file = x0 => x1 => Kindelia$serialize$file$(x0, x1);

    function Kindelia$serialize$eval$(_world$1, _eval$2) {
        var self = _eval$2;
        switch (self._) {
            case 'Kindelia.Eval.new':
                var $2920 = self.term;
                var $2921 = self.type;
                var _term$5 = Kindelia$serialize$term$(_world$1, List$nil, $2920);
                var _type$6 = Kindelia$serialize$type$(_world$1, $2921);
                var $2922 = (_type$6 + _term$5);
                var $2919 = $2922;
                break;
        };
        return $2919;
    };
    const Kindelia$serialize$eval = x0 => x1 => Kindelia$serialize$eval$(x0, x1);

    function Kindelia$serialize$transaction$(_world$1, _transaction$2) {
        var self = _transaction$2;
        switch (self._) {
            case 'Kindelia.Transaction.new_data':
                var $2924 = self.data;
                var _data$4 = Kindelia$serialize$data$(_world$1, $2924);
                var $2925 = ((_data$4 + '0') + '0');
                var $2923 = $2925;
                break;
            case 'Kindelia.Transaction.new_bond':
                var $2926 = self.bond;
                var _bond$4 = Kindelia$serialize$bond$(_world$1, $2926);
                var $2927 = ((_bond$4 + '0') + '1');
                var $2923 = $2927;
                break;
            case 'Kindelia.Transaction.new_file':
                var $2928 = self.file;
                var _file$4 = Kindelia$serialize$file$(_world$1, $2928);
                var $2929 = ((_file$4 + '1') + '0');
                var $2923 = $2929;
                break;
            case 'Kindelia.Transaction.new_eval':
                var $2930 = self.eval;
                var _term$4 = Kindelia$serialize$eval$(_world$1, $2930);
                var $2931 = ((_term$4 + '1') + '1');
                var $2923 = $2931;
                break;
        };
        return $2923;
    };
    const Kindelia$serialize$transaction = x0 => x1 => Kindelia$serialize$transaction$(x0, x1);

    function Kindelia$serialize$block$(_world$1, _block$2) {
        var self = _block$2;
        switch (self._) {
            case 'List.cons':
                var $2933 = self.head;
                var $2934 = self.tail;
                var _head$5 = Kindelia$serialize$transaction$(_world$1, $2933);
                var _tail$6 = Kindelia$serialize$block$(_world$1, $2934);
                var $2935 = (_tail$6 + _head$5);
                var $2932 = $2935;
                break;
            case 'List.nil':
                var $2936 = Bits$e;
                var $2932 = $2936;
                break;
        };
        return $2932;
    };
    const Kindelia$serialize$block = x0 => x1 => Kindelia$serialize$block$(x0, x1);

    function Bits$is_empty$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'e':
                var $2938 = Bool$true;
                var $2937 = $2938;
                break;
            case 'o':
            case 'i':
                var $2939 = Bool$false;
                var $2937 = $2939;
                break;
        };
        return $2937;
    };
    const Bits$is_empty = x0 => Bits$is_empty$(x0);

    function Kindelia$deserialize$fixlen$(_size$1, _bits$2) {
        var self = _size$1;
        if (self === 0n) {
            var $2941 = Pair$new$(_bits$2, 0n);
            var $2940 = $2941;
        } else {
            var $2942 = (self - 1n);
            var self = _bits$2;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $2944 = self.slice(0, -1);
                    var self = Kindelia$deserialize$fixlen$($2942, $2944);
                    switch (self._) {
                        case 'Pair.new':
                            var $2946 = self.fst;
                            var $2947 = self.snd;
                            var $2948 = Pair$new$($2946, ($2947 * 2n));
                            var $2945 = $2948;
                            break;
                    };
                    var $2943 = $2945;
                    break;
                case 'i':
                    var $2949 = self.slice(0, -1);
                    var self = Kindelia$deserialize$fixlen$($2942, $2949);
                    switch (self._) {
                        case 'Pair.new':
                            var $2951 = self.fst;
                            var $2952 = self.snd;
                            var $2953 = Pair$new$($2951, (($2952 * 2n) + 1n));
                            var $2950 = $2953;
                            break;
                    };
                    var $2943 = $2950;
                    break;
                case 'e':
                    var $2954 = Pair$new$(Bits$e, 0n);
                    var $2943 = $2954;
                    break;
            };
            var $2940 = $2943;
        };
        return $2940;
    };
    const Kindelia$deserialize$fixlen = x0 => x1 => Kindelia$deserialize$fixlen$(x0, x1);
    const U16$from_nat = a0 => (Number(a0) & 0xFFFF);

    function Kindelia$deserialize$name$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2956 = self.slice(0, -1);
                var $2957 = Pair$new$($2956, "");
                var $2955 = $2957;
                break;
            case 'i':
                var $2958 = self.slice(0, -1);
                var self = Kindelia$deserialize$fixlen$(6n, $2958);
                switch (self._) {
                    case 'Pair.new':
                        var $2960 = self.fst;
                        var $2961 = self.snd;
                        var self = Kindelia$deserialize$name$($2960);
                        switch (self._) {
                            case 'Pair.new':
                                var $2963 = self.fst;
                                var $2964 = self.snd;
                                var _numb$7 = (Number($2961) & 0xFFFF);
                                var self = U16$btw$(0, _numb$7, 9);
                                if (self) {
                                    var $2966 = ((_numb$7 + 48) & 0xFFFF);
                                    var _head$8 = $2966;
                                } else {
                                    var self = U16$btw$(10, _numb$7, 35);
                                    if (self) {
                                        var $2968 = ((((_numb$7 - 10) & 0xFFFF) + 65) & 0xFFFF);
                                        var $2967 = $2968;
                                    } else {
                                        var self = U16$btw$(36, _numb$7, 61);
                                        if (self) {
                                            var $2970 = ((((_numb$7 - 36) & 0xFFFF) + 97) & 0xFFFF);
                                            var $2969 = $2970;
                                        } else {
                                            var self = U16$btw$(62, _numb$7, 62);
                                            if (self) {
                                                var $2972 = 95;
                                                var $2971 = $2972;
                                            } else {
                                                var $2973 = 46;
                                                var $2971 = $2973;
                                            };
                                            var $2969 = $2971;
                                        };
                                        var $2967 = $2969;
                                    };
                                    var _head$8 = $2967;
                                };
                                var $2965 = Pair$new$($2963, String$cons$(_head$8, $2964));
                                var $2962 = $2965;
                                break;
                        };
                        var $2959 = $2962;
                        break;
                };
                var $2955 = $2959;
                break;
            case 'e':
                var $2974 = Pair$new$(Bits$e, "");
                var $2955 = $2974;
                break;
        };
        return $2955;
    };
    const Kindelia$deserialize$name = x0 => Kindelia$deserialize$name$(x0);

    function Kindelia$deserialize$list$(_item$2, _bits$3) {
        var self = _bits$3;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2976 = self.slice(0, -1);
                var $2977 = Pair$new$($2976, List$nil);
                var $2975 = $2977;
                break;
            case 'i':
                var $2978 = self.slice(0, -1);
                var self = _item$2($2978);
                switch (self._) {
                    case 'Pair.new':
                        var $2980 = self.fst;
                        var $2981 = self.snd;
                        var self = Kindelia$deserialize$list$(_item$2, $2980);
                        switch (self._) {
                            case 'Pair.new':
                                var $2983 = self.fst;
                                var $2984 = self.snd;
                                var $2985 = Pair$new$($2983, List$cons$($2981, $2984));
                                var $2982 = $2985;
                                break;
                        };
                        var $2979 = $2982;
                        break;
                };
                var $2975 = $2979;
                break;
            case 'e':
                var $2986 = Pair$new$(Bits$e, List$nil);
                var $2975 = $2986;
                break;
        };
        return $2975;
    };
    const Kindelia$deserialize$list = x0 => x1 => Kindelia$deserialize$list$(x0, x1);

    function Kindelia$deserialize$pair$(_first$3, _second$4, _bits$5) {
        var self = _first$3(_bits$5);
        switch (self._) {
            case 'Pair.new':
                var $2988 = self.fst;
                var $2989 = self.snd;
                var self = _second$4($2988);
                switch (self._) {
                    case 'Pair.new':
                        var $2991 = self.fst;
                        var $2992 = self.snd;
                        var $2993 = Pair$new$($2991, Pair$new$($2989, $2992));
                        var $2990 = $2993;
                        break;
                };
                var $2987 = $2990;
                break;
        };
        return $2987;
    };
    const Kindelia$deserialize$pair = x0 => x1 => x2 => Kindelia$deserialize$pair$(x0, x1, x2);

    function Kindelia$deserialize$type$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$fixlen$(2n, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $2995 = self.fst;
                var $2996 = self.snd;
                var self = ($2996 === 0n);
                if (self) {
                    var $2998 = Pair$new$($2995, Kindelia$Type$word);
                    var $2997 = $2998;
                } else {
                    var self = ($2996 === 1n);
                    if (self) {
                        var self = Kindelia$deserialize$name$($2995);
                        switch (self._) {
                            case 'Pair.new':
                                var $3001 = self.fst;
                                var $3002 = self.snd;
                                var $3003 = Pair$new$($3001, Kindelia$Type$data$($3002));
                                var $3000 = $3003;
                                break;
                        };
                        var $2999 = $3000;
                    } else {
                        var self = ($2996 === 2n);
                        if (self) {
                            var self = Kindelia$deserialize$type$(_world$1, $2995);
                            switch (self._) {
                                case 'Pair.new':
                                    var $3006 = self.fst;
                                    var $3007 = self.snd;
                                    var $3008 = Pair$new$($3006, Kindelia$Type$effe$($3007));
                                    var $3005 = $3008;
                                    break;
                            };
                            var $3004 = $3005;
                        } else {
                            var $3009 = Pair$new$($2995, Kindelia$Type$word);
                            var $3004 = $3009;
                        };
                        var $2999 = $3004;
                    };
                    var $2997 = $2999;
                };
                var $2994 = $2997;
                break;
        };
        return $2994;
    };
    const Kindelia$deserialize$type = x0 => x1 => Kindelia$deserialize$type$(x0, x1);

    function Kindelia$deserialize$constructor$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3011 = self.fst;
                var $3012 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$pair(Kindelia$deserialize$name)(Kindelia$deserialize$type(_world$1)), $3011);
                switch (self._) {
                    case 'Pair.new':
                        var $3014 = self.fst;
                        var $3015 = self.snd;
                        var $3016 = Pair$new$($3014, Kindelia$Constructor$new$($3012, $3015));
                        var $3013 = $3016;
                        break;
                };
                var $3010 = $3013;
                break;
        };
        return $3010;
    };
    const Kindelia$deserialize$constructor = x0 => x1 => Kindelia$deserialize$constructor$(x0, x1);

    function Kindelia$deserialize$data$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3018 = self.fst;
                var $3019 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$constructor(_world$1), $3018);
                switch (self._) {
                    case 'Pair.new':
                        var $3021 = self.fst;
                        var $3022 = self.snd;
                        var $3023 = Pair$new$($3021, Kindelia$Data$new$($3019, $3022));
                        var $3020 = $3023;
                        break;
                };
                var $3017 = $3020;
                break;
        };
        return $3017;
    };
    const Kindelia$deserialize$data = x0 => x1 => Kindelia$deserialize$data$(x0, x1);
    const U64$from_nat = a0 => (a0 & 0xFFFFFFFFFFFFFFFFn);

    function Kindelia$deserialize$varlen$go$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3025 = self.slice(0, -1);
                var $3026 = Pair$new$($3025, 1n);
                var $3024 = $3026;
                break;
            case 'i':
                var $3027 = self.slice(0, -1);
                var self = $3027;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3029 = self.slice(0, -1);
                        var self = Kindelia$deserialize$varlen$go$($3029);
                        switch (self._) {
                            case 'Pair.new':
                                var $3031 = self.fst;
                                var $3032 = self.snd;
                                var $3033 = Pair$new$($3031, ($3032 * 2n));
                                var $3030 = $3033;
                                break;
                        };
                        var $3028 = $3030;
                        break;
                    case 'i':
                        var $3034 = self.slice(0, -1);
                        var self = Kindelia$deserialize$varlen$go$($3034);
                        switch (self._) {
                            case 'Pair.new':
                                var $3036 = self.fst;
                                var $3037 = self.snd;
                                var $3038 = Pair$new$($3036, (($3037 * 2n) + 1n));
                                var $3035 = $3038;
                                break;
                        };
                        var $3028 = $3035;
                        break;
                    case 'e':
                        var $3039 = Pair$new$($3027, 0n);
                        var $3028 = $3039;
                        break;
                };
                var $3024 = $3028;
                break;
            case 'e':
                var $3040 = Pair$new$(Bits$e, 0n);
                var $3024 = $3040;
                break;
        };
        return $3024;
    };
    const Kindelia$deserialize$varlen$go = x0 => Kindelia$deserialize$varlen$go$(x0);
    const Nat$sub = a0 => a1 => (a0 - a1 <= 0n ? 0n : a0 - a1);

    function Kindelia$deserialize$varlen$(_bits$1) {
        var self = Kindelia$deserialize$varlen$go$(_bits$1);
        switch (self._) {
            case 'Pair.new':
                var $3042 = self.fst;
                var $3043 = self.snd;
                var $3044 = Pair$new$($3042, ($3043 - 1n <= 0n ? 0n : $3043 - 1n));
                var $3041 = $3044;
                break;
        };
        return $3041;
    };
    const Kindelia$deserialize$varlen = x0 => Kindelia$deserialize$varlen$(x0);

    function List$get$(_index$2, _list$3) {
        var List$get$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$get = _index$2 => _list$3 => List$get$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $3045 = self.head;
                        var $3046 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $3048 = Maybe$some$($3045);
                            var $3047 = $3048;
                        } else {
                            var $3049 = (self - 1n);
                            var $3050 = List$get$($3049, $3046);
                            var $3047 = $3050;
                        };
                        return $3047;
                    case 'List.nil':
                        var $3051 = Maybe$none;
                        return $3051;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$get = x0 => x1 => List$get$(x0, x1);

    function Kindelia$deserialize$name$local$(_world$1, _vars$2, _bits$3) {
        var self = Kindelia$deserialize$varlen$(_bits$3);
        switch (self._) {
            case 'Pair.new':
                var $3053 = self.fst;
                var $3054 = self.snd;
                var $3055 = Pair$new$($3053, Maybe$default$(List$get$($3054, _vars$2), ""));
                var $3052 = $3055;
                break;
        };
        return $3052;
    };
    const Kindelia$deserialize$name$local = x0 => x1 => x2 => Kindelia$deserialize$name$local$(x0, x1, x2);

    function Kindelia$deserialize$cases$(_world$1, _vars$2, _name$3, _ctors$4, _bits$5) {
        var self = _ctors$4;
        switch (self._) {
            case 'List.cons':
                var $3057 = self.head;
                var $3058 = self.tail;
                var _flds$8 = List$map$((_fprm$8 => {
                    var $3060 = (_name$3 + ("." + (() => {
                        var self = _fprm$8;
                        switch (self._) {
                            case 'Pair.new':
                                var $3061 = self.fst;
                                var $3062 = $3061;
                                return $3062;
                        };
                    })()));
                    return $3060;
                }), (() => {
                    var self = $3057;
                    switch (self._) {
                        case 'Kindelia.Constructor.new':
                            var $3063 = self.fprm;
                            var $3064 = $3063;
                            return $3064;
                    };
                })());
                var self = Kindelia$deserialize$term$(_world$1, List$concat$(List$reverse$(_flds$8), _vars$2), _bits$5);
                switch (self._) {
                    case 'Pair.new':
                        var $3065 = self.fst;
                        var $3066 = self.snd;
                        var self = Kindelia$deserialize$cases$(_world$1, _vars$2, _name$3, $3058, $3065);
                        switch (self._) {
                            case 'Pair.new':
                                var $3068 = self.fst;
                                var $3069 = self.snd;
                                var $3070 = Pair$new$($3068, List$cons$($3066, $3069));
                                var $3067 = $3070;
                                break;
                        };
                        var $3059 = $3067;
                        break;
                };
                var $3056 = $3059;
                break;
            case 'List.nil':
                var $3071 = Pair$new$(_bits$5, List$nil);
                var $3056 = $3071;
                break;
        };
        return $3056;
    };
    const Kindelia$deserialize$cases = x0 => x1 => x2 => x3 => x4 => Kindelia$deserialize$cases$(x0, x1, x2, x3, x4);

    function Kindelia$deserialize$term$(_world$1, _vars$2, _bits$3) {
        var self = _bits$3;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3073 = self.slice(0, -1);
                var self = Kindelia$deserialize$name$local$(_world$1, _vars$2, $3073);
                switch (self._) {
                    case 'Pair.new':
                        var $3075 = self.fst;
                        var $3076 = self.snd;
                        var $3077 = Pair$new$($3075, Kindelia$Term$var$($3076));
                        var $3074 = $3077;
                        break;
                };
                var $3072 = $3074;
                break;
            case 'i':
                var $3078 = self.slice(0, -1);
                var self = Kindelia$deserialize$fixlen$(3n, $3078);
                switch (self._) {
                    case 'Pair.new':
                        var $3080 = self.fst;
                        var $3081 = self.snd;
                        var self = ($3081 === 0n);
                        if (self) {
                            var self = Kindelia$deserialize$name$($3080);
                            switch (self._) {
                                case 'Pair.new':
                                    var $3084 = self.fst;
                                    var $3085 = self.snd;
                                    var self = Kindelia$deserialize$type$(_world$1, $3084);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3087 = self.fst;
                                            var $3088 = self.snd;
                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3087);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3090 = self.fst;
                                                    var $3091 = self.snd;
                                                    var self = Kindelia$deserialize$term$(_world$1, List$cons$($3085, _vars$2), $3090);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3093 = self.fst;
                                                            var $3094 = self.snd;
                                                            var $3095 = Pair$new$($3093, Kindelia$Term$let$($3085, $3088, $3091, $3094));
                                                            var $3092 = $3095;
                                                            break;
                                                    };
                                                    var $3089 = $3092;
                                                    break;
                                            };
                                            var $3086 = $3089;
                                            break;
                                    };
                                    var $3083 = $3086;
                                    break;
                            };
                            var $3082 = $3083;
                        } else {
                            var self = ($3081 === 1n);
                            if (self) {
                                var self = Kindelia$deserialize$name$($3080);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3098 = self.fst;
                                        var $3099 = self.snd;
                                        var self = Kindelia$deserialize$list$(Kindelia$deserialize$term(_world$1)(_vars$2), $3098);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3101 = self.fst;
                                                var $3102 = self.snd;
                                                var $3103 = Pair$new$($3101, Kindelia$Term$call$($3099, $3102));
                                                var $3100 = $3103;
                                                break;
                                        };
                                        var $3097 = $3100;
                                        break;
                                };
                                var $3096 = $3097;
                            } else {
                                var self = ($3081 === 2n);
                                if (self) {
                                    var self = Kindelia$deserialize$name$($3080);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3106 = self.fst;
                                            var $3107 = self.snd;
                                            var self = Kindelia$deserialize$list$(Kindelia$deserialize$term(_world$1)(_vars$2), $3106);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3109 = self.fst;
                                                    var $3110 = self.snd;
                                                    var $3111 = Pair$new$($3109, Kindelia$Term$create$($3107, $3110));
                                                    var $3108 = $3111;
                                                    break;
                                            };
                                            var $3105 = $3108;
                                            break;
                                    };
                                    var $3104 = $3105;
                                } else {
                                    var self = ($3081 === 3n);
                                    if (self) {
                                        var self = Kindelia$deserialize$name$local$(_world$1, _vars$2, $3080);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3114 = self.fst;
                                                var $3115 = self.snd;
                                                var self = Kindelia$deserialize$name$($3114);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3117 = self.fst;
                                                        var $3118 = self.snd;
                                                        var self = Kindelia$deserialize$cases$(_world$1, _vars$2, $3115, Maybe$default$(Kindelia$get_constructors$(_world$1, $3118), List$nil), $3117);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3120 = self.fst;
                                                                var $3121 = self.snd;
                                                                var $3122 = Pair$new$($3120, Kindelia$Term$match$($3115, $3118, $3121));
                                                                var $3119 = $3122;
                                                                break;
                                                        };
                                                        var $3116 = $3119;
                                                        break;
                                                };
                                                var $3113 = $3116;
                                                break;
                                        };
                                        var $3112 = $3113;
                                    } else {
                                        var self = ($3081 === 4n);
                                        if (self) {
                                            var self = Kindelia$deserialize$fixlen$(64n, $3080);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3125 = self.fst;
                                                    var $3126 = self.snd;
                                                    var $3127 = Pair$new$($3125, Kindelia$Term$word$(($3126 & 0xFFFFFFFFFFFFFFFFn)));
                                                    var $3124 = $3127;
                                                    break;
                                            };
                                            var $3123 = $3124;
                                        } else {
                                            var self = ($3081 === 5n);
                                            if (self) {
                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3080);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3130 = self.fst;
                                                        var $3131 = self.snd;
                                                        var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3130);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3133 = self.fst;
                                                                var $3134 = self.snd;
                                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3133);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $3136 = self.fst;
                                                                        var $3137 = self.snd;
                                                                        var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3136);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3139 = self.fst;
                                                                                var $3140 = self.snd;
                                                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3139);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3142 = self.fst;
                                                                                        var $3143 = self.snd;
                                                                                        var $3144 = Pair$new$($3142, Kindelia$Term$compare$($3131, $3134, $3137, $3140, $3143));
                                                                                        var $3141 = $3144;
                                                                                        break;
                                                                                };
                                                                                var $3138 = $3141;
                                                                                break;
                                                                        };
                                                                        var $3135 = $3138;
                                                                        break;
                                                                };
                                                                var $3132 = $3135;
                                                                break;
                                                        };
                                                        var $3129 = $3132;
                                                        break;
                                                };
                                                var $3128 = $3129;
                                            } else {
                                                var self = ($3081 === 6n);
                                                if (self) {
                                                    var self = Kindelia$deserialize$fixlen$(3n, $3080);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3147 = self.fst;
                                                            var $3148 = self.snd;
                                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3147);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $3150 = self.fst;
                                                                    var $3151 = self.snd;
                                                                    var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3150);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $3153 = self.fst;
                                                                            var $3154 = self.snd;
                                                                            var self = ($3148 === 0n);
                                                                            if (self) {
                                                                                var $3156 = Kindelia$Operation$add;
                                                                                var _oper$13 = $3156;
                                                                            } else {
                                                                                var self = ($3148 === 1n);
                                                                                if (self) {
                                                                                    var $3158 = Kindelia$Operation$sub;
                                                                                    var $3157 = $3158;
                                                                                } else {
                                                                                    var self = ($3148 === 2n);
                                                                                    if (self) {
                                                                                        var $3160 = Kindelia$Operation$mul;
                                                                                        var $3159 = $3160;
                                                                                    } else {
                                                                                        var self = ($3148 === 3n);
                                                                                        if (self) {
                                                                                            var $3162 = Kindelia$Operation$div;
                                                                                            var $3161 = $3162;
                                                                                        } else {
                                                                                            var self = ($3148 === 4n);
                                                                                            if (self) {
                                                                                                var $3164 = Kindelia$Operation$mod;
                                                                                                var $3163 = $3164;
                                                                                            } else {
                                                                                                var self = ($3148 === 5n);
                                                                                                if (self) {
                                                                                                    var $3166 = Kindelia$Operation$or;
                                                                                                    var $3165 = $3166;
                                                                                                } else {
                                                                                                    var self = ($3148 === 6n);
                                                                                                    if (self) {
                                                                                                        var $3168 = Kindelia$Operation$and;
                                                                                                        var $3167 = $3168;
                                                                                                    } else {
                                                                                                        var self = ($3148 === 7n);
                                                                                                        if (self) {
                                                                                                            var $3170 = Kindelia$Operation$xor;
                                                                                                            var $3169 = $3170;
                                                                                                        } else {
                                                                                                            var $3171 = Kindelia$Operation$add;
                                                                                                            var $3169 = $3171;
                                                                                                        };
                                                                                                        var $3167 = $3169;
                                                                                                    };
                                                                                                    var $3165 = $3167;
                                                                                                };
                                                                                                var $3163 = $3165;
                                                                                            };
                                                                                            var $3161 = $3163;
                                                                                        };
                                                                                        var $3159 = $3161;
                                                                                    };
                                                                                    var $3157 = $3159;
                                                                                };
                                                                                var _oper$13 = $3157;
                                                                            };
                                                                            var $3155 = Pair$new$($3153, Kindelia$Term$operate$(_oper$13, $3151, $3154));
                                                                            var $3152 = $3155;
                                                                            break;
                                                                    };
                                                                    var $3149 = $3152;
                                                                    break;
                                                            };
                                                            var $3146 = $3149;
                                                            break;
                                                    };
                                                    var $3145 = $3146;
                                                } else {
                                                    var self = ($3081 === 7n);
                                                    if (self) {
                                                        var self = Kindelia$deserialize$fixlen$(2n, $3080);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3174 = self.fst;
                                                                var $3175 = self.snd;
                                                                var self = ($3175 === 0n);
                                                                if (self) {
                                                                    var self = Kindelia$deserialize$name$($3174);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $3178 = self.fst;
                                                                            var $3179 = self.snd;
                                                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3178);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $3181 = self.fst;
                                                                                    var $3182 = self.snd;
                                                                                    var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3181);
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $3184 = self.fst;
                                                                                            var $3185 = self.snd;
                                                                                            var $3186 = Pair$new$($3184, Kindelia$Term$set$($3179, $3182, $3185));
                                                                                            var $3183 = $3186;
                                                                                            break;
                                                                                    };
                                                                                    var $3180 = $3183;
                                                                                    break;
                                                                            };
                                                                            var $3177 = $3180;
                                                                            break;
                                                                    };
                                                                    var $3176 = $3177;
                                                                } else {
                                                                    var self = ($3175 === 1n);
                                                                    if (self) {
                                                                        var self = Kindelia$deserialize$name$($3174);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3189 = self.fst;
                                                                                var $3190 = self.snd;
                                                                                var self = Kindelia$deserialize$name$($3189);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3192 = self.fst;
                                                                                        var $3193 = self.snd;
                                                                                        var self = Kindelia$deserialize$term$(_world$1, List$cons$($3193, _vars$2), $3192);
                                                                                        switch (self._) {
                                                                                            case 'Pair.new':
                                                                                                var $3195 = self.fst;
                                                                                                var $3196 = self.snd;
                                                                                                var $3197 = Pair$new$($3195, Kindelia$Term$get$($3193, $3190, $3196));
                                                                                                var $3194 = $3197;
                                                                                                break;
                                                                                        };
                                                                                        var $3191 = $3194;
                                                                                        break;
                                                                                };
                                                                                var $3188 = $3191;
                                                                                break;
                                                                        };
                                                                        var $3187 = $3188;
                                                                    } else {
                                                                        var self = ($3175 === 2n);
                                                                        if (self) {
                                                                            var self = Kindelia$deserialize$name$($3174);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $3200 = self.fst;
                                                                                    var $3201 = self.snd;
                                                                                    var self = Kindelia$deserialize$type$(_world$1, $3200);
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $3203 = self.fst;
                                                                                            var $3204 = self.snd;
                                                                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3203);
                                                                                            switch (self._) {
                                                                                                case 'Pair.new':
                                                                                                    var $3206 = self.fst;
                                                                                                    var $3207 = self.snd;
                                                                                                    var self = Kindelia$deserialize$term$(_world$1, List$cons$($3201, _vars$2), $3206);
                                                                                                    switch (self._) {
                                                                                                        case 'Pair.new':
                                                                                                            var $3209 = self.fst;
                                                                                                            var $3210 = self.snd;
                                                                                                            var $3211 = Pair$new$($3209, Kindelia$Term$bind$($3201, $3204, $3207, $3210));
                                                                                                            var $3208 = $3211;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3205 = $3208;
                                                                                                    break;
                                                                                            };
                                                                                            var $3202 = $3205;
                                                                                            break;
                                                                                    };
                                                                                    var $3199 = $3202;
                                                                                    break;
                                                                            };
                                                                            var $3198 = $3199;
                                                                        } else {
                                                                            var self = ($3175 === 3n);
                                                                            if (self) {
                                                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3174);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3214 = self.fst;
                                                                                        var $3215 = self.snd;
                                                                                        var $3216 = Pair$new$($3214, Kindelia$Term$return$($3215));
                                                                                        var $3213 = $3216;
                                                                                        break;
                                                                                };
                                                                                var $3212 = $3213;
                                                                            } else {
                                                                                var $3217 = Pair$new$($3174, Kindelia$Term$word$(0n));
                                                                                var $3212 = $3217;
                                                                            };
                                                                            var $3198 = $3212;
                                                                        };
                                                                        var $3187 = $3198;
                                                                    };
                                                                    var $3176 = $3187;
                                                                };
                                                                var $3173 = $3176;
                                                                break;
                                                        };
                                                        var $3172 = $3173;
                                                    } else {
                                                        var $3218 = Pair$new$($3080, Kindelia$Term$word$(0n));
                                                        var $3172 = $3218;
                                                    };
                                                    var $3145 = $3172;
                                                };
                                                var $3128 = $3145;
                                            };
                                            var $3123 = $3128;
                                        };
                                        var $3112 = $3123;
                                    };
                                    var $3104 = $3112;
                                };
                                var $3096 = $3104;
                            };
                            var $3082 = $3096;
                        };
                        var $3079 = $3082;
                        break;
                };
                var $3072 = $3079;
                break;
            case 'e':
                var $3219 = Pair$new$(_bits$3, Kindelia$Term$word$(0n));
                var $3072 = $3219;
                break;
        };
        return $3072;
    };
    const Kindelia$deserialize$term = x0 => x1 => x2 => Kindelia$deserialize$term$(x0, x1, x2);

    function Kindelia$deserialize$bond$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3221 = self.fst;
                var $3222 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$pair(Kindelia$deserialize$name)(Kindelia$deserialize$type(_world$1)), $3221);
                switch (self._) {
                    case 'Pair.new':
                        var $3224 = self.fst;
                        var $3225 = self.snd;
                        var self = Kindelia$deserialize$type$(_world$1, $3224);
                        switch (self._) {
                            case 'Pair.new':
                                var $3227 = self.fst;
                                var $3228 = self.snd;
                                var _inam$9 = List$reverse$(List$mapped$($3225, Pair$fst));
                                var self = Kindelia$deserialize$term$(_world$1, _inam$9, $3227);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3230 = self.fst;
                                        var $3231 = self.snd;
                                        var $3232 = Pair$new$($3230, Kindelia$Bond$new$($3222, $3225, $3228, $3231));
                                        var $3229 = $3232;
                                        break;
                                };
                                var $3226 = $3229;
                                break;
                        };
                        var $3223 = $3226;
                        break;
                };
                var $3220 = $3223;
                break;
        };
        return $3220;
    };
    const Kindelia$deserialize$bond = x0 => x1 => Kindelia$deserialize$bond$(x0, x1);

    function Kindelia$deserialize$file$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3234 = self.fst;
                var $3235 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$name, $3234);
                switch (self._) {
                    case 'Pair.new':
                        var $3237 = self.fst;
                        var $3238 = self.snd;
                        var self = Kindelia$deserialize$type$(_world$1, $3237);
                        switch (self._) {
                            case 'Pair.new':
                                var $3240 = self.fst;
                                var $3241 = self.snd;
                                var self = Kindelia$deserialize$term$(_world$1, List$nil, $3240);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3243 = self.fst;
                                        var $3244 = self.snd;
                                        var $3245 = Pair$new$($3243, Kindelia$File$new$($3235, $3238, $3241, $3244));
                                        var $3242 = $3245;
                                        break;
                                };
                                var $3239 = $3242;
                                break;
                        };
                        var $3236 = $3239;
                        break;
                };
                var $3233 = $3236;
                break;
        };
        return $3233;
    };
    const Kindelia$deserialize$file = x0 => x1 => Kindelia$deserialize$file$(x0, x1);

    function Kindelia$deserialize$eval$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$term$(_world$1, List$nil, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3247 = self.fst;
                var $3248 = self.snd;
                var self = Kindelia$deserialize$type$(_world$1, $3247);
                switch (self._) {
                    case 'Pair.new':
                        var $3250 = self.fst;
                        var $3251 = self.snd;
                        var $3252 = Pair$new$($3250, Kindelia$Eval$new$($3248, $3251));
                        var $3249 = $3252;
                        break;
                };
                var $3246 = $3249;
                break;
        };
        return $3246;
    };
    const Kindelia$deserialize$eval = x0 => x1 => Kindelia$deserialize$eval$(x0, x1);

    function Kindelia$deserialize$transaction$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$fixlen$(2n, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3254 = self.fst;
                var $3255 = self.snd;
                var self = ($3255 === 0n);
                if (self) {
                    var self = Kindelia$deserialize$data$(_world$1, $3254);
                    switch (self._) {
                        case 'Pair.new':
                            var $3258 = self.fst;
                            var $3259 = self.snd;
                            var $3260 = Pair$new$($3258, Kindelia$Transaction$new_data$($3259));
                            var $3257 = $3260;
                            break;
                    };
                    var $3256 = $3257;
                } else {
                    var self = ($3255 === 1n);
                    if (self) {
                        var self = Kindelia$deserialize$bond$(_world$1, $3254);
                        switch (self._) {
                            case 'Pair.new':
                                var $3263 = self.fst;
                                var $3264 = self.snd;
                                var $3265 = Pair$new$($3263, Kindelia$Transaction$new_bond$($3264));
                                var $3262 = $3265;
                                break;
                        };
                        var $3261 = $3262;
                    } else {
                        var self = ($3255 === 2n);
                        if (self) {
                            var self = Kindelia$deserialize$file$(_world$1, $3254);
                            switch (self._) {
                                case 'Pair.new':
                                    var $3268 = self.fst;
                                    var $3269 = self.snd;
                                    var $3270 = Pair$new$($3268, Kindelia$Transaction$new_file$($3269));
                                    var $3267 = $3270;
                                    break;
                            };
                            var $3266 = $3267;
                        } else {
                            var self = ($3255 === 3n);
                            if (self) {
                                var self = Kindelia$deserialize$eval$(_world$1, $3254);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3273 = self.fst;
                                        var $3274 = self.snd;
                                        var $3275 = Pair$new$($3273, Kindelia$Transaction$new_eval$($3274));
                                        var $3272 = $3275;
                                        break;
                                };
                                var $3271 = $3272;
                            } else {
                                var $3276 = Pair$new$($3254, Kindelia$Transaction$new_data$(Kindelia$Data$new$("", List$nil)));
                                var $3271 = $3276;
                            };
                            var $3266 = $3271;
                        };
                        var $3261 = $3266;
                    };
                    var $3256 = $3261;
                };
                var $3253 = $3256;
                break;
        };
        return $3253;
    };
    const Kindelia$deserialize$transaction = x0 => x1 => Kindelia$deserialize$transaction$(x0, x1);

    function Kindelia$deserialize$block$(_world$1, _bits$2) {
        var self = Bits$is_empty$(_bits$2);
        if (self) {
            var $3278 = Pair$new$(Bits$e, List$nil);
            var $3277 = $3278;
        } else {
            var self = Kindelia$deserialize$transaction$(_world$1, _bits$2);
            switch (self._) {
                case 'Pair.new':
                    var $3280 = self.fst;
                    var $3281 = self.snd;
                    var self = Kindelia$deserialize$block$(_world$1, $3280);
                    switch (self._) {
                        case 'Pair.new':
                            var $3283 = self.fst;
                            var $3284 = self.snd;
                            var $3285 = Pair$new$($3283, List$cons$($3281, $3284));
                            var $3282 = $3285;
                            break;
                    };
                    var $3279 = $3282;
                    break;
            };
            var $3277 = $3279;
        };
        return $3277;
    };
    const Kindelia$deserialize$block = x0 => x1 => Kindelia$deserialize$block$(x0, x1);

    function Bits$hex$encode$(_x$1) {
        var self = _x$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3287 = self.slice(0, -1);
                var self = $3287;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3289 = self.slice(0, -1);
                        var self = $3289;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3291 = self.slice(0, -1);
                                var self = $3291;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3293 = self.slice(0, -1);
                                        var $3294 = ("0" + Bits$hex$encode$($3293));
                                        var $3292 = $3294;
                                        break;
                                    case 'i':
                                        var $3295 = self.slice(0, -1);
                                        var $3296 = ("8" + Bits$hex$encode$($3295));
                                        var $3292 = $3296;
                                        break;
                                    case 'e':
                                        var $3297 = "0";
                                        var $3292 = $3297;
                                        break;
                                };
                                var $3290 = $3292;
                                break;
                            case 'i':
                                var $3298 = self.slice(0, -1);
                                var self = $3298;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3300 = self.slice(0, -1);
                                        var $3301 = ("4" + Bits$hex$encode$($3300));
                                        var $3299 = $3301;
                                        break;
                                    case 'i':
                                        var $3302 = self.slice(0, -1);
                                        var $3303 = ("c" + Bits$hex$encode$($3302));
                                        var $3299 = $3303;
                                        break;
                                    case 'e':
                                        var $3304 = "4";
                                        var $3299 = $3304;
                                        break;
                                };
                                var $3290 = $3299;
                                break;
                            case 'e':
                                var $3305 = "0";
                                var $3290 = $3305;
                                break;
                        };
                        var $3288 = $3290;
                        break;
                    case 'i':
                        var $3306 = self.slice(0, -1);
                        var self = $3306;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3308 = self.slice(0, -1);
                                var self = $3308;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3310 = self.slice(0, -1);
                                        var $3311 = ("2" + Bits$hex$encode$($3310));
                                        var $3309 = $3311;
                                        break;
                                    case 'i':
                                        var $3312 = self.slice(0, -1);
                                        var $3313 = ("a" + Bits$hex$encode$($3312));
                                        var $3309 = $3313;
                                        break;
                                    case 'e':
                                        var $3314 = "2";
                                        var $3309 = $3314;
                                        break;
                                };
                                var $3307 = $3309;
                                break;
                            case 'i':
                                var $3315 = self.slice(0, -1);
                                var self = $3315;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3317 = self.slice(0, -1);
                                        var $3318 = ("6" + Bits$hex$encode$($3317));
                                        var $3316 = $3318;
                                        break;
                                    case 'i':
                                        var $3319 = self.slice(0, -1);
                                        var $3320 = ("e" + Bits$hex$encode$($3319));
                                        var $3316 = $3320;
                                        break;
                                    case 'e':
                                        var $3321 = "6";
                                        var $3316 = $3321;
                                        break;
                                };
                                var $3307 = $3316;
                                break;
                            case 'e':
                                var $3322 = "2";
                                var $3307 = $3322;
                                break;
                        };
                        var $3288 = $3307;
                        break;
                    case 'e':
                        var $3323 = "0";
                        var $3288 = $3323;
                        break;
                };
                var $3286 = $3288;
                break;
            case 'i':
                var $3324 = self.slice(0, -1);
                var self = $3324;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3326 = self.slice(0, -1);
                        var self = $3326;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3328 = self.slice(0, -1);
                                var self = $3328;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3330 = self.slice(0, -1);
                                        var $3331 = ("1" + Bits$hex$encode$($3330));
                                        var $3329 = $3331;
                                        break;
                                    case 'i':
                                        var $3332 = self.slice(0, -1);
                                        var $3333 = ("9" + Bits$hex$encode$($3332));
                                        var $3329 = $3333;
                                        break;
                                    case 'e':
                                        var $3334 = "1";
                                        var $3329 = $3334;
                                        break;
                                };
                                var $3327 = $3329;
                                break;
                            case 'i':
                                var $3335 = self.slice(0, -1);
                                var self = $3335;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3337 = self.slice(0, -1);
                                        var $3338 = ("5" + Bits$hex$encode$($3337));
                                        var $3336 = $3338;
                                        break;
                                    case 'i':
                                        var $3339 = self.slice(0, -1);
                                        var $3340 = ("d" + Bits$hex$encode$($3339));
                                        var $3336 = $3340;
                                        break;
                                    case 'e':
                                        var $3341 = "5";
                                        var $3336 = $3341;
                                        break;
                                };
                                var $3327 = $3336;
                                break;
                            case 'e':
                                var $3342 = "1";
                                var $3327 = $3342;
                                break;
                        };
                        var $3325 = $3327;
                        break;
                    case 'i':
                        var $3343 = self.slice(0, -1);
                        var self = $3343;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3345 = self.slice(0, -1);
                                var self = $3345;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3347 = self.slice(0, -1);
                                        var $3348 = ("3" + Bits$hex$encode$($3347));
                                        var $3346 = $3348;
                                        break;
                                    case 'i':
                                        var $3349 = self.slice(0, -1);
                                        var $3350 = ("b" + Bits$hex$encode$($3349));
                                        var $3346 = $3350;
                                        break;
                                    case 'e':
                                        var $3351 = "3";
                                        var $3346 = $3351;
                                        break;
                                };
                                var $3344 = $3346;
                                break;
                            case 'i':
                                var $3352 = self.slice(0, -1);
                                var self = $3352;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3354 = self.slice(0, -1);
                                        var $3355 = ("7" + Bits$hex$encode$($3354));
                                        var $3353 = $3355;
                                        break;
                                    case 'i':
                                        var $3356 = self.slice(0, -1);
                                        var $3357 = ("f" + Bits$hex$encode$($3356));
                                        var $3353 = $3357;
                                        break;
                                    case 'e':
                                        var $3358 = "7";
                                        var $3353 = $3358;
                                        break;
                                };
                                var $3344 = $3353;
                                break;
                            case 'e':
                                var $3359 = "3";
                                var $3344 = $3359;
                                break;
                        };
                        var $3325 = $3344;
                        break;
                    case 'e':
                        var $3360 = "1";
                        var $3325 = $3360;
                        break;
                };
                var $3286 = $3325;
                break;
            case 'e':
                var $3361 = "";
                var $3286 = $3361;
                break;
        };
        return $3286;
    };
    const Bits$hex$encode = x0 => Bits$hex$encode$(x0);
    const Bits$eql = a0 => a1 => (a1 === a0);

    function Kindelia$World$new$(_entry$1) {
        var $3362 = ({
            _: 'Kindelia.World.new',
            'entry': _entry$1
        });
        return $3362;
    };
    const Kindelia$World$new = x0 => Kindelia$World$new$(x0);

    function BBT$(_K$1, _V$2) {
        var $3363 = null;
        return $3363;
    };
    const BBT = x0 => x1 => BBT$(x0, x1);

    function BBT$bin$(_size$3, _key$4, _val$5, _left$6, _right$7) {
        var $3364 = ({
            _: 'BBT.bin',
            'size': _size$3,
            'key': _key$4,
            'val': _val$5,
            'left': _left$6,
            'right': _right$7
        });
        return $3364;
    };
    const BBT$bin = x0 => x1 => x2 => x3 => x4 => BBT$bin$(x0, x1, x2, x3, x4);

    function U32$new$(_value$1) {
        var $3365 = word_to_u32(_value$1);
        return $3365;
    };
    const U32$new = x0 => U32$new$(x0);
    const Nat$to_u32 = a0 => (Number(a0) >>> 0);
    const BBT$tip = ({
        _: 'BBT.tip'
    });

    function BBT$singleton$(_key$3, _val$4) {
        var $3366 = BBT$bin$(1, _key$3, _val$4, BBT$tip, BBT$tip);
        return $3366;
    };
    const BBT$singleton = x0 => x1 => BBT$singleton$(x0, x1);

    function BBT$size$(_map$3) {
        var self = _map$3;
        switch (self._) {
            case 'BBT.bin':
                var $3368 = self.size;
                var $3369 = $3368;
                var $3367 = $3369;
                break;
            case 'BBT.tip':
                var $3370 = 0;
                var $3367 = $3370;
                break;
        };
        return $3367;
    };
    const BBT$size = x0 => BBT$size$(x0);
    const U32$add = a0 => a1 => ((a0 + a1) >>> 0);

    function Word$shift_left$one$go$(_word$2, _prev$3) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3372 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $3374 = Word$i$(Word$shift_left$one$go$($3372, Bool$false));
                    var $3373 = $3374;
                } else {
                    var $3375 = Word$o$(Word$shift_left$one$go$($3372, Bool$false));
                    var $3373 = $3375;
                };
                var $3371 = $3373;
                break;
            case 'Word.i':
                var $3376 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $3378 = Word$i$(Word$shift_left$one$go$($3376, Bool$true));
                    var $3377 = $3378;
                } else {
                    var $3379 = Word$o$(Word$shift_left$one$go$($3376, Bool$true));
                    var $3377 = $3379;
                };
                var $3371 = $3377;
                break;
            case 'Word.e':
                var $3380 = Word$e;
                var $3371 = $3380;
                break;
        };
        return $3371;
    };
    const Word$shift_left$one$go = x0 => x1 => Word$shift_left$one$go$(x0, x1);

    function Word$shift_left$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3382 = self.pred;
                var $3383 = Word$o$(Word$shift_left$one$go$($3382, Bool$false));
                var $3381 = $3383;
                break;
            case 'Word.i':
                var $3384 = self.pred;
                var $3385 = Word$o$(Word$shift_left$one$go$($3384, Bool$true));
                var $3381 = $3385;
                break;
            case 'Word.e':
                var $3386 = Word$e;
                var $3381 = $3386;
                break;
        };
        return $3381;
    };
    const Word$shift_left$one = x0 => Word$shift_left$one$(x0);

    function Word$shift_left$(_value$2, _n$3) {
        var Word$shift_left$ = (_value$2, _n$3) => ({
            ctr: 'TCO',
            arg: [_value$2, _n$3]
        });
        var Word$shift_left = _value$2 => _n$3 => Word$shift_left$(_value$2, _n$3);
        var arg = [_value$2, _n$3];
        while (true) {
            let [_value$2, _n$3] = arg;
            var R = (() => {
                var self = _n$3;
                if (self === 0n) {
                    var $3387 = _value$2;
                    return $3387;
                } else {
                    var $3388 = (self - 1n);
                    var $3389 = Word$shift_left$(Word$shift_left$one$(_value$2), $3388);
                    return $3389;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_left = x0 => x1 => Word$shift_left$(x0, x1);

    function Word$mul$go$(_a$3, _b$4, _acc$5) {
        var Word$mul$go$ = (_a$3, _b$4, _acc$5) => ({
            ctr: 'TCO',
            arg: [_a$3, _b$4, _acc$5]
        });
        var Word$mul$go = _a$3 => _b$4 => _acc$5 => Word$mul$go$(_a$3, _b$4, _acc$5);
        var arg = [_a$3, _b$4, _acc$5];
        while (true) {
            let [_a$3, _b$4, _acc$5] = arg;
            var R = (() => {
                var self = _a$3;
                switch (self._) {
                    case 'Word.o':
                        var $3390 = self.pred;
                        var $3391 = Word$mul$go$($3390, Word$shift_left$(_b$4, 1n), _acc$5);
                        return $3391;
                    case 'Word.i':
                        var $3392 = self.pred;
                        var $3393 = Word$mul$go$($3392, Word$shift_left$(_b$4, 1n), Word$add$(_b$4, _acc$5));
                        return $3393;
                    case 'Word.e':
                        var $3394 = _acc$5;
                        return $3394;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$mul$go = x0 => x1 => x2 => Word$mul$go$(x0, x1, x2);

    function Word$to_zero$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3396 = self.pred;
                var $3397 = Word$o$(Word$to_zero$($3396));
                var $3395 = $3397;
                break;
            case 'Word.i':
                var $3398 = self.pred;
                var $3399 = Word$o$(Word$to_zero$($3398));
                var $3395 = $3399;
                break;
            case 'Word.e':
                var $3400 = Word$e;
                var $3395 = $3400;
                break;
        };
        return $3395;
    };
    const Word$to_zero = x0 => Word$to_zero$(x0);

    function Word$mul$(_a$2, _b$3) {
        var $3401 = Word$mul$go$(_a$2, _b$3, Word$to_zero$(_a$2));
        return $3401;
    };
    const Word$mul = x0 => x1 => Word$mul$(x0, x1);
    const U32$mul = a0 => a1 => ((a0 * a1) >>> 0);
    const BBT$w = 3;
    const U32$ltn = a0 => a1 => (a0 < a1);
    const U32$from_nat = a0 => (Number(a0) >>> 0);

    function BBT$node$(_key$3, _val$4, _left$5, _right$6) {
        var _size_left$7 = BBT$size$(_left$5);
        var _size_right$8 = BBT$size$(_right$6);
        var _new_size$9 = ((1 + ((_size_left$7 + _size_right$8) >>> 0)) >>> 0);
        var $3402 = BBT$bin$(_new_size$9, _key$3, _val$4, _left$5, _right$6);
        return $3402;
    };
    const BBT$node = x0 => x1 => x2 => x3 => BBT$node$(x0, x1, x2, x3);

    function Cmp$as_gtn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $3404 = Bool$false;
                var $3403 = $3404;
                break;
            case 'Cmp.gtn':
                var $3405 = Bool$true;
                var $3403 = $3405;
                break;
        };
        return $3403;
    };
    const Cmp$as_gtn = x0 => Cmp$as_gtn$(x0);

    function Word$gtn$(_a$2, _b$3) {
        var $3406 = Cmp$as_gtn$(Word$cmp$(_a$2, _b$3));
        return $3406;
    };
    const Word$gtn = x0 => x1 => Word$gtn$(x0, x1);
    const U32$gtn = a0 => a1 => (a0 > a1);

    function BBT$balance$(_k$3, _v$4, _l$5, _r$6) {
        var _size_l$7 = BBT$size$(_l$5);
        var _size_r$8 = BBT$size$(_r$6);
        var _size_l_plus_size_r$9 = ((_size_l$7 + _size_r$8) >>> 0);
        var _w_x_size_l$10 = ((BBT$w * _size_l$7) >>> 0);
        var _w_x_size_r$11 = ((BBT$w * _size_r$8) >>> 0);
        var self = (_size_l_plus_size_r$9 < 2);
        if (self) {
            var $3408 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
            var $3407 = $3408;
        } else {
            var self = (_size_r$8 > _w_x_size_l$10);
            if (self) {
                var self = _r$6;
                switch (self._) {
                    case 'BBT.bin':
                        var $3411 = self.key;
                        var $3412 = self.val;
                        var $3413 = self.left;
                        var $3414 = self.right;
                        var _size_rl$17 = BBT$size$($3413);
                        var _size_rr$18 = BBT$size$($3414);
                        var self = (_size_rl$17 < _size_rr$18);
                        if (self) {
                            var _new_key$19 = $3411;
                            var _new_val$20 = $3412;
                            var _new_left$21 = BBT$node$(_k$3, _v$4, _l$5, $3413);
                            var _new_right$22 = $3414;
                            var $3416 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                            var $3415 = $3416;
                        } else {
                            var self = $3413;
                            switch (self._) {
                                case 'BBT.bin':
                                    var $3418 = self.key;
                                    var $3419 = self.val;
                                    var $3420 = self.left;
                                    var $3421 = self.right;
                                    var _new_key$24 = $3418;
                                    var _new_val$25 = $3419;
                                    var _new_left$26 = BBT$node$(_k$3, _v$4, _l$5, $3420);
                                    var _new_right$27 = BBT$node$($3411, $3412, $3421, $3414);
                                    var $3422 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                    var $3417 = $3422;
                                    break;
                                case 'BBT.tip':
                                    var $3423 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                    var $3417 = $3423;
                                    break;
                            };
                            var $3415 = $3417;
                        };
                        var $3410 = $3415;
                        break;
                    case 'BBT.tip':
                        var $3424 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                        var $3410 = $3424;
                        break;
                };
                var $3409 = $3410;
            } else {
                var self = (_size_l$7 > _w_x_size_r$11);
                if (self) {
                    var self = _l$5;
                    switch (self._) {
                        case 'BBT.bin':
                            var $3427 = self.key;
                            var $3428 = self.val;
                            var $3429 = self.left;
                            var $3430 = self.right;
                            var _size_ll$17 = BBT$size$($3429);
                            var _size_lr$18 = BBT$size$($3430);
                            var self = (_size_lr$18 < _size_ll$17);
                            if (self) {
                                var _new_key$19 = $3427;
                                var _new_val$20 = $3428;
                                var _new_left$21 = $3429;
                                var _new_right$22 = BBT$node$(_k$3, _v$4, $3430, _r$6);
                                var $3432 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                                var $3431 = $3432;
                            } else {
                                var self = $3430;
                                switch (self._) {
                                    case 'BBT.bin':
                                        var $3434 = self.key;
                                        var $3435 = self.val;
                                        var $3436 = self.left;
                                        var $3437 = self.right;
                                        var _new_key$24 = $3434;
                                        var _new_val$25 = $3435;
                                        var _new_left$26 = BBT$node$($3427, $3428, $3429, $3436);
                                        var _new_right$27 = BBT$node$(_k$3, _v$4, $3437, _r$6);
                                        var $3438 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                        var $3433 = $3438;
                                        break;
                                    case 'BBT.tip':
                                        var $3439 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                        var $3433 = $3439;
                                        break;
                                };
                                var $3431 = $3433;
                            };
                            var $3426 = $3431;
                            break;
                        case 'BBT.tip':
                            var $3440 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                            var $3426 = $3440;
                            break;
                    };
                    var $3425 = $3426;
                } else {
                    var $3441 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                    var $3425 = $3441;
                };
                var $3409 = $3425;
            };
            var $3407 = $3409;
        };
        return $3407;
    };
    const BBT$balance = x0 => x1 => x2 => x3 => BBT$balance$(x0, x1, x2, x3);

    function BBT$insert$(_cmp$3, _key$4, _val$5, _map$6) {
        var self = _map$6;
        switch (self._) {
            case 'BBT.bin':
                var $3443 = self.key;
                var $3444 = self.val;
                var $3445 = self.left;
                var $3446 = self.right;
                var self = _cmp$3(_key$4)($3443);
                switch (self._) {
                    case 'Cmp.ltn':
                        var _new_key$12 = $3443;
                        var _new_val$13 = $3444;
                        var _new_left$14 = BBT$insert$(_cmp$3, _key$4, _val$5, $3445);
                        var _new_right$15 = $3446;
                        var $3448 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $3447 = $3448;
                        break;
                    case 'Cmp.eql':
                        var $3449 = BBT$node$(_key$4, _val$5, $3445, $3446);
                        var $3447 = $3449;
                        break;
                    case 'Cmp.gtn':
                        var _new_key$12 = $3443;
                        var _new_val$13 = $3444;
                        var _new_left$14 = $3445;
                        var _new_right$15 = BBT$insert$(_cmp$3, _key$4, _val$5, $3446);
                        var $3450 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $3447 = $3450;
                        break;
                };
                var $3442 = $3447;
                break;
            case 'BBT.tip':
                var $3451 = BBT$singleton$(_key$4, _val$5);
                var $3442 = $3451;
                break;
        };
        return $3442;
    };
    const BBT$insert = x0 => x1 => x2 => x3 => BBT$insert$(x0, x1, x2, x3);

    function Map$set$(_key$2, _val$3, _map$4) {
        var $3452 = BBT$insert$(String$cmp, _key$2, _val$3, _map$4);
        return $3452;
    };
    const Map$set = x0 => x1 => x2 => Map$set$(x0, x1, x2);

    function Kindelia$Entry$data$(_value$1) {
        var $3453 = ({
            _: 'Kindelia.Entry.data',
            'value': _value$1
        });
        return $3453;
    };
    const Kindelia$Entry$data = x0 => Kindelia$Entry$data$(x0);

    function Kindelia$Entry$bond$(_value$1) {
        var $3454 = ({
            _: 'Kindelia.Entry.bond',
            'value': _value$1
        });
        return $3454;
    };
    const Kindelia$Entry$bond = x0 => Kindelia$Entry$bond$(x0);

    function List$unzip$(_xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $3456 = self.head;
                var $3457 = self.tail;
                var _rec$6 = List$unzip$($3457);
                var self = $3456;
                switch (self._) {
                    case 'Pair.new':
                        var $3459 = self.fst;
                        var $3460 = self.snd;
                        var self = _rec$6;
                        switch (self._) {
                            case 'Pair.new':
                                var $3462 = self.fst;
                                var $3463 = self.snd;
                                var $3464 = Pair$new$(List$cons$($3459, $3462), List$cons$($3460, $3463));
                                var $3461 = $3464;
                                break;
                        };
                        var $3458 = $3461;
                        break;
                };
                var $3455 = $3458;
                break;
            case 'List.nil':
                var $3465 = Pair$new$(List$nil, List$nil);
                var $3455 = $3465;
                break;
        };
        return $3455;
    };
    const List$unzip = x0 => List$unzip$(x0);

    function Map$(_V$1) {
        var $3466 = null;
        return $3466;
    };
    const Map = x0 => Map$(x0);

    function Kindelia$extend$(_map$2, _keys$3, _vals$4) {
        var Kindelia$extend$ = (_map$2, _keys$3, _vals$4) => ({
            ctr: 'TCO',
            arg: [_map$2, _keys$3, _vals$4]
        });
        var Kindelia$extend = _map$2 => _keys$3 => _vals$4 => Kindelia$extend$(_map$2, _keys$3, _vals$4);
        var arg = [_map$2, _keys$3, _vals$4];
        while (true) {
            let [_map$2, _keys$3, _vals$4] = arg;
            var R = (() => {
                var self = _keys$3;
                switch (self._) {
                    case 'List.cons':
                        var $3467 = self.head;
                        var $3468 = self.tail;
                        var self = _vals$4;
                        switch (self._) {
                            case 'List.cons':
                                var $3470 = self.head;
                                var $3471 = self.tail;
                                var $3472 = Kindelia$extend$(Map$set$($3467, $3470, _map$2), $3468, $3471);
                                var $3469 = $3472;
                                break;
                            case 'List.nil':
                                var $3473 = _map$2;
                                var $3469 = $3473;
                                break;
                        };
                        return $3469;
                    case 'List.nil':
                        var self = _vals$4;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $3475 = _map$2;
                                var $3474 = $3475;
                                break;
                        };
                        return $3474;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kindelia$extend = x0 => x1 => x2 => Kindelia$extend$(x0, x1, x2);

    function Pair$snd$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $3477 = self.snd;
                var $3478 = $3477;
                var $3476 = $3478;
                break;
        };
        return $3476;
    };
    const Pair$snd = x0 => Pair$snd$(x0);

    function BBT$from_list$go$(_cmp$3, _acc$4, _xs$5) {
        var BBT$from_list$go$ = (_cmp$3, _acc$4, _xs$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _acc$4, _xs$5]
        });
        var BBT$from_list$go = _cmp$3 => _acc$4 => _xs$5 => BBT$from_list$go$(_cmp$3, _acc$4, _xs$5);
        var arg = [_cmp$3, _acc$4, _xs$5];
        while (true) {
            let [_cmp$3, _acc$4, _xs$5] = arg;
            var R = (() => {
                var self = _xs$5;
                switch (self._) {
                    case 'List.cons':
                        var $3479 = self.head;
                        var $3480 = self.tail;
                        var _key$8 = Pair$fst$($3479);
                        var _val$9 = Pair$snd$($3479);
                        var _new_acc$10 = BBT$insert$(_cmp$3, _key$8, _val$9, _acc$4);
                        var $3481 = BBT$from_list$go$(_cmp$3, _new_acc$10, $3480);
                        return $3481;
                    case 'List.nil':
                        var $3482 = _acc$4;
                        return $3482;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$from_list$go = x0 => x1 => x2 => BBT$from_list$go$(x0, x1, x2);

    function BBT$from_list$(_cmp$3, _xs$4) {
        var $3483 = BBT$from_list$go$(_cmp$3, BBT$tip, _xs$4);
        return $3483;
    };
    const BBT$from_list = x0 => x1 => BBT$from_list$(x0, x1);

    function Map$from_list$(_xs$2) {
        var $3484 = BBT$from_list$(String$cmp, _xs$2);
        return $3484;
    };
    const Map$from_list = x0 => Map$from_list$(x0);

    function Kindelia$equal$(_a$1, _b$2) {
        var Kindelia$equal$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var Kindelia$equal = _a$1 => _b$2 => Kindelia$equal$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                switch (self._) {
                    case 'Kindelia.Type.data':
                        var $3485 = self.name;
                        var self = _b$2;
                        switch (self._) {
                            case 'Kindelia.Type.data':
                                var $3487 = self.name;
                                var $3488 = ($3485 === $3487);
                                var $3486 = $3488;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.effe':
                                var $3489 = Bool$false;
                                var $3486 = $3489;
                                break;
                        };
                        return $3486;
                    case 'Kindelia.Type.effe':
                        var $3490 = self.rety;
                        var self = _b$2;
                        switch (self._) {
                            case 'Kindelia.Type.effe':
                                var $3492 = self.rety;
                                var $3493 = Kindelia$equal$($3490, $3492);
                                var $3491 = $3493;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3494 = Bool$false;
                                var $3491 = $3494;
                                break;
                        };
                        return $3491;
                    case 'Kindelia.Type.word':
                        var self = _b$2;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                                var $3496 = Bool$true;
                                var $3495 = $3496;
                                break;
                            case 'Kindelia.Type.data':
                            case 'Kindelia.Type.effe':
                                var $3497 = Bool$false;
                                var $3495 = $3497;
                                break;
                        };
                        return $3495;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kindelia$equal = x0 => x1 => Kindelia$equal$(x0, x1);

    function Kindelia$get_bond$(_world$1, _name$2) {
        var self = _world$1;
        switch (self._) {
            case 'Kindelia.World.new':
                var $3499 = self.entry;
                var $3500 = Maybe$monad$((_m$bind$4 => _m$pure$5 => {
                    var $3501 = _m$bind$4;
                    return $3501;
                }))(Map$get$(_name$2, $3499))((_entry$4 => {
                    var self = _entry$4;
                    switch (self._) {
                        case 'Kindelia.Entry.bond':
                            var $3503 = self.value;
                            var $3504 = Maybe$some$($3503);
                            var $3502 = $3504;
                            break;
                        case 'Kindelia.Entry.data':
                        case 'Kindelia.Entry.file':
                            var $3505 = Maybe$none;
                            var $3502 = $3505;
                            break;
                    };
                    return $3502;
                }));
                var $3498 = $3500;
                break;
        };
        return $3498;
    };
    const Kindelia$get_bond = x0 => x1 => Kindelia$get_bond$(x0, x1);

    function List$zip$(_as$3, _bs$4) {
        var self = _as$3;
        switch (self._) {
            case 'List.cons':
                var $3507 = self.head;
                var $3508 = self.tail;
                var self = _bs$4;
                switch (self._) {
                    case 'List.cons':
                        var $3510 = self.head;
                        var $3511 = self.tail;
                        var $3512 = List$cons$(Pair$new$($3507, $3510), List$zip$($3508, $3511));
                        var $3509 = $3512;
                        break;
                    case 'List.nil':
                        var $3513 = List$nil;
                        var $3509 = $3513;
                        break;
                };
                var $3506 = $3509;
                break;
            case 'List.nil':
                var $3514 = List$nil;
                var $3506 = $3514;
                break;
        };
        return $3506;
    };
    const List$zip = x0 => x1 => List$zip$(x0, x1);

    function List$all$(_cond$2, _list$3) {
        var List$all$ = (_cond$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _list$3]
        });
        var List$all = _cond$2 => _list$3 => List$all$(_cond$2, _list$3);
        var arg = [_cond$2, _list$3];
        while (true) {
            let [_cond$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $3515 = self.head;
                        var $3516 = self.tail;
                        var self = _cond$2($3515);
                        if (self) {
                            var $3518 = List$all$(_cond$2, $3516);
                            var $3517 = $3518;
                        } else {
                            var $3519 = Bool$false;
                            var $3517 = $3519;
                        };
                        return $3517;
                    case 'List.nil':
                        var $3520 = Bool$true;
                        return $3520;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$all = x0 => x1 => List$all$(x0, x1);

    function Maybe$mapped$(_m$2, _f$4) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $3522 = self.value;
                var $3523 = Maybe$some$(_f$4($3522));
                var $3521 = $3523;
                break;
            case 'Maybe.none':
                var $3524 = Maybe$none;
                var $3521 = $3524;
                break;
        };
        return $3521;
    };
    const Maybe$mapped = x0 => x1 => Maybe$mapped$(x0, x1);

    function List$ifind$go$(_xs$2, _f$3, _i$4) {
        var List$ifind$go$ = (_xs$2, _f$3, _i$4) => ({
            ctr: 'TCO',
            arg: [_xs$2, _f$3, _i$4]
        });
        var List$ifind$go = _xs$2 => _f$3 => _i$4 => List$ifind$go$(_xs$2, _f$3, _i$4);
        var arg = [_xs$2, _f$3, _i$4];
        while (true) {
            let [_xs$2, _f$3, _i$4] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $3525 = self.head;
                        var $3526 = self.tail;
                        var self = _f$3(_i$4)($3525);
                        if (self) {
                            var $3528 = Maybe$some$(Pair$new$(_i$4, $3525));
                            var $3527 = $3528;
                        } else {
                            var $3529 = List$ifind$go$($3526, _f$3, Nat$succ$(_i$4));
                            var $3527 = $3529;
                        };
                        return $3527;
                    case 'List.nil':
                        var $3530 = Maybe$none;
                        return $3530;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$ifind$go = x0 => x1 => x2 => List$ifind$go$(x0, x1, x2);

    function List$ifind$(_f$2, _xs$3) {
        var $3531 = List$ifind$go$(_xs$3, _f$2, Nat$zero);
        return $3531;
    };
    const List$ifind = x0 => x1 => List$ifind$(x0, x1);

    function Kindelia$get_constructor_value$(_data$1, _name$2) {
        var $3532 = Maybe$mapped$(List$ifind$((_i$3 => _ctr$4 => {
            var $3533 = ((() => {
                var self = _ctr$4;
                switch (self._) {
                    case 'Kindelia.Constructor.new':
                        var $3534 = self.name;
                        var $3535 = $3534;
                        return $3535;
                };
            })() === _name$2);
            return $3533;
        }), (() => {
            var self = _data$1;
            switch (self._) {
                case 'Kindelia.Data.new':
                    var $3536 = self.constructors;
                    var $3537 = $3536;
                    return $3537;
            };
        })()), (_x$3 => {
            var self = _x$3;
            switch (self._) {
                case 'Pair.new':
                    var $3539 = self.snd;
                    var $3540 = $3539;
                    var $3538 = $3540;
                    break;
            };
            return $3538;
        }));
        return $3532;
    };
    const Kindelia$get_constructor_value = x0 => x1 => Kindelia$get_constructor_value$(x0, x1);
    const List$length = a0 => (list_length(a0));

    function List$zip_with$(_f$4, _as$5, _bs$6) {
        var self = _as$5;
        switch (self._) {
            case 'List.cons':
                var $3542 = self.head;
                var $3543 = self.tail;
                var self = _bs$6;
                switch (self._) {
                    case 'List.cons':
                        var $3545 = self.head;
                        var $3546 = self.tail;
                        var $3547 = List$cons$(_f$4($3542)($3545), List$zip_with$(_f$4, $3543, $3546));
                        var $3544 = $3547;
                        break;
                    case 'List.nil':
                        var $3548 = List$nil;
                        var $3544 = $3548;
                        break;
                };
                var $3541 = $3544;
                break;
            case 'List.nil':
                var $3549 = List$nil;
                var $3541 = $3549;
                break;
        };
        return $3541;
    };
    const List$zip_with = x0 => x1 => x2 => List$zip_with$(x0, x1, x2);

    function List$zipped_with$(_as$3, _bs$4, _f$6) {
        var $3550 = List$zip_with$(_f$6, _as$3, _bs$4);
        return $3550;
    };
    const List$zipped_with = x0 => x1 => x2 => List$zipped_with$(x0, x1, x2);

    function List$and$(_list$1) {
        var $3551 = List$all$((_x$2 => {
            var $3552 = _x$2;
            return $3552;
        }), _list$1);
        return $3551;
    };
    const List$and = x0 => List$and$(x0);

    function Kindelia$get_file$(_world$1, _name$2) {
        var self = _world$1;
        switch (self._) {
            case 'Kindelia.World.new':
                var $3554 = self.entry;
                var $3555 = Maybe$monad$((_m$bind$4 => _m$pure$5 => {
                    var $3556 = _m$bind$4;
                    return $3556;
                }))(Map$get$(_name$2, $3554))((_entry$4 => {
                    var self = _entry$4;
                    switch (self._) {
                        case 'Kindelia.Entry.file':
                            var $3558 = self.value;
                            var $3559 = Maybe$some$($3558);
                            var $3557 = $3559;
                            break;
                        case 'Kindelia.Entry.data':
                        case 'Kindelia.Entry.bond':
                            var $3560 = Maybe$none;
                            var $3557 = $3560;
                            break;
                    };
                    return $3557;
                }));
                var $3553 = $3555;
                break;
        };
        return $3553;
    };
    const Kindelia$get_file = x0 => x1 => Kindelia$get_file$(x0, x1);

    function List$is_empty$(_list$2) {
        var self = _list$2;
        switch (self._) {
            case 'List.nil':
                var $3562 = Bool$true;
                var $3561 = $3562;
                break;
            case 'List.cons':
                var $3563 = Bool$false;
                var $3561 = $3563;
                break;
        };
        return $3561;
    };
    const List$is_empty = x0 => List$is_empty$(x0);

    function Maybe$if$(_cond$2, _x$3) {
        var self = _x$3;
        switch (self._) {
            case 'Maybe.some':
                var $3565 = self.value;
                var $3566 = _cond$2($3565);
                var $3564 = $3566;
                break;
            case 'Maybe.none':
                var $3567 = Bool$false;
                var $3564 = $3567;
                break;
        };
        return $3564;
    };
    const Maybe$if = x0 => x1 => Maybe$if$(x0, x1);

    function List$find$(_cond$2, _xs$3) {
        var List$find$ = (_cond$2, _xs$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _xs$3]
        });
        var List$find = _cond$2 => _xs$3 => List$find$(_cond$2, _xs$3);
        var arg = [_cond$2, _xs$3];
        while (true) {
            let [_cond$2, _xs$3] = arg;
            var R = (() => {
                var self = _xs$3;
                switch (self._) {
                    case 'List.cons':
                        var $3568 = self.head;
                        var $3569 = self.tail;
                        var self = _cond$2($3568);
                        if (self) {
                            var $3571 = Maybe$some$($3568);
                            var $3570 = $3571;
                        } else {
                            var $3572 = List$find$(_cond$2, $3569);
                            var $3570 = $3572;
                        };
                        return $3570;
                    case 'List.nil':
                        var $3573 = Maybe$none;
                        return $3573;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$find = x0 => x1 => List$find$(x0, x1);

    function List$in$(_cond$2, _list$3) {
        var self = List$find$(_cond$2, _list$3);
        switch (self._) {
            case 'Maybe.none':
                var $3575 = Bool$false;
                var $3574 = $3575;
                break;
            case 'Maybe.some':
                var $3576 = Bool$true;
                var $3574 = $3576;
                break;
        };
        return $3574;
    };
    const List$in = x0 => x1 => List$in$(x0, x1);
    const Bool$or = a0 => a1 => (a0 || a1);

    function Kindelia$check$(_context$1, _world$2, _term$3, _type$4, _caller$5) {
        var self = _context$1;
        switch (self._) {
            case 'BBT.tip':
                var self = _world$2;
                switch (self._) {
                    case 'Kindelia.World.new':
                        var self = _term$3;
                        switch (self._) {
                            case 'Kindelia.Term.var':
                                var $3580 = self.name;
                                var self = Map$get$($3580, _context$1);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3582 = self.value;
                                        var $3583 = Kindelia$equal$($3582, _type$4);
                                        var $3581 = $3583;
                                        break;
                                    case 'Maybe.none':
                                        var $3584 = Bool$false;
                                        var $3581 = $3584;
                                        break;
                                };
                                var $3579 = $3581;
                                break;
                            case 'Kindelia.Term.call':
                                var $3585 = self.bond;
                                var $3586 = self.args;
                                var self = Kindelia$get_bond$(_world$2, $3585);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3588 = self.value;
                                        var _bond$10 = $3588;
                                        var self = _bond$10;
                                        switch (self._) {
                                            case 'Kindelia.Bond.new':
                                                var $3590 = self.iprm;
                                                var $3591 = self.otyp;
                                                var _otyp$15 = Kindelia$equal$($3591, _type$4);
                                                var _ityp$16 = List$mapped$($3590, Pair$snd);
                                                var _args$17 = List$zip$($3586, _ityp$16);
                                                var _args$18 = List$all$((_x$18 => {
                                                    var $3593 = Kindelia$check$(_context$1, _world$2, (() => {
                                                        var self = _x$18;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3594 = self.fst;
                                                                var $3595 = $3594;
                                                                return $3595;
                                                        };
                                                    })(), (() => {
                                                        var self = _x$18;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3596 = self.snd;
                                                                var $3597 = $3596;
                                                                return $3597;
                                                        };
                                                    })(), _caller$5);
                                                    return $3593;
                                                }), _args$17);
                                                var $3592 = (_otyp$15 && _args$18);
                                                var $3589 = $3592;
                                                break;
                                        };
                                        var $3587 = $3589;
                                        break;
                                    case 'Maybe.none':
                                        var $3598 = Bool$false;
                                        var $3587 = $3598;
                                        break;
                                };
                                var $3579 = $3587;
                                break;
                            case 'Kindelia.Term.let':
                                var $3599 = self.name;
                                var $3600 = self.type;
                                var $3601 = self.expr;
                                var $3602 = self.body;
                                var _expr$11 = Kindelia$check$(_context$1, _world$2, $3601, $3600, _caller$5);
                                var _ctx2$12 = Map$set$($3599, $3600, _context$1);
                                var _body$13 = Kindelia$check$(_ctx2$12, _world$2, $3602, _type$4, _caller$5);
                                var $3603 = (_expr$11 && _body$13);
                                var $3579 = $3603;
                                break;
                            case 'Kindelia.Term.create':
                                var $3604 = self.ctor;
                                var $3605 = self.vals;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.data':
                                        var $3607 = self.name;
                                        var self = Kindelia$get_data$(_world$2, $3607);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3609 = self.value;
                                                var _data$11 = $3609;
                                                var self = _data$11;
                                                switch (self._) {
                                                    case 'Kindelia.Data.new':
                                                        var self = Kindelia$get_constructor_value$(_data$11, $3604);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $3612 = self.value;
                                                                var _ctor$15 = $3612;
                                                                var self = _ctor$15;
                                                                switch (self._) {
                                                                    case 'Kindelia.Constructor.new':
                                                                        var $3614 = self.fprm;
                                                                        var _size$18 = ((list_length($3605)) === (list_length($3614)));
                                                                        var _ftyp$19 = List$mapped$($3614, Pair$snd);
                                                                        var _vals$20 = List$zip$($3605, _ftyp$19);
                                                                        var _vals$21 = List$all$((_x$21 => {
                                                                            var $3616 = Kindelia$check$(_context$1, _world$2, (() => {
                                                                                var self = _x$21;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3617 = self.fst;
                                                                                        var $3618 = $3617;
                                                                                        return $3618;
                                                                                };
                                                                            })(), (() => {
                                                                                var self = _x$21;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3619 = self.snd;
                                                                                        var $3620 = $3619;
                                                                                        return $3620;
                                                                                };
                                                                            })(), _caller$5);
                                                                            return $3616;
                                                                        }), _vals$20);
                                                                        var $3615 = (_size$18 && _vals$21);
                                                                        var $3613 = $3615;
                                                                        break;
                                                                };
                                                                var $3611 = $3613;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $3621 = Bool$false;
                                                                var $3611 = $3621;
                                                                break;
                                                        };
                                                        var $3610 = $3611;
                                                        break;
                                                };
                                                var $3608 = $3610;
                                                break;
                                            case 'Maybe.none':
                                                var $3622 = Bool$false;
                                                var $3608 = $3622;
                                                break;
                                        };
                                        var $3606 = $3608;
                                        break;
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.effe':
                                        var $3623 = Bool$false;
                                        var $3606 = $3623;
                                        break;
                                };
                                var $3579 = $3606;
                                break;
                            case 'Kindelia.Term.match':
                                var $3624 = self.name;
                                var $3625 = self.data;
                                var $3626 = self.cses;
                                var self = Kindelia$get_data$(_world$2, $3625);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3628 = self.value;
                                        var _data$11 = $3628;
                                        var self = _data$11;
                                        switch (self._) {
                                            case 'Kindelia.Data.new':
                                                var $3630 = self.constructors;
                                                var _size$14 = ((list_length($3626)) === (list_length($3630)));
                                                var _expr$15 = Kindelia$check$(_context$1, _world$2, Kindelia$Term$var$($3624), Kindelia$Type$data$($3625), _caller$5);
                                                var _cses$16 = List$zipped_with$($3626, $3630, (_case_body$16 => _case_ctor$17 => {
                                                    var _nams$18 = List$map$((_fprm$18 => {
                                                        var $3633 = ($3624 + ("." + (() => {
                                                            var self = _fprm$18;
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $3634 = self.fst;
                                                                    var $3635 = $3634;
                                                                    return $3635;
                                                            };
                                                        })()));
                                                        return $3633;
                                                    }), (() => {
                                                        var self = _case_ctor$17;
                                                        switch (self._) {
                                                            case 'Kindelia.Constructor.new':
                                                                var $3636 = self.fprm;
                                                                var $3637 = $3636;
                                                                return $3637;
                                                        };
                                                    })());
                                                    var _typs$19 = List$mapped$((() => {
                                                        var self = _case_ctor$17;
                                                        switch (self._) {
                                                            case 'Kindelia.Constructor.new':
                                                                var $3638 = self.fprm;
                                                                var $3639 = $3638;
                                                                return $3639;
                                                        };
                                                    })(), Pair$snd);
                                                    var _ctx2$20 = Kindelia$extend$(_context$1, _nams$18, _typs$19);
                                                    var $3632 = Kindelia$check$(_ctx2$20, _world$2, _case_body$16, _type$4, _caller$5);
                                                    return $3632;
                                                }));
                                                var $3631 = (_size$14 && List$and$(_cses$16));
                                                var $3629 = $3631;
                                                break;
                                        };
                                        var $3627 = $3629;
                                        break;
                                    case 'Maybe.none':
                                        var $3640 = Bool$false;
                                        var $3627 = $3640;
                                        break;
                                };
                                var $3579 = $3627;
                                break;
                            case 'Kindelia.Term.compare':
                                var $3641 = self.val0;
                                var $3642 = self.val1;
                                var $3643 = self.iflt;
                                var $3644 = self.ifeq;
                                var $3645 = self.ifgt;
                                var _val0$12 = Kindelia$check$(_context$1, _world$2, $3641, Kindelia$Type$word, _caller$5);
                                var _val1$13 = Kindelia$check$(_context$1, _world$2, $3642, Kindelia$Type$word, _caller$5);
                                var _iflt$14 = Kindelia$check$(_context$1, _world$2, $3643, _type$4, _caller$5);
                                var _ifeq$15 = Kindelia$check$(_context$1, _world$2, $3644, _type$4, _caller$5);
                                var _ifgt$16 = Kindelia$check$(_context$1, _world$2, $3645, _type$4, _caller$5);
                                var $3646 = (_val0$12 && (_val1$13 && (_iflt$14 && (_ifeq$15 && _ifgt$16))));
                                var $3579 = $3646;
                                break;
                            case 'Kindelia.Term.operate':
                                var $3647 = self.val0;
                                var $3648 = self.val1;
                                var _val0$10 = Kindelia$check$(_context$1, _world$2, $3647, Kindelia$Type$word, _caller$5);
                                var _val1$11 = Kindelia$check$(_context$1, _world$2, $3648, Kindelia$Type$word, _caller$5);
                                var $3649 = (_val0$10 && _val1$11);
                                var $3579 = $3649;
                                break;
                            case 'Kindelia.Term.set':
                                var $3650 = self.file;
                                var $3651 = self.expr;
                                var $3652 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3654 = Bool$false;
                                        var $3653 = $3654;
                                        break;
                                    case 'Kindelia.Type.effe':
                                        var self = Kindelia$get_file$(_world$2, $3650);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3656 = self.value;
                                                var _file$12 = $3656;
                                                var self = _file$12;
                                                switch (self._) {
                                                    case 'Kindelia.File.new':
                                                        var $3658 = self.ownr;
                                                        var $3659 = self.type;
                                                        var _empty$17 = List$is_empty$($3658);
                                                        var _valid$18 = Maybe$if$((_x$18 => {
                                                            var $3661 = List$in$(a1 => (_x$18 === a1), $3658);
                                                            return $3661;
                                                        }), _caller$5);
                                                        var _ownr$19 = (_empty$17 || _valid$18);
                                                        var _expr$20 = Kindelia$check$(_context$1, _world$2, $3651, $3659, _caller$5);
                                                        var _body$21 = Kindelia$check$(_context$1, _world$2, $3652, _type$4, _caller$5);
                                                        var $3660 = (_ownr$19 && (_expr$20 && _body$21));
                                                        var $3657 = $3660;
                                                        break;
                                                };
                                                var $3655 = $3657;
                                                break;
                                            case 'Maybe.none':
                                                var $3662 = Bool$false;
                                                var $3655 = $3662;
                                                break;
                                        };
                                        var $3653 = $3655;
                                        break;
                                };
                                var $3579 = $3653;
                                break;
                            case 'Kindelia.Term.get':
                                var $3663 = self.name;
                                var $3664 = self.file;
                                var $3665 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3667 = Bool$false;
                                        var $3666 = $3667;
                                        break;
                                    case 'Kindelia.Type.effe':
                                        var self = Kindelia$get_file$(_world$2, $3664);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3669 = self.value;
                                                var _file$12 = $3669;
                                                var self = _file$12;
                                                switch (self._) {
                                                    case 'Kindelia.File.new':
                                                        var $3671 = self.type;
                                                        var _ctx2$17 = Kindelia$extend$(_context$1, List$cons$($3663, List$nil), List$cons$($3671, List$nil));
                                                        var _body$18 = Kindelia$check$(_ctx2$17, _world$2, $3665, _type$4, _caller$5);
                                                        var $3672 = _body$18;
                                                        var $3670 = $3672;
                                                        break;
                                                };
                                                var $3668 = $3670;
                                                break;
                                            case 'Maybe.none':
                                                var $3673 = Bool$false;
                                                var $3668 = $3673;
                                                break;
                                        };
                                        var $3666 = $3668;
                                        break;
                                };
                                var $3579 = $3666;
                                break;
                            case 'Kindelia.Term.bind':
                                var $3674 = self.name;
                                var $3675 = self.type;
                                var $3676 = self.expr;
                                var $3677 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3679 = Bool$false;
                                        var $3678 = $3679;
                                        break;
                                    case 'Kindelia.Type.effe':
                                        var _expr$12 = Kindelia$check$(_context$1, _world$2, $3676, Kindelia$Type$effe$($3675), _caller$5);
                                        var _ctx2$13 = Map$set$($3674, $3675, _context$1);
                                        var _body$14 = Kindelia$check$(_ctx2$13, _world$2, $3677, _type$4, _caller$5);
                                        var $3680 = (_expr$12 && _body$14);
                                        var $3678 = $3680;
                                        break;
                                };
                                var $3579 = $3678;
                                break;
                            case 'Kindelia.Term.return':
                                var $3681 = self.expr;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.effe':
                                        var $3683 = self.rety;
                                        var $3684 = Kindelia$check$(_context$1, _world$2, $3681, $3683, _caller$5);
                                        var $3682 = $3684;
                                        break;
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3685 = Bool$false;
                                        var $3682 = $3685;
                                        break;
                                };
                                var $3579 = $3682;
                                break;
                            case 'Kindelia.Term.word':
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                        var $3687 = Bool$true;
                                        var $3686 = $3687;
                                        break;
                                    case 'Kindelia.Type.data':
                                    case 'Kindelia.Type.effe':
                                        var $3688 = Bool$false;
                                        var $3686 = $3688;
                                        break;
                                };
                                var $3579 = $3686;
                                break;
                        };
                        var $3578 = $3579;
                        break;
                };
                var $3577 = $3578;
                break;
            case 'BBT.bin':
                var self = _world$2;
                switch (self._) {
                    case 'Kindelia.World.new':
                        var self = _term$3;
                        switch (self._) {
                            case 'Kindelia.Term.var':
                                var $3691 = self.name;
                                var self = Map$get$($3691, _context$1);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3693 = self.value;
                                        var $3694 = Kindelia$equal$($3693, _type$4);
                                        var $3692 = $3694;
                                        break;
                                    case 'Maybe.none':
                                        var $3695 = Bool$false;
                                        var $3692 = $3695;
                                        break;
                                };
                                var $3690 = $3692;
                                break;
                            case 'Kindelia.Term.call':
                                var $3696 = self.bond;
                                var $3697 = self.args;
                                var self = Kindelia$get_bond$(_world$2, $3696);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3699 = self.value;
                                        var _bond$15 = $3699;
                                        var self = _bond$15;
                                        switch (self._) {
                                            case 'Kindelia.Bond.new':
                                                var $3701 = self.iprm;
                                                var $3702 = self.otyp;
                                                var _otyp$20 = Kindelia$equal$($3702, _type$4);
                                                var _ityp$21 = List$mapped$($3701, Pair$snd);
                                                var _args$22 = List$zip$($3697, _ityp$21);
                                                var _args$23 = List$all$((_x$23 => {
                                                    var $3704 = Kindelia$check$(_context$1, _world$2, (() => {
                                                        var self = _x$23;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3705 = self.fst;
                                                                var $3706 = $3705;
                                                                return $3706;
                                                        };
                                                    })(), (() => {
                                                        var self = _x$23;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3707 = self.snd;
                                                                var $3708 = $3707;
                                                                return $3708;
                                                        };
                                                    })(), _caller$5);
                                                    return $3704;
                                                }), _args$22);
                                                var $3703 = (_otyp$20 && _args$23);
                                                var $3700 = $3703;
                                                break;
                                        };
                                        var $3698 = $3700;
                                        break;
                                    case 'Maybe.none':
                                        var $3709 = Bool$false;
                                        var $3698 = $3709;
                                        break;
                                };
                                var $3690 = $3698;
                                break;
                            case 'Kindelia.Term.let':
                                var $3710 = self.name;
                                var $3711 = self.type;
                                var $3712 = self.expr;
                                var $3713 = self.body;
                                var _expr$16 = Kindelia$check$(_context$1, _world$2, $3712, $3711, _caller$5);
                                var _ctx2$17 = Map$set$($3710, $3711, _context$1);
                                var _body$18 = Kindelia$check$(_ctx2$17, _world$2, $3713, _type$4, _caller$5);
                                var $3714 = (_expr$16 && _body$18);
                                var $3690 = $3714;
                                break;
                            case 'Kindelia.Term.create':
                                var $3715 = self.ctor;
                                var $3716 = self.vals;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.data':
                                        var $3718 = self.name;
                                        var self = Kindelia$get_data$(_world$2, $3718);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3720 = self.value;
                                                var _data$16 = $3720;
                                                var self = _data$16;
                                                switch (self._) {
                                                    case 'Kindelia.Data.new':
                                                        var self = Kindelia$get_constructor_value$(_data$16, $3715);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $3723 = self.value;
                                                                var _ctor$20 = $3723;
                                                                var self = _ctor$20;
                                                                switch (self._) {
                                                                    case 'Kindelia.Constructor.new':
                                                                        var $3725 = self.fprm;
                                                                        var _size$23 = ((list_length($3716)) === (list_length($3725)));
                                                                        var _ftyp$24 = List$mapped$($3725, Pair$snd);
                                                                        var _vals$25 = List$zip$($3716, _ftyp$24);
                                                                        var _vals$26 = List$all$((_x$26 => {
                                                                            var $3727 = Kindelia$check$(_context$1, _world$2, (() => {
                                                                                var self = _x$26;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3728 = self.fst;
                                                                                        var $3729 = $3728;
                                                                                        return $3729;
                                                                                };
                                                                            })(), (() => {
                                                                                var self = _x$26;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3730 = self.snd;
                                                                                        var $3731 = $3730;
                                                                                        return $3731;
                                                                                };
                                                                            })(), _caller$5);
                                                                            return $3727;
                                                                        }), _vals$25);
                                                                        var $3726 = (_size$23 && _vals$26);
                                                                        var $3724 = $3726;
                                                                        break;
                                                                };
                                                                var $3722 = $3724;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $3732 = Bool$false;
                                                                var $3722 = $3732;
                                                                break;
                                                        };
                                                        var $3721 = $3722;
                                                        break;
                                                };
                                                var $3719 = $3721;
                                                break;
                                            case 'Maybe.none':
                                                var $3733 = Bool$false;
                                                var $3719 = $3733;
                                                break;
                                        };
                                        var $3717 = $3719;
                                        break;
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.effe':
                                        var $3734 = Bool$false;
                                        var $3717 = $3734;
                                        break;
                                };
                                var $3690 = $3717;
                                break;
                            case 'Kindelia.Term.match':
                                var $3735 = self.name;
                                var $3736 = self.data;
                                var $3737 = self.cses;
                                var self = Kindelia$get_data$(_world$2, $3736);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3739 = self.value;
                                        var _data$16 = $3739;
                                        var self = _data$16;
                                        switch (self._) {
                                            case 'Kindelia.Data.new':
                                                var $3741 = self.constructors;
                                                var _size$19 = ((list_length($3737)) === (list_length($3741)));
                                                var _expr$20 = Kindelia$check$(_context$1, _world$2, Kindelia$Term$var$($3735), Kindelia$Type$data$($3736), _caller$5);
                                                var _cses$21 = List$zipped_with$($3737, $3741, (_case_body$21 => _case_ctor$22 => {
                                                    var _nams$23 = List$map$((_fprm$23 => {
                                                        var $3744 = ($3735 + ("." + (() => {
                                                            var self = _fprm$23;
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $3745 = self.fst;
                                                                    var $3746 = $3745;
                                                                    return $3746;
                                                            };
                                                        })()));
                                                        return $3744;
                                                    }), (() => {
                                                        var self = _case_ctor$22;
                                                        switch (self._) {
                                                            case 'Kindelia.Constructor.new':
                                                                var $3747 = self.fprm;
                                                                var $3748 = $3747;
                                                                return $3748;
                                                        };
                                                    })());
                                                    var _typs$24 = List$mapped$((() => {
                                                        var self = _case_ctor$22;
                                                        switch (self._) {
                                                            case 'Kindelia.Constructor.new':
                                                                var $3749 = self.fprm;
                                                                var $3750 = $3749;
                                                                return $3750;
                                                        };
                                                    })(), Pair$snd);
                                                    var _ctx2$25 = Kindelia$extend$(_context$1, _nams$23, _typs$24);
                                                    var $3743 = Kindelia$check$(_ctx2$25, _world$2, _case_body$21, _type$4, _caller$5);
                                                    return $3743;
                                                }));
                                                var $3742 = (_size$19 && List$and$(_cses$21));
                                                var $3740 = $3742;
                                                break;
                                        };
                                        var $3738 = $3740;
                                        break;
                                    case 'Maybe.none':
                                        var $3751 = Bool$false;
                                        var $3738 = $3751;
                                        break;
                                };
                                var $3690 = $3738;
                                break;
                            case 'Kindelia.Term.compare':
                                var $3752 = self.val0;
                                var $3753 = self.val1;
                                var $3754 = self.iflt;
                                var $3755 = self.ifeq;
                                var $3756 = self.ifgt;
                                var _val0$17 = Kindelia$check$(_context$1, _world$2, $3752, Kindelia$Type$word, _caller$5);
                                var _val1$18 = Kindelia$check$(_context$1, _world$2, $3753, Kindelia$Type$word, _caller$5);
                                var _iflt$19 = Kindelia$check$(_context$1, _world$2, $3754, _type$4, _caller$5);
                                var _ifeq$20 = Kindelia$check$(_context$1, _world$2, $3755, _type$4, _caller$5);
                                var _ifgt$21 = Kindelia$check$(_context$1, _world$2, $3756, _type$4, _caller$5);
                                var $3757 = (_val0$17 && (_val1$18 && (_iflt$19 && (_ifeq$20 && _ifgt$21))));
                                var $3690 = $3757;
                                break;
                            case 'Kindelia.Term.operate':
                                var $3758 = self.val0;
                                var $3759 = self.val1;
                                var _val0$15 = Kindelia$check$(_context$1, _world$2, $3758, Kindelia$Type$word, _caller$5);
                                var _val1$16 = Kindelia$check$(_context$1, _world$2, $3759, Kindelia$Type$word, _caller$5);
                                var $3760 = (_val0$15 && _val1$16);
                                var $3690 = $3760;
                                break;
                            case 'Kindelia.Term.set':
                                var $3761 = self.file;
                                var $3762 = self.expr;
                                var $3763 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3765 = Bool$false;
                                        var $3764 = $3765;
                                        break;
                                    case 'Kindelia.Type.effe':
                                        var self = Kindelia$get_file$(_world$2, $3761);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3767 = self.value;
                                                var _file$17 = $3767;
                                                var self = _file$17;
                                                switch (self._) {
                                                    case 'Kindelia.File.new':
                                                        var $3769 = self.ownr;
                                                        var $3770 = self.type;
                                                        var _empty$22 = List$is_empty$($3769);
                                                        var _valid$23 = Maybe$if$((_x$23 => {
                                                            var $3772 = List$in$(a1 => (_x$23 === a1), $3769);
                                                            return $3772;
                                                        }), _caller$5);
                                                        var _ownr$24 = (_empty$22 || _valid$23);
                                                        var _expr$25 = Kindelia$check$(_context$1, _world$2, $3762, $3770, _caller$5);
                                                        var _body$26 = Kindelia$check$(_context$1, _world$2, $3763, _type$4, _caller$5);
                                                        var $3771 = (_ownr$24 && (_expr$25 && _body$26));
                                                        var $3768 = $3771;
                                                        break;
                                                };
                                                var $3766 = $3768;
                                                break;
                                            case 'Maybe.none':
                                                var $3773 = Bool$false;
                                                var $3766 = $3773;
                                                break;
                                        };
                                        var $3764 = $3766;
                                        break;
                                };
                                var $3690 = $3764;
                                break;
                            case 'Kindelia.Term.get':
                                var $3774 = self.name;
                                var $3775 = self.file;
                                var $3776 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3778 = Bool$false;
                                        var $3777 = $3778;
                                        break;
                                    case 'Kindelia.Type.effe':
                                        var self = Kindelia$get_file$(_world$2, $3775);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3780 = self.value;
                                                var _file$17 = $3780;
                                                var self = _file$17;
                                                switch (self._) {
                                                    case 'Kindelia.File.new':
                                                        var $3782 = self.type;
                                                        var _ctx2$22 = Kindelia$extend$(_context$1, List$cons$($3774, List$nil), List$cons$($3782, List$nil));
                                                        var _body$23 = Kindelia$check$(_ctx2$22, _world$2, $3776, _type$4, _caller$5);
                                                        var $3783 = _body$23;
                                                        var $3781 = $3783;
                                                        break;
                                                };
                                                var $3779 = $3781;
                                                break;
                                            case 'Maybe.none':
                                                var $3784 = Bool$false;
                                                var $3779 = $3784;
                                                break;
                                        };
                                        var $3777 = $3779;
                                        break;
                                };
                                var $3690 = $3777;
                                break;
                            case 'Kindelia.Term.bind':
                                var $3785 = self.name;
                                var $3786 = self.type;
                                var $3787 = self.expr;
                                var $3788 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3790 = Bool$false;
                                        var $3789 = $3790;
                                        break;
                                    case 'Kindelia.Type.effe':
                                        var _expr$17 = Kindelia$check$(_context$1, _world$2, $3787, Kindelia$Type$effe$($3786), _caller$5);
                                        var _ctx2$18 = Map$set$($3785, $3786, _context$1);
                                        var _body$19 = Kindelia$check$(_ctx2$18, _world$2, $3788, _type$4, _caller$5);
                                        var $3791 = (_expr$17 && _body$19);
                                        var $3789 = $3791;
                                        break;
                                };
                                var $3690 = $3789;
                                break;
                            case 'Kindelia.Term.return':
                                var $3792 = self.expr;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.effe':
                                        var $3794 = self.rety;
                                        var $3795 = Kindelia$check$(_context$1, _world$2, $3792, $3794, _caller$5);
                                        var $3793 = $3795;
                                        break;
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3796 = Bool$false;
                                        var $3793 = $3796;
                                        break;
                                };
                                var $3690 = $3793;
                                break;
                            case 'Kindelia.Term.word':
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                        var $3798 = Bool$true;
                                        var $3797 = $3798;
                                        break;
                                    case 'Kindelia.Type.data':
                                    case 'Kindelia.Type.effe':
                                        var $3799 = Bool$false;
                                        var $3797 = $3799;
                                        break;
                                };
                                var $3690 = $3797;
                                break;
                        };
                        var $3689 = $3690;
                        break;
                };
                var $3577 = $3689;
                break;
        };
        return $3577;
    };
    const Kindelia$check = x0 => x1 => x2 => x3 => x4 => Kindelia$check$(x0, x1, x2, x3, x4);

    function Kindelia$Entry$file$(_value$1) {
        var $3800 = ({
            _: 'Kindelia.Entry.file',
            'value': _value$1
        });
        return $3800;
    };
    const Kindelia$Entry$file = x0 => Kindelia$Entry$file$(x0);

    function Kindelia$sanitize$many$(_world$1, _table$2, _fresh$3, _terms$4) {
        var self = _terms$4;
        switch (self._) {
            case 'List.cons':
                var $3802 = self.head;
                var $3803 = self.tail;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3802);
                switch (self._) {
                    case 'Pair.new':
                        var $3805 = self.fst;
                        var $3806 = self.snd;
                        var self = Kindelia$sanitize$many$(_world$1, _table$2, $3805, $3803);
                        switch (self._) {
                            case 'Pair.new':
                                var $3808 = self.fst;
                                var $3809 = self.snd;
                                var $3810 = Pair$new$($3808, List$cons$($3806, $3809));
                                var $3807 = $3810;
                                break;
                        };
                        var $3804 = $3807;
                        break;
                };
                var $3801 = $3804;
                break;
            case 'List.nil':
                var $3811 = Pair$new$(_fresh$3, List$nil);
                var $3801 = $3811;
                break;
        };
        return $3801;
    };
    const Kindelia$sanitize$many = x0 => x1 => x2 => x3 => Kindelia$sanitize$many$(x0, x1, x2, x3);

    function Triple$new$(_fst$4, _snd$5, _trd$6) {
        var $3812 = ({
            _: 'Triple.new',
            'fst': _fst$4,
            'snd': _snd$5,
            'trd': _trd$6
        });
        return $3812;
    };
    const Triple$new = x0 => x1 => x2 => Triple$new$(x0, x1, x2);

    function Kindelia$rename$(_table$1, _fresh$2, _old_name$3) {
        var _new_name$4 = ("$" + Nat$show$(_fresh$2));
        var _table$5 = Map$set$(_old_name$3, _new_name$4, _table$1);
        var _fresh$6 = Nat$succ$(_fresh$2);
        var $3813 = Triple$new$(_table$5, _fresh$6, _new_name$4);
        return $3813;
    };
    const Kindelia$rename = x0 => x1 => x2 => Kindelia$rename$(x0, x1, x2);
    const List$for = a0 => a1 => a2 => (list_for(a0)(a1)(a2));

    function Kindelia$sanitize$cases$(_world$1, _table$2, _fresh$3, _old_name$4, _new_name$5, _ctrs$6, _cses$7) {
        var self = _ctrs$6;
        switch (self._) {
            case 'List.cons':
                var $3815 = self.head;
                var $3816 = self.tail;
                var self = _cses$7;
                switch (self._) {
                    case 'List.cons':
                        var $3818 = self.head;
                        var $3819 = self.tail;
                        var _new_table$12 = _table$2;
                        var _new_table$13 = (() => {
                            var $3822 = _new_table$12;
                            var self = $3815;
                            switch (self._) {
                                case 'Kindelia.Constructor.new':
                                    var $3824 = self.fprm;
                                    var $3825 = $3824;
                                    var $3823 = $3825;
                                    break;
                            };
                            let _new_table$14 = $3822;
                            let _field$13;
                            while ($3823._ === 'List.cons') {
                                _field$13 = $3823.head;
                                var $3822 = Map$set$((_old_name$4 + ("." + (() => {
                                    var self = _field$13;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3826 = self.fst;
                                            var $3827 = $3826;
                                            return $3827;
                                    };
                                })())), (_new_name$5 + ("." + (() => {
                                    var self = _field$13;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3828 = self.fst;
                                            var $3829 = $3828;
                                            return $3829;
                                    };
                                })())), _new_table$14);
                                _new_table$14 = $3822;
                                $3823 = $3823.tail;
                            }
                            return _new_table$14;
                        })();
                        var self = Kindelia$sanitize$(_world$1, _new_table$13, _fresh$3, $3818);
                        switch (self._) {
                            case 'Pair.new':
                                var $3830 = self.fst;
                                var $3831 = self.snd;
                                var self = Kindelia$sanitize$cases$(_world$1, _table$2, $3830, _old_name$4, _new_name$5, $3816, $3819);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3833 = self.fst;
                                        var $3834 = self.snd;
                                        var $3835 = Pair$new$($3833, List$cons$($3831, $3834));
                                        var $3832 = $3835;
                                        break;
                                };
                                var $3820 = $3832;
                                break;
                        };
                        var $3817 = $3820;
                        break;
                    case 'List.nil':
                        var $3836 = Pair$new$(_fresh$3, List$nil);
                        var $3817 = $3836;
                        break;
                };
                var $3814 = $3817;
                break;
            case 'List.nil':
                var self = _cses$7;
                switch (self._) {
                    case 'List.nil':
                    case 'List.cons':
                        var $3838 = Pair$new$(_fresh$3, List$nil);
                        var $3837 = $3838;
                        break;
                };
                var $3814 = $3837;
                break;
        };
        return $3814;
    };
    const Kindelia$sanitize$cases = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kindelia$sanitize$cases$(x0, x1, x2, x3, x4, x5, x6);

    function Kindelia$sanitize$(_world$1, _table$2, _fresh$3, _term$4) {
        var self = _term$4;
        switch (self._) {
            case 'Kindelia.Term.var':
                var $3840 = self.name;
                var _term$6 = Kindelia$Term$var$(Maybe$default$(Map$get$($3840, _table$2), $3840));
                var $3841 = Pair$new$(_fresh$3, _term$6);
                var $3839 = $3841;
                break;
            case 'Kindelia.Term.call':
                var $3842 = self.bond;
                var $3843 = self.args;
                var self = Kindelia$sanitize$many$(_world$1, _table$2, _fresh$3, $3843);
                switch (self._) {
                    case 'Pair.new':
                        var $3845 = self.fst;
                        var $3846 = self.snd;
                        var $3847 = Pair$new$($3845, Kindelia$Term$call$($3842, $3846));
                        var $3844 = $3847;
                        break;
                };
                var $3839 = $3844;
                break;
            case 'Kindelia.Term.let':
                var $3848 = self.name;
                var $3849 = self.type;
                var $3850 = self.expr;
                var $3851 = self.body;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3850);
                switch (self._) {
                    case 'Pair.new':
                        var $3853 = self.fst;
                        var $3854 = self.snd;
                        var self = Kindelia$rename$(_table$2, $3853, $3848);
                        switch (self._) {
                            case 'Triple.new':
                                var $3856 = self.fst;
                                var $3857 = self.snd;
                                var $3858 = self.trd;
                                var self = Kindelia$sanitize$(_world$1, $3856, $3857, $3851);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3860 = self.fst;
                                        var $3861 = self.snd;
                                        var $3862 = Pair$new$($3860, Kindelia$Term$let$($3858, $3849, $3854, $3861));
                                        var $3859 = $3862;
                                        break;
                                };
                                var $3855 = $3859;
                                break;
                        };
                        var $3852 = $3855;
                        break;
                };
                var $3839 = $3852;
                break;
            case 'Kindelia.Term.create':
                var $3863 = self.ctor;
                var $3864 = self.vals;
                var self = Kindelia$sanitize$many$(_world$1, _table$2, _fresh$3, $3864);
                switch (self._) {
                    case 'Pair.new':
                        var $3866 = self.fst;
                        var $3867 = self.snd;
                        var $3868 = Pair$new$($3866, Kindelia$Term$create$($3863, $3867));
                        var $3865 = $3868;
                        break;
                };
                var $3839 = $3865;
                break;
            case 'Kindelia.Term.match':
                var $3869 = self.name;
                var $3870 = self.data;
                var $3871 = self.cses;
                var _ctrs$8 = Maybe$default$(Kindelia$get_constructors$(_world$1, $3870), List$nil);
                var _old_name$9 = $3869;
                var _new_name$10 = Maybe$default$(Map$get$($3869, _table$2), $3869);
                var self = Kindelia$sanitize$cases$(_world$1, _table$2, _fresh$3, _old_name$9, _new_name$10, _ctrs$8, $3871);
                switch (self._) {
                    case 'Pair.new':
                        var $3873 = self.fst;
                        var $3874 = self.snd;
                        var $3875 = Pair$new$($3873, Kindelia$Term$match$(_new_name$10, $3870, $3874));
                        var $3872 = $3875;
                        break;
                };
                var $3839 = $3872;
                break;
            case 'Kindelia.Term.word':
                var $3876 = self.numb;
                var $3877 = Pair$new$(_fresh$3, Kindelia$Term$word$($3876));
                var $3839 = $3877;
                break;
            case 'Kindelia.Term.compare':
                var $3878 = self.val0;
                var $3879 = self.val1;
                var $3880 = self.iflt;
                var $3881 = self.ifeq;
                var $3882 = self.ifgt;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3878);
                switch (self._) {
                    case 'Pair.new':
                        var $3884 = self.fst;
                        var $3885 = self.snd;
                        var self = Kindelia$sanitize$(_world$1, _table$2, $3884, $3879);
                        switch (self._) {
                            case 'Pair.new':
                                var $3887 = self.fst;
                                var $3888 = self.snd;
                                var self = Kindelia$sanitize$(_world$1, _table$2, $3887, $3880);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3890 = self.fst;
                                        var $3891 = self.snd;
                                        var self = Kindelia$sanitize$(_world$1, _table$2, $3890, $3881);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3893 = self.fst;
                                                var $3894 = self.snd;
                                                var self = Kindelia$sanitize$(_world$1, _table$2, $3893, $3882);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3896 = self.fst;
                                                        var $3897 = self.snd;
                                                        var $3898 = Pair$new$($3896, Kindelia$Term$compare$($3885, $3888, $3891, $3894, $3897));
                                                        var $3895 = $3898;
                                                        break;
                                                };
                                                var $3892 = $3895;
                                                break;
                                        };
                                        var $3889 = $3892;
                                        break;
                                };
                                var $3886 = $3889;
                                break;
                        };
                        var $3883 = $3886;
                        break;
                };
                var $3839 = $3883;
                break;
            case 'Kindelia.Term.operate':
                var $3899 = self.oper;
                var $3900 = self.val0;
                var $3901 = self.val1;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3900);
                switch (self._) {
                    case 'Pair.new':
                        var $3903 = self.fst;
                        var $3904 = self.snd;
                        var self = Kindelia$sanitize$(_world$1, _table$2, $3903, $3901);
                        switch (self._) {
                            case 'Pair.new':
                                var $3906 = self.fst;
                                var $3907 = self.snd;
                                var $3908 = Pair$new$($3906, Kindelia$Term$operate$($3899, $3904, $3907));
                                var $3905 = $3908;
                                break;
                        };
                        var $3902 = $3905;
                        break;
                };
                var $3839 = $3902;
                break;
            case 'Kindelia.Term.set':
                var $3909 = self.file;
                var $3910 = self.expr;
                var $3911 = self.body;
                var self = Kindelia$get_file$(_world$1, $3909);
                switch (self._) {
                    case 'Maybe.some':
                        var $3913 = self.value;
                        var _file$9 = $3913;
                        var self = _file$9;
                        switch (self._) {
                            case 'Kindelia.File.new':
                                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3910);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3916 = self.fst;
                                        var $3917 = self.snd;
                                        var self = Kindelia$sanitize$(_world$1, _table$2, $3916, $3911);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3919 = self.fst;
                                                var $3920 = self.snd;
                                                var $3921 = Pair$new$($3919, Kindelia$Term$set$($3909, $3917, $3920));
                                                var $3918 = $3921;
                                                break;
                                        };
                                        var $3915 = $3918;
                                        break;
                                };
                                var $3914 = $3915;
                                break;
                        };
                        var $3912 = $3914;
                        break;
                    case 'Maybe.none':
                        var $3922 = Pair$new$(_fresh$3, _term$4);
                        var $3912 = $3922;
                        break;
                };
                var $3839 = $3912;
                break;
            case 'Kindelia.Term.get':
                var $3923 = self.name;
                var $3924 = self.file;
                var $3925 = self.body;
                var self = Kindelia$get_file$(_world$1, $3924);
                switch (self._) {
                    case 'Maybe.some':
                        var $3927 = self.value;
                        var _file$9 = $3927;
                        var self = _file$9;
                        switch (self._) {
                            case 'Kindelia.File.new':
                                var self = Kindelia$rename$(_table$2, _fresh$3, $3923);
                                switch (self._) {
                                    case 'Triple.new':
                                        var $3930 = self.fst;
                                        var $3931 = self.snd;
                                        var $3932 = self.trd;
                                        var self = Kindelia$sanitize$(_world$1, $3930, $3931, $3925);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3934 = self.fst;
                                                var $3935 = self.snd;
                                                var $3936 = Pair$new$($3934, Kindelia$Term$get$($3932, $3924, $3935));
                                                var $3933 = $3936;
                                                break;
                                        };
                                        var $3929 = $3933;
                                        break;
                                };
                                var $3928 = $3929;
                                break;
                        };
                        var $3926 = $3928;
                        break;
                    case 'Maybe.none':
                        var $3937 = Pair$new$(_fresh$3, _term$4);
                        var $3926 = $3937;
                        break;
                };
                var $3839 = $3926;
                break;
            case 'Kindelia.Term.bind':
                var $3938 = self.name;
                var $3939 = self.type;
                var $3940 = self.expr;
                var $3941 = self.body;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3940);
                switch (self._) {
                    case 'Pair.new':
                        var $3943 = self.fst;
                        var $3944 = self.snd;
                        var self = Kindelia$rename$(_table$2, $3943, $3938);
                        switch (self._) {
                            case 'Triple.new':
                                var $3946 = self.fst;
                                var $3947 = self.snd;
                                var $3948 = self.trd;
                                var self = Kindelia$sanitize$(_world$1, $3946, $3947, $3941);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3950 = self.fst;
                                        var $3951 = self.snd;
                                        var $3952 = Pair$new$($3950, Kindelia$Term$bind$($3948, $3939, $3944, $3951));
                                        var $3949 = $3952;
                                        break;
                                };
                                var $3945 = $3949;
                                break;
                        };
                        var $3942 = $3945;
                        break;
                };
                var $3839 = $3942;
                break;
            case 'Kindelia.Term.return':
                var $3953 = self.expr;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3953);
                switch (self._) {
                    case 'Pair.new':
                        var $3955 = self.fst;
                        var $3956 = self.snd;
                        var $3957 = Pair$new$($3955, Kindelia$Term$return$($3956));
                        var $3954 = $3957;
                        break;
                };
                var $3839 = $3954;
                break;
        };
        return $3839;
    };
    const Kindelia$sanitize = x0 => x1 => x2 => x3 => Kindelia$sanitize$(x0, x1, x2, x3);

    function Kindelia$Runtime$(_A$1) {
        var $3958 = null;
        return $3958;
    };
    const Kindelia$Runtime = x0 => Kindelia$Runtime$(x0);

    function Kindelia$Runtime$new$(_world$2, _subst$3, _fresh$4, _gas$5, _term$6) {
        var $3959 = ({
            _: 'Kindelia.Runtime.new',
            'world': _world$2,
            'subst': _subst$3,
            'fresh': _fresh$4,
            'gas': _gas$5,
            'term': _term$6
        });
        return $3959;
    };
    const Kindelia$Runtime$new = x0 => x1 => x2 => x3 => x4 => Kindelia$Runtime$new$(x0, x1, x2, x3, x4);

    function Triple$(_A$1, _B$2, _C$3) {
        var $3960 = null;
        return $3960;
    };
    const Triple = x0 => x1 => x2 => Triple$(x0, x1, x2);

    function Kindelia$rename$many$(_table$1, _fresh$2, _names$3) {
        var self = _names$3;
        switch (self._) {
            case 'List.cons':
                var $3962 = self.head;
                var $3963 = self.tail;
                var self = Kindelia$rename$(_table$1, _fresh$2, $3962);
                switch (self._) {
                    case 'Triple.new':
                        var $3965 = self.fst;
                        var $3966 = self.snd;
                        var $3967 = self.trd;
                        var self = Kindelia$rename$many$($3965, $3966, $3963);
                        switch (self._) {
                            case 'Triple.new':
                                var $3969 = self.fst;
                                var $3970 = self.snd;
                                var $3971 = self.trd;
                                var $3972 = Triple$new$($3969, $3970, List$cons$($3967, $3971));
                                var $3968 = $3972;
                                break;
                        };
                        var $3964 = $3968;
                        break;
                };
                var $3961 = $3964;
                break;
            case 'List.nil':
                var $3973 = Triple$new$(_table$1, _fresh$2, List$nil);
                var $3961 = $3973;
                break;
        };
        return $3961;
    };
    const Kindelia$rename$many = x0 => x1 => x2 => Kindelia$rename$many$(x0, x1, x2);

    function Kindelia$get_constructor_index$(_data$1, _name$2) {
        var $3974 = Maybe$mapped$(List$ifind$((_i$3 => _ctr$4 => {
            var $3975 = ((() => {
                var self = _ctr$4;
                switch (self._) {
                    case 'Kindelia.Constructor.new':
                        var $3976 = self.name;
                        var $3977 = $3976;
                        return $3977;
                };
            })() === _name$2);
            return $3975;
        }), (() => {
            var self = _data$1;
            switch (self._) {
                case 'Kindelia.Data.new':
                    var $3978 = self.constructors;
                    var $3979 = $3978;
                    return $3979;
            };
        })()), (_x$3 => {
            var self = _x$3;
            switch (self._) {
                case 'Pair.new':
                    var $3981 = self.fst;
                    var $3982 = $3981;
                    var $3980 = $3982;
                    break;
            };
            return $3980;
        }));
        return $3974;
    };
    const Kindelia$get_constructor_index = x0 => x1 => Kindelia$get_constructor_index$(x0, x1);
    const U64$ltn = a0 => a1 => (a0 < a1);
    const U64$eql = a0 => a1 => (a0 === a1);

    function U64$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $3984 = Cmp$ltn;
            var $3983 = $3984;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $3986 = Cmp$eql;
                var $3985 = $3986;
            } else {
                var $3987 = Cmp$gtn;
                var $3985 = $3987;
            };
            var $3983 = $3985;
        };
        return $3983;
    };
    const U64$cmp = x0 => x1 => U64$cmp$(x0, x1);
    const U64$add = a0 => a1 => ((a0 + a1) & 0xFFFFFFFFFFFFFFFFn);
    const U64$sub = a0 => a1 => ((a0 - a1) & 0xFFFFFFFFFFFFFFFFn);
    const U64$mul = a0 => a1 => ((a0 * a1) & 0xFFFFFFFFFFFFFFFFn);

    function Word$bit_length$go$(_word$2, _c$3, _n$4) {
        var Word$bit_length$go$ = (_word$2, _c$3, _n$4) => ({
            ctr: 'TCO',
            arg: [_word$2, _c$3, _n$4]
        });
        var Word$bit_length$go = _word$2 => _c$3 => _n$4 => Word$bit_length$go$(_word$2, _c$3, _n$4);
        var arg = [_word$2, _c$3, _n$4];
        while (true) {
            let [_word$2, _c$3, _n$4] = arg;
            var R = (() => {
                var self = _word$2;
                switch (self._) {
                    case 'Word.o':
                        var $3988 = self.pred;
                        var $3989 = Word$bit_length$go$($3988, Nat$succ$(_c$3), _n$4);
                        return $3989;
                    case 'Word.i':
                        var $3990 = self.pred;
                        var $3991 = Word$bit_length$go$($3990, Nat$succ$(_c$3), Nat$succ$(_c$3));
                        return $3991;
                    case 'Word.e':
                        var $3992 = _n$4;
                        return $3992;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$bit_length$go = x0 => x1 => x2 => Word$bit_length$go$(x0, x1, x2);

    function Word$bit_length$(_word$2) {
        var $3993 = Word$bit_length$go$(_word$2, 0n, 0n);
        return $3993;
    };
    const Word$bit_length = x0 => Word$bit_length$(x0);

    function Cmp$as_gte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $3995 = Bool$false;
                var $3994 = $3995;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $3996 = Bool$true;
                var $3994 = $3996;
                break;
        };
        return $3994;
    };
    const Cmp$as_gte = x0 => Cmp$as_gte$(x0);

    function Word$gte$(_a$2, _b$3) {
        var $3997 = Cmp$as_gte$(Word$cmp$(_a$2, _b$3));
        return $3997;
    };
    const Word$gte = x0 => x1 => Word$gte$(x0, x1);

    function Word$or$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $3999 = self.pred;
                var $4000 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4002 = self.pred;
                            var $4003 = (_a$pred$9 => {
                                var $4004 = Word$o$(Word$or$(_a$pred$9, $4002));
                                return $4004;
                            });
                            var $4001 = $4003;
                            break;
                        case 'Word.i':
                            var $4005 = self.pred;
                            var $4006 = (_a$pred$9 => {
                                var $4007 = Word$i$(Word$or$(_a$pred$9, $4005));
                                return $4007;
                            });
                            var $4001 = $4006;
                            break;
                        case 'Word.e':
                            var $4008 = (_a$pred$7 => {
                                var $4009 = Word$e;
                                return $4009;
                            });
                            var $4001 = $4008;
                            break;
                    };
                    var $4001 = $4001($3999);
                    return $4001;
                });
                var $3998 = $4000;
                break;
            case 'Word.i':
                var $4010 = self.pred;
                var $4011 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4013 = self.pred;
                            var $4014 = (_a$pred$9 => {
                                var $4015 = Word$i$(Word$or$(_a$pred$9, $4013));
                                return $4015;
                            });
                            var $4012 = $4014;
                            break;
                        case 'Word.i':
                            var $4016 = self.pred;
                            var $4017 = (_a$pred$9 => {
                                var $4018 = Word$i$(Word$or$(_a$pred$9, $4016));
                                return $4018;
                            });
                            var $4012 = $4017;
                            break;
                        case 'Word.e':
                            var $4019 = (_a$pred$7 => {
                                var $4020 = Word$e;
                                return $4020;
                            });
                            var $4012 = $4019;
                            break;
                    };
                    var $4012 = $4012($4010);
                    return $4012;
                });
                var $3998 = $4011;
                break;
            case 'Word.e':
                var $4021 = (_b$4 => {
                    var $4022 = Word$e;
                    return $4022;
                });
                var $3998 = $4021;
                break;
        };
        var $3998 = $3998(_b$3);
        return $3998;
    };
    const Word$or = x0 => x1 => Word$or$(x0, x1);

    function Word$shift_right$one$go$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $4024 = self.pred;
                var $4025 = Word$o$(Word$shift_right$one$go$($4024));
                var $4023 = $4025;
                break;
            case 'Word.i':
                var $4026 = self.pred;
                var $4027 = Word$i$(Word$shift_right$one$go$($4026));
                var $4023 = $4027;
                break;
            case 'Word.e':
                var $4028 = Word$o$(Word$e);
                var $4023 = $4028;
                break;
        };
        return $4023;
    };
    const Word$shift_right$one$go = x0 => Word$shift_right$one$go$(x0);

    function Word$shift_right$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $4030 = self.pred;
                var $4031 = Word$shift_right$one$go$($4030);
                var $4029 = $4031;
                break;
            case 'Word.i':
                var $4032 = self.pred;
                var $4033 = Word$shift_right$one$go$($4032);
                var $4029 = $4033;
                break;
            case 'Word.e':
                var $4034 = Word$e;
                var $4029 = $4034;
                break;
        };
        return $4029;
    };
    const Word$shift_right$one = x0 => Word$shift_right$one$(x0);

    function Word$shift_right$(_value$2, _n$3) {
        var Word$shift_right$ = (_value$2, _n$3) => ({
            ctr: 'TCO',
            arg: [_value$2, _n$3]
        });
        var Word$shift_right = _value$2 => _n$3 => Word$shift_right$(_value$2, _n$3);
        var arg = [_value$2, _n$3];
        while (true) {
            let [_value$2, _n$3] = arg;
            var R = (() => {
                var self = _n$3;
                if (self === 0n) {
                    var $4035 = _value$2;
                    return $4035;
                } else {
                    var $4036 = (self - 1n);
                    var $4037 = Word$shift_right$(Word$shift_right$one$(_value$2), $4036);
                    return $4037;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_right = x0 => x1 => Word$shift_right$(x0, x1);

    function Word$div$go$(_shift$2, _sub_copy$3, _shift_copy$4, _value$5) {
        var Word$div$go$ = (_shift$2, _sub_copy$3, _shift_copy$4, _value$5) => ({
            ctr: 'TCO',
            arg: [_shift$2, _sub_copy$3, _shift_copy$4, _value$5]
        });
        var Word$div$go = _shift$2 => _sub_copy$3 => _shift_copy$4 => _value$5 => Word$div$go$(_shift$2, _sub_copy$3, _shift_copy$4, _value$5);
        var arg = [_shift$2, _sub_copy$3, _shift_copy$4, _value$5];
        while (true) {
            let [_shift$2, _sub_copy$3, _shift_copy$4, _value$5] = arg;
            var R = (() => {
                var self = Word$gte$(_sub_copy$3, _shift_copy$4);
                if (self) {
                    var _mask$6 = Word$shift_left$(Word$inc$(Word$to_zero$(_sub_copy$3)), _shift$2);
                    var $4038 = Pair$new$(Bool$true, Word$or$(_value$5, _mask$6));
                    var self = $4038;
                } else {
                    var $4039 = Pair$new$(Bool$false, _value$5);
                    var self = $4039;
                };
                switch (self._) {
                    case 'Pair.new':
                        var $4040 = self.fst;
                        var $4041 = self.snd;
                        var self = _shift$2;
                        if (self === 0n) {
                            var $4043 = $4041;
                            var $4042 = $4043;
                        } else {
                            var $4044 = (self - 1n);
                            var _new_shift_copy$9 = Word$shift_right$(_shift_copy$4, 1n);
                            var self = $4040;
                            if (self) {
                                var $4046 = Word$div$go$($4044, Word$sub$(_sub_copy$3, _shift_copy$4), _new_shift_copy$9, $4041);
                                var $4045 = $4046;
                            } else {
                                var $4047 = Word$div$go$($4044, _sub_copy$3, _new_shift_copy$9, $4041);
                                var $4045 = $4047;
                            };
                            var $4042 = $4045;
                        };
                        return $4042;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$div$go = x0 => x1 => x2 => x3 => Word$div$go$(x0, x1, x2, x3);

    function Word$div$(_a$2, _b$3) {
        var _a_bits$4 = Word$bit_length$(_a$2);
        var _b_bits$5 = Word$bit_length$(_b$3);
        var self = (_a_bits$4 < _b_bits$5);
        if (self) {
            var $4049 = Word$to_zero$(_a$2);
            var $4048 = $4049;
        } else {
            var _shift$6 = (_a_bits$4 - _b_bits$5 <= 0n ? 0n : _a_bits$4 - _b_bits$5);
            var _shift_copy$7 = Word$shift_left$(_b$3, _shift$6);
            var $4050 = Word$div$go$(_shift$6, _a$2, _shift_copy$7, Word$to_zero$(_a$2));
            var $4048 = $4050;
        };
        return $4048;
    };
    const Word$div = x0 => x1 => Word$div$(x0, x1);
    const U64$div = a0 => a1 => ((a0 / a1) & 0xFFFFFFFFFFFFFFFFn);

    function Word$mod$(_a$2, _b$3) {
        var _q$4 = Word$div$(_a$2, _b$3);
        var $4051 = Word$sub$(_a$2, Word$mul$(_b$3, _q$4));
        return $4051;
    };
    const Word$mod = x0 => x1 => Word$mod$(x0, x1);
    const U64$mod = a0 => a1 => (a0 % a1);
    const U64$or = a0 => a1 => (a0 | a1);

    function Word$and$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $4053 = self.pred;
                var $4054 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4056 = self.pred;
                            var $4057 = (_a$pred$9 => {
                                var $4058 = Word$o$(Word$and$(_a$pred$9, $4056));
                                return $4058;
                            });
                            var $4055 = $4057;
                            break;
                        case 'Word.i':
                            var $4059 = self.pred;
                            var $4060 = (_a$pred$9 => {
                                var $4061 = Word$o$(Word$and$(_a$pred$9, $4059));
                                return $4061;
                            });
                            var $4055 = $4060;
                            break;
                        case 'Word.e':
                            var $4062 = (_a$pred$7 => {
                                var $4063 = Word$e;
                                return $4063;
                            });
                            var $4055 = $4062;
                            break;
                    };
                    var $4055 = $4055($4053);
                    return $4055;
                });
                var $4052 = $4054;
                break;
            case 'Word.i':
                var $4064 = self.pred;
                var $4065 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4067 = self.pred;
                            var $4068 = (_a$pred$9 => {
                                var $4069 = Word$o$(Word$and$(_a$pred$9, $4067));
                                return $4069;
                            });
                            var $4066 = $4068;
                            break;
                        case 'Word.i':
                            var $4070 = self.pred;
                            var $4071 = (_a$pred$9 => {
                                var $4072 = Word$i$(Word$and$(_a$pred$9, $4070));
                                return $4072;
                            });
                            var $4066 = $4071;
                            break;
                        case 'Word.e':
                            var $4073 = (_a$pred$7 => {
                                var $4074 = Word$e;
                                return $4074;
                            });
                            var $4066 = $4073;
                            break;
                    };
                    var $4066 = $4066($4064);
                    return $4066;
                });
                var $4052 = $4065;
                break;
            case 'Word.e':
                var $4075 = (_b$4 => {
                    var $4076 = Word$e;
                    return $4076;
                });
                var $4052 = $4075;
                break;
        };
        var $4052 = $4052(_b$3);
        return $4052;
    };
    const Word$and = x0 => x1 => Word$and$(x0, x1);
    const U64$and = a0 => a1 => (a0 & a1);

    function Word$xor$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $4078 = self.pred;
                var $4079 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4081 = self.pred;
                            var $4082 = (_a$pred$9 => {
                                var $4083 = Word$o$(Word$xor$(_a$pred$9, $4081));
                                return $4083;
                            });
                            var $4080 = $4082;
                            break;
                        case 'Word.i':
                            var $4084 = self.pred;
                            var $4085 = (_a$pred$9 => {
                                var $4086 = Word$i$(Word$xor$(_a$pred$9, $4084));
                                return $4086;
                            });
                            var $4080 = $4085;
                            break;
                        case 'Word.e':
                            var $4087 = (_a$pred$7 => {
                                var $4088 = Word$e;
                                return $4088;
                            });
                            var $4080 = $4087;
                            break;
                    };
                    var $4080 = $4080($4078);
                    return $4080;
                });
                var $4077 = $4079;
                break;
            case 'Word.i':
                var $4089 = self.pred;
                var $4090 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4092 = self.pred;
                            var $4093 = (_a$pred$9 => {
                                var $4094 = Word$i$(Word$xor$(_a$pred$9, $4092));
                                return $4094;
                            });
                            var $4091 = $4093;
                            break;
                        case 'Word.i':
                            var $4095 = self.pred;
                            var $4096 = (_a$pred$9 => {
                                var $4097 = Word$o$(Word$xor$(_a$pred$9, $4095));
                                return $4097;
                            });
                            var $4091 = $4096;
                            break;
                        case 'Word.e':
                            var $4098 = (_a$pred$7 => {
                                var $4099 = Word$e;
                                return $4099;
                            });
                            var $4091 = $4098;
                            break;
                    };
                    var $4091 = $4091($4089);
                    return $4091;
                });
                var $4077 = $4090;
                break;
            case 'Word.e':
                var $4100 = (_b$4 => {
                    var $4101 = Word$e;
                    return $4101;
                });
                var $4077 = $4100;
                break;
        };
        var $4077 = $4077(_b$3);
        return $4077;
    };
    const Word$xor = x0 => x1 => Word$xor$(x0, x1);
    const U64$xor = a0 => a1 => (a0 ^ a1);

    function Kindelia$reduce$(_state$1) {
        var self = _state$1;
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4103 = self.world;
                var $4104 = self.subst;
                var $4105 = self.fresh;
                var $4106 = self.gas;
                var $4107 = self.term;
                var self = $4107;
                switch (self._) {
                    case 'Kindelia.Term.var':
                        var $4109 = self.name;
                        var _term$8 = Maybe$default$(Map$get$($4109, $4104), $4107);
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4103, $4104, $4105, $4106, _term$8));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4111 = self.world;
                                var $4112 = self.subst;
                                var $4113 = self.fresh;
                                var $4114 = self.gas;
                                var $4115 = self.term;
                                var $4116 = Kindelia$Runtime$new$($4111, Map$set$($4109, $4115, $4112), $4113, $4114, $4115);
                                var $4110 = $4116;
                                break;
                        };
                        var $4108 = $4110;
                        break;
                    case 'Kindelia.Term.call':
                        var $4117 = self.bond;
                        var $4118 = self.args;
                        var self = Kindelia$get_bond$($4103, $4117);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4120 = self.value;
                                var _bond$10 = $4120;
                                var self = _bond$10;
                                switch (self._) {
                                    case 'Kindelia.Bond.new':
                                        var $4122 = self.iprm;
                                        var $4123 = self.main;
                                        var _inam$15 = List$mapped$($4122, Pair$fst);
                                        var self = Kindelia$rename$many$(Map$from_list$(List$nil), $4105, _inam$15);
                                        switch (self._) {
                                            case 'Triple.new':
                                                var $4125 = self.fst;
                                                var $4126 = self.snd;
                                                var $4127 = self.trd;
                                                var self = Kindelia$sanitize$($4103, $4125, $4126, $4123);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $4129 = self.fst;
                                                        var $4130 = self.snd;
                                                        var _subst$21 = Kindelia$extend$($4104, $4127, $4118);
                                                        var $4131 = Kindelia$reduce$(Kindelia$Runtime$new$($4103, _subst$21, $4129, $4106, $4130));
                                                        var $4128 = $4131;
                                                        break;
                                                };
                                                var $4124 = $4128;
                                                break;
                                        };
                                        var $4121 = $4124;
                                        break;
                                };
                                var $4119 = $4121;
                                break;
                            case 'Maybe.none':
                                var $4132 = _state$1;
                                var $4119 = $4132;
                                break;
                        };
                        var $4108 = $4119;
                        break;
                    case 'Kindelia.Term.let':
                        var $4133 = self.name;
                        var $4134 = self.expr;
                        var $4135 = self.body;
                        var $4136 = Kindelia$reduce$(Kindelia$Runtime$new$($4103, Map$set$($4133, $4134, $4104), $4105, $4106, $4135));
                        var $4108 = $4136;
                        break;
                    case 'Kindelia.Term.match':
                        var $4137 = self.name;
                        var $4138 = self.data;
                        var $4139 = self.cses;
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4103, $4104, $4105, $4106, Maybe$default$(Map$get$($4137, $4104), Kindelia$Term$word$(0n))));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4141 = self.world;
                                var $4142 = self.subst;
                                var $4143 = self.fresh;
                                var $4144 = self.gas;
                                var $4145 = self.term;
                                var self = $4145;
                                switch (self._) {
                                    case 'Kindelia.Term.create':
                                        var $4147 = self.ctor;
                                        var $4148 = self.vals;
                                        var self = Kindelia$get_data$($4141, $4138);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $4150 = self.value;
                                                var _data$18 = $4150;
                                                var self = _data$18;
                                                switch (self._) {
                                                    case 'Kindelia.Data.new':
                                                        var self = Kindelia$get_constructor_value$(_data$18, $4147);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $4153 = self.value;
                                                                var _ctor$22 = $4153;
                                                                var self = _ctor$22;
                                                                switch (self._) {
                                                                    case 'Kindelia.Constructor.new':
                                                                        var self = Kindelia$get_constructor_index$(_data$18, $4147);
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4156 = self.value;
                                                                                var self = List$get$($4156, $4139);
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $4158 = self.value;
                                                                                        var _nams$27 = List$map$((_fprm$27 => {
                                                                                            var $4160 = ($4137 + ("." + (() => {
                                                                                                var self = _fprm$27;
                                                                                                switch (self._) {
                                                                                                    case 'Pair.new':
                                                                                                        var $4161 = self.fst;
                                                                                                        var $4162 = $4161;
                                                                                                        return $4162;
                                                                                                };
                                                                                            })()));
                                                                                            return $4160;
                                                                                        }), (() => {
                                                                                            var self = _ctor$22;
                                                                                            switch (self._) {
                                                                                                case 'Kindelia.Constructor.new':
                                                                                                    var $4163 = self.fprm;
                                                                                                    var $4164 = $4163;
                                                                                                    return $4164;
                                                                                            };
                                                                                        })());
                                                                                        var _subst$28 = Kindelia$extend$($4142, _nams$27, $4148);
                                                                                        var $4159 = Kindelia$reduce$(Kindelia$Runtime$new$($4141, _subst$28, $4143, $4144, $4158));
                                                                                        var $4157 = $4159;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $4165 = _state$1;
                                                                                        var $4157 = $4165;
                                                                                        break;
                                                                                };
                                                                                var $4155 = $4157;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4166 = _state$1;
                                                                                var $4155 = $4166;
                                                                                break;
                                                                        };
                                                                        var $4154 = $4155;
                                                                        break;
                                                                };
                                                                var $4152 = $4154;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $4167 = _state$1;
                                                                var $4152 = $4167;
                                                                break;
                                                        };
                                                        var $4151 = $4152;
                                                        break;
                                                };
                                                var $4149 = $4151;
                                                break;
                                            case 'Maybe.none':
                                                var $4168 = _state$1;
                                                var $4149 = $4168;
                                                break;
                                        };
                                        var $4146 = $4149;
                                        break;
                                    case 'Kindelia.Term.var':
                                    case 'Kindelia.Term.call':
                                    case 'Kindelia.Term.let':
                                    case 'Kindelia.Term.match':
                                    case 'Kindelia.Term.word':
                                    case 'Kindelia.Term.compare':
                                    case 'Kindelia.Term.operate':
                                    case 'Kindelia.Term.set':
                                    case 'Kindelia.Term.get':
                                    case 'Kindelia.Term.bind':
                                    case 'Kindelia.Term.return':
                                        var $4169 = _state$1;
                                        var $4146 = $4169;
                                        break;
                                };
                                var $4140 = $4146;
                                break;
                        };
                        var $4108 = $4140;
                        break;
                    case 'Kindelia.Term.compare':
                        var $4170 = self.val0;
                        var $4171 = self.val1;
                        var $4172 = self.iflt;
                        var $4173 = self.ifeq;
                        var $4174 = self.ifgt;
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4103, $4104, $4105, $4106, $4170));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4176 = self.world;
                                var $4177 = self.subst;
                                var $4178 = self.fresh;
                                var $4179 = self.gas;
                                var $4180 = self.term;
                                var self = Kindelia$reduce$(Kindelia$Runtime$new$($4176, $4177, $4178, $4179, $4171));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4182 = self.world;
                                        var $4183 = self.subst;
                                        var $4184 = self.fresh;
                                        var $4185 = self.gas;
                                        var $4186 = self.term;
                                        var self = $4180;
                                        switch (self._) {
                                            case 'Kindelia.Term.word':
                                                var $4188 = self.numb;
                                                var self = $4186;
                                                switch (self._) {
                                                    case 'Kindelia.Term.word':
                                                        var $4190 = self.numb;
                                                        var self = U64$cmp$($4188, $4190);
                                                        switch (self._) {
                                                            case 'Cmp.ltn':
                                                                var $4192 = Kindelia$reduce$(Kindelia$Runtime$new$($4182, $4183, $4184, $4185, $4172));
                                                                var $4191 = $4192;
                                                                break;
                                                            case 'Cmp.eql':
                                                                var $4193 = Kindelia$reduce$(Kindelia$Runtime$new$($4182, $4183, $4184, $4185, $4173));
                                                                var $4191 = $4193;
                                                                break;
                                                            case 'Cmp.gtn':
                                                                var $4194 = Kindelia$reduce$(Kindelia$Runtime$new$($4182, $4183, $4184, $4185, $4174));
                                                                var $4191 = $4194;
                                                                break;
                                                        };
                                                        var $4189 = $4191;
                                                        break;
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4195 = _state$1;
                                                        var $4189 = $4195;
                                                        break;
                                                };
                                                var $4187 = $4189;
                                                break;
                                            case 'Kindelia.Term.var':
                                            case 'Kindelia.Term.return':
                                                var self = $4186;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4197 = _state$1;
                                                        var $4196 = $4197;
                                                        break;
                                                };
                                                var $4187 = $4196;
                                                break;
                                            case 'Kindelia.Term.call':
                                            case 'Kindelia.Term.create':
                                                var self = $4186;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4199 = _state$1;
                                                        var $4198 = $4199;
                                                        break;
                                                };
                                                var $4187 = $4198;
                                                break;
                                            case 'Kindelia.Term.let':
                                            case 'Kindelia.Term.bind':
                                                var self = $4186;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4201 = _state$1;
                                                        var $4200 = $4201;
                                                        break;
                                                };
                                                var $4187 = $4200;
                                                break;
                                            case 'Kindelia.Term.match':
                                            case 'Kindelia.Term.operate':
                                            case 'Kindelia.Term.set':
                                            case 'Kindelia.Term.get':
                                                var self = $4186;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4203 = _state$1;
                                                        var $4202 = $4203;
                                                        break;
                                                };
                                                var $4187 = $4202;
                                                break;
                                            case 'Kindelia.Term.compare':
                                                var self = $4186;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4205 = _state$1;
                                                        var $4204 = $4205;
                                                        break;
                                                };
                                                var $4187 = $4204;
                                                break;
                                        };
                                        var $4181 = $4187;
                                        break;
                                };
                                var $4175 = $4181;
                                break;
                        };
                        var $4108 = $4175;
                        break;
                    case 'Kindelia.Term.operate':
                        var $4206 = self.oper;
                        var $4207 = self.val0;
                        var $4208 = self.val1;
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4103, $4104, $4105, $4106, $4207));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4210 = self.world;
                                var $4211 = self.subst;
                                var $4212 = self.fresh;
                                var $4213 = self.gas;
                                var $4214 = self.term;
                                var self = Kindelia$reduce$(Kindelia$Runtime$new$($4210, $4211, $4212, $4213, $4208));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4216 = self.world;
                                        var $4217 = self.subst;
                                        var $4218 = self.fresh;
                                        var $4219 = self.gas;
                                        var $4220 = self.term;
                                        var self = $4214;
                                        switch (self._) {
                                            case 'Kindelia.Term.word':
                                                var $4222 = self.numb;
                                                var self = $4220;
                                                switch (self._) {
                                                    case 'Kindelia.Term.word':
                                                        var $4224 = self.numb;
                                                        var self = $4206;
                                                        switch (self._) {
                                                            case 'Kindelia.Operation.add':
                                                                var $4226 = Kindelia$Runtime$new$($4216, $4217, $4218, $4219, Kindelia$Term$word$((($4222 + $4224) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4225 = $4226;
                                                                break;
                                                            case 'Kindelia.Operation.sub':
                                                                var $4227 = Kindelia$Runtime$new$($4216, $4217, $4218, $4219, Kindelia$Term$word$((($4222 - $4224) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4225 = $4227;
                                                                break;
                                                            case 'Kindelia.Operation.mul':
                                                                var $4228 = Kindelia$Runtime$new$($4216, $4217, $4218, $4219, Kindelia$Term$word$((($4222 * $4224) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4225 = $4228;
                                                                break;
                                                            case 'Kindelia.Operation.div':
                                                                var $4229 = Kindelia$Runtime$new$($4216, $4217, $4218, $4219, Kindelia$Term$word$((($4222 / $4224) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4225 = $4229;
                                                                break;
                                                            case 'Kindelia.Operation.mod':
                                                                var $4230 = Kindelia$Runtime$new$($4216, $4217, $4218, $4219, Kindelia$Term$word$(($4222 % $4224)));
                                                                var $4225 = $4230;
                                                                break;
                                                            case 'Kindelia.Operation.or':
                                                                var $4231 = Kindelia$Runtime$new$($4216, $4217, $4218, $4219, Kindelia$Term$word$(($4222 | $4224)));
                                                                var $4225 = $4231;
                                                                break;
                                                            case 'Kindelia.Operation.and':
                                                                var $4232 = Kindelia$Runtime$new$($4216, $4217, $4218, $4219, Kindelia$Term$word$(($4222 & $4224)));
                                                                var $4225 = $4232;
                                                                break;
                                                            case 'Kindelia.Operation.xor':
                                                                var $4233 = Kindelia$Runtime$new$($4216, $4217, $4218, $4219, Kindelia$Term$word$(($4222 ^ $4224)));
                                                                var $4225 = $4233;
                                                                break;
                                                        };
                                                        var $4223 = $4225;
                                                        break;
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4234 = _state$1;
                                                        var $4223 = $4234;
                                                        break;
                                                };
                                                var $4221 = $4223;
                                                break;
                                            case 'Kindelia.Term.var':
                                            case 'Kindelia.Term.return':
                                                var self = $4220;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4236 = _state$1;
                                                        var $4235 = $4236;
                                                        break;
                                                };
                                                var $4221 = $4235;
                                                break;
                                            case 'Kindelia.Term.call':
                                            case 'Kindelia.Term.create':
                                                var self = $4220;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4238 = _state$1;
                                                        var $4237 = $4238;
                                                        break;
                                                };
                                                var $4221 = $4237;
                                                break;
                                            case 'Kindelia.Term.let':
                                            case 'Kindelia.Term.bind':
                                                var self = $4220;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4240 = _state$1;
                                                        var $4239 = $4240;
                                                        break;
                                                };
                                                var $4221 = $4239;
                                                break;
                                            case 'Kindelia.Term.match':
                                            case 'Kindelia.Term.operate':
                                            case 'Kindelia.Term.set':
                                            case 'Kindelia.Term.get':
                                                var self = $4220;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4242 = _state$1;
                                                        var $4241 = $4242;
                                                        break;
                                                };
                                                var $4221 = $4241;
                                                break;
                                            case 'Kindelia.Term.compare':
                                                var self = $4220;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4244 = _state$1;
                                                        var $4243 = $4244;
                                                        break;
                                                };
                                                var $4221 = $4243;
                                                break;
                                        };
                                        var $4215 = $4221;
                                        break;
                                };
                                var $4209 = $4215;
                                break;
                        };
                        var $4108 = $4209;
                        break;
                    case 'Kindelia.Term.create':
                    case 'Kindelia.Term.word':
                    case 'Kindelia.Term.set':
                    case 'Kindelia.Term.get':
                    case 'Kindelia.Term.bind':
                    case 'Kindelia.Term.return':
                        var $4245 = _state$1;
                        var $4108 = $4245;
                        break;
                };
                var $4102 = $4108;
                break;
        };
        return $4102;
    };
    const Kindelia$reduce = x0 => Kindelia$reduce$(x0);

    function Kindelia$normalize$many$(_state$1) {
        var self = _state$1;
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4247 = self.world;
                var $4248 = self.subst;
                var $4249 = self.fresh;
                var $4250 = self.gas;
                var $4251 = self.term;
                var self = $4251;
                switch (self._) {
                    case 'List.cons':
                        var $4253 = self.head;
                        var $4254 = self.tail;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4247, $4248, $4249, $4250, $4253));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4256 = self.world;
                                var $4257 = self.subst;
                                var $4258 = self.fresh;
                                var $4259 = self.gas;
                                var $4260 = self.term;
                                var self = Kindelia$normalize$many$(Kindelia$Runtime$new$($4256, $4257, $4258, $4259, $4254));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4262 = self.world;
                                        var $4263 = self.subst;
                                        var $4264 = self.fresh;
                                        var $4265 = self.gas;
                                        var $4266 = self.term;
                                        var $4267 = Kindelia$Runtime$new$($4262, $4263, $4264, $4265, List$cons$($4260, $4266));
                                        var $4261 = $4267;
                                        break;
                                };
                                var $4255 = $4261;
                                break;
                        };
                        var $4252 = $4255;
                        break;
                    case 'List.nil':
                        var $4268 = _state$1;
                        var $4252 = $4268;
                        break;
                };
                var $4246 = $4252;
                break;
        };
        return $4246;
    };
    const Kindelia$normalize$many = x0 => Kindelia$normalize$many$(x0);

    function Kindelia$normalize$cases$(_ctrs$1, _name$2, _state$3) {
        var self = _state$3;
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4270 = self.world;
                var $4271 = self.subst;
                var $4272 = self.fresh;
                var $4273 = self.gas;
                var $4274 = self.term;
                var self = _ctrs$1;
                switch (self._) {
                    case 'List.cons':
                        var $4276 = self.head;
                        var $4277 = self.tail;
                        var self = $4274;
                        switch (self._) {
                            case 'List.cons':
                                var $4279 = self.head;
                                var $4280 = self.tail;
                                var _nams$13 = List$map$((_fprm$13 => {
                                    var $4282 = (_name$2 + ("." + (() => {
                                        var self = _fprm$13;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $4283 = self.fst;
                                                var $4284 = $4283;
                                                return $4284;
                                        };
                                    })()));
                                    return $4282;
                                }), (() => {
                                    var self = $4276;
                                    switch (self._) {
                                        case 'Kindelia.Constructor.new':
                                            var $4285 = self.fprm;
                                            var $4286 = $4285;
                                            return $4286;
                                    };
                                })());
                                var _vals$14 = List$map$(Kindelia$Term$var, _nams$13);
                                var _subst$15 = Kindelia$extend$($4271, _nams$13, _vals$14);
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4270, _subst$15, $4272, $4273, $4279));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4287 = self.world;
                                        var $4288 = self.subst;
                                        var $4289 = self.fresh;
                                        var $4290 = self.gas;
                                        var $4291 = self.term;
                                        var self = Kindelia$normalize$cases$($4277, _name$2, Kindelia$Runtime$new$($4287, $4288, $4289, $4290, $4280));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4293 = self.world;
                                                var $4294 = self.subst;
                                                var $4295 = self.fresh;
                                                var $4296 = self.gas;
                                                var $4297 = self.term;
                                                var $4298 = Kindelia$Runtime$new$($4293, $4294, $4295, $4296, List$cons$($4291, $4297));
                                                var $4292 = $4298;
                                                break;
                                        };
                                        var $4281 = $4292;
                                        break;
                                };
                                var $4278 = $4281;
                                break;
                            case 'List.nil':
                                var $4299 = _state$3;
                                var $4278 = $4299;
                                break;
                        };
                        var $4275 = $4278;
                        break;
                    case 'List.nil':
                        var self = $4274;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $4301 = _state$3;
                                var $4300 = $4301;
                                break;
                        };
                        var $4275 = $4300;
                        break;
                };
                var $4269 = $4275;
                break;
        };
        return $4269;
    };
    const Kindelia$normalize$cases = x0 => x1 => x2 => Kindelia$normalize$cases$(x0, x1, x2);

    function Kindelia$normalize$(_state$1) {
        var self = Kindelia$reduce$(_state$1);
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4303 = self.world;
                var $4304 = self.subst;
                var $4305 = self.fresh;
                var $4306 = self.gas;
                var $4307 = self.term;
                var self = $4307;
                switch (self._) {
                    case 'Kindelia.Term.create':
                        var $4309 = self.ctor;
                        var $4310 = self.vals;
                        var self = Kindelia$normalize$many$(Kindelia$Runtime$new$($4303, $4304, $4305, $4306, $4310));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4312 = self.world;
                                var $4313 = self.subst;
                                var $4314 = self.fresh;
                                var $4315 = self.gas;
                                var $4316 = self.term;
                                var $4317 = Kindelia$Runtime$new$($4312, $4313, $4314, $4315, Kindelia$Term$create$($4309, $4316));
                                var $4311 = $4317;
                                break;
                        };
                        var $4308 = $4311;
                        break;
                    case 'Kindelia.Term.match':
                        var $4318 = self.name;
                        var $4319 = self.data;
                        var $4320 = self.cses;
                        var self = Kindelia$get_constructors$($4303, $4319);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4322 = self.value;
                                var _ctrs$11 = $4322;
                                var self = _ctrs$11;
                                switch (self._) {
                                    case 'List.nil':
                                        var self = Kindelia$normalize$cases$(_ctrs$11, $4318, Kindelia$Runtime$new$($4303, $4304, $4305, $4306, $4320));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4325 = self.world;
                                                var $4326 = self.subst;
                                                var $4327 = self.fresh;
                                                var $4328 = self.gas;
                                                var $4329 = self.term;
                                                var $4330 = Kindelia$Runtime$new$($4325, $4326, $4327, $4328, Kindelia$Term$match$($4318, $4319, $4329));
                                                var $4324 = $4330;
                                                break;
                                        };
                                        var $4323 = $4324;
                                        break;
                                    case 'List.cons':
                                        var self = Kindelia$normalize$cases$(_ctrs$11, $4318, Kindelia$Runtime$new$($4303, $4304, $4305, $4306, $4320));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4332 = self.world;
                                                var $4333 = self.subst;
                                                var $4334 = self.fresh;
                                                var $4335 = self.gas;
                                                var $4336 = self.term;
                                                var $4337 = Kindelia$Runtime$new$($4332, $4333, $4334, $4335, Kindelia$Term$match$($4318, $4319, $4336));
                                                var $4331 = $4337;
                                                break;
                                        };
                                        var $4323 = $4331;
                                        break;
                                };
                                var $4321 = $4323;
                                break;
                            case 'Maybe.none':
                                var $4338 = Kindelia$Runtime$new$($4303, $4304, $4305, $4306, $4307);
                                var $4321 = $4338;
                                break;
                        };
                        var $4308 = $4321;
                        break;
                    case 'Kindelia.Term.compare':
                        var $4339 = self.val0;
                        var $4340 = self.val1;
                        var $4341 = self.iflt;
                        var $4342 = self.ifeq;
                        var $4343 = self.ifgt;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4303, $4304, $4305, $4306, $4339));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4345 = self.world;
                                var $4346 = self.subst;
                                var $4347 = self.fresh;
                                var $4348 = self.gas;
                                var $4349 = self.term;
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4345, $4346, $4347, $4348, $4340));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4351 = self.world;
                                        var $4352 = self.subst;
                                        var $4353 = self.fresh;
                                        var $4354 = self.gas;
                                        var $4355 = self.term;
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4351, $4352, $4353, $4354, $4341));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4357 = self.world;
                                                var $4358 = self.subst;
                                                var $4359 = self.fresh;
                                                var $4360 = self.gas;
                                                var $4361 = self.term;
                                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4357, $4358, $4359, $4360, $4342));
                                                switch (self._) {
                                                    case 'Kindelia.Runtime.new':
                                                        var $4363 = self.world;
                                                        var $4364 = self.subst;
                                                        var $4365 = self.fresh;
                                                        var $4366 = self.gas;
                                                        var $4367 = self.term;
                                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4363, $4364, $4365, $4366, $4343));
                                                        switch (self._) {
                                                            case 'Kindelia.Runtime.new':
                                                                var $4369 = self.world;
                                                                var $4370 = self.subst;
                                                                var $4371 = self.fresh;
                                                                var $4372 = self.gas;
                                                                var $4373 = self.term;
                                                                var $4374 = Kindelia$Runtime$new$($4369, $4370, $4371, $4372, Kindelia$Term$compare$($4349, $4355, $4361, $4367, $4373));
                                                                var $4368 = $4374;
                                                                break;
                                                        };
                                                        var $4362 = $4368;
                                                        break;
                                                };
                                                var $4356 = $4362;
                                                break;
                                        };
                                        var $4350 = $4356;
                                        break;
                                };
                                var $4344 = $4350;
                                break;
                        };
                        var $4308 = $4344;
                        break;
                    case 'Kindelia.Term.operate':
                        var $4375 = self.oper;
                        var $4376 = self.val0;
                        var $4377 = self.val1;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4303, $4304, $4305, $4306, $4376));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4379 = self.world;
                                var $4380 = self.subst;
                                var $4381 = self.fresh;
                                var $4382 = self.gas;
                                var $4383 = self.term;
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4379, $4380, $4381, $4382, $4377));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4385 = self.world;
                                        var $4386 = self.subst;
                                        var $4387 = self.fresh;
                                        var $4388 = self.gas;
                                        var $4389 = self.term;
                                        var $4390 = Kindelia$Runtime$new$($4385, $4386, $4387, $4388, Kindelia$Term$operate$($4375, $4383, $4389));
                                        var $4384 = $4390;
                                        break;
                                };
                                var $4378 = $4384;
                                break;
                        };
                        var $4308 = $4378;
                        break;
                    case 'Kindelia.Term.set':
                        var $4391 = self.file;
                        var $4392 = self.expr;
                        var $4393 = self.body;
                        var self = Kindelia$get_file$($4303, $4391);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4395 = self.value;
                                var _file$11 = $4395;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4303, $4304, $4305, $4306, $4392));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4398 = self.world;
                                                var $4399 = self.subst;
                                                var $4400 = self.fresh;
                                                var $4401 = self.gas;
                                                var $4402 = self.term;
                                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4398, $4399, $4400, $4401, $4393));
                                                switch (self._) {
                                                    case 'Kindelia.Runtime.new':
                                                        var $4404 = self.world;
                                                        var $4405 = self.subst;
                                                        var $4406 = self.fresh;
                                                        var $4407 = self.gas;
                                                        var $4408 = self.term;
                                                        var $4409 = Kindelia$Runtime$new$($4404, $4405, $4406, $4407, Kindelia$Term$set$($4391, $4402, $4408));
                                                        var $4403 = $4409;
                                                        break;
                                                };
                                                var $4397 = $4403;
                                                break;
                                        };
                                        var $4396 = $4397;
                                        break;
                                };
                                var $4394 = $4396;
                                break;
                            case 'Maybe.none':
                                var $4410 = _state$1;
                                var $4394 = $4410;
                                break;
                        };
                        var $4308 = $4394;
                        break;
                    case 'Kindelia.Term.get':
                        var $4411 = self.name;
                        var $4412 = self.file;
                        var $4413 = self.body;
                        var self = Kindelia$get_file$($4303, $4412);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4415 = self.value;
                                var _file$11 = $4415;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4303, Map$set$($4411, Kindelia$Term$var$($4411), $4304), $4305, $4306, $4413));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4418 = self.world;
                                                var $4419 = self.subst;
                                                var $4420 = self.fresh;
                                                var $4421 = self.gas;
                                                var $4422 = self.term;
                                                var $4423 = Kindelia$Runtime$new$($4418, $4419, $4420, $4421, Kindelia$Term$get$($4411, $4412, $4422));
                                                var $4417 = $4423;
                                                break;
                                        };
                                        var $4416 = $4417;
                                        break;
                                };
                                var $4414 = $4416;
                                break;
                            case 'Maybe.none':
                                var $4424 = _state$1;
                                var $4414 = $4424;
                                break;
                        };
                        var $4308 = $4414;
                        break;
                    case 'Kindelia.Term.bind':
                        var $4425 = self.name;
                        var $4426 = self.type;
                        var $4427 = self.expr;
                        var $4428 = self.body;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4303, $4304, $4305, $4306, $4427));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4430 = self.world;
                                var $4431 = self.subst;
                                var $4432 = self.fresh;
                                var $4433 = self.gas;
                                var $4434 = self.term;
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4430, Map$set$($4425, Kindelia$Term$var$($4425), $4431), $4432, $4433, $4428));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4436 = self.world;
                                        var $4437 = self.subst;
                                        var $4438 = self.fresh;
                                        var $4439 = self.gas;
                                        var $4440 = self.term;
                                        var $4441 = Kindelia$Runtime$new$($4436, $4437, $4438, $4439, Kindelia$Term$bind$($4425, $4426, $4434, $4440));
                                        var $4435 = $4441;
                                        break;
                                };
                                var $4429 = $4435;
                                break;
                        };
                        var $4308 = $4429;
                        break;
                    case 'Kindelia.Term.return':
                        var $4442 = self.expr;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4303, $4304, $4305, $4306, $4442));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4444 = self.world;
                                var $4445 = self.subst;
                                var $4446 = self.fresh;
                                var $4447 = self.gas;
                                var $4448 = self.term;
                                var $4449 = Kindelia$Runtime$new$($4444, $4445, $4446, $4447, Kindelia$Term$return$($4448));
                                var $4443 = $4449;
                                break;
                        };
                        var $4308 = $4443;
                        break;
                    case 'Kindelia.Term.var':
                    case 'Kindelia.Term.call':
                    case 'Kindelia.Term.let':
                    case 'Kindelia.Term.word':
                        var $4450 = Kindelia$Runtime$new$($4303, $4304, $4305, $4306, $4307);
                        var $4308 = $4450;
                        break;
                };
                var $4302 = $4308;
                break;
        };
        return $4302;
    };
    const Kindelia$normalize = x0 => Kindelia$normalize$(x0);

    function Kindelia$run$(_state$1) {
        var self = Kindelia$reduce$(_state$1);
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4452 = self.world;
                var $4453 = self.subst;
                var $4454 = self.fresh;
                var $4455 = self.gas;
                var $4456 = self.term;
                var self = $4456;
                switch (self._) {
                    case 'Kindelia.Term.set':
                        var $4458 = self.file;
                        var $4459 = self.expr;
                        var $4460 = self.body;
                        var self = Kindelia$get_file$($4452, $4458);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4462 = self.value;
                                var _file$11 = $4462;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4452, $4453, $4454, $4455, $4459));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4465 = self.world;
                                                var $4466 = self.subst;
                                                var $4467 = self.fresh;
                                                var $4468 = self.gas;
                                                var $4469 = self.term;
                                                var _new_entry$21 = Kindelia$Entry$file$((() => {
                                                    var self = _file$11;
                                                    switch (self._) {
                                                        case 'Kindelia.File.new':
                                                            var $4471 = self.name;
                                                            var $4472 = self.ownr;
                                                            var $4473 = self.type;
                                                            var $4474 = Kindelia$File$new$($4471, $4472, $4473, $4469);
                                                            return $4474;
                                                    };
                                                })());
                                                var self = $4465;
                                                switch (self._) {
                                                    case 'Kindelia.World.new':
                                                        var $4475 = Kindelia$World$new$(Map$set$($4458, _new_entry$21, (() => {
                                                            var self = $4465;
                                                            switch (self._) {
                                                                case 'Kindelia.World.new':
                                                                    var $4476 = self.entry;
                                                                    var $4477 = $4476;
                                                                    return $4477;
                                                            };
                                                        })()));
                                                        var _new_world$22 = $4475;
                                                        break;
                                                };
                                                var $4470 = Kindelia$run$(Kindelia$Runtime$new$(_new_world$22, $4466, $4467, $4468, $4460));
                                                var $4464 = $4470;
                                                break;
                                        };
                                        var $4463 = $4464;
                                        break;
                                };
                                var $4461 = $4463;
                                break;
                            case 'Maybe.none':
                                var $4478 = _state$1;
                                var $4461 = $4478;
                                break;
                        };
                        var $4457 = $4461;
                        break;
                    case 'Kindelia.Term.get':
                        var $4479 = self.name;
                        var $4480 = self.file;
                        var $4481 = self.body;
                        var self = Kindelia$get_file$($4452, $4480);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4483 = self.value;
                                var _file$11 = $4483;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var $4485 = self.expr;
                                        var $4486 = Kindelia$run$(Kindelia$Runtime$new$($4452, Map$set$($4479, $4485, $4453), $4454, $4455, $4481));
                                        var $4484 = $4486;
                                        break;
                                };
                                var $4482 = $4484;
                                break;
                            case 'Maybe.none':
                                var $4487 = _state$1;
                                var $4482 = $4487;
                                break;
                        };
                        var $4457 = $4482;
                        break;
                    case 'Kindelia.Term.bind':
                        var $4488 = self.name;
                        var $4489 = self.type;
                        var $4490 = self.expr;
                        var $4491 = self.body;
                        var self = Kindelia$run$(Kindelia$Runtime$new$($4452, $4453, $4454, $4455, $4490));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4493 = self.world;
                                var $4494 = self.subst;
                                var $4495 = self.fresh;
                                var $4496 = self.gas;
                                var $4497 = self.term;
                                var self = $4497;
                                switch (self._) {
                                    case 'Kindelia.Term.return':
                                        var $4499 = self.expr;
                                        var $4500 = Kindelia$run$(Kindelia$Runtime$new$($4493, Map$set$($4488, $4499, $4494), $4495, $4496, $4491));
                                        var $4498 = $4500;
                                        break;
                                    case 'Kindelia.Term.var':
                                    case 'Kindelia.Term.call':
                                    case 'Kindelia.Term.let':
                                    case 'Kindelia.Term.create':
                                    case 'Kindelia.Term.match':
                                    case 'Kindelia.Term.word':
                                    case 'Kindelia.Term.compare':
                                    case 'Kindelia.Term.operate':
                                    case 'Kindelia.Term.set':
                                    case 'Kindelia.Term.get':
                                    case 'Kindelia.Term.bind':
                                        var $4501 = Kindelia$Runtime$new$($4493, $4494, $4495, $4496, Kindelia$Term$bind$($4488, $4489, $4497, $4491));
                                        var $4498 = $4501;
                                        break;
                                };
                                var $4492 = $4498;
                                break;
                        };
                        var $4457 = $4492;
                        break;
                    case 'Kindelia.Term.var':
                    case 'Kindelia.Term.call':
                    case 'Kindelia.Term.let':
                    case 'Kindelia.Term.create':
                    case 'Kindelia.Term.match':
                    case 'Kindelia.Term.word':
                    case 'Kindelia.Term.compare':
                    case 'Kindelia.Term.operate':
                    case 'Kindelia.Term.return':
                        var $4502 = Kindelia$Runtime$new$($4452, $4453, $4454, $4455, $4456);
                        var $4457 = $4502;
                        break;
                };
                var $4451 = $4457;
                break;
        };
        return $4451;
    };
    const Kindelia$run = x0 => Kindelia$run$(x0);

    function Kindelia$show$type$(_world$1, _type$2) {
        var self = _type$2;
        switch (self._) {
            case 'Kindelia.Type.data':
                var $4504 = self.name;
                var $4505 = $4504;
                var $4503 = $4505;
                break;
            case 'Kindelia.Type.effe':
                var $4506 = self.rety;
                var $4507 = ("& " + Kindelia$show$type$(_world$1, $4506));
                var $4503 = $4507;
                break;
            case 'Kindelia.Type.word':
                var $4508 = "#word";
                var $4503 = $4508;
                break;
        };
        return $4503;
    };
    const Kindelia$show$type = x0 => x1 => Kindelia$show$type$(x0, x1);

    function Word$show$(_size$1, _a$2) {
        var $4509 = Nat$show$(Word$to_nat$(_a$2));
        return $4509;
    };
    const Word$show = x0 => x1 => Word$show$(x0, x1);
    const U64$show = a0 => (String(a0));

    function String$is_empty$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $4511 = Bool$true;
            var $4510 = $4511;
        } else {
            var $4512 = self.charCodeAt(0);
            var $4513 = self.slice(1);
            var $4514 = Bool$false;
            var $4510 = $4514;
        };
        return $4510;
    };
    const String$is_empty = x0 => String$is_empty$(x0);

    function Kindelia$show$term$(_world$1, _term$2) {
        var self = _term$2;
        switch (self._) {
            case 'Kindelia.Term.var':
                var $4516 = self.name;
                var $4517 = $4516;
                var $4515 = $4517;
                break;
            case 'Kindelia.Term.call':
                var $4518 = self.bond;
                var $4519 = self.args;
                var _bond$5 = $4518;
                var _args$6 = List$map$(Kindelia$show$term(_world$1), $4519);
                var $4520 = (_bond$5 + ("(" + (String$join$(",", _args$6) + ")")));
                var $4515 = $4520;
                break;
            case 'Kindelia.Term.let':
                var $4521 = self.name;
                var $4522 = self.type;
                var $4523 = self.expr;
                var $4524 = self.body;
                var _name$7 = $4521;
                var _type$8 = Kindelia$show$type$(_world$1, $4522);
                var _expr$9 = Kindelia$show$term$(_world$1, $4523);
                var _body$10 = Kindelia$show$term$(_world$1, $4524);
                var $4525 = ("let " + (_name$7 + (" : " + (_type$8 + (" = " + (_expr$9 + (" " + _body$10)))))));
                var $4515 = $4525;
                break;
            case 'Kindelia.Term.create':
                var $4526 = self.ctor;
                var $4527 = self.vals;
                var _vals$5 = List$mapped$($4527, Kindelia$show$term(_world$1));
                var $4528 = ($4526 + ("{" + (String$join$(",", _vals$5) + "}")));
                var $4515 = $4528;
                break;
            case 'Kindelia.Term.match':
                var $4529 = self.name;
                var $4530 = self.data;
                var $4531 = self.cses;
                var self = Kindelia$get_data$(_world$1, $4530);
                switch (self._) {
                    case 'Maybe.some':
                        var $4533 = self.value;
                        var _data$7 = $4533;
                        var self = _data$7;
                        switch (self._) {
                            case 'Kindelia.Data.new':
                                var $4535 = self.constructors;
                                var _name$10 = $4529;
                                var _cses$11 = List$zipped_with$($4535, $4531, (_case_ctor$11 => _case_body$12 => {
                                    var $4537 = ((() => {
                                        var self = _case_ctor$11;
                                        switch (self._) {
                                            case 'Kindelia.Constructor.new':
                                                var $4538 = self.name;
                                                var $4539 = $4538;
                                                return $4539;
                                        };
                                    })() + (": " + Kindelia$show$term$(_world$1, _case_body$12)));
                                    return $4537;
                                }));
                                var $4536 = ("case " + (_name$10 + (" : " + ($4530 + (" { " + (String$join$(", ", _cses$11) + " }"))))));
                                var $4534 = $4536;
                                break;
                        };
                        var $4532 = $4534;
                        break;
                    case 'Maybe.none':
                        var $4540 = "?";
                        var $4532 = $4540;
                        break;
                };
                var $4515 = $4532;
                break;
            case 'Kindelia.Term.word':
                var $4541 = self.numb;
                var $4542 = ("#" + (String($4541)));
                var $4515 = $4542;
                break;
            case 'Kindelia.Term.compare':
                var $4543 = self.val0;
                var $4544 = self.val1;
                var $4545 = self.iflt;
                var $4546 = self.ifeq;
                var $4547 = self.ifgt;
                var _val0$8 = Kindelia$show$term$(_world$1, $4543);
                var _val1$9 = Kindelia$show$term$(_world$1, $4544);
                var _iflt$10 = Kindelia$show$term$(_world$1, $4545);
                var _ifeq$11 = Kindelia$show$term$(_world$1, $4546);
                var _ifgt$12 = Kindelia$show$term$(_world$1, $4547);
                var $4548 = ("compare " + (_val0$8 + (" " + (_val1$9 + (" { _<_: " + (_iflt$10 + (" _=_: " + (_ifeq$11 + (" _>_: " + (_ifgt$12 + " }"))))))))));
                var $4515 = $4548;
                break;
            case 'Kindelia.Term.operate':
                var $4549 = self.oper;
                var $4550 = self.val0;
                var $4551 = self.val1;
                var self = $4549;
                switch (self._) {
                    case 'Kindelia.Operation.add':
                        var $4553 = "+";
                        var _oper$6 = $4553;
                        break;
                    case 'Kindelia.Operation.sub':
                        var $4554 = "-";
                        var _oper$6 = $4554;
                        break;
                    case 'Kindelia.Operation.mul':
                        var $4555 = "*";
                        var _oper$6 = $4555;
                        break;
                    case 'Kindelia.Operation.div':
                        var $4556 = "/";
                        var _oper$6 = $4556;
                        break;
                    case 'Kindelia.Operation.mod':
                        var $4557 = "%";
                        var _oper$6 = $4557;
                        break;
                    case 'Kindelia.Operation.or':
                        var $4558 = "|";
                        var _oper$6 = $4558;
                        break;
                    case 'Kindelia.Operation.and':
                        var $4559 = "&";
                        var _oper$6 = $4559;
                        break;
                    case 'Kindelia.Operation.xor':
                        var $4560 = "^";
                        var _oper$6 = $4560;
                        break;
                };
                var _val0$7 = Kindelia$show$term$(_world$1, $4550);
                var _val1$8 = Kindelia$show$term$(_world$1, $4551);
                var $4552 = (_oper$6 + ("(" + (_val0$7 + ("," + (_val1$8 + ")")))));
                var $4515 = $4552;
                break;
            case 'Kindelia.Term.set':
                var $4561 = self.file;
                var $4562 = self.expr;
                var $4563 = self.body;
                var _file$6 = $4561;
                var _expr$7 = Kindelia$show$term$(_world$1, $4562);
                var _body$8 = Kindelia$show$term$(_world$1, $4563);
                var $4564 = ("set " + (_file$6 + (" = " + (_expr$7 + ("; " + _body$8)))));
                var $4515 = $4564;
                break;
            case 'Kindelia.Term.get':
                var $4565 = self.name;
                var $4566 = self.file;
                var $4567 = self.body;
                var _file$6 = $4566;
                var _name$7 = $4565;
                var _body$8 = Kindelia$show$term$(_world$1, $4567);
                var $4568 = ("get " + (_name$7 + (" = " + (_file$6 + ("; " + _body$8)))));
                var $4515 = $4568;
                break;
            case 'Kindelia.Term.bind':
                var $4569 = self.name;
                var $4570 = self.type;
                var $4571 = self.expr;
                var $4572 = self.body;
                var _name$7 = $4569;
                var _type$8 = Kindelia$show$type$(_world$1, $4570);
                var _expr$9 = Kindelia$show$term$(_world$1, $4571);
                var _body$10 = Kindelia$show$term$(_world$1, $4572);
                var self = String$is_empty$(_name$7);
                if (self) {
                    var $4574 = ("run " + (_expr$9 + ("; " + _body$10)));
                    var $4573 = $4574;
                } else {
                    var $4575 = ("run " + (_name$7 + (" : " + (_type$8 + (" = " + (_expr$9 + ("; " + _body$10)))))));
                    var $4573 = $4575;
                };
                var $4515 = $4573;
                break;
            case 'Kindelia.Term.return':
                var $4576 = self.expr;
                var _expr$4 = Kindelia$show$term$(_world$1, $4576);
                var $4577 = ("return " + _expr$4);
                var $4515 = $4577;
                break;
        };
        return $4515;
    };
    const Kindelia$show$term = x0 => x1 => Kindelia$show$term$(x0, x1);

    function Kindelia$transact$(_world$1, _transaction$2) {
        var self = _world$1;
        switch (self._) {
            case 'Kindelia.World.new':
                var $4579 = self.entry;
                var self = _transaction$2;
                switch (self._) {
                    case 'Kindelia.Transaction.new_data':
                        var $4581 = self.data;
                        var _data$5 = $4581;
                        var self = _data$5;
                        switch (self._) {
                            case 'Kindelia.Data.new':
                                var $4583 = self.name;
                                var self = Map$get$($4583, $4579);
                                switch (self._) {
                                    case 'Maybe.none':
                                        var self = _world$1;
                                        switch (self._) {
                                            case 'Kindelia.World.new':
                                                var $4586 = Kindelia$World$new$(Map$set$($4583, Kindelia$Entry$data$(_data$5), $4579));
                                                var _world$8 = $4586;
                                                break;
                                        };
                                        var $4585 = Maybe$some$(Pair$new$(_world$8, ("[data] " + $4583)));
                                        var $4584 = $4585;
                                        break;
                                    case 'Maybe.some':
                                        var $4587 = Maybe$none;
                                        var $4584 = $4587;
                                        break;
                                };
                                var $4582 = $4584;
                                break;
                        };
                        var $4580 = $4582;
                        break;
                    case 'Kindelia.Transaction.new_bond':
                        var $4588 = self.bond;
                        var _bond$5 = $4588;
                        var self = _bond$5;
                        switch (self._) {
                            case 'Kindelia.Bond.new':
                                var $4590 = self.name;
                                var $4591 = self.iprm;
                                var $4592 = self.otyp;
                                var $4593 = self.main;
                                var self = Map$get$($4590, $4579);
                                switch (self._) {
                                    case 'Maybe.none':
                                        var self = _world$1;
                                        switch (self._) {
                                            case 'Kindelia.World.new':
                                                var $4596 = Kindelia$World$new$(Map$set$($4590, Kindelia$Entry$bond$(_bond$5), $4579));
                                                var _world$10 = $4596;
                                                break;
                                        };
                                        var self = List$unzip$($4591);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $4597 = self.fst;
                                                var $4598 = self.snd;
                                                var _context$13 = Kindelia$extend$(Map$from_list$(List$nil), $4597, $4598);
                                                var self = Kindelia$check$(_context$13, _world$10, $4593, $4592, Maybe$some$($4590));
                                                if (self) {
                                                    var $4600 = Maybe$some$(Pair$new$(_world$10, ("[bond] " + $4590)));
                                                    var $4599 = $4600;
                                                } else {
                                                    var $4601 = Maybe$none;
                                                    var $4599 = $4601;
                                                };
                                                var $4595 = $4599;
                                                break;
                                        };
                                        var $4594 = $4595;
                                        break;
                                    case 'Maybe.some':
                                        var $4602 = Maybe$none;
                                        var $4594 = $4602;
                                        break;
                                };
                                var $4589 = $4594;
                                break;
                        };
                        var $4580 = $4589;
                        break;
                    case 'Kindelia.Transaction.new_file':
                        var $4603 = self.file;
                        var _file$5 = $4603;
                        var self = _file$5;
                        switch (self._) {
                            case 'Kindelia.File.new':
                                var $4605 = self.name;
                                var $4606 = self.type;
                                var $4607 = self.expr;
                                var self = Map$get$($4605, $4579);
                                switch (self._) {
                                    case 'Maybe.none':
                                        var self = _world$1;
                                        switch (self._) {
                                            case 'Kindelia.World.new':
                                                var $4610 = Kindelia$World$new$(Map$set$($4605, Kindelia$Entry$file$(_file$5), $4579));
                                                var _world$10 = $4610;
                                                break;
                                        };
                                        var self = Kindelia$check$(Map$from_list$(List$nil), _world$10, $4607, $4606, Maybe$none);
                                        if (self) {
                                            var $4611 = Maybe$some$(Pair$new$(_world$10, ("[file] " + $4605)));
                                            var $4609 = $4611;
                                        } else {
                                            var $4612 = Maybe$none;
                                            var $4609 = $4612;
                                        };
                                        var $4608 = $4609;
                                        break;
                                    case 'Maybe.some':
                                        var $4613 = Maybe$none;
                                        var $4608 = $4613;
                                        break;
                                };
                                var $4604 = $4608;
                                break;
                        };
                        var $4580 = $4604;
                        break;
                    case 'Kindelia.Transaction.new_eval':
                        var $4614 = self.eval;
                        var _eval$5 = $4614;
                        var self = _eval$5;
                        switch (self._) {
                            case 'Kindelia.Eval.new':
                                var $4616 = self.term;
                                var $4617 = self.type;
                                var self = Kindelia$check$(Map$from_list$(List$nil), _world$1, $4616, $4617, Maybe$none);
                                if (self) {
                                    var _fresh$8 = 0n;
                                    var self = Kindelia$sanitize$(_world$1, Map$from_list$(List$nil), _fresh$8, $4616);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $4620 = self.fst;
                                            var $4621 = self.snd;
                                            var self = $4617;
                                            switch (self._) {
                                                case 'Kindelia.Type.word':
                                                case 'Kindelia.Type.data':
                                                    var $4623 = Kindelia$normalize$(Kindelia$Runtime$new$(_world$1, Map$from_list$(List$nil), $4620, 0n, $4621));
                                                    var self = $4623;
                                                    break;
                                                case 'Kindelia.Type.effe':
                                                    var $4624 = Kindelia$normalize$(Kindelia$run$(Kindelia$Runtime$new$(_world$1, Map$from_list$(List$nil), $4620, 0n, $4621)));
                                                    var self = $4624;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kindelia.Runtime.new':
                                                    var $4625 = self.world;
                                                    var $4626 = self.term;
                                                    var $4627 = Maybe$some$(Pair$new$($4625, ("[eval] " + Kindelia$show$term$($4625, $4626))));
                                                    var $4622 = $4627;
                                                    break;
                                            };
                                            var $4619 = $4622;
                                            break;
                                    };
                                    var $4618 = $4619;
                                } else {
                                    var $4628 = Maybe$none;
                                    var $4618 = $4628;
                                };
                                var $4615 = $4618;
                                break;
                        };
                        var $4580 = $4615;
                        break;
                };
                var $4578 = $4580;
                break;
        };
        return $4578;
    };
    const Kindelia$transact = x0 => x1 => Kindelia$transact$(x0, x1);

    function Kindelia$api$run$go$transactions$(_world$1, _block_number$2, _code$3, _transactions$4) {
        var self = _transactions$4;
        switch (self._) {
            case 'List.cons':
                var $4630 = self.head;
                var $4631 = self.tail;
                var self = Kindelia$transact$(_world$1, $4630);
                switch (self._) {
                    case 'Maybe.some':
                        var $4633 = self.value;
                        var self = $4633;
                        switch (self._) {
                            case 'Pair.new':
                                var $4635 = self.fst;
                                var $4636 = self.snd;
                                var $4637 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                                    var $4638 = _m$bind$10;
                                    return $4638;
                                }))(IO$print$(("- " + $4636)))((_$10 => {
                                    var $4639 = Kindelia$api$run$go$transactions$($4635, _block_number$2, _code$3, $4631);
                                    return $4639;
                                }));
                                var $4634 = $4637;
                                break;
                        };
                        var $4632 = $4634;
                        break;
                    case 'Maybe.none':
                        var $4640 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                            var $4641 = _m$bind$7;
                            return $4641;
                        }))(IO$print$("- [fail]"))((_$7 => {
                            var $4642 = Kindelia$api$run$go$transactions$(_world$1, _block_number$2, _code$3, $4631);
                            return $4642;
                        }));
                        var $4632 = $4640;
                        break;
                };
                var $4629 = $4632;
                break;
            case 'List.nil':
                var $4643 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $4644 = _m$bind$5;
                    return $4644;
                }))(IO$print$(""))((_$5 => {
                    var $4645 = Kindelia$api$run$go$(_world$1, Nat$succ$(_block_number$2), _code$3);
                    return $4645;
                }));
                var $4629 = $4643;
                break;
        };
        return $4629;
    };
    const Kindelia$api$run$go$transactions = x0 => x1 => x2 => x3 => Kindelia$api$run$go$transactions$(x0, x1, x2, x3);

    function Kindelia$api$run$go$(_world$1, _block_number$2, _code$3) {
        var _parsed$4 = Kindelia$parse$block$(_world$1)(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$3));
        var self = _parsed$4;
        switch (self._) {
            case 'Parser.Reply.error':
                var $4647 = self.err;
                var self = $4647;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $4649 = self.nam;
                        var $4650 = self.ini;
                        var $4651 = self.idx;
                        var $4652 = self.msg;
                        var self = ($4651 < String$length$(_code$3));
                        if (self) {
                            var _err$10 = ($4652 + (() => {
                                var self = $4649;
                                if (self.length === 0) {
                                    var $4655 = "";
                                    return $4655;
                                } else {
                                    var $4656 = self.charCodeAt(0);
                                    var $4657 = self.slice(1);
                                    var $4658 = (" Inside " + ($4649 + ":"));
                                    return $4658;
                                };
                            })());
                            var _hig$11 = Kind$Code$highlight$(_code$3, $4650, $4651, Nat$succ$($4651));
                            var _str$12 = String$flatten$(List$cons$(_err$10, List$cons$("\u{a}", List$cons$(_hig$11, List$nil))));
                            var $4654 = IO$monad$((_m$bind$13 => _m$pure$14 => {
                                var $4659 = _m$bind$13;
                                return $4659;
                            }))(IO$print$(("Error parsing block #" + Nat$show$(_block_number$2))))((_$13 => {
                                var $4660 = IO$print$(_str$12);
                                return $4660;
                            }));
                            var $4653 = $4654;
                        } else {
                            var $4661 = IO$print$("Done.");
                            var $4653 = $4661;
                        };
                        var $4648 = $4653;
                        break;
                };
                var $4646 = $4648;
                break;
            case 'Parser.Reply.value':
                var $4662 = self.pst;
                var $4663 = self.val;
                var _block$7 = $4663;
                var $4664 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                    var $4665 = _m$bind$8;
                    return $4665;
                }))(IO$print$(("Block #" + Nat$show$(_block_number$2))))((_$8 => {
                    var _bits_0$9 = Kindelia$serialize$block$(_world$1, _block$7);
                    var _bits_1$10 = Kindelia$serialize$block$(_world$1, (() => {
                        var self = Kindelia$deserialize$block$(_world$1, _bits_0$9);
                        switch (self._) {
                            case 'Pair.new':
                                var $4667 = self.snd;
                                var $4668 = $4667;
                                return $4668;
                        };
                    })());
                    var $4666 = IO$monad$((_m$bind$11 => _m$pure$12 => {
                        var $4669 = _m$bind$11;
                        return $4669;
                    }))(IO$print$(("$ " + (Bits$hex$encode$(_bits_0$9) + (" " + (() => {
                        var self = (_bits_1$10 === _bits_0$9);
                        if (self) {
                            var $4670 = "ok";
                            return $4670;
                        } else {
                            var $4671 = "bad_serialization";
                            return $4671;
                        };
                    })())))))((_$11 => {
                        var $4672 = Kindelia$api$run$go$transactions$(_world$1, _block_number$2, (() => {
                            var self = $4662;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4673 = self.str;
                                    var $4674 = $4673;
                                    return $4674;
                            };
                        })(), _block$7);
                        return $4672;
                    }));
                    return $4666;
                }));
                var $4646 = $4664;
                break;
        };
        return $4646;
    };
    const Kindelia$api$run$go = x0 => x1 => x2 => Kindelia$api$run$go$(x0, x1, x2);
    const Kindelia$genesis = Kindelia$World$new$(Map$from_list$(List$nil));

    function Kindelia$api$run$(_code$1) {
        var $4675 = Kindelia$api$run$go$(Kindelia$genesis, 0n, _code$1);
        return $4675;
    };
    const Kindelia$api$run = x0 => Kindelia$api$run$(x0);
    const Kindelia = (() => {
        var _x$1 = Kindelia$api$run;
        var $4676 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $4677 = _m$pure$3;
            return $4677;
        }))(Unit$new);
        return $4676;
    })();
    return {
        '$main$': () => run(Kindelia),
        'run': run,
        'Parser.Reply': Parser$Reply,
        'List': List,
        'Parser.Reply.error': Parser$Reply$error,
        'Bool.false': Bool$false,
        'Bool.true': Bool$true,
        'Nat.gtn': Nat$gtn,
        'Parser.Error.combine': Parser$Error$combine,
        'List.cons': List$cons,
        'Parser.Reply.value': Parser$Reply$value,
        'List.reverse.go': List$reverse$go,
        'List.nil': List$nil,
        'List.reverse': List$reverse,
        'Parser.until.go': Parser$until$go,
        'Parser.until': Parser$until,
        'Parser.many.go': Parser$many$go,
        'Parser.many': Parser$many,
        'Parser.Error.new': Parser$Error$new,
        'Parser.Reply.fail': Parser$Reply$fail,
        'Maybe.some': Maybe$some,
        'Maybe': Maybe,
        'Maybe.none': Maybe$none,
        'Parser.Error.maybe_combine': Parser$Error$maybe_combine,
        'Parser.State.new': Parser$State$new,
        'Parser.choice': Parser$choice,
        'Parser': Parser,
        'Unit.new': Unit$new,
        'String.cons': String$cons,
        'String.concat': String$concat,
        'Cmp.as_eql': Cmp$as_eql,
        'Cmp.ltn': Cmp$ltn,
        'Cmp.gtn': Cmp$gtn,
        'Word.cmp.go': Word$cmp$go,
        'Cmp.eql': Cmp$eql,
        'Word.cmp': Word$cmp,
        'Word.eql': Word$eql,
        'Nat.succ': Nat$succ,
        'Nat.zero': Nat$zero,
        'U16.eql': U16$eql,
        'String.nil': String$nil,
        'Parser.text.go': Parser$text$go,
        'Parser.text': Parser$text,
        'Parser.eof': Parser$eof,
        'Parser.one': Parser$one,
        'Kindelia.parse.ignore': Kindelia$parse$ignore,
        'Kindelia.parse.text': Kindelia$parse$text,
        'Parser.letter': Parser$letter,
        'Bool.and': Bool$and,
        'Cmp.as_lte': Cmp$as_lte,
        'Word.lte': Word$lte,
        'U16.lte': U16$lte,
        'U16.btw': U16$btw,
        'Kindelia.parse.letter': Kindelia$parse$letter,
        'List.fold': List$fold,
        'Kindelia.parse.name': Kindelia$parse$name,
        'Parser.wrap': Parser$wrap,
        'Pair': Pair,
        'Parser.maybe': Parser$maybe,
        'Kindelia.Type.effe': Kindelia$Type$effe,
        'Kindelia.Type.word': Kindelia$Type$word,
        'Kindelia.Type.data': Kindelia$Type$data,
        'Kindelia.parse.type': Kindelia$parse$type,
        'Pair.new': Pair$new,
        'Kindelia.parse.ann': Kindelia$parse$ann,
        'Kindelia.Constructor.new': Kindelia$Constructor$new,
        'Kindelia.parse.constructor': Kindelia$parse$constructor,
        'Kindelia.Data.new': Kindelia$Data$new,
        'Kindelia.parse.data': Kindelia$parse$data,
        'Kindelia.Transaction.new_data': Kindelia$Transaction$new_data,
        'Kindelia.Term.let': Kindelia$Term$let,
        'Kindelia.parse.term.let': Kindelia$parse$term$let,
        'Kindelia.Term.create': Kindelia$Term$create,
        'Kindelia.parse.term.create': Kindelia$parse$term$create,
        'Maybe.bind': Maybe$bind,
        'Maybe.monad': Maybe$monad,
        'BBT.lookup': BBT$lookup,
        'Cmp.as_ltn': Cmp$as_ltn,
        'Word.ltn': Word$ltn,
        'U16.ltn': U16$ltn,
        'U16.cmp': U16$cmp,
        'String.cmp': String$cmp,
        'Map.get': Map$get,
        'Kindelia.get_data': Kindelia$get_data,
        'Parser.fail': Parser$fail,
        'Kindelia.parse.term.match.cases': Kindelia$parse$term$match$cases,
        'Kindelia.Term.match': Kindelia$Term$match,
        'Kindelia.parse.term.match': Kindelia$parse$term$match,
        'Parser.many1': Parser$many1,
        'Parser.digit': Parser$digit,
        'Nat.add': Nat$add,
        'Nat.mul': Nat$mul,
        'Nat.from_base.go': Nat$from_base$go,
        'Nat.from_base': Nat$from_base,
        'Parser.nat': Parser$nat,
        'Nat.gte': Nat$gte,
        'Nat.pow.aux': Nat$pow$aux,
        'Nat.pow': Nat$pow,
        'Kindelia.Term.word': Kindelia$Term$word,
        'U64.new': U64$new,
        'Nat.apply': Nat$apply,
        'Word': Word,
        'Word.e': Word$e,
        'Word.i': Word$i,
        'Word.o': Word$o,
        'Word.inc': Word$inc,
        'Word.zero': Word$zero,
        'Nat.to_word': Nat$to_word,
        'Nat.to_u64': Nat$to_u64,
        'Kindelia.parse.term.word': Kindelia$parse$term$word,
        'Kindelia.Term.compare': Kindelia$Term$compare,
        'Kindelia.parse.term.compare': Kindelia$parse$term$compare,
        'Kindelia.Operation.add': Kindelia$Operation$add,
        'Kindelia.Operation.sub': Kindelia$Operation$sub,
        'Kindelia.Operation.mul': Kindelia$Operation$mul,
        'Kindelia.Operation.div': Kindelia$Operation$div,
        'Kindelia.Operation.mod': Kindelia$Operation$mod,
        'Kindelia.Operation.or': Kindelia$Operation$or,
        'Kindelia.Operation.and': Kindelia$Operation$and,
        'Kindelia.Operation.xor': Kindelia$Operation$xor,
        'Kindelia.parse.term.operation': Kindelia$parse$term$operation,
        'Kindelia.Term.operate': Kindelia$Term$operate,
        'Kindelia.parse.term.operate': Kindelia$parse$term$operate,
        'Kindelia.Term.set': Kindelia$Term$set,
        'Kindelia.parse.term.set': Kindelia$parse$term$set,
        'Kindelia.Term.get': Kindelia$Term$get,
        'Kindelia.parse.term.get': Kindelia$parse$term$get,
        'Kindelia.Term.bind': Kindelia$Term$bind,
        'Kindelia.parse.term.bind': Kindelia$parse$term$bind,
        'Kindelia.Term.return': Kindelia$Term$return,
        'Kindelia.parse.term.return': Kindelia$parse$term$return,
        'Kindelia.Term.call': Kindelia$Term$call,
        'Kindelia.parse.term.call': Kindelia$parse$term$call,
        'Kindelia.Term.var': Kindelia$Term$var,
        'Kindelia.parse.term.var': Kindelia$parse$term$var,
        'Kindelia.parse.term': Kindelia$parse$term,
        'Kindelia.Bond.new': Kindelia$Bond$new,
        'Kindelia.parse.bond': Kindelia$parse$bond,
        'Kindelia.Transaction.new_bond': Kindelia$Transaction$new_bond,
        'Maybe.default': Maybe$default,
        'Kindelia.File.new': Kindelia$File$new,
        'Kindelia.parse.file': Kindelia$parse$file,
        'Kindelia.Transaction.new_file': Kindelia$Transaction$new_file,
        'Kindelia.Eval.new': Kindelia$Eval$new,
        'Kindelia.parse.eval': Kindelia$parse$eval,
        'Kindelia.Transaction.new_eval': Kindelia$Transaction$new_eval,
        'Kindelia.parse.transaction': Kindelia$parse$transaction,
        'Kindelia.parse.block': Kindelia$parse$block,
        'IO': IO,
        'Nat.ltn': Nat$ltn,
        'String.length.go': String$length$go,
        'String.length': String$length,
        'String.flatten.go': String$flatten$go,
        'String.flatten': String$flatten,
        'String.join.go': String$join$go,
        'String.join': String$join,
        'Kind.Code.highlight.end': Kind$Code$highlight$end,
        'Maybe.extract': Maybe$extract,
        'Nat.is_zero': Nat$is_zero,
        'Nat.double': Nat$double,
        'Nat.pred': Nat$pred,
        'String.reverse.go': String$reverse$go,
        'String.reverse': String$reverse,
        'String.pad_right': String$pad_right,
        'String.pad_left': String$pad_left,
        'Either': Either,
        'Either.left': Either$left,
        'Either.right': Either$right,
        'Nat.sub_rem': Nat$sub_rem,
        'Nat.div_mod.go': Nat$div_mod$go,
        'Nat.div_mod': Nat$div_mod,
        'Nat.to_base.go': Nat$to_base$go,
        'Nat.to_base': Nat$to_base,
        'Nat.mod.go': Nat$mod$go,
        'Nat.mod': Nat$mod,
        'Nat.lte': Nat$lte,
        'List.at': List$at,
        'Nat.show_digit': Nat$show_digit,
        'Nat.to_string_base': Nat$to_string_base,
        'Nat.show': Nat$show,
        'Bool.not': Bool$not,
        'U16.new': U16$new,
        'Nat.to_u16': Nat$to_u16,
        'Kind.Code.color': Kind$Code$color,
        'Nat.eql': Nat$eql,
        'List.take': List$take,
        'Kind.Code.highlight.go': Kind$Code$highlight$go,
        'Kind.Code.highlight': Kind$Code$highlight,
        'IO.ask': IO$ask,
        'IO.bind': IO$bind,
        'IO.end': IO$end,
        'IO.monad': IO$monad,
        'IO.put_string': IO$put_string,
        'IO.print': IO$print,
        'Bits.e': Bits$e,
        'Bits.o': Bits$o,
        'Word.subber': Word$subber,
        'Word.sub': Word$sub,
        'U16.sub': U16$sub,
        'Word.adder': Word$adder,
        'Word.add': Word$add,
        'U16.add': U16$add,
        'Pair.fst': Pair$fst,
        'Nat.div': Nat$div,
        'Bits.i': Bits$i,
        'Kindelia.serialize.fixlen': Kindelia$serialize$fixlen,
        'Word.fold': Word$fold,
        'Word.to_nat': Word$to_nat,
        'U16.to_nat': U16$to_nat,
        'Bits.concat': Bits$concat,
        'Kindelia.serialize.name': Kindelia$serialize$name,
        'Kindelia.serialize.list': Kindelia$serialize$list,
        'Kindelia.serialize.pair': Kindelia$serialize$pair,
        'Kindelia.serialize.type': Kindelia$serialize$type,
        'Kindelia.serialize.constructor': Kindelia$serialize$constructor,
        'Kindelia.serialize.data': Kindelia$serialize$data,
        'List.mapped': List$mapped,
        'List.find_index.go': List$find_index$go,
        'List.find_index': List$find_index,
        'String.eql': String$eql,
        'Kindelia.serialize.varlen.go': Kindelia$serialize$varlen$go,
        'Kindelia.serialize.varlen': Kindelia$serialize$varlen,
        'Kindelia.serialize.name.local': Kindelia$serialize$name$local,
        'List.map': List$map,
        'List.concat': List$concat,
        'Kindelia.serialize.cases': Kindelia$serialize$cases,
        'Kindelia.get_constructors': Kindelia$get_constructors,
        'U64.to_nat': U64$to_nat,
        'Kindelia.serialize.term': Kindelia$serialize$term,
        'Kindelia.serialize.bond': Kindelia$serialize$bond,
        'Kindelia.serialize.file': Kindelia$serialize$file,
        'Kindelia.serialize.eval': Kindelia$serialize$eval,
        'Kindelia.serialize.transaction': Kindelia$serialize$transaction,
        'Kindelia.serialize.block': Kindelia$serialize$block,
        'Bits.is_empty': Bits$is_empty,
        'Kindelia.deserialize.fixlen': Kindelia$deserialize$fixlen,
        'U16.from_nat': U16$from_nat,
        'Kindelia.deserialize.name': Kindelia$deserialize$name,
        'Kindelia.deserialize.list': Kindelia$deserialize$list,
        'Kindelia.deserialize.pair': Kindelia$deserialize$pair,
        'Kindelia.deserialize.type': Kindelia$deserialize$type,
        'Kindelia.deserialize.constructor': Kindelia$deserialize$constructor,
        'Kindelia.deserialize.data': Kindelia$deserialize$data,
        'U64.from_nat': U64$from_nat,
        'Kindelia.deserialize.varlen.go': Kindelia$deserialize$varlen$go,
        'Nat.sub': Nat$sub,
        'Kindelia.deserialize.varlen': Kindelia$deserialize$varlen,
        'List.get': List$get,
        'Kindelia.deserialize.name.local': Kindelia$deserialize$name$local,
        'Kindelia.deserialize.cases': Kindelia$deserialize$cases,
        'Kindelia.deserialize.term': Kindelia$deserialize$term,
        'Kindelia.deserialize.bond': Kindelia$deserialize$bond,
        'Kindelia.deserialize.file': Kindelia$deserialize$file,
        'Kindelia.deserialize.eval': Kindelia$deserialize$eval,
        'Kindelia.deserialize.transaction': Kindelia$deserialize$transaction,
        'Kindelia.deserialize.block': Kindelia$deserialize$block,
        'Bits.hex.encode': Bits$hex$encode,
        'Bits.eql': Bits$eql,
        'Kindelia.World.new': Kindelia$World$new,
        'BBT': BBT,
        'BBT.bin': BBT$bin,
        'U32.new': U32$new,
        'Nat.to_u32': Nat$to_u32,
        'BBT.tip': BBT$tip,
        'BBT.singleton': BBT$singleton,
        'BBT.size': BBT$size,
        'U32.add': U32$add,
        'Word.shift_left.one.go': Word$shift_left$one$go,
        'Word.shift_left.one': Word$shift_left$one,
        'Word.shift_left': Word$shift_left,
        'Word.mul.go': Word$mul$go,
        'Word.to_zero': Word$to_zero,
        'Word.mul': Word$mul,
        'U32.mul': U32$mul,
        'BBT.w': BBT$w,
        'U32.ltn': U32$ltn,
        'U32.from_nat': U32$from_nat,
        'BBT.node': BBT$node,
        'Cmp.as_gtn': Cmp$as_gtn,
        'Word.gtn': Word$gtn,
        'U32.gtn': U32$gtn,
        'BBT.balance': BBT$balance,
        'BBT.insert': BBT$insert,
        'Map.set': Map$set,
        'Kindelia.Entry.data': Kindelia$Entry$data,
        'Kindelia.Entry.bond': Kindelia$Entry$bond,
        'List.unzip': List$unzip,
        'Map': Map,
        'Kindelia.extend': Kindelia$extend,
        'Pair.snd': Pair$snd,
        'BBT.from_list.go': BBT$from_list$go,
        'BBT.from_list': BBT$from_list,
        'Map.from_list': Map$from_list,
        'Kindelia.equal': Kindelia$equal,
        'Kindelia.get_bond': Kindelia$get_bond,
        'List.zip': List$zip,
        'List.all': List$all,
        'Maybe.mapped': Maybe$mapped,
        'List.ifind.go': List$ifind$go,
        'List.ifind': List$ifind,
        'Kindelia.get_constructor_value': Kindelia$get_constructor_value,
        'List.length': List$length,
        'List.zip_with': List$zip_with,
        'List.zipped_with': List$zipped_with,
        'List.and': List$and,
        'Kindelia.get_file': Kindelia$get_file,
        'List.is_empty': List$is_empty,
        'Maybe.if': Maybe$if,
        'List.find': List$find,
        'List.in': List$in,
        'Bool.or': Bool$or,
        'Kindelia.check': Kindelia$check,
        'Kindelia.Entry.file': Kindelia$Entry$file,
        'Kindelia.sanitize.many': Kindelia$sanitize$many,
        'Triple.new': Triple$new,
        'Kindelia.rename': Kindelia$rename,
        'List.for': List$for,
        'Kindelia.sanitize.cases': Kindelia$sanitize$cases,
        'Kindelia.sanitize': Kindelia$sanitize,
        'Kindelia.Runtime': Kindelia$Runtime,
        'Kindelia.Runtime.new': Kindelia$Runtime$new,
        'Triple': Triple,
        'Kindelia.rename.many': Kindelia$rename$many,
        'Kindelia.get_constructor_index': Kindelia$get_constructor_index,
        'U64.ltn': U64$ltn,
        'U64.eql': U64$eql,
        'U64.cmp': U64$cmp,
        'U64.add': U64$add,
        'U64.sub': U64$sub,
        'U64.mul': U64$mul,
        'Word.bit_length.go': Word$bit_length$go,
        'Word.bit_length': Word$bit_length,
        'Cmp.as_gte': Cmp$as_gte,
        'Word.gte': Word$gte,
        'Word.or': Word$or,
        'Word.shift_right.one.go': Word$shift_right$one$go,
        'Word.shift_right.one': Word$shift_right$one,
        'Word.shift_right': Word$shift_right,
        'Word.div.go': Word$div$go,
        'Word.div': Word$div,
        'U64.div': U64$div,
        'Word.mod': Word$mod,
        'U64.mod': U64$mod,
        'U64.or': U64$or,
        'Word.and': Word$and,
        'U64.and': U64$and,
        'Word.xor': Word$xor,
        'U64.xor': U64$xor,
        'Kindelia.reduce': Kindelia$reduce,
        'Kindelia.normalize.many': Kindelia$normalize$many,
        'Kindelia.normalize.cases': Kindelia$normalize$cases,
        'Kindelia.normalize': Kindelia$normalize,
        'Kindelia.run': Kindelia$run,
        'Kindelia.show.type': Kindelia$show$type,
        'Word.show': Word$show,
        'U64.show': U64$show,
        'String.is_empty': String$is_empty,
        'Kindelia.show.term': Kindelia$show$term,
        'Kindelia.transact': Kindelia$transact,
        'Kindelia.api.run.go.transactions': Kindelia$api$run$go$transactions,
        'Kindelia.api.run.go': Kindelia$api$run$go,
        'Kindelia.genesis': Kindelia$genesis,
        'Kindelia.api.run': Kindelia$api$run,
        'Kindelia': Kindelia,
    };
})();
module.exports['$main$']();