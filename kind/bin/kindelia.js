module.exports = (function() {
    function word_to_u16(w) {
        var u = 0;
        for (var i = 0; i < 16; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u16_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 16; ++i) {
            w = {
                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u16_to_bits(x) {
        var s = '';
        for (var i = 0; i < 16; ++i) {
            s = (x & 1 ? '1' : '0') + s;
            x = x >>> 1;
        }
        return s;
    };

    function word_to_u32(w) {
        var u = 0;
        for (var i = 0; i < 32; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u32_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 32; ++i) {
            w = {
                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u32_for(state, from, til, func) {
        for (var i = from; i < til; ++i) {
            state = func(i)(state);
        }
        return state;
    };

    function word_to_u64(w) {
        var u = 0n;
        for (var i = 0n; i < 64n; i += 1n) {
            u = u | (w._ === 'Word.i' ? 1n << i : 0n);
            w = w.pred;
        };
        return u;
    };

    function u64_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0n; i < 64n; i += 1n) {
            w = {
                _: (u >> (64n - i - 1n)) & 1n ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };
    var list_for = list => nil => cons => {
        while (list._ !== 'List.nil') {
            nil = cons(list.head)(nil);
            list = list.tail;
        }
        return nil;
    };
    var list_length = list => {
        var len = 0;
        while (list._ === 'List.cons') {
            len += 1;
            list = list.tail;
        };
        return BigInt(len);
    };
    const inst_unit = x => x(null);
    const elim_unit = (x => {
        var $1 = (() => c0 => {
            var self = x;
            switch ("unit") {
                case 'unit':
                    var $0 = c0;
                    return $0;
            };
        })();
        return $1;
    });
    const inst_bool = x => x(true)(false);
    const elim_bool = (x => {
        var $4 = (() => c0 => c1 => {
            var self = x;
            if (self) {
                var $2 = c0;
                return $2;
            } else {
                var $3 = c1;
                return $3;
            };
        })();
        return $4;
    });
    const inst_nat = x => x(0n)(x0 => 1n + x0);
    const elim_nat = (x => {
        var $8 = (() => c0 => c1 => {
            var self = x;
            if (self === 0n) {
                var $5 = c0;
                return $5;
            } else {
                var $6 = (self - 1n);
                var $7 = c1($6);
                return $7;
            };
        })();
        return $8;
    });
    const inst_bits = x => x('')(x0 => x0 + '0')(x0 => x0 + '1');
    const elim_bits = (x => {
        var $14 = (() => c0 => c1 => c2 => {
            var self = x;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $9 = self.slice(0, -1);
                    var $10 = c1($9);
                    return $10;
                case 'i':
                    var $11 = self.slice(0, -1);
                    var $12 = c2($11);
                    return $12;
                case 'e':
                    var $13 = c0;
                    return $13;
            };
        })();
        return $14;
    });
    const inst_u16 = x => x(x0 => word_to_u16(x0));
    const elim_u16 = (x => {
        var $17 = (() => c0 => {
            var self = x;
            switch ('u16') {
                case 'u16':
                    var $15 = u16_to_word(self);
                    var $16 = c0($15);
                    return $16;
            };
        })();
        return $17;
    });
    const inst_u32 = x => x(x0 => word_to_u32(x0));
    const elim_u32 = (x => {
        var $20 = (() => c0 => {
            var self = x;
            switch ('u32') {
                case 'u32':
                    var $18 = u32_to_word(self);
                    var $19 = c0($18);
                    return $19;
            };
        })();
        return $20;
    });
    const inst_u64 = x => x(x0 => word_to_u64(x0));
    const elim_u64 = (x => {
        var $23 = (() => c0 => {
            var self = x;
            switch ('u64') {
                case 'u64':
                    var $21 = u64_to_word(self);
                    var $22 = c0($21);
                    return $22;
            };
        })();
        return $23;
    });
    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));
    const elim_string = (x => {
        var $28 = (() => c0 => c1 => {
            var self = x;
            if (self.length === 0) {
                var $24 = c0;
                return $24;
            } else {
                var $25 = self.charCodeAt(0);
                var $26 = self.slice(1);
                var $27 = c1($25)($26);
                return $27;
            };
        })();
        return $28;
    });
    var run = (p) => {
        if (typeof window === 'undefined') {
            var rl = eval("require('readline')").createInterface({
                input: process.stdin,
                output: process.stdout,
                terminal: false
            });
            var fs = eval("require('fs')");
            var pc = eval("process");
            var ht = eval("require('http')");
            var hs = eval("require('https')");
            var dg = eval("require('dgram')");
        } else {
            var rl = {
                question: (x, f) => f(''),
                close: () => {}
            };
            var fs = {
                readFileSync: () => ''
            };
            var pc = {
                exit: () => {},
                argv: []
            };
            var ht = null;
            var hs = null;
            var dg = null;
        };
        var lib = {
            rl,
            fs,
            pc,
            ht,
            hs,
            dg
        };
        return run_io(lib, p)
            .then((x) => {
                rl.close();
                return x;
            })
            .catch((e) => {
                rl.close();
                throw e;
            });
    };
    var set_file = (lib, param) => {
        var path = '';
        for (var i = 0; i < param.length && param[i] !== '='; ++i) {
            path += param[i];
        };
        var data = param.slice(i + 1);
        lib.fs.mkdirSync(path.split('/').slice(0, -1).join('/'), {
            recursive: true
        });
        lib.fs.writeFileSync(path, data);
        return '';
    };
    var del_file = (lib, param) => {
        try {
            lib.fs.unlinkSync(param);
            return '';
        } catch (e) {
            if (e.message.indexOf('EPERM') !== -1) {
                lib.fs.rmdirSync(param);
                return '';
            } else {
                throw e;
            }
        }
    };
    var get_file = (lib, param) => {
        return lib.fs.readFileSync(param, 'utf8');
    }
    var get_dir = (lib, param) => {
        return lib.fs.readdirSync(param).join(';');
    };
    var get_file_mtime = (lib, param) => {
        return String(lib.fs.statSync(param).mtime.getTime());
    };
    var request = (lib, param) => {
        if (typeof fetch === 'undefined') {
            return new Promise((res, err) => {
                (/^https/.test(param) ? lib.hs : lib.ht).get(param, r => {
                    let data = '';
                    r.on('data', chunk => {
                        data += chunk;
                    });
                    r.on('end', () => res(data));
                }).on('error', e => res(''));
            });
        } else {
            return fetch(param).then(res => res.text()).catch(e => '');
        }
    }
    let PORTS = {};

    function init_udp(lib, port_num) {
        return new Promise((resolve, reject) => {
            if (!PORTS[port_num]) {
                PORTS[port_num] = {
                    socket: lib.dg.createSocket('udp4'),
                    mailbox: []
                };
                PORTS[port_num].socket.bind(port_num);
                PORTS[port_num].socket.on('listening', () => resolve(PORTS[port_num]));
                PORTS[port_num].socket.on('message', (data, peer) => {
                    var ip = peer.address;
                    var port = peer.port;
                    PORTS[port_num].mailbox.push({
                        ip: peer.address,
                        port: peer.port,
                        data: data.toString('hex')
                    });
                })
                PORTS[port_num].socket.on('error', (err) => {
                    console.log('err');
                    reject('UDP init error.');
                });
            } else {
                resolve(PORTS[port_num]);
            }
        });
    }
    async function send_udp(lib, port_num, to_ip, to_port_num, data) {
        var port = await init_udp(lib, port_num);
        port.socket.send(Buffer.from(data, 'hex'), to_port_num, to_ip);
        return null;
    }
    async function recv_udp(lib, port_num) {
        var port = await init_udp(lib, port_num);
        var mailbox = port.mailbox;
        port.mailbox = [];
        return mailbox;
    }
    async function stop_udp(lib, port_num) {
        PORTS[port_num].socket.close();
        delete PORTS[port_num];
    }
    var file_error = e => {
        if (e.message.indexOf('NOENT') !== -1) {
            return '';
        } else {
            throw e;
        }
    };
    var io_action = {
        print: async (lib, param) => {
            console.log(param);
            return '';
        },
        put_string: async (lib, param) => {
            process.stdout.write(param);
            return '';
        },
        get_file: async (lib, param) => {
            try {
                return get_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        set_file: async (lib, param) => {
            try {
                return set_file(lib, param)
            } catch (e) {
                return file_error(e);
            }
        },
        del_file: async (lib, param) => {
            try {
                return del_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_dir: async (lib, param) => {
            try {
                return get_dir(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_file_mtime: async (lib, param) => {
            try {
                return get_file_mtime(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        exit: async (lib, param) => {
            lib.pc.exit();
            return '';
        },
        request: async (lib, param) => {
            return request(lib, param);
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        get_line: async (lib, param) => {
            return await new Promise((res, err) => {
                lib.rl.question(param, (line) => res(line));
            });
        },
        get_args: async (lib, param) => {
            return lib.pc.argv[2] || '';
        },
        init_udp: async (lib, param) => {
            try {
                await init_udp(lib, Number(param));
                return '';
            } catch (e) {
                return '';
            }
        },
        send_udp: async (lib, param) => {
            let [port_num, to_ip, to_port_num, data] = param.split(';');
            await send_udp(lib, Number(port_num), to_ip, Number(to_port_num), data);
            return '';
        },
        recv_udp: async (lib, param) => {
            var mailbox = await recv_udp(lib, Number(param));
            var reply = mailbox.map(x => x.ip + ',' + x.port + ',' + x.data).join(';');
            return reply;
        },
        stop_udp: async (lib, param) => {
            await stop_udp(lib, Number(param));
            return '';
        },
        sleep: async (lib, param) => {
            return await new Promise((resolve, reject) => {
                setTimeout(() => resolve(''), Number(param));
            });
        },
    };
    var run_io = async (lib, io, depth = 0) => {
        switch (io._) {
            case 'IO.end':
                return Promise.resolve(io.value);
            case 'IO.ask':
                var action = io_action[io.query];
                var answer = await action(lib, io.param);
                return await run_io(lib, io.then(answer), depth + 1);
        }
    };

    function Parser$Reply$(_V$1) {
        var $29 = null;
        return $29;
    };
    const Parser$Reply = x0 => Parser$Reply$(x0);

    function List$(_A$1) {
        var $30 = null;
        return $30;
    };
    const List = x0 => List$(x0);

    function Parser$Reply$error$(_err$2) {
        var $31 = ({
            _: 'Parser.Reply.error',
            'err': _err$2
        });
        return $31;
    };
    const Parser$Reply$error = x0 => Parser$Reply$error$(x0);
    const Bool$false = false;
    const Bool$true = true;
    const Nat$gtn = a0 => a1 => (a0 > a1);

    function Parser$Error$combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Parser.Error.new':
                var $33 = self.idx;
                var self = _b$2;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $35 = self.idx;
                        var self = ($33 > $35);
                        if (self) {
                            var $37 = _a$1;
                            var $36 = $37;
                        } else {
                            var $38 = _b$2;
                            var $36 = $38;
                        };
                        var $34 = $36;
                        break;
                };
                var $32 = $34;
                break;
        };
        return $32;
    };
    const Parser$Error$combine = x0 => x1 => Parser$Error$combine$(x0, x1);

    function List$cons$(_head$2, _tail$3) {
        var $39 = ({
            _: 'List.cons',
            'head': _head$2,
            'tail': _tail$3
        });
        return $39;
    };
    const List$cons = x0 => x1 => List$cons$(x0, x1);

    function Parser$Reply$value$(_pst$2, _val$3) {
        var $40 = ({
            _: 'Parser.Reply.value',
            'pst': _pst$2,
            'val': _val$3
        });
        return $40;
    };
    const Parser$Reply$value = x0 => x1 => Parser$Reply$value$(x0, x1);

    function List$reverse$go$(_xs$2, _res$3) {
        var List$reverse$go$ = (_xs$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _res$3]
        });
        var List$reverse$go = _xs$2 => _res$3 => List$reverse$go$(_xs$2, _res$3);
        var arg = [_xs$2, _res$3];
        while (true) {
            let [_xs$2, _res$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $41 = self.head;
                        var $42 = self.tail;
                        var $43 = List$reverse$go$($42, List$cons$($41, _res$3));
                        return $43;
                    case 'List.nil':
                        var $44 = _res$3;
                        return $44;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$reverse$go = x0 => x1 => List$reverse$go$(x0, x1);
    const List$nil = ({
        _: 'List.nil'
    });

    function List$reverse$(_xs$2) {
        var $45 = List$reverse$go$(_xs$2, List$nil);
        return $45;
    };
    const List$reverse = x0 => List$reverse$(x0);

    function Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5) {
        var Parser$until$go$ = (_until$2, _parse$3, _values$4, _pst$5) => ({
            ctr: 'TCO',
            arg: [_until$2, _parse$3, _values$4, _pst$5]
        });
        var Parser$until$go = _until$2 => _parse$3 => _values$4 => _pst$5 => Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5);
        var arg = [_until$2, _parse$3, _values$4, _pst$5];
        while (true) {
            let [_until$2, _parse$3, _values$4, _pst$5] = arg;
            var R = (() => {
                var _until_reply$6 = _until$2(_pst$5);
                var self = _until_reply$6;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $47 = self.err;
                        var _reply$8 = _parse$3(_pst$5);
                        var self = _reply$8;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $49 = self.err;
                                var $50 = Parser$Reply$error$(Parser$Error$combine$($49, $47));
                                var $48 = $50;
                                break;
                            case 'Parser.Reply.value':
                                var $51 = self.pst;
                                var $52 = self.val;
                                var $53 = Parser$until$go$(_until$2, _parse$3, List$cons$($52, _values$4), $51);
                                var $48 = $53;
                                break;
                        };
                        var $46 = $48;
                        break;
                    case 'Parser.Reply.value':
                        var $54 = self.pst;
                        var $55 = Parser$Reply$value$($54, List$reverse$(_values$4));
                        var $46 = $55;
                        break;
                };
                return $46;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$until$go = x0 => x1 => x2 => x3 => Parser$until$go$(x0, x1, x2, x3);

    function Parser$until$(_until$2, _parse$3) {
        var $56 = Parser$until$go(_until$2)(_parse$3)(List$nil);
        return $56;
    };
    const Parser$until = x0 => x1 => Parser$until$(x0, x1);

    function Parser$many$go$(_parse$2, _values$3, _pst$4) {
        var Parser$many$go$ = (_parse$2, _values$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_parse$2, _values$3, _pst$4]
        });
        var Parser$many$go = _parse$2 => _values$3 => _pst$4 => Parser$many$go$(_parse$2, _values$3, _pst$4);
        var arg = [_parse$2, _values$3, _pst$4];
        while (true) {
            let [_parse$2, _values$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var self = _parse$2(_pst$4);
                        switch (self._) {
                            case 'Parser.Reply.value':
                                var $58 = self.pst;
                                var $59 = self.val;
                                var $60 = Parser$many$go$(_parse$2, (_xs$12 => {
                                    var $61 = _values$3(List$cons$($59, _xs$12));
                                    return $61;
                                }), $58);
                                var $57 = $60;
                                break;
                            case 'Parser.Reply.error':
                                var $62 = Parser$Reply$value$(_pst$4, _values$3(List$nil));
                                var $57 = $62;
                                break;
                        };
                        return $57;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$many$go = x0 => x1 => x2 => Parser$many$go$(x0, x1, x2);

    function Parser$many$(_parser$2) {
        var $63 = Parser$many$go(_parser$2)((_x$3 => {
            var $64 = _x$3;
            return $64;
        }));
        return $63;
    };
    const Parser$many = x0 => Parser$many$(x0);

    function Parser$Error$new$(_nam$1, _ini$2, _idx$3, _msg$4) {
        var $65 = ({
            _: 'Parser.Error.new',
            'nam': _nam$1,
            'ini': _ini$2,
            'idx': _idx$3,
            'msg': _msg$4
        });
        return $65;
    };
    const Parser$Error$new = x0 => x1 => x2 => x3 => Parser$Error$new$(x0, x1, x2, x3);

    function Parser$Reply$fail$(_nam$2, _ini$3, _idx$4, _msg$5) {
        var $66 = Parser$Reply$error$(Parser$Error$new$(_nam$2, _ini$3, _idx$4, _msg$5));
        return $66;
    };
    const Parser$Reply$fail = x0 => x1 => x2 => x3 => Parser$Reply$fail$(x0, x1, x2, x3);

    function Maybe$some$(_value$2) {
        var $67 = ({
            _: 'Maybe.some',
            'value': _value$2
        });
        return $67;
    };
    const Maybe$some = x0 => Maybe$some$(x0);

    function Maybe$(_A$1) {
        var $68 = null;
        return $68;
    };
    const Maybe = x0 => Maybe$(x0);
    const Maybe$none = ({
        _: 'Maybe.none'
    });

    function Parser$Error$maybe_combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Maybe.some':
                var $70 = self.value;
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $72 = self.value;
                        var $73 = Maybe$some$(Parser$Error$combine$($70, $72));
                        var $71 = $73;
                        break;
                    case 'Maybe.none':
                        var $74 = _a$1;
                        var $71 = $74;
                        break;
                };
                var $69 = $71;
                break;
            case 'Maybe.none':
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.none':
                        var $76 = Maybe$none;
                        var $75 = $76;
                        break;
                    case 'Maybe.some':
                        var $77 = _b$2;
                        var $75 = $77;
                        break;
                };
                var $69 = $75;
                break;
        };
        return $69;
    };
    const Parser$Error$maybe_combine = x0 => x1 => Parser$Error$maybe_combine$(x0, x1);

    function Parser$State$new$(_err$1, _nam$2, _ini$3, _idx$4, _str$5) {
        var $78 = ({
            _: 'Parser.State.new',
            'err': _err$1,
            'nam': _nam$2,
            'ini': _ini$3,
            'idx': _idx$4,
            'str': _str$5
        });
        return $78;
    };
    const Parser$State$new = x0 => x1 => x2 => x3 => x4 => Parser$State$new$(x0, x1, x2, x3, x4);

    function Parser$choice$(_pars$2, _pst$3) {
        var Parser$choice$ = (_pars$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_pars$2, _pst$3]
        });
        var Parser$choice = _pars$2 => _pst$3 => Parser$choice$(_pars$2, _pst$3);
        var arg = [_pars$2, _pst$3];
        while (true) {
            let [_pars$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $79 = self.err;
                        var $80 = self.nam;
                        var $81 = self.ini;
                        var $82 = self.idx;
                        var $83 = self.str;
                        var self = _pars$2;
                        switch (self._) {
                            case 'List.cons':
                                var $85 = self.head;
                                var $86 = self.tail;
                                var _parsed$11 = $85(_pst$3);
                                var self = _parsed$11;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $88 = self.err;
                                        var _cur_err$13 = Maybe$some$($88);
                                        var _far_err$14 = Parser$Error$maybe_combine$($79, _cur_err$13);
                                        var _new_pst$15 = Parser$State$new$(_far_err$14, $80, $81, $82, $83);
                                        var $89 = Parser$choice$($86, _new_pst$15);
                                        var $87 = $89;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $90 = self.pst;
                                        var $91 = self.val;
                                        var $92 = Parser$Reply$value$($90, $91);
                                        var $87 = $92;
                                        break;
                                };
                                var $84 = $87;
                                break;
                            case 'List.nil':
                                var self = $79;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $94 = self.value;
                                        var $95 = Parser$Reply$error$($94);
                                        var $93 = $95;
                                        break;
                                    case 'Maybe.none':
                                        var $96 = Parser$Reply$fail$($80, $81, $82, "No parse.");
                                        var $93 = $96;
                                        break;
                                };
                                var $84 = $93;
                                break;
                        };
                        return $84;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$choice = x0 => x1 => Parser$choice$(x0, x1);

    function Parser$(_V$1) {
        var $97 = null;
        return $97;
    };
    const Parser = x0 => Parser$(x0);
    const Unit$new = null;

    function String$cons$(_head$1, _tail$2) {
        var $98 = (String.fromCharCode(_head$1) + _tail$2);
        return $98;
    };
    const String$cons = x0 => x1 => String$cons$(x0, x1);
    const String$concat = a0 => a1 => (a0 + a1);

    function Cmp$as_eql$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.gtn':
                var $100 = Bool$false;
                var $99 = $100;
                break;
            case 'Cmp.eql':
                var $101 = Bool$true;
                var $99 = $101;
                break;
        };
        return $99;
    };
    const Cmp$as_eql = x0 => Cmp$as_eql$(x0);
    const Cmp$ltn = ({
        _: 'Cmp.ltn'
    });
    const Cmp$gtn = ({
        _: 'Cmp.gtn'
    });

    function Word$cmp$go$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $103 = self.pred;
                var $104 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $106 = self.pred;
                            var $107 = (_a$pred$10 => {
                                var $108 = Word$cmp$go$(_a$pred$10, $106, _c$4);
                                return $108;
                            });
                            var $105 = $107;
                            break;
                        case 'Word.i':
                            var $109 = self.pred;
                            var $110 = (_a$pred$10 => {
                                var $111 = Word$cmp$go$(_a$pred$10, $109, Cmp$ltn);
                                return $111;
                            });
                            var $105 = $110;
                            break;
                        case 'Word.e':
                            var $112 = (_a$pred$8 => {
                                var $113 = _c$4;
                                return $113;
                            });
                            var $105 = $112;
                            break;
                    };
                    var $105 = $105($103);
                    return $105;
                });
                var $102 = $104;
                break;
            case 'Word.i':
                var $114 = self.pred;
                var $115 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $117 = self.pred;
                            var $118 = (_a$pred$10 => {
                                var $119 = Word$cmp$go$(_a$pred$10, $117, Cmp$gtn);
                                return $119;
                            });
                            var $116 = $118;
                            break;
                        case 'Word.i':
                            var $120 = self.pred;
                            var $121 = (_a$pred$10 => {
                                var $122 = Word$cmp$go$(_a$pred$10, $120, _c$4);
                                return $122;
                            });
                            var $116 = $121;
                            break;
                        case 'Word.e':
                            var $123 = (_a$pred$8 => {
                                var $124 = _c$4;
                                return $124;
                            });
                            var $116 = $123;
                            break;
                    };
                    var $116 = $116($114);
                    return $116;
                });
                var $102 = $115;
                break;
            case 'Word.e':
                var $125 = (_b$5 => {
                    var $126 = _c$4;
                    return $126;
                });
                var $102 = $125;
                break;
        };
        var $102 = $102(_b$3);
        return $102;
    };
    const Word$cmp$go = x0 => x1 => x2 => Word$cmp$go$(x0, x1, x2);
    const Cmp$eql = ({
        _: 'Cmp.eql'
    });

    function Word$cmp$(_a$2, _b$3) {
        var $127 = Word$cmp$go$(_a$2, _b$3, Cmp$eql);
        return $127;
    };
    const Word$cmp = x0 => x1 => Word$cmp$(x0, x1);

    function Word$eql$(_a$2, _b$3) {
        var $128 = Cmp$as_eql$(Word$cmp$(_a$2, _b$3));
        return $128;
    };
    const Word$eql = x0 => x1 => Word$eql$(x0, x1);

    function Nat$succ$(_pred$1) {
        var $129 = 1n + _pred$1;
        return $129;
    };
    const Nat$succ = x0 => Nat$succ$(x0);
    const Nat$zero = 0n;
    const U16$eql = a0 => a1 => (a0 === a1);
    const String$nil = '';

    function Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4) {
        var Parser$text$go$ = (_ini_idx$1, _ini_txt$2, _text$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_ini_idx$1, _ini_txt$2, _text$3, _pst$4]
        });
        var Parser$text$go = _ini_idx$1 => _ini_txt$2 => _text$3 => _pst$4 => Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4);
        var arg = [_ini_idx$1, _ini_txt$2, _text$3, _pst$4];
        while (true) {
            let [_ini_idx$1, _ini_txt$2, _text$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var $130 = self.err;
                        var $131 = self.nam;
                        var $132 = self.ini;
                        var $133 = self.idx;
                        var $134 = self.str;
                        var self = _text$3;
                        if (self.length === 0) {
                            var $136 = Parser$Reply$value$(_pst$4, Unit$new);
                            var $135 = $136;
                        } else {
                            var $137 = self.charCodeAt(0);
                            var $138 = self.slice(1);
                            var self = $134;
                            if (self.length === 0) {
                                var _error_msg$12 = ("Expected \'" + (_ini_txt$2 + "\', found end of file."));
                                var $140 = Parser$Reply$fail$($131, $132, _ini_idx$1, _error_msg$12);
                                var $139 = $140;
                            } else {
                                var $141 = self.charCodeAt(0);
                                var $142 = self.slice(1);
                                var self = ($137 === $141);
                                if (self) {
                                    var _pst$14 = Parser$State$new$($130, $131, $132, Nat$succ$($133), $142);
                                    var $144 = Parser$text$go$(_ini_idx$1, _ini_txt$2, $138, _pst$14);
                                    var $143 = $144;
                                } else {
                                    var _chr$14 = String$cons$($141, String$nil);
                                    var _err$15 = ("Expected \'" + (_ini_txt$2 + ("\', found \'" + (_chr$14 + "\'."))));
                                    var $145 = Parser$Reply$fail$($131, $132, _ini_idx$1, _err$15);
                                    var $143 = $145;
                                };
                                var $139 = $143;
                            };
                            var $135 = $139;
                        };
                        return $135;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$text$go = x0 => x1 => x2 => x3 => Parser$text$go$(x0, x1, x2, x3);

    function Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $147 = self.idx;
                var self = Parser$text$go$($147, _text$1, _text$1, _pst$2);
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $149 = self.err;
                        var $150 = Parser$Reply$error$($149);
                        var $148 = $150;
                        break;
                    case 'Parser.Reply.value':
                        var $151 = self.pst;
                        var $152 = self.val;
                        var $153 = Parser$Reply$value$($151, $152);
                        var $148 = $153;
                        break;
                };
                var $146 = $148;
                break;
        };
        return $146;
    };
    const Parser$text = x0 => x1 => Parser$text$(x0, x1);

    function Parser$eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $155 = self.nam;
                var $156 = self.ini;
                var $157 = self.idx;
                var $158 = self.str;
                var self = $158;
                if (self.length === 0) {
                    var $160 = Parser$Reply$value$(_pst$1, Unit$new);
                    var $159 = $160;
                } else {
                    var $161 = self.charCodeAt(0);
                    var $162 = self.slice(1);
                    var $163 = Parser$Reply$fail$($155, $156, $157, "Expected end-of-file.");
                    var $159 = $163;
                };
                var $154 = $159;
                break;
        };
        return $154;
    };
    const Parser$eof = x0 => Parser$eof$(x0);

    function Parser$one$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $165 = self.err;
                var $166 = self.nam;
                var $167 = self.ini;
                var $168 = self.idx;
                var $169 = self.str;
                var self = $169;
                if (self.length === 0) {
                    var $171 = Parser$Reply$fail$($166, $167, $168, "Unexpected end of file.");
                    var $170 = $171;
                } else {
                    var $172 = self.charCodeAt(0);
                    var $173 = self.slice(1);
                    var _pst$9 = Parser$State$new$($165, $166, $167, Nat$succ$($168), $173);
                    var $174 = Parser$Reply$value$(_pst$9, $172);
                    var $170 = $174;
                };
                var $164 = $170;
                break;
        };
        return $164;
    };
    const Parser$one = x0 => Parser$one$(x0);
    const Kindelia$parse$ignore = Parser$many$(Parser$choice(List$cons$(Parser$text(" "), List$cons$(Parser$text("\u{9}"), List$cons$(Parser$text("\u{d}"), List$cons$(Parser$text("\u{a}"), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $176 = self.err;
                var _reply$7 = Parser$text$("//", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $178 = self.err;
                        var self = $176;
                        switch (self._) {
                            case 'Maybe.some':
                                var $180 = self.value;
                                var $181 = Parser$Reply$error$(Parser$Error$combine$($180, $178));
                                var $179 = $181;
                                break;
                            case 'Maybe.none':
                                var $182 = Parser$Reply$error$($178);
                                var $179 = $182;
                                break;
                        };
                        var $177 = $179;
                        break;
                    case 'Parser.Reply.value':
                        var $183 = self.pst;
                        var self = $183;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $185 = self.err;
                                var $186 = self.nam;
                                var $187 = self.ini;
                                var $188 = self.idx;
                                var $189 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($176, $185), $186, $187, $188, $189);
                                var _end$16 = Parser$choice(List$cons$(Parser$text("\u{a}"), List$cons$(Parser$eof, List$nil)));
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $191 = self.err;
                                        var _reply$22 = Parser$until$(_end$16, Parser$one)(_reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $193 = self.err;
                                                var self = $191;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $195 = self.value;
                                                        var $196 = Parser$Reply$error$(Parser$Error$combine$($195, $193));
                                                        var $194 = $196;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $197 = Parser$Reply$error$($193);
                                                        var $194 = $197;
                                                        break;
                                                };
                                                var $192 = $194;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $198 = self.pst;
                                                var self = $198;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $200 = self.err;
                                                        var $201 = self.nam;
                                                        var $202 = self.ini;
                                                        var $203 = self.idx;
                                                        var $204 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($191, $200), $201, $202, $203, $204);
                                                        var $205 = Parser$Reply$value$(_reply$pst$30, Unit$new);
                                                        var $199 = $205;
                                                        break;
                                                };
                                                var $192 = $199;
                                                break;
                                        };
                                        var $190 = $192;
                                        break;
                                };
                                var $184 = $190;
                                break;
                        };
                        var $177 = $184;
                        break;
                };
                var $175 = $177;
                break;
        };
        return $175;
    }), List$nil)))))));

    function Kindelia$parse$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $207 = self.err;
                var _reply$8 = Kindelia$parse$ignore(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $209 = self.err;
                        var self = $207;
                        switch (self._) {
                            case 'Maybe.some':
                                var $211 = self.value;
                                var $212 = Parser$Reply$error$(Parser$Error$combine$($211, $209));
                                var $210 = $212;
                                break;
                            case 'Maybe.none':
                                var $213 = Parser$Reply$error$($209);
                                var $210 = $213;
                                break;
                        };
                        var $208 = $210;
                        break;
                    case 'Parser.Reply.value':
                        var $214 = self.pst;
                        var self = $214;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $216 = self.err;
                                var $217 = self.nam;
                                var $218 = self.ini;
                                var $219 = self.idx;
                                var $220 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($207, $216), $217, $218, $219, $220);
                                var $221 = Parser$text$(_text$1, _reply$pst$16);
                                var $215 = $221;
                                break;
                        };
                        var $208 = $215;
                        break;
                };
                var $206 = $208;
                break;
        };
        return $206;
    };
    const Kindelia$parse$text = x0 => x1 => Kindelia$parse$text$(x0, x1);

    function Parser$letter$(_is_letter$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $223 = self.err;
                var $224 = self.nam;
                var $225 = self.ini;
                var $226 = self.idx;
                var $227 = self.str;
                var self = $227;
                if (self.length === 0) {
                    var $229 = Parser$Reply$fail$($224, $225, $226, "Unexpected eof.");
                    var $228 = $229;
                } else {
                    var $230 = self.charCodeAt(0);
                    var $231 = self.slice(1);
                    var self = _is_letter$1($230);
                    if (self) {
                        var $233 = Parser$Reply$value$(Parser$State$new$($223, $224, $225, Nat$succ$($226), $231), $230);
                        var $232 = $233;
                    } else {
                        var $234 = Parser$Reply$fail$($224, $225, $226, "Expected letter.");
                        var $232 = $234;
                    };
                    var $228 = $232;
                };
                var $222 = $228;
                break;
        };
        return $222;
    };
    const Parser$letter = x0 => x1 => Parser$letter$(x0, x1);
    const Bool$and = a0 => a1 => (a0 && a1);

    function Cmp$as_lte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $236 = Bool$true;
                var $235 = $236;
                break;
            case 'Cmp.gtn':
                var $237 = Bool$false;
                var $235 = $237;
                break;
        };
        return $235;
    };
    const Cmp$as_lte = x0 => Cmp$as_lte$(x0);

    function Word$lte$(_a$2, _b$3) {
        var $238 = Cmp$as_lte$(Word$cmp$(_a$2, _b$3));
        return $238;
    };
    const Word$lte = x0 => x1 => Word$lte$(x0, x1);
    const U16$lte = a0 => a1 => (a0 <= a1);

    function U16$btw$(_a$1, _b$2, _c$3) {
        var $239 = ((_a$1 <= _b$2) && (_b$2 <= _c$3));
        return $239;
    };
    const U16$btw = x0 => x1 => x2 => U16$btw$(x0, x1, x2);
    const Kindelia$parse$letter = Parser$letter((_chr$1 => {
        var self = U16$btw$(65, _chr$1, 90);
        if (self) {
            var $241 = Bool$true;
            var $240 = $241;
        } else {
            var self = U16$btw$(97, _chr$1, 122);
            if (self) {
                var $243 = Bool$true;
                var $242 = $243;
            } else {
                var self = U16$btw$(48, _chr$1, 57);
                if (self) {
                    var $245 = Bool$true;
                    var $244 = $245;
                } else {
                    var self = (46 === _chr$1);
                    if (self) {
                        var $247 = Bool$true;
                        var $246 = $247;
                    } else {
                        var self = (95 === _chr$1);
                        if (self) {
                            var $249 = Bool$true;
                            var $248 = $249;
                        } else {
                            var self = (94 === _chr$1);
                            if (self) {
                                var $251 = Bool$true;
                                var $250 = $251;
                            } else {
                                var $252 = Bool$false;
                                var $250 = $252;
                            };
                            var $248 = $250;
                        };
                        var $246 = $248;
                    };
                    var $244 = $246;
                };
                var $242 = $244;
            };
            var $240 = $242;
        };
        return $240;
    }));

    function List$fold$(_list$2, _nil$4, _cons$5) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $254 = self.head;
                var $255 = self.tail;
                var $256 = _cons$5($254)(List$fold$($255, _nil$4, _cons$5));
                var $253 = $256;
                break;
            case 'List.nil':
                var $257 = _nil$4;
                var $253 = $257;
                break;
        };
        return $253;
    };
    const List$fold = x0 => x1 => x2 => List$fold$(x0, x1, x2);

    function Kindelia$parse$name$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $259 = self.err;
                var _reply$7 = Kindelia$parse$ignore(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $261 = self.err;
                        var self = $259;
                        switch (self._) {
                            case 'Maybe.some':
                                var $263 = self.value;
                                var $264 = Parser$Reply$error$(Parser$Error$combine$($263, $261));
                                var $262 = $264;
                                break;
                            case 'Maybe.none':
                                var $265 = Parser$Reply$error$($261);
                                var $262 = $265;
                                break;
                        };
                        var $260 = $262;
                        break;
                    case 'Parser.Reply.value':
                        var $266 = self.pst;
                        var self = $266;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $268 = self.err;
                                var $269 = self.nam;
                                var $270 = self.ini;
                                var $271 = self.idx;
                                var $272 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($259, $268), $269, $270, $271, $272);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $274 = self.err;
                                        var _reply$21 = Kindelia$parse$letter(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $276 = self.err;
                                                var self = $274;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $278 = self.value;
                                                        var $279 = Parser$Reply$error$(Parser$Error$combine$($278, $276));
                                                        var $277 = $279;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $280 = Parser$Reply$error$($276);
                                                        var $277 = $280;
                                                        break;
                                                };
                                                var $275 = $277;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $281 = self.pst;
                                                var $282 = self.val;
                                                var self = $281;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $284 = self.err;
                                                        var $285 = self.nam;
                                                        var $286 = self.ini;
                                                        var $287 = self.idx;
                                                        var $288 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($274, $284), $285, $286, $287, $288);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $290 = self.err;
                                                                var _reply$35 = Parser$many$(Kindelia$parse$letter)(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $292 = self.err;
                                                                        var self = $290;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $294 = self.value;
                                                                                var $295 = Parser$Reply$error$(Parser$Error$combine$($294, $292));
                                                                                var $293 = $295;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $296 = Parser$Reply$error$($292);
                                                                                var $293 = $296;
                                                                                break;
                                                                        };
                                                                        var $291 = $293;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $297 = self.pst;
                                                                        var $298 = self.val;
                                                                        var self = $297;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $300 = self.err;
                                                                                var $301 = self.nam;
                                                                                var $302 = self.ini;
                                                                                var $303 = self.idx;
                                                                                var $304 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($290, $300), $301, $302, $303, $304);
                                                                                var $305 = Parser$Reply$value$(_reply$pst$43, String$cons$($282, List$fold$($298, String$nil, String$cons)));
                                                                                var $299 = $305;
                                                                                break;
                                                                        };
                                                                        var $291 = $299;
                                                                        break;
                                                                };
                                                                var $289 = $291;
                                                                break;
                                                        };
                                                        var $283 = $289;
                                                        break;
                                                };
                                                var $275 = $283;
                                                break;
                                        };
                                        var $273 = $275;
                                        break;
                                };
                                var $267 = $273;
                                break;
                        };
                        var $260 = $267;
                        break;
                };
                var $258 = $260;
                break;
        };
        return $258;
    };
    const Kindelia$parse$name = x0 => Kindelia$parse$name$(x0);

    function Parser$wrap$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $307 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $309 = self.err;
                        var self = $307;
                        switch (self._) {
                            case 'Maybe.some':
                                var $311 = self.value;
                                var $312 = Parser$Reply$error$(Parser$Error$combine$($311, $309));
                                var $310 = $312;
                                break;
                            case 'Maybe.none':
                                var $313 = Parser$Reply$error$($309);
                                var $310 = $313;
                                break;
                        };
                        var $308 = $310;
                        break;
                    case 'Parser.Reply.value':
                        var $314 = self.pst;
                        var self = $314;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $316 = self.err;
                                var $317 = self.nam;
                                var $318 = self.ini;
                                var $319 = self.idx;
                                var $320 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($307, $316), $317, $318, $319, $320);
                                var $321 = Parser$until$(_close$4, _parse$3)(_reply$pst$19);
                                var $315 = $321;
                                break;
                        };
                        var $308 = $315;
                        break;
                };
                var $306 = $308;
                break;
        };
        return $306;
    };
    const Parser$wrap = x0 => x1 => x2 => x3 => Parser$wrap$(x0, x1, x2, x3);

    function Pair$(_A$1, _B$2) {
        var $322 = null;
        return $322;
    };
    const Pair = x0 => x1 => Pair$(x0, x1);

    function Parser$maybe$(_parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var self = _parse$2(_pst$3);
                switch (self._) {
                    case 'Parser.Reply.value':
                        var $325 = self.pst;
                        var $326 = self.val;
                        var $327 = Parser$Reply$value$($325, Maybe$some$($326));
                        var $324 = $327;
                        break;
                    case 'Parser.Reply.error':
                        var $328 = Parser$Reply$value$(_pst$3, Maybe$none);
                        var $324 = $328;
                        break;
                };
                var $323 = $324;
                break;
        };
        return $323;
    };
    const Parser$maybe = x0 => x1 => Parser$maybe$(x0, x1);

    function Kindelia$Type$effe$(_rety$1) {
        var $329 = ({
            _: 'Kindelia.Type.effe',
            'rety': _rety$1
        });
        return $329;
    };
    const Kindelia$Type$effe = x0 => Kindelia$Type$effe$(x0);
    const Kindelia$Type$word = ({
        _: 'Kindelia.Type.word'
    });

    function Kindelia$Type$data$(_name$1) {
        var $330 = ({
            _: 'Kindelia.Type.data',
            'name': _name$1
        });
        return $330;
    };
    const Kindelia$Type$data = x0 => Kindelia$Type$data$(x0);

    function Kindelia$parse$type$(_world$1) {
        var $331 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $333 = self.err;
                    var _reply$8 = Kindelia$parse$text$("&", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $335 = self.err;
                            var self = $333;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $337 = self.value;
                                    var $338 = Parser$Reply$error$(Parser$Error$combine$($337, $335));
                                    var $336 = $338;
                                    break;
                                case 'Maybe.none':
                                    var $339 = Parser$Reply$error$($335);
                                    var $336 = $339;
                                    break;
                            };
                            var $334 = $336;
                            break;
                        case 'Parser.Reply.value':
                            var $340 = self.pst;
                            var self = $340;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $342 = self.err;
                                    var $343 = self.nam;
                                    var $344 = self.ini;
                                    var $345 = self.idx;
                                    var $346 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($333, $342), $343, $344, $345, $346);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $348 = self.err;
                                            var _reply$22 = Kindelia$parse$type$(_world$1)(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $350 = self.err;
                                                    var self = $348;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $352 = self.value;
                                                            var $353 = Parser$Reply$error$(Parser$Error$combine$($352, $350));
                                                            var $351 = $353;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $354 = Parser$Reply$error$($350);
                                                            var $351 = $354;
                                                            break;
                                                    };
                                                    var $349 = $351;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $355 = self.pst;
                                                    var $356 = self.val;
                                                    var self = $355;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $358 = self.err;
                                                            var $359 = self.nam;
                                                            var $360 = self.ini;
                                                            var $361 = self.idx;
                                                            var $362 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($348, $358), $359, $360, $361, $362);
                                                            var $363 = Parser$Reply$value$(_reply$pst$30, Kindelia$Type$effe$($356));
                                                            var $357 = $363;
                                                            break;
                                                    };
                                                    var $349 = $357;
                                                    break;
                                            };
                                            var $347 = $349;
                                            break;
                                    };
                                    var $341 = $347;
                                    break;
                            };
                            var $334 = $341;
                            break;
                    };
                    var $332 = $334;
                    break;
            };
            return $332;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $365 = self.err;
                    var _reply$8 = Kindelia$parse$text$("#word", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $367 = self.err;
                            var self = $365;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $369 = self.value;
                                    var $370 = Parser$Reply$error$(Parser$Error$combine$($369, $367));
                                    var $368 = $370;
                                    break;
                                case 'Maybe.none':
                                    var $371 = Parser$Reply$error$($367);
                                    var $368 = $371;
                                    break;
                            };
                            var $366 = $368;
                            break;
                        case 'Parser.Reply.value':
                            var $372 = self.pst;
                            var self = $372;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $374 = self.err;
                                    var $375 = self.nam;
                                    var $376 = self.ini;
                                    var $377 = self.idx;
                                    var $378 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($365, $374), $375, $376, $377, $378);
                                    var $379 = Parser$Reply$value$(_reply$pst$16, Kindelia$Type$word);
                                    var $373 = $379;
                                    break;
                            };
                            var $366 = $373;
                            break;
                    };
                    var $364 = $366;
                    break;
            };
            return $364;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $381 = self.err;
                    var _reply$8 = Kindelia$parse$name$(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $383 = self.err;
                            var self = $381;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $385 = self.value;
                                    var $386 = Parser$Reply$error$(Parser$Error$combine$($385, $383));
                                    var $384 = $386;
                                    break;
                                case 'Maybe.none':
                                    var $387 = Parser$Reply$error$($383);
                                    var $384 = $387;
                                    break;
                            };
                            var $382 = $384;
                            break;
                        case 'Parser.Reply.value':
                            var $388 = self.pst;
                            var $389 = self.val;
                            var self = $388;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $391 = self.err;
                                    var $392 = self.nam;
                                    var $393 = self.ini;
                                    var $394 = self.idx;
                                    var $395 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($381, $391), $392, $393, $394, $395);
                                    var $396 = Parser$Reply$value$(_reply$pst$16, Kindelia$Type$data$($389));
                                    var $390 = $396;
                                    break;
                            };
                            var $382 = $390;
                            break;
                    };
                    var $380 = $382;
                    break;
            };
            return $380;
        }), List$nil))));
        return $331;
    };
    const Kindelia$parse$type = x0 => Kindelia$parse$type$(x0);

    function Pair$new$(_fst$3, _snd$4) {
        var $397 = ({
            _: 'Pair.new',
            'fst': _fst$3,
            'snd': _snd$4
        });
        return $397;
    };
    const Pair$new = x0 => x1 => Pair$new$(x0, x1);

    function Kindelia$parse$ann$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $399 = self.err;
                var _reply$8 = Parser$maybe$(Kindelia$parse$text(","), _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $401 = self.err;
                        var self = $399;
                        switch (self._) {
                            case 'Maybe.some':
                                var $403 = self.value;
                                var $404 = Parser$Reply$error$(Parser$Error$combine$($403, $401));
                                var $402 = $404;
                                break;
                            case 'Maybe.none':
                                var $405 = Parser$Reply$error$($401);
                                var $402 = $405;
                                break;
                        };
                        var $400 = $402;
                        break;
                    case 'Parser.Reply.value':
                        var $406 = self.pst;
                        var self = $406;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $408 = self.err;
                                var $409 = self.nam;
                                var $410 = self.ini;
                                var $411 = self.idx;
                                var $412 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($399, $408), $409, $410, $411, $412);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $414 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $416 = self.err;
                                                var self = $414;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $418 = self.value;
                                                        var $419 = Parser$Reply$error$(Parser$Error$combine$($418, $416));
                                                        var $417 = $419;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $420 = Parser$Reply$error$($416);
                                                        var $417 = $420;
                                                        break;
                                                };
                                                var $415 = $417;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $421 = self.pst;
                                                var $422 = self.val;
                                                var self = $421;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $424 = self.err;
                                                        var $425 = self.nam;
                                                        var $426 = self.ini;
                                                        var $427 = self.idx;
                                                        var $428 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($414, $424), $425, $426, $427, $428);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $430 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $432 = self.err;
                                                                        var self = $430;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $434 = self.value;
                                                                                var $435 = Parser$Reply$error$(Parser$Error$combine$($434, $432));
                                                                                var $433 = $435;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $436 = Parser$Reply$error$($432);
                                                                                var $433 = $436;
                                                                                break;
                                                                        };
                                                                        var $431 = $433;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $437 = self.pst;
                                                                        var self = $437;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $439 = self.err;
                                                                                var $440 = self.nam;
                                                                                var $441 = self.ini;
                                                                                var $442 = self.idx;
                                                                                var $443 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($430, $439), $440, $441, $442, $443);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $445 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$type$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $447 = self.err;
                                                                                                var self = $445;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $449 = self.value;
                                                                                                        var $450 = Parser$Reply$error$(Parser$Error$combine$($449, $447));
                                                                                                        var $448 = $450;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $451 = Parser$Reply$error$($447);
                                                                                                        var $448 = $451;
                                                                                                        break;
                                                                                                };
                                                                                                var $446 = $448;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $452 = self.pst;
                                                                                                var $453 = self.val;
                                                                                                var self = $452;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $455 = self.err;
                                                                                                        var $456 = self.nam;
                                                                                                        var $457 = self.ini;
                                                                                                        var $458 = self.idx;
                                                                                                        var $459 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($445, $455), $456, $457, $458, $459);
                                                                                                        var $460 = Parser$Reply$value$(_reply$pst$58, Pair$new$($422, $453));
                                                                                                        var $454 = $460;
                                                                                                        break;
                                                                                                };
                                                                                                var $446 = $454;
                                                                                                break;
                                                                                        };
                                                                                        var $444 = $446;
                                                                                        break;
                                                                                };
                                                                                var $438 = $444;
                                                                                break;
                                                                        };
                                                                        var $431 = $438;
                                                                        break;
                                                                };
                                                                var $429 = $431;
                                                                break;
                                                        };
                                                        var $423 = $429;
                                                        break;
                                                };
                                                var $415 = $423;
                                                break;
                                        };
                                        var $413 = $415;
                                        break;
                                };
                                var $407 = $413;
                                break;
                        };
                        var $400 = $407;
                        break;
                };
                var $398 = $400;
                break;
        };
        return $398;
    };
    const Kindelia$parse$ann = x0 => x1 => Kindelia$parse$ann$(x0, x1);

    function List$mapped$(_as$2, _f$4) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $462 = self.head;
                var $463 = self.tail;
                var $464 = List$cons$(_f$4($462), List$mapped$($463, _f$4));
                var $461 = $464;
                break;
            case 'List.nil':
                var $465 = List$nil;
                var $461 = $465;
                break;
        };
        return $461;
    };
    const List$mapped = x0 => x1 => List$mapped$(x0, x1);

    function Kindelia$Constructor$new$(_name$1, _fnam$2, _ftyp$3) {
        var $466 = ({
            _: 'Kindelia.Constructor.new',
            'name': _name$1,
            'fnam': _fnam$2,
            'ftyp': _ftyp$3
        });
        return $466;
    };
    const Kindelia$Constructor$new = x0 => x1 => x2 => Kindelia$Constructor$new$(x0, x1, x2);

    function Kindelia$parse$constructor$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $468 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $470 = self.err;
                        var self = $468;
                        switch (self._) {
                            case 'Maybe.some':
                                var $472 = self.value;
                                var $473 = Parser$Reply$error$(Parser$Error$combine$($472, $470));
                                var $471 = $473;
                                break;
                            case 'Maybe.none':
                                var $474 = Parser$Reply$error$($470);
                                var $471 = $474;
                                break;
                        };
                        var $469 = $471;
                        break;
                    case 'Parser.Reply.value':
                        var $475 = self.pst;
                        var $476 = self.val;
                        var self = $475;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $478 = self.err;
                                var $479 = self.nam;
                                var $480 = self.ini;
                                var $481 = self.idx;
                                var $482 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($468, $478), $479, $480, $481, $482);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $484 = self.err;
                                        var _reply$22 = Parser$wrap$(Kindelia$parse$text("{"), Kindelia$parse$ann(_world$1), Kindelia$parse$text("}"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $486 = self.err;
                                                var self = $484;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $488 = self.value;
                                                        var $489 = Parser$Reply$error$(Parser$Error$combine$($488, $486));
                                                        var $487 = $489;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $490 = Parser$Reply$error$($486);
                                                        var $487 = $490;
                                                        break;
                                                };
                                                var $485 = $487;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $491 = self.pst;
                                                var $492 = self.val;
                                                var self = $491;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $494 = self.err;
                                                        var $495 = self.nam;
                                                        var $496 = self.ini;
                                                        var $497 = self.idx;
                                                        var $498 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($484, $494), $495, $496, $497, $498);
                                                        var _nams$31 = List$mapped$($492, (_x$31 => {
                                                            var self = _x$31;
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $501 = self.fst;
                                                                    var $502 = $501;
                                                                    var $500 = $502;
                                                                    break;
                                                            };
                                                            return $500;
                                                        }));
                                                        var _typs$32 = List$mapped$($492, (_x$32 => {
                                                            var self = _x$32;
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $504 = self.snd;
                                                                    var $505 = $504;
                                                                    var $503 = $505;
                                                                    break;
                                                            };
                                                            return $503;
                                                        }));
                                                        var $499 = Parser$Reply$value$(_reply$pst$30, Kindelia$Constructor$new$($476, _nams$31, _typs$32));
                                                        var $493 = $499;
                                                        break;
                                                };
                                                var $485 = $493;
                                                break;
                                        };
                                        var $483 = $485;
                                        break;
                                };
                                var $477 = $483;
                                break;
                        };
                        var $469 = $477;
                        break;
                };
                var $467 = $469;
                break;
        };
        return $467;
    };
    const Kindelia$parse$constructor = x0 => x1 => Kindelia$parse$constructor$(x0, x1);

    function Kindelia$Data$new$(_name$1, _constructors$2) {
        var $506 = ({
            _: 'Kindelia.Data.new',
            'name': _name$1,
            'constructors': _constructors$2
        });
        return $506;
    };
    const Kindelia$Data$new = x0 => x1 => Kindelia$Data$new$(x0, x1);

    function Kindelia$parse$data$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $508 = self.err;
                var _reply$8 = Kindelia$parse$text$("type", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $510 = self.err;
                        var self = $508;
                        switch (self._) {
                            case 'Maybe.some':
                                var $512 = self.value;
                                var $513 = Parser$Reply$error$(Parser$Error$combine$($512, $510));
                                var $511 = $513;
                                break;
                            case 'Maybe.none':
                                var $514 = Parser$Reply$error$($510);
                                var $511 = $514;
                                break;
                        };
                        var $509 = $511;
                        break;
                    case 'Parser.Reply.value':
                        var $515 = self.pst;
                        var self = $515;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $517 = self.err;
                                var $518 = self.nam;
                                var $519 = self.ini;
                                var $520 = self.idx;
                                var $521 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($508, $517), $518, $519, $520, $521);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $523 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $525 = self.err;
                                                var self = $523;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $527 = self.value;
                                                        var $528 = Parser$Reply$error$(Parser$Error$combine$($527, $525));
                                                        var $526 = $528;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $529 = Parser$Reply$error$($525);
                                                        var $526 = $529;
                                                        break;
                                                };
                                                var $524 = $526;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $530 = self.pst;
                                                var $531 = self.val;
                                                var self = $530;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $533 = self.err;
                                                        var $534 = self.nam;
                                                        var $535 = self.ini;
                                                        var $536 = self.idx;
                                                        var $537 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($523, $533), $534, $535, $536, $537);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $539 = self.err;
                                                                var _reply$36 = Parser$wrap$(Kindelia$parse$text("{"), (_pst$36 => {
                                                                    var self = _pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $542 = self.err;
                                                                            var _reply$42 = Kindelia$parse$constructor$(_world$1, _pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $544 = self.err;
                                                                                    var self = $542;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $546 = self.value;
                                                                                            var $547 = Parser$Reply$error$(Parser$Error$combine$($546, $544));
                                                                                            var $545 = $547;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $548 = Parser$Reply$error$($544);
                                                                                            var $545 = $548;
                                                                                            break;
                                                                                    };
                                                                                    var $543 = $545;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $549 = self.pst;
                                                                                    var $550 = self.val;
                                                                                    var self = $549;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $552 = self.err;
                                                                                            var $553 = self.nam;
                                                                                            var $554 = self.ini;
                                                                                            var $555 = self.idx;
                                                                                            var $556 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($542, $552), $553, $554, $555, $556);
                                                                                            var self = _reply$pst$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $558 = self.err;
                                                                                                    var _reply$56 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$50);
                                                                                                    var self = _reply$56;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $560 = self.err;
                                                                                                            var self = $558;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $562 = self.value;
                                                                                                                    var $563 = Parser$Reply$error$(Parser$Error$combine$($562, $560));
                                                                                                                    var $561 = $563;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $564 = Parser$Reply$error$($560);
                                                                                                                    var $561 = $564;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $559 = $561;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $565 = self.pst;
                                                                                                            var self = $565;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $567 = self.err;
                                                                                                                    var $568 = self.nam;
                                                                                                                    var $569 = self.ini;
                                                                                                                    var $570 = self.idx;
                                                                                                                    var $571 = self.str;
                                                                                                                    var _reply$pst$64 = Parser$State$new$(Parser$Error$maybe_combine$($558, $567), $568, $569, $570, $571);
                                                                                                                    var $572 = Parser$Reply$value$(_reply$pst$64, $550);
                                                                                                                    var $566 = $572;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $559 = $566;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $557 = $559;
                                                                                                    break;
                                                                                            };
                                                                                            var $551 = $557;
                                                                                            break;
                                                                                    };
                                                                                    var $543 = $551;
                                                                                    break;
                                                                            };
                                                                            var $541 = $543;
                                                                            break;
                                                                    };
                                                                    return $541;
                                                                }), Kindelia$parse$text("}"), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $573 = self.err;
                                                                        var self = $539;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $575 = self.value;
                                                                                var $576 = Parser$Reply$error$(Parser$Error$combine$($575, $573));
                                                                                var $574 = $576;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $577 = Parser$Reply$error$($573);
                                                                                var $574 = $577;
                                                                                break;
                                                                        };
                                                                        var $540 = $574;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $578 = self.pst;
                                                                        var $579 = self.val;
                                                                        var self = $578;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $581 = self.err;
                                                                                var $582 = self.nam;
                                                                                var $583 = self.ini;
                                                                                var $584 = self.idx;
                                                                                var $585 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($539, $581), $582, $583, $584, $585);
                                                                                var $586 = Parser$Reply$value$(_reply$pst$44, Kindelia$Data$new$($531, $579));
                                                                                var $580 = $586;
                                                                                break;
                                                                        };
                                                                        var $540 = $580;
                                                                        break;
                                                                };
                                                                var $538 = $540;
                                                                break;
                                                        };
                                                        var $532 = $538;
                                                        break;
                                                };
                                                var $524 = $532;
                                                break;
                                        };
                                        var $522 = $524;
                                        break;
                                };
                                var $516 = $522;
                                break;
                        };
                        var $509 = $516;
                        break;
                };
                var $507 = $509;
                break;
        };
        return $507;
    };
    const Kindelia$parse$data = x0 => x1 => Kindelia$parse$data$(x0, x1);

    function Kindelia$Transaction$new_data$(_data$1) {
        var $587 = ({
            _: 'Kindelia.Transaction.new_data',
            'data': _data$1
        });
        return $587;
    };
    const Kindelia$Transaction$new_data = x0 => Kindelia$Transaction$new_data$(x0);

    function Kindelia$Term$let$(_name$1, _type$2, _expr$3, _body$4) {
        var $588 = ({
            _: 'Kindelia.Term.let',
            'name': _name$1,
            'type': _type$2,
            'expr': _expr$3,
            'body': _body$4
        });
        return $588;
    };
    const Kindelia$Term$let = x0 => x1 => x2 => x3 => Kindelia$Term$let$(x0, x1, x2, x3);

    function Kindelia$parse$term$let$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $590 = self.err;
                var _reply$8 = Kindelia$parse$text$("let", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $592 = self.err;
                        var self = $590;
                        switch (self._) {
                            case 'Maybe.some':
                                var $594 = self.value;
                                var $595 = Parser$Reply$error$(Parser$Error$combine$($594, $592));
                                var $593 = $595;
                                break;
                            case 'Maybe.none':
                                var $596 = Parser$Reply$error$($592);
                                var $593 = $596;
                                break;
                        };
                        var $591 = $593;
                        break;
                    case 'Parser.Reply.value':
                        var $597 = self.pst;
                        var self = $597;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $599 = self.err;
                                var $600 = self.nam;
                                var $601 = self.ini;
                                var $602 = self.idx;
                                var $603 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($590, $599), $600, $601, $602, $603);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $605 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $607 = self.err;
                                                var self = $605;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $609 = self.value;
                                                        var $610 = Parser$Reply$error$(Parser$Error$combine$($609, $607));
                                                        var $608 = $610;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $611 = Parser$Reply$error$($607);
                                                        var $608 = $611;
                                                        break;
                                                };
                                                var $606 = $608;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $612 = self.pst;
                                                var $613 = self.val;
                                                var self = $612;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $615 = self.err;
                                                        var $616 = self.nam;
                                                        var $617 = self.ini;
                                                        var $618 = self.idx;
                                                        var $619 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($605, $615), $616, $617, $618, $619);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $621 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $623 = self.err;
                                                                        var self = $621;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $625 = self.value;
                                                                                var $626 = Parser$Reply$error$(Parser$Error$combine$($625, $623));
                                                                                var $624 = $626;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $627 = Parser$Reply$error$($623);
                                                                                var $624 = $627;
                                                                                break;
                                                                        };
                                                                        var $622 = $624;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $628 = self.pst;
                                                                        var self = $628;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $630 = self.err;
                                                                                var $631 = self.nam;
                                                                                var $632 = self.ini;
                                                                                var $633 = self.idx;
                                                                                var $634 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($621, $630), $631, $632, $633, $634);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $636 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$type$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $638 = self.err;
                                                                                                var self = $636;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $640 = self.value;
                                                                                                        var $641 = Parser$Reply$error$(Parser$Error$combine$($640, $638));
                                                                                                        var $639 = $641;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $642 = Parser$Reply$error$($638);
                                                                                                        var $639 = $642;
                                                                                                        break;
                                                                                                };
                                                                                                var $637 = $639;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $643 = self.pst;
                                                                                                var $644 = self.val;
                                                                                                var self = $643;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $646 = self.err;
                                                                                                        var $647 = self.nam;
                                                                                                        var $648 = self.ini;
                                                                                                        var $649 = self.idx;
                                                                                                        var $650 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($636, $646), $647, $648, $649, $650);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $652 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$text$("=", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $654 = self.err;
                                                                                                                        var self = $652;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $656 = self.value;
                                                                                                                                var $657 = Parser$Reply$error$(Parser$Error$combine$($656, $654));
                                                                                                                                var $655 = $657;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $658 = Parser$Reply$error$($654);
                                                                                                                                var $655 = $658;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $653 = $655;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $659 = self.pst;
                                                                                                                        var self = $659;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $661 = self.err;
                                                                                                                                var $662 = self.nam;
                                                                                                                                var $663 = self.ini;
                                                                                                                                var $664 = self.idx;
                                                                                                                                var $665 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($652, $661), $662, $663, $664, $665);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $667 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $669 = self.err;
                                                                                                                                                var self = $667;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $671 = self.value;
                                                                                                                                                        var $672 = Parser$Reply$error$(Parser$Error$combine$($671, $669));
                                                                                                                                                        var $670 = $672;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $673 = Parser$Reply$error$($669);
                                                                                                                                                        var $670 = $673;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $668 = $670;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $674 = self.pst;
                                                                                                                                                var $675 = self.val;
                                                                                                                                                var self = $674;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $677 = self.err;
                                                                                                                                                        var $678 = self.nam;
                                                                                                                                                        var $679 = self.ini;
                                                                                                                                                        var $680 = self.idx;
                                                                                                                                                        var $681 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($667, $677), $678, $679, $680, $681);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $683 = self.err;
                                                                                                                                                                var _reply$92 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $685 = self.err;
                                                                                                                                                                        var self = $683;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $687 = self.value;
                                                                                                                                                                                var $688 = Parser$Reply$error$(Parser$Error$combine$($687, $685));
                                                                                                                                                                                var $686 = $688;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $689 = Parser$Reply$error$($685);
                                                                                                                                                                                var $686 = $689;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $684 = $686;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $690 = self.pst;
                                                                                                                                                                        var self = $690;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $692 = self.err;
                                                                                                                                                                                var $693 = self.nam;
                                                                                                                                                                                var $694 = self.ini;
                                                                                                                                                                                var $695 = self.idx;
                                                                                                                                                                                var $696 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($683, $692), $693, $694, $695, $696);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $698 = self.err;
                                                                                                                                                                                        var _reply$106 = Kindelia$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $700 = self.err;
                                                                                                                                                                                                var self = $698;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $702 = self.value;
                                                                                                                                                                                                        var $703 = Parser$Reply$error$(Parser$Error$combine$($702, $700));
                                                                                                                                                                                                        var $701 = $703;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $704 = Parser$Reply$error$($700);
                                                                                                                                                                                                        var $701 = $704;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $699 = $701;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $705 = self.pst;
                                                                                                                                                                                                var $706 = self.val;
                                                                                                                                                                                                var self = $705;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $708 = self.err;
                                                                                                                                                                                                        var $709 = self.nam;
                                                                                                                                                                                                        var $710 = self.ini;
                                                                                                                                                                                                        var $711 = self.idx;
                                                                                                                                                                                                        var $712 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($698, $708), $709, $710, $711, $712);
                                                                                                                                                                                                        var $713 = Parser$Reply$value$(_reply$pst$114, Kindelia$Term$let$($613, $644, $675, $706));
                                                                                                                                                                                                        var $707 = $713;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $699 = $707;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $697 = $699;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $691 = $697;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $684 = $691;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $682 = $684;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $676 = $682;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $668 = $676;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $666 = $668;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $660 = $666;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $653 = $660;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $651 = $653;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $645 = $651;
                                                                                                        break;
                                                                                                };
                                                                                                var $637 = $645;
                                                                                                break;
                                                                                        };
                                                                                        var $635 = $637;
                                                                                        break;
                                                                                };
                                                                                var $629 = $635;
                                                                                break;
                                                                        };
                                                                        var $622 = $629;
                                                                        break;
                                                                };
                                                                var $620 = $622;
                                                                break;
                                                        };
                                                        var $614 = $620;
                                                        break;
                                                };
                                                var $606 = $614;
                                                break;
                                        };
                                        var $604 = $606;
                                        break;
                                };
                                var $598 = $604;
                                break;
                        };
                        var $591 = $598;
                        break;
                };
                var $589 = $591;
                break;
        };
        return $589;
    };
    const Kindelia$parse$term$let = x0 => x1 => Kindelia$parse$term$let$(x0, x1);

    function Kindelia$Term$create$(_ctor$1, _vals$2) {
        var $714 = ({
            _: 'Kindelia.Term.create',
            'ctor': _ctor$1,
            'vals': _vals$2
        });
        return $714;
    };
    const Kindelia$Term$create = x0 => x1 => Kindelia$Term$create$(x0, x1);

    function Kindelia$parse$term$create$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $716 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $718 = self.err;
                        var self = $716;
                        switch (self._) {
                            case 'Maybe.some':
                                var $720 = self.value;
                                var $721 = Parser$Reply$error$(Parser$Error$combine$($720, $718));
                                var $719 = $721;
                                break;
                            case 'Maybe.none':
                                var $722 = Parser$Reply$error$($718);
                                var $719 = $722;
                                break;
                        };
                        var $717 = $719;
                        break;
                    case 'Parser.Reply.value':
                        var $723 = self.pst;
                        var $724 = self.val;
                        var self = $723;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $726 = self.err;
                                var $727 = self.nam;
                                var $728 = self.ini;
                                var $729 = self.idx;
                                var $730 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($716, $726), $727, $728, $729, $730);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $732 = self.err;
                                        var _reply$22 = Parser$wrap$(Kindelia$parse$text("{"), (_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $735 = self.err;
                                                    var _reply$28 = Kindelia$parse$term$(_world$1)(_pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $737 = self.err;
                                                            var self = $735;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $739 = self.value;
                                                                    var $740 = Parser$Reply$error$(Parser$Error$combine$($739, $737));
                                                                    var $738 = $740;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $741 = Parser$Reply$error$($737);
                                                                    var $738 = $741;
                                                                    break;
                                                            };
                                                            var $736 = $738;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $742 = self.pst;
                                                            var $743 = self.val;
                                                            var self = $742;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $745 = self.err;
                                                                    var $746 = self.nam;
                                                                    var $747 = self.ini;
                                                                    var $748 = self.idx;
                                                                    var $749 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($735, $745), $746, $747, $748, $749);
                                                                    var self = _reply$pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $751 = self.err;
                                                                            var _reply$42 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $753 = self.err;
                                                                                    var self = $751;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $755 = self.value;
                                                                                            var $756 = Parser$Reply$error$(Parser$Error$combine$($755, $753));
                                                                                            var $754 = $756;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $757 = Parser$Reply$error$($753);
                                                                                            var $754 = $757;
                                                                                            break;
                                                                                    };
                                                                                    var $752 = $754;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $758 = self.pst;
                                                                                    var self = $758;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $760 = self.err;
                                                                                            var $761 = self.nam;
                                                                                            var $762 = self.ini;
                                                                                            var $763 = self.idx;
                                                                                            var $764 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($751, $760), $761, $762, $763, $764);
                                                                                            var $765 = Parser$Reply$value$(_reply$pst$50, $743);
                                                                                            var $759 = $765;
                                                                                            break;
                                                                                    };
                                                                                    var $752 = $759;
                                                                                    break;
                                                                            };
                                                                            var $750 = $752;
                                                                            break;
                                                                    };
                                                                    var $744 = $750;
                                                                    break;
                                                            };
                                                            var $736 = $744;
                                                            break;
                                                    };
                                                    var $734 = $736;
                                                    break;
                                            };
                                            return $734;
                                        }), Kindelia$parse$text("}"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $766 = self.err;
                                                var self = $732;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $768 = self.value;
                                                        var $769 = Parser$Reply$error$(Parser$Error$combine$($768, $766));
                                                        var $767 = $769;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $770 = Parser$Reply$error$($766);
                                                        var $767 = $770;
                                                        break;
                                                };
                                                var $733 = $767;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $771 = self.pst;
                                                var $772 = self.val;
                                                var self = $771;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $774 = self.err;
                                                        var $775 = self.nam;
                                                        var $776 = self.ini;
                                                        var $777 = self.idx;
                                                        var $778 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($732, $774), $775, $776, $777, $778);
                                                        var $779 = Parser$Reply$value$(_reply$pst$30, Kindelia$Term$create$($724, $772));
                                                        var $773 = $779;
                                                        break;
                                                };
                                                var $733 = $773;
                                                break;
                                        };
                                        var $731 = $733;
                                        break;
                                };
                                var $725 = $731;
                                break;
                        };
                        var $717 = $725;
                        break;
                };
                var $715 = $717;
                break;
        };
        return $715;
    };
    const Kindelia$parse$term$create = x0 => x1 => Kindelia$parse$term$create$(x0, x1);

    function Maybe$bind$(_m$3, _f$4) {
        var self = _m$3;
        switch (self._) {
            case 'Maybe.some':
                var $781 = self.value;
                var $782 = _f$4($781);
                var $780 = $782;
                break;
            case 'Maybe.none':
                var $783 = Maybe$none;
                var $780 = $783;
                break;
        };
        return $780;
    };
    const Maybe$bind = x0 => x1 => Maybe$bind$(x0, x1);

    function Maybe$monad$(_new$2) {
        var $784 = _new$2(Maybe$bind)(Maybe$some);
        return $784;
    };
    const Maybe$monad = x0 => Maybe$monad$(x0);

    function BBT$lookup$(_cmp$3, _key$4, _map$5) {
        var BBT$lookup$ = (_cmp$3, _key$4, _map$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _key$4, _map$5]
        });
        var BBT$lookup = _cmp$3 => _key$4 => _map$5 => BBT$lookup$(_cmp$3, _key$4, _map$5);
        var arg = [_cmp$3, _key$4, _map$5];
        while (true) {
            let [_cmp$3, _key$4, _map$5] = arg;
            var R = (() => {
                var self = _map$5;
                switch (self._) {
                    case 'BBT.bin':
                        var $785 = self.key;
                        var $786 = self.val;
                        var $787 = self.left;
                        var $788 = self.right;
                        var self = _cmp$3(_key$4)($785);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $790 = BBT$lookup$(_cmp$3, _key$4, $787);
                                var $789 = $790;
                                break;
                            case 'Cmp.eql':
                                var $791 = Maybe$some$($786);
                                var $789 = $791;
                                break;
                            case 'Cmp.gtn':
                                var $792 = BBT$lookup$(_cmp$3, _key$4, $788);
                                var $789 = $792;
                                break;
                        };
                        return $789;
                    case 'BBT.tip':
                        var $793 = Maybe$none;
                        return $793;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$lookup = x0 => x1 => x2 => BBT$lookup$(x0, x1, x2);

    function Cmp$as_ltn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $795 = Bool$true;
                var $794 = $795;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $796 = Bool$false;
                var $794 = $796;
                break;
        };
        return $794;
    };
    const Cmp$as_ltn = x0 => Cmp$as_ltn$(x0);

    function Word$ltn$(_a$2, _b$3) {
        var $797 = Cmp$as_ltn$(Word$cmp$(_a$2, _b$3));
        return $797;
    };
    const Word$ltn = x0 => x1 => Word$ltn$(x0, x1);
    const U16$ltn = a0 => a1 => (a0 < a1);

    function U16$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $799 = Cmp$ltn;
            var $798 = $799;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $801 = Cmp$eql;
                var $800 = $801;
            } else {
                var $802 = Cmp$gtn;
                var $800 = $802;
            };
            var $798 = $800;
        };
        return $798;
    };
    const U16$cmp = x0 => x1 => U16$cmp$(x0, x1);

    function String$cmp$(_a$1, _b$2) {
        var String$cmp$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var String$cmp = _a$1 => _b$2 => String$cmp$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                if (self.length === 0) {
                    var self = _b$2;
                    if (self.length === 0) {
                        var $804 = Cmp$eql;
                        var $803 = $804;
                    } else {
                        var $805 = self.charCodeAt(0);
                        var $806 = self.slice(1);
                        var $807 = Cmp$ltn;
                        var $803 = $807;
                    };
                    return $803;
                } else {
                    var $808 = self.charCodeAt(0);
                    var $809 = self.slice(1);
                    var self = _b$2;
                    if (self.length === 0) {
                        var $811 = Cmp$gtn;
                        var $810 = $811;
                    } else {
                        var $812 = self.charCodeAt(0);
                        var $813 = self.slice(1);
                        var self = U16$cmp$($808, $812);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $815 = Cmp$ltn;
                                var $814 = $815;
                                break;
                            case 'Cmp.eql':
                                var $816 = String$cmp$($809, $813);
                                var $814 = $816;
                                break;
                            case 'Cmp.gtn':
                                var $817 = Cmp$gtn;
                                var $814 = $817;
                                break;
                        };
                        var $810 = $814;
                    };
                    return $810;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$cmp = x0 => x1 => String$cmp$(x0, x1);

    function Map$get$(_key$2, _map$3) {
        var $818 = BBT$lookup$(String$cmp, _key$2, _map$3);
        return $818;
    };
    const Map$get = x0 => x1 => Map$get$(x0, x1);

    function Kindelia$get_data$(_world$1, _name$2) {
        var self = _world$1;
        switch (self._) {
            case 'Kindelia.World.new':
                var $820 = self.entry;
                var $821 = Maybe$monad$((_m$bind$4 => _m$pure$5 => {
                    var $822 = _m$bind$4;
                    return $822;
                }))(Map$get$(_name$2, $820))((_entry$4 => {
                    var self = _entry$4;
                    switch (self._) {
                        case 'Kindelia.Entry.data':
                            var $824 = self.value;
                            var $825 = Maybe$some$($824);
                            var $823 = $825;
                            break;
                        case 'Kindelia.Entry.bond':
                        case 'Kindelia.Entry.file':
                            var $826 = Maybe$none;
                            var $823 = $826;
                            break;
                    };
                    return $823;
                }));
                var $819 = $821;
                break;
        };
        return $819;
    };
    const Kindelia$get_data = x0 => x1 => Kindelia$get_data$(x0, x1);

    function Parser$fail$(_error$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $828 = self.nam;
                var $829 = self.ini;
                var $830 = self.idx;
                var $831 = Parser$Reply$fail$($828, $829, $830, _error$2);
                var $827 = $831;
                break;
        };
        return $827;
    };
    const Parser$fail = x0 => x1 => Parser$fail$(x0, x1);

    function Kindelia$parse$term$match$cases$(_world$1, _constructors$2) {
        var self = _constructors$2;
        switch (self._) {
            case 'List.cons':
                var $833 = self.head;
                var $834 = self.tail;
                var _ctor$5 = $833;
                var self = _ctor$5;
                switch (self._) {
                    case 'Kindelia.Constructor.new':
                        var $836 = self.name;
                        var $837 = (_pst$9 => {
                            var self = _pst$9;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $839 = self.err;
                                    var _reply$15 = Kindelia$parse$text$($836, _pst$9);
                                    var self = _reply$15;
                                    switch (self._) {
                                        case 'Parser.Reply.error':
                                            var $841 = self.err;
                                            var self = $839;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $843 = self.value;
                                                    var $844 = Parser$Reply$error$(Parser$Error$combine$($843, $841));
                                                    var $842 = $844;
                                                    break;
                                                case 'Maybe.none':
                                                    var $845 = Parser$Reply$error$($841);
                                                    var $842 = $845;
                                                    break;
                                            };
                                            var $840 = $842;
                                            break;
                                        case 'Parser.Reply.value':
                                            var $846 = self.pst;
                                            var self = $846;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $848 = self.err;
                                                    var $849 = self.nam;
                                                    var $850 = self.ini;
                                                    var $851 = self.idx;
                                                    var $852 = self.str;
                                                    var _reply$pst$23 = Parser$State$new$(Parser$Error$maybe_combine$($839, $848), $849, $850, $851, $852);
                                                    var self = _reply$pst$23;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $854 = self.err;
                                                            var _reply$29 = Kindelia$parse$text$(":", _reply$pst$23);
                                                            var self = _reply$29;
                                                            switch (self._) {
                                                                case 'Parser.Reply.error':
                                                                    var $856 = self.err;
                                                                    var self = $854;
                                                                    switch (self._) {
                                                                        case 'Maybe.some':
                                                                            var $858 = self.value;
                                                                            var $859 = Parser$Reply$error$(Parser$Error$combine$($858, $856));
                                                                            var $857 = $859;
                                                                            break;
                                                                        case 'Maybe.none':
                                                                            var $860 = Parser$Reply$error$($856);
                                                                            var $857 = $860;
                                                                            break;
                                                                    };
                                                                    var $855 = $857;
                                                                    break;
                                                                case 'Parser.Reply.value':
                                                                    var $861 = self.pst;
                                                                    var self = $861;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $863 = self.err;
                                                                            var $864 = self.nam;
                                                                            var $865 = self.ini;
                                                                            var $866 = self.idx;
                                                                            var $867 = self.str;
                                                                            var _reply$pst$37 = Parser$State$new$(Parser$Error$maybe_combine$($854, $863), $864, $865, $866, $867);
                                                                            var self = _reply$pst$37;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $869 = self.err;
                                                                                    var _reply$43 = Kindelia$parse$term$(_world$1)(_reply$pst$37);
                                                                                    var self = _reply$43;
                                                                                    switch (self._) {
                                                                                        case 'Parser.Reply.error':
                                                                                            var $871 = self.err;
                                                                                            var self = $869;
                                                                                            switch (self._) {
                                                                                                case 'Maybe.some':
                                                                                                    var $873 = self.value;
                                                                                                    var $874 = Parser$Reply$error$(Parser$Error$combine$($873, $871));
                                                                                                    var $872 = $874;
                                                                                                    break;
                                                                                                case 'Maybe.none':
                                                                                                    var $875 = Parser$Reply$error$($871);
                                                                                                    var $872 = $875;
                                                                                                    break;
                                                                                            };
                                                                                            var $870 = $872;
                                                                                            break;
                                                                                        case 'Parser.Reply.value':
                                                                                            var $876 = self.pst;
                                                                                            var $877 = self.val;
                                                                                            var self = $876;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $879 = self.err;
                                                                                                    var $880 = self.nam;
                                                                                                    var $881 = self.ini;
                                                                                                    var $882 = self.idx;
                                                                                                    var $883 = self.str;
                                                                                                    var _reply$pst$51 = Parser$State$new$(Parser$Error$maybe_combine$($869, $879), $880, $881, $882, $883);
                                                                                                    var self = _reply$pst$51;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $885 = self.err;
                                                                                                            var _reply$57 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$51);
                                                                                                            var self = _reply$57;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.Reply.error':
                                                                                                                    var $887 = self.err;
                                                                                                                    var self = $885;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Maybe.some':
                                                                                                                            var $889 = self.value;
                                                                                                                            var $890 = Parser$Reply$error$(Parser$Error$combine$($889, $887));
                                                                                                                            var $888 = $890;
                                                                                                                            break;
                                                                                                                        case 'Maybe.none':
                                                                                                                            var $891 = Parser$Reply$error$($887);
                                                                                                                            var $888 = $891;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $886 = $888;
                                                                                                                    break;
                                                                                                                case 'Parser.Reply.value':
                                                                                                                    var $892 = self.pst;
                                                                                                                    var self = $892;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.State.new':
                                                                                                                            var $894 = self.err;
                                                                                                                            var $895 = self.nam;
                                                                                                                            var $896 = self.ini;
                                                                                                                            var $897 = self.idx;
                                                                                                                            var $898 = self.str;
                                                                                                                            var _reply$pst$65 = Parser$State$new$(Parser$Error$maybe_combine$($885, $894), $895, $896, $897, $898);
                                                                                                                            var self = _reply$pst$65;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $900 = self.err;
                                                                                                                                    var _reply$71 = Kindelia$parse$term$match$cases$(_world$1, $834)(_reply$pst$65);
                                                                                                                                    var self = _reply$71;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                            var $902 = self.err;
                                                                                                                                            var self = $900;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Maybe.some':
                                                                                                                                                    var $904 = self.value;
                                                                                                                                                    var $905 = Parser$Reply$error$(Parser$Error$combine$($904, $902));
                                                                                                                                                    var $903 = $905;
                                                                                                                                                    break;
                                                                                                                                                case 'Maybe.none':
                                                                                                                                                    var $906 = Parser$Reply$error$($902);
                                                                                                                                                    var $903 = $906;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $901 = $903;
                                                                                                                                            break;
                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                            var $907 = self.pst;
                                                                                                                                            var $908 = self.val;
                                                                                                                                            var self = $907;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $910 = self.err;
                                                                                                                                                    var $911 = self.nam;
                                                                                                                                                    var $912 = self.ini;
                                                                                                                                                    var $913 = self.idx;
                                                                                                                                                    var $914 = self.str;
                                                                                                                                                    var _reply$pst$79 = Parser$State$new$(Parser$Error$maybe_combine$($900, $910), $911, $912, $913, $914);
                                                                                                                                                    var $915 = Parser$Reply$value$(_reply$pst$79, List$cons$($877, $908));
                                                                                                                                                    var $909 = $915;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $901 = $909;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $899 = $901;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $893 = $899;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $886 = $893;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $884 = $886;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $878 = $884;
                                                                                                    break;
                                                                                            };
                                                                                            var $870 = $878;
                                                                                            break;
                                                                                    };
                                                                                    var $868 = $870;
                                                                                    break;
                                                                            };
                                                                            var $862 = $868;
                                                                            break;
                                                                    };
                                                                    var $855 = $862;
                                                                    break;
                                                            };
                                                            var $853 = $855;
                                                            break;
                                                    };
                                                    var $847 = $853;
                                                    break;
                                            };
                                            var $840 = $847;
                                            break;
                                    };
                                    var $838 = $840;
                                    break;
                            };
                            return $838;
                        });
                        var $835 = $837;
                        break;
                };
                var $832 = $835;
                break;
            case 'List.nil':
                var $916 = (_pst$3 => {
                    var $917 = Parser$Reply$value$(_pst$3, List$nil);
                    return $917;
                });
                var $832 = $916;
                break;
        };
        return $832;
    };
    const Kindelia$parse$term$match$cases = x0 => x1 => Kindelia$parse$term$match$cases$(x0, x1);

    function Kindelia$Term$match$(_name$1, _data$2, _cses$3) {
        var $918 = ({
            _: 'Kindelia.Term.match',
            'name': _name$1,
            'data': _data$2,
            'cses': _cses$3
        });
        return $918;
    };
    const Kindelia$Term$match = x0 => x1 => x2 => Kindelia$Term$match$(x0, x1, x2);

    function Kindelia$parse$term$match$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $920 = self.err;
                var _reply$8 = Kindelia$parse$text$("case ", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $922 = self.err;
                        var self = $920;
                        switch (self._) {
                            case 'Maybe.some':
                                var $924 = self.value;
                                var $925 = Parser$Reply$error$(Parser$Error$combine$($924, $922));
                                var $923 = $925;
                                break;
                            case 'Maybe.none':
                                var $926 = Parser$Reply$error$($922);
                                var $923 = $926;
                                break;
                        };
                        var $921 = $923;
                        break;
                    case 'Parser.Reply.value':
                        var $927 = self.pst;
                        var self = $927;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $929 = self.err;
                                var $930 = self.nam;
                                var $931 = self.ini;
                                var $932 = self.idx;
                                var $933 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($920, $929), $930, $931, $932, $933);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $935 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $937 = self.err;
                                                var self = $935;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $939 = self.value;
                                                        var $940 = Parser$Reply$error$(Parser$Error$combine$($939, $937));
                                                        var $938 = $940;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $941 = Parser$Reply$error$($937);
                                                        var $938 = $941;
                                                        break;
                                                };
                                                var $936 = $938;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $942 = self.pst;
                                                var $943 = self.val;
                                                var self = $942;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $945 = self.err;
                                                        var $946 = self.nam;
                                                        var $947 = self.ini;
                                                        var $948 = self.idx;
                                                        var $949 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($935, $945), $946, $947, $948, $949);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $951 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $953 = self.err;
                                                                        var self = $951;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $955 = self.value;
                                                                                var $956 = Parser$Reply$error$(Parser$Error$combine$($955, $953));
                                                                                var $954 = $956;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $957 = Parser$Reply$error$($953);
                                                                                var $954 = $957;
                                                                                break;
                                                                        };
                                                                        var $952 = $954;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $958 = self.pst;
                                                                        var self = $958;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $960 = self.err;
                                                                                var $961 = self.nam;
                                                                                var $962 = self.ini;
                                                                                var $963 = self.idx;
                                                                                var $964 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($951, $960), $961, $962, $963, $964);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $966 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$name$(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $968 = self.err;
                                                                                                var self = $966;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $970 = self.value;
                                                                                                        var $971 = Parser$Reply$error$(Parser$Error$combine$($970, $968));
                                                                                                        var $969 = $971;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $972 = Parser$Reply$error$($968);
                                                                                                        var $969 = $972;
                                                                                                        break;
                                                                                                };
                                                                                                var $967 = $969;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $973 = self.pst;
                                                                                                var $974 = self.val;
                                                                                                var self = $973;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $976 = self.err;
                                                                                                        var $977 = self.nam;
                                                                                                        var $978 = self.ini;
                                                                                                        var $979 = self.idx;
                                                                                                        var $980 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($966, $976), $977, $978, $979, $980);
                                                                                                        var self = Kindelia$get_data$(_world$1, $974);
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $982 = self.value;
                                                                                                                var _data$60 = $982;
                                                                                                                var self = _data$60;
                                                                                                                switch (self._) {
                                                                                                                    case 'Kindelia.Data.new':
                                                                                                                        var $984 = self.constructors;
                                                                                                                        var $985 = (_pst$63 => {
                                                                                                                            var self = _pst$63;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $987 = self.err;
                                                                                                                                    var _reply$69 = Kindelia$parse$text$("{", _pst$63);
                                                                                                                                    var self = _reply$69;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                            var $989 = self.err;
                                                                                                                                            var self = $987;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Maybe.some':
                                                                                                                                                    var $991 = self.value;
                                                                                                                                                    var $992 = Parser$Reply$error$(Parser$Error$combine$($991, $989));
                                                                                                                                                    var $990 = $992;
                                                                                                                                                    break;
                                                                                                                                                case 'Maybe.none':
                                                                                                                                                    var $993 = Parser$Reply$error$($989);
                                                                                                                                                    var $990 = $993;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $988 = $990;
                                                                                                                                            break;
                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                            var $994 = self.pst;
                                                                                                                                            var self = $994;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $996 = self.err;
                                                                                                                                                    var $997 = self.nam;
                                                                                                                                                    var $998 = self.ini;
                                                                                                                                                    var $999 = self.idx;
                                                                                                                                                    var $1000 = self.str;
                                                                                                                                                    var _reply$pst$77 = Parser$State$new$(Parser$Error$maybe_combine$($987, $996), $997, $998, $999, $1000);
                                                                                                                                                    var self = _reply$pst$77;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $1002 = self.err;
                                                                                                                                                            var _reply$83 = Kindelia$parse$term$match$cases$(_world$1, $984)(_reply$pst$77);
                                                                                                                                                            var self = _reply$83;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                    var $1004 = self.err;
                                                                                                                                                                    var self = $1002;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                            var $1006 = self.value;
                                                                                                                                                                            var $1007 = Parser$Reply$error$(Parser$Error$combine$($1006, $1004));
                                                                                                                                                                            var $1005 = $1007;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                            var $1008 = Parser$Reply$error$($1004);
                                                                                                                                                                            var $1005 = $1008;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $1003 = $1005;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                    var $1009 = self.pst;
                                                                                                                                                                    var $1010 = self.val;
                                                                                                                                                                    var self = $1009;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $1012 = self.err;
                                                                                                                                                                            var $1013 = self.nam;
                                                                                                                                                                            var $1014 = self.ini;
                                                                                                                                                                            var $1015 = self.idx;
                                                                                                                                                                            var $1016 = self.str;
                                                                                                                                                                            var _reply$pst$91 = Parser$State$new$(Parser$Error$maybe_combine$($1002, $1012), $1013, $1014, $1015, $1016);
                                                                                                                                                                            var self = _reply$pst$91;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $1018 = self.err;
                                                                                                                                                                                    var _reply$97 = Kindelia$parse$text$("}", _reply$pst$91);
                                                                                                                                                                                    var self = _reply$97;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                            var $1020 = self.err;
                                                                                                                                                                                            var self = $1018;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                    var $1022 = self.value;
                                                                                                                                                                                                    var $1023 = Parser$Reply$error$(Parser$Error$combine$($1022, $1020));
                                                                                                                                                                                                    var $1021 = $1023;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                    var $1024 = Parser$Reply$error$($1020);
                                                                                                                                                                                                    var $1021 = $1024;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $1019 = $1021;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                            var $1025 = self.pst;
                                                                                                                                                                                            var self = $1025;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                    var $1027 = self.err;
                                                                                                                                                                                                    var $1028 = self.nam;
                                                                                                                                                                                                    var $1029 = self.ini;
                                                                                                                                                                                                    var $1030 = self.idx;
                                                                                                                                                                                                    var $1031 = self.str;
                                                                                                                                                                                                    var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($1018, $1027), $1028, $1029, $1030, $1031);
                                                                                                                                                                                                    var $1032 = Parser$Reply$value$(_reply$pst$105, Kindelia$Term$match$($943, $974, $1010));
                                                                                                                                                                                                    var $1026 = $1032;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $1019 = $1026;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $1017 = $1019;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1011 = $1017;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $1003 = $1011;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1001 = $1003;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $995 = $1001;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $988 = $995;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $986 = $988;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            return $986;
                                                                                                                        });
                                                                                                                        var $983 = $985;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $981 = $983;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $1033 = Parser$fail("Type not found.");
                                                                                                                var $981 = $1033;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $981 = $981(_reply$pst$58);
                                                                                                        var $975 = $981;
                                                                                                        break;
                                                                                                };
                                                                                                var $967 = $975;
                                                                                                break;
                                                                                        };
                                                                                        var $965 = $967;
                                                                                        break;
                                                                                };
                                                                                var $959 = $965;
                                                                                break;
                                                                        };
                                                                        var $952 = $959;
                                                                        break;
                                                                };
                                                                var $950 = $952;
                                                                break;
                                                        };
                                                        var $944 = $950;
                                                        break;
                                                };
                                                var $936 = $944;
                                                break;
                                        };
                                        var $934 = $936;
                                        break;
                                };
                                var $928 = $934;
                                break;
                        };
                        var $921 = $928;
                        break;
                };
                var $919 = $921;
                break;
        };
        return $919;
    };
    const Kindelia$parse$term$match = x0 => x1 => Kindelia$parse$term$match$(x0, x1);

    function Parser$many1$(_parser$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $1035 = self.err;
                var _reply$9 = _parser$2(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1037 = self.err;
                        var self = $1035;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1039 = self.value;
                                var $1040 = Parser$Reply$error$(Parser$Error$combine$($1039, $1037));
                                var $1038 = $1040;
                                break;
                            case 'Maybe.none':
                                var $1041 = Parser$Reply$error$($1037);
                                var $1038 = $1041;
                                break;
                        };
                        var $1036 = $1038;
                        break;
                    case 'Parser.Reply.value':
                        var $1042 = self.pst;
                        var $1043 = self.val;
                        var self = $1042;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1045 = self.err;
                                var $1046 = self.nam;
                                var $1047 = self.ini;
                                var $1048 = self.idx;
                                var $1049 = self.str;
                                var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($1035, $1045), $1046, $1047, $1048, $1049);
                                var self = _reply$pst$17;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1051 = self.err;
                                        var _reply$23 = Parser$many$(_parser$2)(_reply$pst$17);
                                        var self = _reply$23;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1053 = self.err;
                                                var self = $1051;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1055 = self.value;
                                                        var $1056 = Parser$Reply$error$(Parser$Error$combine$($1055, $1053));
                                                        var $1054 = $1056;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1057 = Parser$Reply$error$($1053);
                                                        var $1054 = $1057;
                                                        break;
                                                };
                                                var $1052 = $1054;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1058 = self.pst;
                                                var $1059 = self.val;
                                                var self = $1058;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1061 = self.err;
                                                        var $1062 = self.nam;
                                                        var $1063 = self.ini;
                                                        var $1064 = self.idx;
                                                        var $1065 = self.str;
                                                        var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($1051, $1061), $1062, $1063, $1064, $1065);
                                                        var $1066 = Parser$Reply$value$(_reply$pst$31, List$cons$($1043, $1059));
                                                        var $1060 = $1066;
                                                        break;
                                                };
                                                var $1052 = $1060;
                                                break;
                                        };
                                        var $1050 = $1052;
                                        break;
                                };
                                var $1044 = $1050;
                                break;
                        };
                        var $1036 = $1044;
                        break;
                };
                var $1034 = $1036;
                break;
        };
        return $1034;
    };
    const Parser$many1 = x0 => x1 => Parser$many1$(x0, x1);

    function Parser$digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1068 = self.err;
                var $1069 = self.nam;
                var $1070 = self.ini;
                var $1071 = self.idx;
                var $1072 = self.str;
                var self = $1072;
                if (self.length === 0) {
                    var $1074 = Parser$Reply$fail$($1069, $1070, $1071, "Not a digit.");
                    var $1073 = $1074;
                } else {
                    var $1075 = self.charCodeAt(0);
                    var $1076 = self.slice(1);
                    var _pst$9 = Parser$State$new$($1068, $1069, $1070, Nat$succ$($1071), $1076);
                    var self = ($1075 === 48);
                    if (self) {
                        var $1078 = Parser$Reply$value$(_pst$9, 0n);
                        var $1077 = $1078;
                    } else {
                        var self = ($1075 === 49);
                        if (self) {
                            var $1080 = Parser$Reply$value$(_pst$9, 1n);
                            var $1079 = $1080;
                        } else {
                            var self = ($1075 === 50);
                            if (self) {
                                var $1082 = Parser$Reply$value$(_pst$9, 2n);
                                var $1081 = $1082;
                            } else {
                                var self = ($1075 === 51);
                                if (self) {
                                    var $1084 = Parser$Reply$value$(_pst$9, 3n);
                                    var $1083 = $1084;
                                } else {
                                    var self = ($1075 === 52);
                                    if (self) {
                                        var $1086 = Parser$Reply$value$(_pst$9, 4n);
                                        var $1085 = $1086;
                                    } else {
                                        var self = ($1075 === 53);
                                        if (self) {
                                            var $1088 = Parser$Reply$value$(_pst$9, 5n);
                                            var $1087 = $1088;
                                        } else {
                                            var self = ($1075 === 54);
                                            if (self) {
                                                var $1090 = Parser$Reply$value$(_pst$9, 6n);
                                                var $1089 = $1090;
                                            } else {
                                                var self = ($1075 === 55);
                                                if (self) {
                                                    var $1092 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $1091 = $1092;
                                                } else {
                                                    var self = ($1075 === 56);
                                                    if (self) {
                                                        var $1094 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $1093 = $1094;
                                                    } else {
                                                        var self = ($1075 === 57);
                                                        if (self) {
                                                            var $1096 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $1095 = $1096;
                                                        } else {
                                                            var $1097 = Parser$Reply$fail$($1069, $1070, $1071, "Not a digit.");
                                                            var $1095 = $1097;
                                                        };
                                                        var $1093 = $1095;
                                                    };
                                                    var $1091 = $1093;
                                                };
                                                var $1089 = $1091;
                                            };
                                            var $1087 = $1089;
                                        };
                                        var $1085 = $1087;
                                    };
                                    var $1083 = $1085;
                                };
                                var $1081 = $1083;
                            };
                            var $1079 = $1081;
                        };
                        var $1077 = $1079;
                    };
                    var $1073 = $1077;
                };
                var $1067 = $1073;
                break;
        };
        return $1067;
    };
    const Parser$digit = x0 => Parser$digit$(x0);
    const Nat$add = a0 => a1 => (a0 + a1);
    const Nat$mul = a0 => a1 => (a0 * a1);

    function Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4) {
        var Nat$from_base$go$ = (_b$1, _ds$2, _p$3, _res$4) => ({
            ctr: 'TCO',
            arg: [_b$1, _ds$2, _p$3, _res$4]
        });
        var Nat$from_base$go = _b$1 => _ds$2 => _p$3 => _res$4 => Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4);
        var arg = [_b$1, _ds$2, _p$3, _res$4];
        while (true) {
            let [_b$1, _ds$2, _p$3, _res$4] = arg;
            var R = (() => {
                var self = _ds$2;
                switch (self._) {
                    case 'List.cons':
                        var $1098 = self.head;
                        var $1099 = self.tail;
                        var $1100 = Nat$from_base$go$(_b$1, $1099, (_b$1 * _p$3), (($1098 * _p$3) + _res$4));
                        return $1100;
                    case 'List.nil':
                        var $1101 = _res$4;
                        return $1101;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$from_base$go = x0 => x1 => x2 => x3 => Nat$from_base$go$(x0, x1, x2, x3);

    function Nat$from_base$(_base$1, _ds$2) {
        var $1102 = Nat$from_base$go$(_base$1, List$reverse$(_ds$2), 1n, 0n);
        return $1102;
    };
    const Nat$from_base = x0 => x1 => Nat$from_base$(x0, x1);

    function Parser$nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1104 = self.err;
                var _reply$7 = Parser$many1$(Parser$digit, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1106 = self.err;
                        var self = $1104;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1108 = self.value;
                                var $1109 = Parser$Reply$error$(Parser$Error$combine$($1108, $1106));
                                var $1107 = $1109;
                                break;
                            case 'Maybe.none':
                                var $1110 = Parser$Reply$error$($1106);
                                var $1107 = $1110;
                                break;
                        };
                        var $1105 = $1107;
                        break;
                    case 'Parser.Reply.value':
                        var $1111 = self.pst;
                        var $1112 = self.val;
                        var self = $1111;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1114 = self.err;
                                var $1115 = self.nam;
                                var $1116 = self.ini;
                                var $1117 = self.idx;
                                var $1118 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1104, $1114), $1115, $1116, $1117, $1118);
                                var $1119 = Parser$Reply$value$(_reply$pst$15, Nat$from_base$(10n, $1112));
                                var $1113 = $1119;
                                break;
                        };
                        var $1105 = $1113;
                        break;
                };
                var $1103 = $1105;
                break;
        };
        return $1103;
    };
    const Parser$nat = x0 => Parser$nat$(x0);
    const Nat$gte = a0 => a1 => (a0 >= a1);

    function Nat$pow$aux$(_x$1, _y$2, _aux$3) {
        var Nat$pow$aux$ = (_x$1, _y$2, _aux$3) => ({
            ctr: 'TCO',
            arg: [_x$1, _y$2, _aux$3]
        });
        var Nat$pow$aux = _x$1 => _y$2 => _aux$3 => Nat$pow$aux$(_x$1, _y$2, _aux$3);
        var arg = [_x$1, _y$2, _aux$3];
        while (true) {
            let [_x$1, _y$2, _aux$3] = arg;
            var R = (() => {
                var self = _y$2;
                if (self === 0n) {
                    var $1120 = _x$1;
                    return $1120;
                } else {
                    var $1121 = (self - 1n);
                    var $1122 = Nat$pow$aux$(_x$1, $1121, (_aux$3 * 2n));
                    return $1122;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$pow$aux = x0 => x1 => x2 => Nat$pow$aux$(x0, x1, x2);
    const Nat$pow = a0 => a1 => (a0 ** a1);

    function Kindelia$Term$word$(_numb$1) {
        var $1123 = ({
            _: 'Kindelia.Term.word',
            'numb': _numb$1
        });
        return $1123;
    };
    const Kindelia$Term$word = x0 => Kindelia$Term$word$(x0);

    function U64$new$(_value$1) {
        var $1124 = word_to_u64(_value$1);
        return $1124;
    };
    const U64$new = x0 => U64$new$(x0);

    function Nat$apply$(_n$2, _f$3, _x$4) {
        var Nat$apply$ = (_n$2, _f$3, _x$4) => ({
            ctr: 'TCO',
            arg: [_n$2, _f$3, _x$4]
        });
        var Nat$apply = _n$2 => _f$3 => _x$4 => Nat$apply$(_n$2, _f$3, _x$4);
        var arg = [_n$2, _f$3, _x$4];
        while (true) {
            let [_n$2, _f$3, _x$4] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $1125 = _x$4;
                    return $1125;
                } else {
                    var $1126 = (self - 1n);
                    var $1127 = Nat$apply$($1126, _f$3, _f$3(_x$4));
                    return $1127;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$apply = x0 => x1 => x2 => Nat$apply$(x0, x1, x2);

    function Word$(_size$1) {
        var $1128 = null;
        return $1128;
    };
    const Word = x0 => Word$(x0);
    const Word$e = ({
        _: 'Word.e'
    });

    function Word$i$(_pred$2) {
        var $1129 = ({
            _: 'Word.i',
            'pred': _pred$2
        });
        return $1129;
    };
    const Word$i = x0 => Word$i$(x0);

    function Word$o$(_pred$2) {
        var $1130 = ({
            _: 'Word.o',
            'pred': _pred$2
        });
        return $1130;
    };
    const Word$o = x0 => Word$o$(x0);

    function Word$inc$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $1132 = self.pred;
                var $1133 = Word$i$($1132);
                var $1131 = $1133;
                break;
            case 'Word.i':
                var $1134 = self.pred;
                var $1135 = Word$o$(Word$inc$($1134));
                var $1131 = $1135;
                break;
            case 'Word.e':
                var $1136 = Word$e;
                var $1131 = $1136;
                break;
        };
        return $1131;
    };
    const Word$inc = x0 => Word$inc$(x0);

    function Word$zero$(_size$1) {
        var self = _size$1;
        if (self === 0n) {
            var $1138 = Word$e;
            var $1137 = $1138;
        } else {
            var $1139 = (self - 1n);
            var $1140 = Word$o$(Word$zero$($1139));
            var $1137 = $1140;
        };
        return $1137;
    };
    const Word$zero = x0 => Word$zero$(x0);

    function Nat$to_word$(_size$1, _n$2) {
        var $1141 = Nat$apply$(_n$2, Word$inc, Word$zero$(_size$1));
        return $1141;
    };
    const Nat$to_word = x0 => x1 => Nat$to_word$(x0, x1);
    const Nat$to_u64 = a0 => (a0 & 0xFFFFFFFFFFFFFFFFn);

    function Kindelia$parse$term$word$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1143 = self.err;
                var _reply$8 = Kindelia$parse$text$("#", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1145 = self.err;
                        var self = $1143;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1147 = self.value;
                                var $1148 = Parser$Reply$error$(Parser$Error$combine$($1147, $1145));
                                var $1146 = $1148;
                                break;
                            case 'Maybe.none':
                                var $1149 = Parser$Reply$error$($1145);
                                var $1146 = $1149;
                                break;
                        };
                        var $1144 = $1146;
                        break;
                    case 'Parser.Reply.value':
                        var $1150 = self.pst;
                        var self = $1150;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1152 = self.err;
                                var $1153 = self.nam;
                                var $1154 = self.ini;
                                var $1155 = self.idx;
                                var $1156 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1143, $1152), $1153, $1154, $1155, $1156);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1158 = self.err;
                                        var _reply$22 = Parser$nat$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1160 = self.err;
                                                var self = $1158;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1162 = self.value;
                                                        var $1163 = Parser$Reply$error$(Parser$Error$combine$($1162, $1160));
                                                        var $1161 = $1163;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1164 = Parser$Reply$error$($1160);
                                                        var $1161 = $1164;
                                                        break;
                                                };
                                                var $1159 = $1161;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1165 = self.pst;
                                                var $1166 = self.val;
                                                var self = $1165;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1168 = self.err;
                                                        var $1169 = self.nam;
                                                        var $1170 = self.ini;
                                                        var $1171 = self.idx;
                                                        var $1172 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1158, $1168), $1169, $1170, $1171, $1172);
                                                        var self = ($1166 >= (2n ** 64n));
                                                        if (self) {
                                                            var $1174 = Parser$fail("Number out of bound");
                                                            var $1173 = $1174;
                                                        } else {
                                                            var $1175 = (_pst$31 => {
                                                                var $1176 = Parser$Reply$value$(_pst$31, Kindelia$Term$word$(($1166 & 0xFFFFFFFFFFFFFFFFn)));
                                                                return $1176;
                                                            });
                                                            var $1173 = $1175;
                                                        };
                                                        var $1173 = $1173(_reply$pst$30);
                                                        var $1167 = $1173;
                                                        break;
                                                };
                                                var $1159 = $1167;
                                                break;
                                        };
                                        var $1157 = $1159;
                                        break;
                                };
                                var $1151 = $1157;
                                break;
                        };
                        var $1144 = $1151;
                        break;
                };
                var $1142 = $1144;
                break;
        };
        return $1142;
    };
    const Kindelia$parse$term$word = x0 => x1 => Kindelia$parse$term$word$(x0, x1);

    function Kindelia$Term$compare$(_val0$1, _val1$2, _iflt$3, _ifeq$4, _ifgt$5) {
        var $1177 = ({
            _: 'Kindelia.Term.compare',
            'val0': _val0$1,
            'val1': _val1$2,
            'iflt': _iflt$3,
            'ifeq': _ifeq$4,
            'ifgt': _ifgt$5
        });
        return $1177;
    };
    const Kindelia$Term$compare = x0 => x1 => x2 => x3 => x4 => Kindelia$Term$compare$(x0, x1, x2, x3, x4);

    function Kindelia$parse$term$compare$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1179 = self.err;
                var _reply$8 = Kindelia$parse$text$("compare", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1181 = self.err;
                        var self = $1179;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1183 = self.value;
                                var $1184 = Parser$Reply$error$(Parser$Error$combine$($1183, $1181));
                                var $1182 = $1184;
                                break;
                            case 'Maybe.none':
                                var $1185 = Parser$Reply$error$($1181);
                                var $1182 = $1185;
                                break;
                        };
                        var $1180 = $1182;
                        break;
                    case 'Parser.Reply.value':
                        var $1186 = self.pst;
                        var self = $1186;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1188 = self.err;
                                var $1189 = self.nam;
                                var $1190 = self.ini;
                                var $1191 = self.idx;
                                var $1192 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1179, $1188), $1189, $1190, $1191, $1192);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1194 = self.err;
                                        var _reply$22 = Kindelia$parse$term$(_world$1)(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1196 = self.err;
                                                var self = $1194;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1198 = self.value;
                                                        var $1199 = Parser$Reply$error$(Parser$Error$combine$($1198, $1196));
                                                        var $1197 = $1199;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1200 = Parser$Reply$error$($1196);
                                                        var $1197 = $1200;
                                                        break;
                                                };
                                                var $1195 = $1197;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1201 = self.pst;
                                                var $1202 = self.val;
                                                var self = $1201;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1204 = self.err;
                                                        var $1205 = self.nam;
                                                        var $1206 = self.ini;
                                                        var $1207 = self.idx;
                                                        var $1208 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1194, $1204), $1205, $1206, $1207, $1208);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1210 = self.err;
                                                                var _reply$36 = Kindelia$parse$term$(_world$1)(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1212 = self.err;
                                                                        var self = $1210;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1214 = self.value;
                                                                                var $1215 = Parser$Reply$error$(Parser$Error$combine$($1214, $1212));
                                                                                var $1213 = $1215;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1216 = Parser$Reply$error$($1212);
                                                                                var $1213 = $1216;
                                                                                break;
                                                                        };
                                                                        var $1211 = $1213;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1217 = self.pst;
                                                                        var $1218 = self.val;
                                                                        var self = $1217;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1220 = self.err;
                                                                                var $1221 = self.nam;
                                                                                var $1222 = self.ini;
                                                                                var $1223 = self.idx;
                                                                                var $1224 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1210, $1220), $1221, $1222, $1223, $1224);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1226 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$text$("{", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1228 = self.err;
                                                                                                var self = $1226;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1230 = self.value;
                                                                                                        var $1231 = Parser$Reply$error$(Parser$Error$combine$($1230, $1228));
                                                                                                        var $1229 = $1231;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1232 = Parser$Reply$error$($1228);
                                                                                                        var $1229 = $1232;
                                                                                                        break;
                                                                                                };
                                                                                                var $1227 = $1229;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1233 = self.pst;
                                                                                                var self = $1233;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1235 = self.err;
                                                                                                        var $1236 = self.nam;
                                                                                                        var $1237 = self.ini;
                                                                                                        var $1238 = self.idx;
                                                                                                        var $1239 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1226, $1235), $1236, $1237, $1238, $1239);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1241 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$text$("_<_:", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1243 = self.err;
                                                                                                                        var self = $1241;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1245 = self.value;
                                                                                                                                var $1246 = Parser$Reply$error$(Parser$Error$combine$($1245, $1243));
                                                                                                                                var $1244 = $1246;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1247 = Parser$Reply$error$($1243);
                                                                                                                                var $1244 = $1247;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1242 = $1244;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1248 = self.pst;
                                                                                                                        var self = $1248;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1250 = self.err;
                                                                                                                                var $1251 = self.nam;
                                                                                                                                var $1252 = self.ini;
                                                                                                                                var $1253 = self.idx;
                                                                                                                                var $1254 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1241, $1250), $1251, $1252, $1253, $1254);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1256 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1258 = self.err;
                                                                                                                                                var self = $1256;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1260 = self.value;
                                                                                                                                                        var $1261 = Parser$Reply$error$(Parser$Error$combine$($1260, $1258));
                                                                                                                                                        var $1259 = $1261;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1262 = Parser$Reply$error$($1258);
                                                                                                                                                        var $1259 = $1262;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1257 = $1259;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1263 = self.pst;
                                                                                                                                                var $1264 = self.val;
                                                                                                                                                var self = $1263;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1266 = self.err;
                                                                                                                                                        var $1267 = self.nam;
                                                                                                                                                        var $1268 = self.ini;
                                                                                                                                                        var $1269 = self.idx;
                                                                                                                                                        var $1270 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1256, $1266), $1267, $1268, $1269, $1270);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $1272 = self.err;
                                                                                                                                                                var _reply$92 = Kindelia$parse$text$("_=_:", _reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $1274 = self.err;
                                                                                                                                                                        var self = $1272;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $1276 = self.value;
                                                                                                                                                                                var $1277 = Parser$Reply$error$(Parser$Error$combine$($1276, $1274));
                                                                                                                                                                                var $1275 = $1277;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $1278 = Parser$Reply$error$($1274);
                                                                                                                                                                                var $1275 = $1278;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $1273 = $1275;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $1279 = self.pst;
                                                                                                                                                                        var self = $1279;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $1281 = self.err;
                                                                                                                                                                                var $1282 = self.nam;
                                                                                                                                                                                var $1283 = self.ini;
                                                                                                                                                                                var $1284 = self.idx;
                                                                                                                                                                                var $1285 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($1272, $1281), $1282, $1283, $1284, $1285);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $1287 = self.err;
                                                                                                                                                                                        var _reply$106 = Kindelia$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $1289 = self.err;
                                                                                                                                                                                                var self = $1287;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $1291 = self.value;
                                                                                                                                                                                                        var $1292 = Parser$Reply$error$(Parser$Error$combine$($1291, $1289));
                                                                                                                                                                                                        var $1290 = $1292;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $1293 = Parser$Reply$error$($1289);
                                                                                                                                                                                                        var $1290 = $1293;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $1288 = $1290;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $1294 = self.pst;
                                                                                                                                                                                                var $1295 = self.val;
                                                                                                                                                                                                var self = $1294;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $1297 = self.err;
                                                                                                                                                                                                        var $1298 = self.nam;
                                                                                                                                                                                                        var $1299 = self.ini;
                                                                                                                                                                                                        var $1300 = self.idx;
                                                                                                                                                                                                        var $1301 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($1287, $1297), $1298, $1299, $1300, $1301);
                                                                                                                                                                                                        var self = _reply$pst$114;
                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                var $1303 = self.err;
                                                                                                                                                                                                                var _reply$120 = Kindelia$parse$text$("_>_:", _reply$pst$114);
                                                                                                                                                                                                                var self = _reply$120;
                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                        var $1305 = self.err;
                                                                                                                                                                                                                        var self = $1303;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                var $1307 = self.value;
                                                                                                                                                                                                                                var $1308 = Parser$Reply$error$(Parser$Error$combine$($1307, $1305));
                                                                                                                                                                                                                                var $1306 = $1308;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                var $1309 = Parser$Reply$error$($1305);
                                                                                                                                                                                                                                var $1306 = $1309;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $1304 = $1306;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                        var $1310 = self.pst;
                                                                                                                                                                                                                        var self = $1310;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                var $1312 = self.err;
                                                                                                                                                                                                                                var $1313 = self.nam;
                                                                                                                                                                                                                                var $1314 = self.ini;
                                                                                                                                                                                                                                var $1315 = self.idx;
                                                                                                                                                                                                                                var $1316 = self.str;
                                                                                                                                                                                                                                var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($1303, $1312), $1313, $1314, $1315, $1316);
                                                                                                                                                                                                                                var self = _reply$pst$128;
                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                        var $1318 = self.err;
                                                                                                                                                                                                                                        var _reply$134 = Kindelia$parse$term$(_world$1)(_reply$pst$128);
                                                                                                                                                                                                                                        var self = _reply$134;
                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                var $1320 = self.err;
                                                                                                                                                                                                                                                var self = $1318;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                        var $1322 = self.value;
                                                                                                                                                                                                                                                        var $1323 = Parser$Reply$error$(Parser$Error$combine$($1322, $1320));
                                                                                                                                                                                                                                                        var $1321 = $1323;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                        var $1324 = Parser$Reply$error$($1320);
                                                                                                                                                                                                                                                        var $1321 = $1324;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $1319 = $1321;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                var $1325 = self.pst;
                                                                                                                                                                                                                                                var $1326 = self.val;
                                                                                                                                                                                                                                                var self = $1325;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                        var $1328 = self.err;
                                                                                                                                                                                                                                                        var $1329 = self.nam;
                                                                                                                                                                                                                                                        var $1330 = self.ini;
                                                                                                                                                                                                                                                        var $1331 = self.idx;
                                                                                                                                                                                                                                                        var $1332 = self.str;
                                                                                                                                                                                                                                                        var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($1318, $1328), $1329, $1330, $1331, $1332);
                                                                                                                                                                                                                                                        var self = _reply$pst$142;
                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                var $1334 = self.err;
                                                                                                                                                                                                                                                                var _reply$148 = Kindelia$parse$text$("}", _reply$pst$142);
                                                                                                                                                                                                                                                                var self = _reply$148;
                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                        var $1336 = self.err;
                                                                                                                                                                                                                                                                        var self = $1334;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                                                                var $1338 = self.value;
                                                                                                                                                                                                                                                                                var $1339 = Parser$Reply$error$(Parser$Error$combine$($1338, $1336));
                                                                                                                                                                                                                                                                                var $1337 = $1339;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                                                                var $1340 = Parser$Reply$error$($1336);
                                                                                                                                                                                                                                                                                var $1337 = $1340;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $1335 = $1337;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                        var $1341 = self.pst;
                                                                                                                                                                                                                                                                        var self = $1341;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                                var $1343 = self.err;
                                                                                                                                                                                                                                                                                var $1344 = self.nam;
                                                                                                                                                                                                                                                                                var $1345 = self.ini;
                                                                                                                                                                                                                                                                                var $1346 = self.idx;
                                                                                                                                                                                                                                                                                var $1347 = self.str;
                                                                                                                                                                                                                                                                                var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($1334, $1343), $1344, $1345, $1346, $1347);
                                                                                                                                                                                                                                                                                var $1348 = Parser$Reply$value$(_reply$pst$156, Kindelia$Term$compare$($1202, $1218, $1264, $1295, $1326));
                                                                                                                                                                                                                                                                                var $1342 = $1348;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $1335 = $1342;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                var $1333 = $1335;
                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                        var $1327 = $1333;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $1319 = $1327;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                        var $1317 = $1319;
                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                var $1311 = $1317;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $1304 = $1311;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                };
                                                                                                                                                                                                                var $1302 = $1304;
                                                                                                                                                                                                                break;
                                                                                                                                                                                                        };
                                                                                                                                                                                                        var $1296 = $1302;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $1288 = $1296;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $1286 = $1288;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $1280 = $1286;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $1273 = $1280;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $1271 = $1273;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $1265 = $1271;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1257 = $1265;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1255 = $1257;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1249 = $1255;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1242 = $1249;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1240 = $1242;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1234 = $1240;
                                                                                                        break;
                                                                                                };
                                                                                                var $1227 = $1234;
                                                                                                break;
                                                                                        };
                                                                                        var $1225 = $1227;
                                                                                        break;
                                                                                };
                                                                                var $1219 = $1225;
                                                                                break;
                                                                        };
                                                                        var $1211 = $1219;
                                                                        break;
                                                                };
                                                                var $1209 = $1211;
                                                                break;
                                                        };
                                                        var $1203 = $1209;
                                                        break;
                                                };
                                                var $1195 = $1203;
                                                break;
                                        };
                                        var $1193 = $1195;
                                        break;
                                };
                                var $1187 = $1193;
                                break;
                        };
                        var $1180 = $1187;
                        break;
                };
                var $1178 = $1180;
                break;
        };
        return $1178;
    };
    const Kindelia$parse$term$compare = x0 => x1 => Kindelia$parse$term$compare$(x0, x1);
    const Kindelia$Operation$add = ({
        _: 'Kindelia.Operation.add'
    });
    const Kindelia$Operation$sub = ({
        _: 'Kindelia.Operation.sub'
    });
    const Kindelia$Operation$mul = ({
        _: 'Kindelia.Operation.mul'
    });
    const Kindelia$Operation$div = ({
        _: 'Kindelia.Operation.div'
    });
    const Kindelia$Operation$mod = ({
        _: 'Kindelia.Operation.mod'
    });
    const Kindelia$Operation$or = ({
        _: 'Kindelia.Operation.or'
    });
    const Kindelia$Operation$and = ({
        _: 'Kindelia.Operation.and'
    });
    const Kindelia$Operation$xor = ({
        _: 'Kindelia.Operation.xor'
    });
    const Kindelia$parse$term$operation = Parser$choice(List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1350 = self.err;
                var _reply$7 = Kindelia$parse$text$("+", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1352 = self.err;
                        var self = $1350;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1354 = self.value;
                                var $1355 = Parser$Reply$error$(Parser$Error$combine$($1354, $1352));
                                var $1353 = $1355;
                                break;
                            case 'Maybe.none':
                                var $1356 = Parser$Reply$error$($1352);
                                var $1353 = $1356;
                                break;
                        };
                        var $1351 = $1353;
                        break;
                    case 'Parser.Reply.value':
                        var $1357 = self.pst;
                        var self = $1357;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1359 = self.err;
                                var $1360 = self.nam;
                                var $1361 = self.ini;
                                var $1362 = self.idx;
                                var $1363 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1350, $1359), $1360, $1361, $1362, $1363);
                                var $1364 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$add));
                                var $1358 = $1364;
                                break;
                        };
                        var $1351 = $1358;
                        break;
                };
                var $1349 = $1351;
                break;
        };
        return $1349;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1366 = self.err;
                var _reply$7 = Kindelia$parse$text$("-", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1368 = self.err;
                        var self = $1366;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1370 = self.value;
                                var $1371 = Parser$Reply$error$(Parser$Error$combine$($1370, $1368));
                                var $1369 = $1371;
                                break;
                            case 'Maybe.none':
                                var $1372 = Parser$Reply$error$($1368);
                                var $1369 = $1372;
                                break;
                        };
                        var $1367 = $1369;
                        break;
                    case 'Parser.Reply.value':
                        var $1373 = self.pst;
                        var self = $1373;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1375 = self.err;
                                var $1376 = self.nam;
                                var $1377 = self.ini;
                                var $1378 = self.idx;
                                var $1379 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1366, $1375), $1376, $1377, $1378, $1379);
                                var $1380 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$sub));
                                var $1374 = $1380;
                                break;
                        };
                        var $1367 = $1374;
                        break;
                };
                var $1365 = $1367;
                break;
        };
        return $1365;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1382 = self.err;
                var _reply$7 = Kindelia$parse$text$("*", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1384 = self.err;
                        var self = $1382;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1386 = self.value;
                                var $1387 = Parser$Reply$error$(Parser$Error$combine$($1386, $1384));
                                var $1385 = $1387;
                                break;
                            case 'Maybe.none':
                                var $1388 = Parser$Reply$error$($1384);
                                var $1385 = $1388;
                                break;
                        };
                        var $1383 = $1385;
                        break;
                    case 'Parser.Reply.value':
                        var $1389 = self.pst;
                        var self = $1389;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1391 = self.err;
                                var $1392 = self.nam;
                                var $1393 = self.ini;
                                var $1394 = self.idx;
                                var $1395 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1382, $1391), $1392, $1393, $1394, $1395);
                                var $1396 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$mul));
                                var $1390 = $1396;
                                break;
                        };
                        var $1383 = $1390;
                        break;
                };
                var $1381 = $1383;
                break;
        };
        return $1381;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1398 = self.err;
                var _reply$7 = Kindelia$parse$text$("/", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1400 = self.err;
                        var self = $1398;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1402 = self.value;
                                var $1403 = Parser$Reply$error$(Parser$Error$combine$($1402, $1400));
                                var $1401 = $1403;
                                break;
                            case 'Maybe.none':
                                var $1404 = Parser$Reply$error$($1400);
                                var $1401 = $1404;
                                break;
                        };
                        var $1399 = $1401;
                        break;
                    case 'Parser.Reply.value':
                        var $1405 = self.pst;
                        var self = $1405;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1407 = self.err;
                                var $1408 = self.nam;
                                var $1409 = self.ini;
                                var $1410 = self.idx;
                                var $1411 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1398, $1407), $1408, $1409, $1410, $1411);
                                var $1412 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$div));
                                var $1406 = $1412;
                                break;
                        };
                        var $1399 = $1406;
                        break;
                };
                var $1397 = $1399;
                break;
        };
        return $1397;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1414 = self.err;
                var _reply$7 = Kindelia$parse$text$("%", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1416 = self.err;
                        var self = $1414;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1418 = self.value;
                                var $1419 = Parser$Reply$error$(Parser$Error$combine$($1418, $1416));
                                var $1417 = $1419;
                                break;
                            case 'Maybe.none':
                                var $1420 = Parser$Reply$error$($1416);
                                var $1417 = $1420;
                                break;
                        };
                        var $1415 = $1417;
                        break;
                    case 'Parser.Reply.value':
                        var $1421 = self.pst;
                        var self = $1421;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1423 = self.err;
                                var $1424 = self.nam;
                                var $1425 = self.ini;
                                var $1426 = self.idx;
                                var $1427 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1414, $1423), $1424, $1425, $1426, $1427);
                                var $1428 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$mod));
                                var $1422 = $1428;
                                break;
                        };
                        var $1415 = $1422;
                        break;
                };
                var $1413 = $1415;
                break;
        };
        return $1413;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1430 = self.err;
                var _reply$7 = Kindelia$parse$text$("|", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1432 = self.err;
                        var self = $1430;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1434 = self.value;
                                var $1435 = Parser$Reply$error$(Parser$Error$combine$($1434, $1432));
                                var $1433 = $1435;
                                break;
                            case 'Maybe.none':
                                var $1436 = Parser$Reply$error$($1432);
                                var $1433 = $1436;
                                break;
                        };
                        var $1431 = $1433;
                        break;
                    case 'Parser.Reply.value':
                        var $1437 = self.pst;
                        var self = $1437;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1439 = self.err;
                                var $1440 = self.nam;
                                var $1441 = self.ini;
                                var $1442 = self.idx;
                                var $1443 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1430, $1439), $1440, $1441, $1442, $1443);
                                var $1444 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$or));
                                var $1438 = $1444;
                                break;
                        };
                        var $1431 = $1438;
                        break;
                };
                var $1429 = $1431;
                break;
        };
        return $1429;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1446 = self.err;
                var _reply$7 = Kindelia$parse$text$("&", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1448 = self.err;
                        var self = $1446;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1450 = self.value;
                                var $1451 = Parser$Reply$error$(Parser$Error$combine$($1450, $1448));
                                var $1449 = $1451;
                                break;
                            case 'Maybe.none':
                                var $1452 = Parser$Reply$error$($1448);
                                var $1449 = $1452;
                                break;
                        };
                        var $1447 = $1449;
                        break;
                    case 'Parser.Reply.value':
                        var $1453 = self.pst;
                        var self = $1453;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1455 = self.err;
                                var $1456 = self.nam;
                                var $1457 = self.ini;
                                var $1458 = self.idx;
                                var $1459 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1446, $1455), $1456, $1457, $1458, $1459);
                                var $1460 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$and));
                                var $1454 = $1460;
                                break;
                        };
                        var $1447 = $1454;
                        break;
                };
                var $1445 = $1447;
                break;
        };
        return $1445;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1462 = self.err;
                var _reply$7 = Kindelia$parse$text$("^", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1464 = self.err;
                        var self = $1462;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1466 = self.value;
                                var $1467 = Parser$Reply$error$(Parser$Error$combine$($1466, $1464));
                                var $1465 = $1467;
                                break;
                            case 'Maybe.none':
                                var $1468 = Parser$Reply$error$($1464);
                                var $1465 = $1468;
                                break;
                        };
                        var $1463 = $1465;
                        break;
                    case 'Parser.Reply.value':
                        var $1469 = self.pst;
                        var self = $1469;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1471 = self.err;
                                var $1472 = self.nam;
                                var $1473 = self.ini;
                                var $1474 = self.idx;
                                var $1475 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1462, $1471), $1472, $1473, $1474, $1475);
                                var $1476 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$xor));
                                var $1470 = $1476;
                                break;
                        };
                        var $1463 = $1470;
                        break;
                };
                var $1461 = $1463;
                break;
        };
        return $1461;
    }), List$cons$((_pst$1 => {
        var $1477 = Parser$Reply$value$(_pst$1, Maybe$none);
        return $1477;
    }), List$nil))))))))));

    function Kindelia$Term$operate$(_oper$1, _val0$2, _val1$3) {
        var $1478 = ({
            _: 'Kindelia.Term.operate',
            'oper': _oper$1,
            'val0': _val0$2,
            'val1': _val1$3
        });
        return $1478;
    };
    const Kindelia$Term$operate = x0 => x1 => x2 => Kindelia$Term$operate$(x0, x1, x2);

    function Kindelia$parse$term$operate$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1480 = self.err;
                var _reply$8 = Kindelia$parse$term$operation(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1482 = self.err;
                        var self = $1480;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1484 = self.value;
                                var $1485 = Parser$Reply$error$(Parser$Error$combine$($1484, $1482));
                                var $1483 = $1485;
                                break;
                            case 'Maybe.none':
                                var $1486 = Parser$Reply$error$($1482);
                                var $1483 = $1486;
                                break;
                        };
                        var $1481 = $1483;
                        break;
                    case 'Parser.Reply.value':
                        var $1487 = self.pst;
                        var $1488 = self.val;
                        var self = $1487;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1490 = self.err;
                                var $1491 = self.nam;
                                var $1492 = self.ini;
                                var $1493 = self.idx;
                                var $1494 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1480, $1490), $1491, $1492, $1493, $1494);
                                var self = $1488;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $1496 = self.value;
                                        var $1497 = (_pst$18 => {
                                            var self = _pst$18;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $1499 = self.err;
                                                    var _reply$24 = Kindelia$parse$text$("(", _pst$18);
                                                    var self = _reply$24;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $1501 = self.err;
                                                            var self = $1499;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $1503 = self.value;
                                                                    var $1504 = Parser$Reply$error$(Parser$Error$combine$($1503, $1501));
                                                                    var $1502 = $1504;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $1505 = Parser$Reply$error$($1501);
                                                                    var $1502 = $1505;
                                                                    break;
                                                            };
                                                            var $1500 = $1502;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $1506 = self.pst;
                                                            var self = $1506;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1508 = self.err;
                                                                    var $1509 = self.nam;
                                                                    var $1510 = self.ini;
                                                                    var $1511 = self.idx;
                                                                    var $1512 = self.str;
                                                                    var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($1499, $1508), $1509, $1510, $1511, $1512);
                                                                    var self = _reply$pst$32;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $1514 = self.err;
                                                                            var _reply$38 = Kindelia$parse$term$(_world$1)(_reply$pst$32);
                                                                            var self = _reply$38;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $1516 = self.err;
                                                                                    var self = $1514;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $1518 = self.value;
                                                                                            var $1519 = Parser$Reply$error$(Parser$Error$combine$($1518, $1516));
                                                                                            var $1517 = $1519;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $1520 = Parser$Reply$error$($1516);
                                                                                            var $1517 = $1520;
                                                                                            break;
                                                                                    };
                                                                                    var $1515 = $1517;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $1521 = self.pst;
                                                                                    var $1522 = self.val;
                                                                                    var self = $1521;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1524 = self.err;
                                                                                            var $1525 = self.nam;
                                                                                            var $1526 = self.ini;
                                                                                            var $1527 = self.idx;
                                                                                            var $1528 = self.str;
                                                                                            var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($1514, $1524), $1525, $1526, $1527, $1528);
                                                                                            var self = _reply$pst$46;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $1530 = self.err;
                                                                                                    var _reply$52 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$46);
                                                                                                    var self = _reply$52;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $1532 = self.err;
                                                                                                            var self = $1530;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $1534 = self.value;
                                                                                                                    var $1535 = Parser$Reply$error$(Parser$Error$combine$($1534, $1532));
                                                                                                                    var $1533 = $1535;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $1536 = Parser$Reply$error$($1532);
                                                                                                                    var $1533 = $1536;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1531 = $1533;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $1537 = self.pst;
                                                                                                            var self = $1537;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $1539 = self.err;
                                                                                                                    var $1540 = self.nam;
                                                                                                                    var $1541 = self.ini;
                                                                                                                    var $1542 = self.idx;
                                                                                                                    var $1543 = self.str;
                                                                                                                    var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($1530, $1539), $1540, $1541, $1542, $1543);
                                                                                                                    var self = _reply$pst$60;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.State.new':
                                                                                                                            var $1545 = self.err;
                                                                                                                            var _reply$66 = Kindelia$parse$term$(_world$1)(_reply$pst$60);
                                                                                                                            var self = _reply$66;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                    var $1547 = self.err;
                                                                                                                                    var self = $1545;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Maybe.some':
                                                                                                                                            var $1549 = self.value;
                                                                                                                                            var $1550 = Parser$Reply$error$(Parser$Error$combine$($1549, $1547));
                                                                                                                                            var $1548 = $1550;
                                                                                                                                            break;
                                                                                                                                        case 'Maybe.none':
                                                                                                                                            var $1551 = Parser$Reply$error$($1547);
                                                                                                                                            var $1548 = $1551;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1546 = $1548;
                                                                                                                                    break;
                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                    var $1552 = self.pst;
                                                                                                                                    var $1553 = self.val;
                                                                                                                                    var self = $1552;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $1555 = self.err;
                                                                                                                                            var $1556 = self.nam;
                                                                                                                                            var $1557 = self.ini;
                                                                                                                                            var $1558 = self.idx;
                                                                                                                                            var $1559 = self.str;
                                                                                                                                            var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($1545, $1555), $1556, $1557, $1558, $1559);
                                                                                                                                            var self = _reply$pst$74;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $1561 = self.err;
                                                                                                                                                    var _reply$80 = Kindelia$parse$text$(")", _reply$pst$74);
                                                                                                                                                    var self = _reply$80;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $1563 = self.err;
                                                                                                                                                            var self = $1561;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $1565 = self.value;
                                                                                                                                                                    var $1566 = Parser$Reply$error$(Parser$Error$combine$($1565, $1563));
                                                                                                                                                                    var $1564 = $1566;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $1567 = Parser$Reply$error$($1563);
                                                                                                                                                                    var $1564 = $1567;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1562 = $1564;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $1568 = self.pst;
                                                                                                                                                            var self = $1568;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $1570 = self.err;
                                                                                                                                                                    var $1571 = self.nam;
                                                                                                                                                                    var $1572 = self.ini;
                                                                                                                                                                    var $1573 = self.idx;
                                                                                                                                                                    var $1574 = self.str;
                                                                                                                                                                    var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($1561, $1570), $1571, $1572, $1573, $1574);
                                                                                                                                                                    var $1575 = Parser$Reply$value$(_reply$pst$88, Kindelia$Term$operate$($1496, $1522, $1553));
                                                                                                                                                                    var $1569 = $1575;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1562 = $1569;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1560 = $1562;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1554 = $1560;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1546 = $1554;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1544 = $1546;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1538 = $1544;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1531 = $1538;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1529 = $1531;
                                                                                                    break;
                                                                                            };
                                                                                            var $1523 = $1529;
                                                                                            break;
                                                                                    };
                                                                                    var $1515 = $1523;
                                                                                    break;
                                                                            };
                                                                            var $1513 = $1515;
                                                                            break;
                                                                    };
                                                                    var $1507 = $1513;
                                                                    break;
                                                            };
                                                            var $1500 = $1507;
                                                            break;
                                                    };
                                                    var $1498 = $1500;
                                                    break;
                                            };
                                            return $1498;
                                        });
                                        var $1495 = $1497;
                                        break;
                                    case 'Maybe.none':
                                        var $1576 = Parser$fail("Not an operation.");
                                        var $1495 = $1576;
                                        break;
                                };
                                var $1495 = $1495(_reply$pst$16);
                                var $1489 = $1495;
                                break;
                        };
                        var $1481 = $1489;
                        break;
                };
                var $1479 = $1481;
                break;
        };
        return $1479;
    };
    const Kindelia$parse$term$operate = x0 => x1 => Kindelia$parse$term$operate$(x0, x1);

    function Kindelia$Term$set$(_file$1, _expr$2, _body$3) {
        var $1577 = ({
            _: 'Kindelia.Term.set',
            'file': _file$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $1577;
    };
    const Kindelia$Term$set = x0 => x1 => x2 => Kindelia$Term$set$(x0, x1, x2);

    function Kindelia$parse$term$set$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1579 = self.err;
                var _reply$8 = Kindelia$parse$text$("set", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1581 = self.err;
                        var self = $1579;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1583 = self.value;
                                var $1584 = Parser$Reply$error$(Parser$Error$combine$($1583, $1581));
                                var $1582 = $1584;
                                break;
                            case 'Maybe.none':
                                var $1585 = Parser$Reply$error$($1581);
                                var $1582 = $1585;
                                break;
                        };
                        var $1580 = $1582;
                        break;
                    case 'Parser.Reply.value':
                        var $1586 = self.pst;
                        var self = $1586;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1588 = self.err;
                                var $1589 = self.nam;
                                var $1590 = self.ini;
                                var $1591 = self.idx;
                                var $1592 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1579, $1588), $1589, $1590, $1591, $1592);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1594 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1596 = self.err;
                                                var self = $1594;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1598 = self.value;
                                                        var $1599 = Parser$Reply$error$(Parser$Error$combine$($1598, $1596));
                                                        var $1597 = $1599;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1600 = Parser$Reply$error$($1596);
                                                        var $1597 = $1600;
                                                        break;
                                                };
                                                var $1595 = $1597;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1601 = self.pst;
                                                var $1602 = self.val;
                                                var self = $1601;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1604 = self.err;
                                                        var $1605 = self.nam;
                                                        var $1606 = self.ini;
                                                        var $1607 = self.idx;
                                                        var $1608 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1594, $1604), $1605, $1606, $1607, $1608);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1610 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$("=", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1612 = self.err;
                                                                        var self = $1610;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1614 = self.value;
                                                                                var $1615 = Parser$Reply$error$(Parser$Error$combine$($1614, $1612));
                                                                                var $1613 = $1615;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1616 = Parser$Reply$error$($1612);
                                                                                var $1613 = $1616;
                                                                                break;
                                                                        };
                                                                        var $1611 = $1613;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1617 = self.pst;
                                                                        var self = $1617;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1619 = self.err;
                                                                                var $1620 = self.nam;
                                                                                var $1621 = self.ini;
                                                                                var $1622 = self.idx;
                                                                                var $1623 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1610, $1619), $1620, $1621, $1622, $1623);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1625 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$term$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1627 = self.err;
                                                                                                var self = $1625;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1629 = self.value;
                                                                                                        var $1630 = Parser$Reply$error$(Parser$Error$combine$($1629, $1627));
                                                                                                        var $1628 = $1630;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1631 = Parser$Reply$error$($1627);
                                                                                                        var $1628 = $1631;
                                                                                                        break;
                                                                                                };
                                                                                                var $1626 = $1628;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1632 = self.pst;
                                                                                                var $1633 = self.val;
                                                                                                var self = $1632;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1635 = self.err;
                                                                                                        var $1636 = self.nam;
                                                                                                        var $1637 = self.ini;
                                                                                                        var $1638 = self.idx;
                                                                                                        var $1639 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1625, $1635), $1636, $1637, $1638, $1639);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1641 = self.err;
                                                                                                                var _reply$64 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1643 = self.err;
                                                                                                                        var self = $1641;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1645 = self.value;
                                                                                                                                var $1646 = Parser$Reply$error$(Parser$Error$combine$($1645, $1643));
                                                                                                                                var $1644 = $1646;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1647 = Parser$Reply$error$($1643);
                                                                                                                                var $1644 = $1647;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1642 = $1644;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1648 = self.pst;
                                                                                                                        var self = $1648;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1650 = self.err;
                                                                                                                                var $1651 = self.nam;
                                                                                                                                var $1652 = self.ini;
                                                                                                                                var $1653 = self.idx;
                                                                                                                                var $1654 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1641, $1650), $1651, $1652, $1653, $1654);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1656 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1658 = self.err;
                                                                                                                                                var self = $1656;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1660 = self.value;
                                                                                                                                                        var $1661 = Parser$Reply$error$(Parser$Error$combine$($1660, $1658));
                                                                                                                                                        var $1659 = $1661;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1662 = Parser$Reply$error$($1658);
                                                                                                                                                        var $1659 = $1662;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1657 = $1659;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1663 = self.pst;
                                                                                                                                                var $1664 = self.val;
                                                                                                                                                var self = $1663;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1666 = self.err;
                                                                                                                                                        var $1667 = self.nam;
                                                                                                                                                        var $1668 = self.ini;
                                                                                                                                                        var $1669 = self.idx;
                                                                                                                                                        var $1670 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1656, $1666), $1667, $1668, $1669, $1670);
                                                                                                                                                        var $1671 = Parser$Reply$value$(_reply$pst$86, Kindelia$Term$set$($1602, $1633, $1664));
                                                                                                                                                        var $1665 = $1671;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1657 = $1665;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1655 = $1657;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1649 = $1655;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1642 = $1649;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1640 = $1642;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1634 = $1640;
                                                                                                        break;
                                                                                                };
                                                                                                var $1626 = $1634;
                                                                                                break;
                                                                                        };
                                                                                        var $1624 = $1626;
                                                                                        break;
                                                                                };
                                                                                var $1618 = $1624;
                                                                                break;
                                                                        };
                                                                        var $1611 = $1618;
                                                                        break;
                                                                };
                                                                var $1609 = $1611;
                                                                break;
                                                        };
                                                        var $1603 = $1609;
                                                        break;
                                                };
                                                var $1595 = $1603;
                                                break;
                                        };
                                        var $1593 = $1595;
                                        break;
                                };
                                var $1587 = $1593;
                                break;
                        };
                        var $1580 = $1587;
                        break;
                };
                var $1578 = $1580;
                break;
        };
        return $1578;
    };
    const Kindelia$parse$term$set = x0 => x1 => Kindelia$parse$term$set$(x0, x1);

    function Kindelia$Term$get$(_name$1, _file$2, _body$3) {
        var $1672 = ({
            _: 'Kindelia.Term.get',
            'name': _name$1,
            'file': _file$2,
            'body': _body$3
        });
        return $1672;
    };
    const Kindelia$Term$get = x0 => x1 => x2 => Kindelia$Term$get$(x0, x1, x2);

    function Kindelia$parse$term$get$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1674 = self.err;
                var _reply$8 = Kindelia$parse$text$("get", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1676 = self.err;
                        var self = $1674;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1678 = self.value;
                                var $1679 = Parser$Reply$error$(Parser$Error$combine$($1678, $1676));
                                var $1677 = $1679;
                                break;
                            case 'Maybe.none':
                                var $1680 = Parser$Reply$error$($1676);
                                var $1677 = $1680;
                                break;
                        };
                        var $1675 = $1677;
                        break;
                    case 'Parser.Reply.value':
                        var $1681 = self.pst;
                        var self = $1681;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1683 = self.err;
                                var $1684 = self.nam;
                                var $1685 = self.ini;
                                var $1686 = self.idx;
                                var $1687 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1674, $1683), $1684, $1685, $1686, $1687);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1689 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1691 = self.err;
                                                var self = $1689;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1693 = self.value;
                                                        var $1694 = Parser$Reply$error$(Parser$Error$combine$($1693, $1691));
                                                        var $1692 = $1694;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1695 = Parser$Reply$error$($1691);
                                                        var $1692 = $1695;
                                                        break;
                                                };
                                                var $1690 = $1692;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1696 = self.pst;
                                                var $1697 = self.val;
                                                var self = $1696;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1699 = self.err;
                                                        var $1700 = self.nam;
                                                        var $1701 = self.ini;
                                                        var $1702 = self.idx;
                                                        var $1703 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1689, $1699), $1700, $1701, $1702, $1703);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1705 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$("=", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1707 = self.err;
                                                                        var self = $1705;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1709 = self.value;
                                                                                var $1710 = Parser$Reply$error$(Parser$Error$combine$($1709, $1707));
                                                                                var $1708 = $1710;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1711 = Parser$Reply$error$($1707);
                                                                                var $1708 = $1711;
                                                                                break;
                                                                        };
                                                                        var $1706 = $1708;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1712 = self.pst;
                                                                        var self = $1712;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1714 = self.err;
                                                                                var $1715 = self.nam;
                                                                                var $1716 = self.ini;
                                                                                var $1717 = self.idx;
                                                                                var $1718 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1705, $1714), $1715, $1716, $1717, $1718);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1720 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$name$(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1722 = self.err;
                                                                                                var self = $1720;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1724 = self.value;
                                                                                                        var $1725 = Parser$Reply$error$(Parser$Error$combine$($1724, $1722));
                                                                                                        var $1723 = $1725;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1726 = Parser$Reply$error$($1722);
                                                                                                        var $1723 = $1726;
                                                                                                        break;
                                                                                                };
                                                                                                var $1721 = $1723;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1727 = self.pst;
                                                                                                var $1728 = self.val;
                                                                                                var self = $1727;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1730 = self.err;
                                                                                                        var $1731 = self.nam;
                                                                                                        var $1732 = self.ini;
                                                                                                        var $1733 = self.idx;
                                                                                                        var $1734 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1720, $1730), $1731, $1732, $1733, $1734);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1736 = self.err;
                                                                                                                var _reply$64 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1738 = self.err;
                                                                                                                        var self = $1736;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1740 = self.value;
                                                                                                                                var $1741 = Parser$Reply$error$(Parser$Error$combine$($1740, $1738));
                                                                                                                                var $1739 = $1741;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1742 = Parser$Reply$error$($1738);
                                                                                                                                var $1739 = $1742;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1737 = $1739;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1743 = self.pst;
                                                                                                                        var self = $1743;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1745 = self.err;
                                                                                                                                var $1746 = self.nam;
                                                                                                                                var $1747 = self.ini;
                                                                                                                                var $1748 = self.idx;
                                                                                                                                var $1749 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1736, $1745), $1746, $1747, $1748, $1749);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1751 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1753 = self.err;
                                                                                                                                                var self = $1751;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1755 = self.value;
                                                                                                                                                        var $1756 = Parser$Reply$error$(Parser$Error$combine$($1755, $1753));
                                                                                                                                                        var $1754 = $1756;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1757 = Parser$Reply$error$($1753);
                                                                                                                                                        var $1754 = $1757;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1752 = $1754;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1758 = self.pst;
                                                                                                                                                var $1759 = self.val;
                                                                                                                                                var self = $1758;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1761 = self.err;
                                                                                                                                                        var $1762 = self.nam;
                                                                                                                                                        var $1763 = self.ini;
                                                                                                                                                        var $1764 = self.idx;
                                                                                                                                                        var $1765 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1751, $1761), $1762, $1763, $1764, $1765);
                                                                                                                                                        var $1766 = Parser$Reply$value$(_reply$pst$86, Kindelia$Term$get$($1697, $1728, $1759));
                                                                                                                                                        var $1760 = $1766;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1752 = $1760;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1750 = $1752;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1744 = $1750;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1737 = $1744;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1735 = $1737;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1729 = $1735;
                                                                                                        break;
                                                                                                };
                                                                                                var $1721 = $1729;
                                                                                                break;
                                                                                        };
                                                                                        var $1719 = $1721;
                                                                                        break;
                                                                                };
                                                                                var $1713 = $1719;
                                                                                break;
                                                                        };
                                                                        var $1706 = $1713;
                                                                        break;
                                                                };
                                                                var $1704 = $1706;
                                                                break;
                                                        };
                                                        var $1698 = $1704;
                                                        break;
                                                };
                                                var $1690 = $1698;
                                                break;
                                        };
                                        var $1688 = $1690;
                                        break;
                                };
                                var $1682 = $1688;
                                break;
                        };
                        var $1675 = $1682;
                        break;
                };
                var $1673 = $1675;
                break;
        };
        return $1673;
    };
    const Kindelia$parse$term$get = x0 => x1 => Kindelia$parse$term$get$(x0, x1);

    function Kindelia$Term$bind$(_name$1, _type$2, _expr$3, _body$4) {
        var $1767 = ({
            _: 'Kindelia.Term.bind',
            'name': _name$1,
            'type': _type$2,
            'expr': _expr$3,
            'body': _body$4
        });
        return $1767;
    };
    const Kindelia$Term$bind = x0 => x1 => x2 => x3 => Kindelia$Term$bind$(x0, x1, x2, x3);

    function Kindelia$parse$term$bind$(_world$1) {
        var $1768 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1770 = self.err;
                    var _reply$8 = Kindelia$parse$text$("run", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1772 = self.err;
                            var self = $1770;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1774 = self.value;
                                    var $1775 = Parser$Reply$error$(Parser$Error$combine$($1774, $1772));
                                    var $1773 = $1775;
                                    break;
                                case 'Maybe.none':
                                    var $1776 = Parser$Reply$error$($1772);
                                    var $1773 = $1776;
                                    break;
                            };
                            var $1771 = $1773;
                            break;
                        case 'Parser.Reply.value':
                            var $1777 = self.pst;
                            var self = $1777;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1779 = self.err;
                                    var $1780 = self.nam;
                                    var $1781 = self.ini;
                                    var $1782 = self.idx;
                                    var $1783 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1770, $1779), $1780, $1781, $1782, $1783);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1785 = self.err;
                                            var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1787 = self.err;
                                                    var self = $1785;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1789 = self.value;
                                                            var $1790 = Parser$Reply$error$(Parser$Error$combine$($1789, $1787));
                                                            var $1788 = $1790;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1791 = Parser$Reply$error$($1787);
                                                            var $1788 = $1791;
                                                            break;
                                                    };
                                                    var $1786 = $1788;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1792 = self.pst;
                                                    var $1793 = self.val;
                                                    var self = $1792;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1795 = self.err;
                                                            var $1796 = self.nam;
                                                            var $1797 = self.ini;
                                                            var $1798 = self.idx;
                                                            var $1799 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1785, $1795), $1796, $1797, $1798, $1799);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1801 = self.err;
                                                                    var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1803 = self.err;
                                                                            var self = $1801;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1805 = self.value;
                                                                                    var $1806 = Parser$Reply$error$(Parser$Error$combine$($1805, $1803));
                                                                                    var $1804 = $1806;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1807 = Parser$Reply$error$($1803);
                                                                                    var $1804 = $1807;
                                                                                    break;
                                                                            };
                                                                            var $1802 = $1804;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1808 = self.pst;
                                                                            var self = $1808;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1810 = self.err;
                                                                                    var $1811 = self.nam;
                                                                                    var $1812 = self.ini;
                                                                                    var $1813 = self.idx;
                                                                                    var $1814 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1801, $1810), $1811, $1812, $1813, $1814);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1816 = self.err;
                                                                                            var _reply$50 = Kindelia$parse$type$(_world$1)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $1818 = self.err;
                                                                                                    var self = $1816;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $1820 = self.value;
                                                                                                            var $1821 = Parser$Reply$error$(Parser$Error$combine$($1820, $1818));
                                                                                                            var $1819 = $1821;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $1822 = Parser$Reply$error$($1818);
                                                                                                            var $1819 = $1822;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1817 = $1819;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $1823 = self.pst;
                                                                                                    var $1824 = self.val;
                                                                                                    var self = $1823;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $1826 = self.err;
                                                                                                            var $1827 = self.nam;
                                                                                                            var $1828 = self.ini;
                                                                                                            var $1829 = self.idx;
                                                                                                            var $1830 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1816, $1826), $1827, $1828, $1829, $1830);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $1832 = self.err;
                                                                                                                    var _reply$64 = Kindelia$parse$text$("=", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $1834 = self.err;
                                                                                                                            var self = $1832;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $1836 = self.value;
                                                                                                                                    var $1837 = Parser$Reply$error$(Parser$Error$combine$($1836, $1834));
                                                                                                                                    var $1835 = $1837;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $1838 = Parser$Reply$error$($1834);
                                                                                                                                    var $1835 = $1838;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1833 = $1835;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $1839 = self.pst;
                                                                                                                            var self = $1839;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $1841 = self.err;
                                                                                                                                    var $1842 = self.nam;
                                                                                                                                    var $1843 = self.ini;
                                                                                                                                    var $1844 = self.idx;
                                                                                                                                    var $1845 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1832, $1841), $1842, $1843, $1844, $1845);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $1847 = self.err;
                                                                                                                                            var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $1849 = self.err;
                                                                                                                                                    var self = $1847;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $1851 = self.value;
                                                                                                                                                            var $1852 = Parser$Reply$error$(Parser$Error$combine$($1851, $1849));
                                                                                                                                                            var $1850 = $1852;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $1853 = Parser$Reply$error$($1849);
                                                                                                                                                            var $1850 = $1853;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1848 = $1850;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $1854 = self.pst;
                                                                                                                                                    var $1855 = self.val;
                                                                                                                                                    var self = $1854;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $1857 = self.err;
                                                                                                                                                            var $1858 = self.nam;
                                                                                                                                                            var $1859 = self.ini;
                                                                                                                                                            var $1860 = self.idx;
                                                                                                                                                            var $1861 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1847, $1857), $1858, $1859, $1860, $1861);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $1863 = self.err;
                                                                                                                                                                    var _reply$92 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $1865 = self.err;
                                                                                                                                                                            var self = $1863;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $1867 = self.value;
                                                                                                                                                                                    var $1868 = Parser$Reply$error$(Parser$Error$combine$($1867, $1865));
                                                                                                                                                                                    var $1866 = $1868;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $1869 = Parser$Reply$error$($1865);
                                                                                                                                                                                    var $1866 = $1869;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1864 = $1866;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $1870 = self.pst;
                                                                                                                                                                            var self = $1870;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $1872 = self.err;
                                                                                                                                                                                    var $1873 = self.nam;
                                                                                                                                                                                    var $1874 = self.ini;
                                                                                                                                                                                    var $1875 = self.idx;
                                                                                                                                                                                    var $1876 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($1863, $1872), $1873, $1874, $1875, $1876);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $1878 = self.err;
                                                                                                                                                                                            var _reply$106 = Kindelia$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $1880 = self.err;
                                                                                                                                                                                                    var self = $1878;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $1882 = self.value;
                                                                                                                                                                                                            var $1883 = Parser$Reply$error$(Parser$Error$combine$($1882, $1880));
                                                                                                                                                                                                            var $1881 = $1883;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $1884 = Parser$Reply$error$($1880);
                                                                                                                                                                                                            var $1881 = $1884;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $1879 = $1881;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $1885 = self.pst;
                                                                                                                                                                                                    var $1886 = self.val;
                                                                                                                                                                                                    var self = $1885;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $1888 = self.err;
                                                                                                                                                                                                            var $1889 = self.nam;
                                                                                                                                                                                                            var $1890 = self.ini;
                                                                                                                                                                                                            var $1891 = self.idx;
                                                                                                                                                                                                            var $1892 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($1878, $1888), $1889, $1890, $1891, $1892);
                                                                                                                                                                                                            var $1893 = Parser$Reply$value$(_reply$pst$114, Kindelia$Term$bind$($1793, $1824, $1855, $1886));
                                                                                                                                                                                                            var $1887 = $1893;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $1879 = $1887;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $1877 = $1879;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $1871 = $1877;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1864 = $1871;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $1862 = $1864;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1856 = $1862;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1848 = $1856;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1846 = $1848;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1840 = $1846;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1833 = $1840;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1831 = $1833;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1825 = $1831;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1817 = $1825;
                                                                                                    break;
                                                                                            };
                                                                                            var $1815 = $1817;
                                                                                            break;
                                                                                    };
                                                                                    var $1809 = $1815;
                                                                                    break;
                                                                            };
                                                                            var $1802 = $1809;
                                                                            break;
                                                                    };
                                                                    var $1800 = $1802;
                                                                    break;
                                                            };
                                                            var $1794 = $1800;
                                                            break;
                                                    };
                                                    var $1786 = $1794;
                                                    break;
                                            };
                                            var $1784 = $1786;
                                            break;
                                    };
                                    var $1778 = $1784;
                                    break;
                            };
                            var $1771 = $1778;
                            break;
                    };
                    var $1769 = $1771;
                    break;
            };
            return $1769;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1895 = self.err;
                    var _reply$8 = Kindelia$parse$text$("run", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1897 = self.err;
                            var self = $1895;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1899 = self.value;
                                    var $1900 = Parser$Reply$error$(Parser$Error$combine$($1899, $1897));
                                    var $1898 = $1900;
                                    break;
                                case 'Maybe.none':
                                    var $1901 = Parser$Reply$error$($1897);
                                    var $1898 = $1901;
                                    break;
                            };
                            var $1896 = $1898;
                            break;
                        case 'Parser.Reply.value':
                            var $1902 = self.pst;
                            var self = $1902;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1904 = self.err;
                                    var $1905 = self.nam;
                                    var $1906 = self.ini;
                                    var $1907 = self.idx;
                                    var $1908 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1895, $1904), $1905, $1906, $1907, $1908);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1910 = self.err;
                                            var _reply$22 = Kindelia$parse$term$(_world$1)(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1912 = self.err;
                                                    var self = $1910;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1914 = self.value;
                                                            var $1915 = Parser$Reply$error$(Parser$Error$combine$($1914, $1912));
                                                            var $1913 = $1915;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1916 = Parser$Reply$error$($1912);
                                                            var $1913 = $1916;
                                                            break;
                                                    };
                                                    var $1911 = $1913;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1917 = self.pst;
                                                    var $1918 = self.val;
                                                    var self = $1917;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1920 = self.err;
                                                            var $1921 = self.nam;
                                                            var $1922 = self.ini;
                                                            var $1923 = self.idx;
                                                            var $1924 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1910, $1920), $1921, $1922, $1923, $1924);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1926 = self.err;
                                                                    var _reply$36 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1928 = self.err;
                                                                            var self = $1926;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1930 = self.value;
                                                                                    var $1931 = Parser$Reply$error$(Parser$Error$combine$($1930, $1928));
                                                                                    var $1929 = $1931;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1932 = Parser$Reply$error$($1928);
                                                                                    var $1929 = $1932;
                                                                                    break;
                                                                            };
                                                                            var $1927 = $1929;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1933 = self.pst;
                                                                            var self = $1933;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1935 = self.err;
                                                                                    var $1936 = self.nam;
                                                                                    var $1937 = self.ini;
                                                                                    var $1938 = self.idx;
                                                                                    var $1939 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1926, $1935), $1936, $1937, $1938, $1939);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1941 = self.err;
                                                                                            var _reply$50 = Kindelia$parse$term$(_world$1)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $1943 = self.err;
                                                                                                    var self = $1941;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $1945 = self.value;
                                                                                                            var $1946 = Parser$Reply$error$(Parser$Error$combine$($1945, $1943));
                                                                                                            var $1944 = $1946;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $1947 = Parser$Reply$error$($1943);
                                                                                                            var $1944 = $1947;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1942 = $1944;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $1948 = self.pst;
                                                                                                    var $1949 = self.val;
                                                                                                    var self = $1948;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $1951 = self.err;
                                                                                                            var $1952 = self.nam;
                                                                                                            var $1953 = self.ini;
                                                                                                            var $1954 = self.idx;
                                                                                                            var $1955 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1941, $1951), $1952, $1953, $1954, $1955);
                                                                                                            var $1956 = Parser$Reply$value$(_reply$pst$58, Kindelia$Term$bind$("", Kindelia$Type$word, $1918, $1949));
                                                                                                            var $1950 = $1956;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1942 = $1950;
                                                                                                    break;
                                                                                            };
                                                                                            var $1940 = $1942;
                                                                                            break;
                                                                                    };
                                                                                    var $1934 = $1940;
                                                                                    break;
                                                                            };
                                                                            var $1927 = $1934;
                                                                            break;
                                                                    };
                                                                    var $1925 = $1927;
                                                                    break;
                                                            };
                                                            var $1919 = $1925;
                                                            break;
                                                    };
                                                    var $1911 = $1919;
                                                    break;
                                            };
                                            var $1909 = $1911;
                                            break;
                                    };
                                    var $1903 = $1909;
                                    break;
                            };
                            var $1896 = $1903;
                            break;
                    };
                    var $1894 = $1896;
                    break;
            };
            return $1894;
        }), List$nil)));
        return $1768;
    };
    const Kindelia$parse$term$bind = x0 => Kindelia$parse$term$bind$(x0);

    function Kindelia$Term$return$(_expr$1) {
        var $1957 = ({
            _: 'Kindelia.Term.return',
            'expr': _expr$1
        });
        return $1957;
    };
    const Kindelia$Term$return = x0 => Kindelia$Term$return$(x0);

    function Kindelia$parse$term$return$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1959 = self.err;
                var _reply$8 = Kindelia$parse$text$("return", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1961 = self.err;
                        var self = $1959;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1963 = self.value;
                                var $1964 = Parser$Reply$error$(Parser$Error$combine$($1963, $1961));
                                var $1962 = $1964;
                                break;
                            case 'Maybe.none':
                                var $1965 = Parser$Reply$error$($1961);
                                var $1962 = $1965;
                                break;
                        };
                        var $1960 = $1962;
                        break;
                    case 'Parser.Reply.value':
                        var $1966 = self.pst;
                        var self = $1966;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1968 = self.err;
                                var $1969 = self.nam;
                                var $1970 = self.ini;
                                var $1971 = self.idx;
                                var $1972 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1959, $1968), $1969, $1970, $1971, $1972);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1974 = self.err;
                                        var _reply$22 = Kindelia$parse$term$(_world$1)(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1976 = self.err;
                                                var self = $1974;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1978 = self.value;
                                                        var $1979 = Parser$Reply$error$(Parser$Error$combine$($1978, $1976));
                                                        var $1977 = $1979;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1980 = Parser$Reply$error$($1976);
                                                        var $1977 = $1980;
                                                        break;
                                                };
                                                var $1975 = $1977;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1981 = self.pst;
                                                var $1982 = self.val;
                                                var self = $1981;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1984 = self.err;
                                                        var $1985 = self.nam;
                                                        var $1986 = self.ini;
                                                        var $1987 = self.idx;
                                                        var $1988 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1974, $1984), $1985, $1986, $1987, $1988);
                                                        var $1989 = Parser$Reply$value$(_reply$pst$30, Kindelia$Term$return$($1982));
                                                        var $1983 = $1989;
                                                        break;
                                                };
                                                var $1975 = $1983;
                                                break;
                                        };
                                        var $1973 = $1975;
                                        break;
                                };
                                var $1967 = $1973;
                                break;
                        };
                        var $1960 = $1967;
                        break;
                };
                var $1958 = $1960;
                break;
        };
        return $1958;
    };
    const Kindelia$parse$term$return = x0 => x1 => Kindelia$parse$term$return$(x0, x1);

    function Kindelia$Term$call$(_bond$1, _args$2) {
        var $1990 = ({
            _: 'Kindelia.Term.call',
            'bond': _bond$1,
            'args': _args$2
        });
        return $1990;
    };
    const Kindelia$Term$call = x0 => x1 => Kindelia$Term$call$(x0, x1);

    function Kindelia$parse$term$call$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1992 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1994 = self.err;
                        var self = $1992;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1996 = self.value;
                                var $1997 = Parser$Reply$error$(Parser$Error$combine$($1996, $1994));
                                var $1995 = $1997;
                                break;
                            case 'Maybe.none':
                                var $1998 = Parser$Reply$error$($1994);
                                var $1995 = $1998;
                                break;
                        };
                        var $1993 = $1995;
                        break;
                    case 'Parser.Reply.value':
                        var $1999 = self.pst;
                        var $2000 = self.val;
                        var self = $1999;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2002 = self.err;
                                var $2003 = self.nam;
                                var $2004 = self.ini;
                                var $2005 = self.idx;
                                var $2006 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1992, $2002), $2003, $2004, $2005, $2006);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2008 = self.err;
                                        var _reply$22 = Parser$wrap$(Kindelia$parse$text("("), (_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $2011 = self.err;
                                                    var _reply$28 = Kindelia$parse$term$(_world$1)(_pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $2013 = self.err;
                                                            var self = $2011;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $2015 = self.value;
                                                                    var $2016 = Parser$Reply$error$(Parser$Error$combine$($2015, $2013));
                                                                    var $2014 = $2016;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $2017 = Parser$Reply$error$($2013);
                                                                    var $2014 = $2017;
                                                                    break;
                                                            };
                                                            var $2012 = $2014;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $2018 = self.pst;
                                                            var $2019 = self.val;
                                                            var self = $2018;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2021 = self.err;
                                                                    var $2022 = self.nam;
                                                                    var $2023 = self.ini;
                                                                    var $2024 = self.idx;
                                                                    var $2025 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($2011, $2021), $2022, $2023, $2024, $2025);
                                                                    var self = _reply$pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $2027 = self.err;
                                                                            var _reply$42 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $2029 = self.err;
                                                                                    var self = $2027;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $2031 = self.value;
                                                                                            var $2032 = Parser$Reply$error$(Parser$Error$combine$($2031, $2029));
                                                                                            var $2030 = $2032;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $2033 = Parser$Reply$error$($2029);
                                                                                            var $2030 = $2033;
                                                                                            break;
                                                                                    };
                                                                                    var $2028 = $2030;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $2034 = self.pst;
                                                                                    var self = $2034;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2036 = self.err;
                                                                                            var $2037 = self.nam;
                                                                                            var $2038 = self.ini;
                                                                                            var $2039 = self.idx;
                                                                                            var $2040 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($2027, $2036), $2037, $2038, $2039, $2040);
                                                                                            var $2041 = Parser$Reply$value$(_reply$pst$50, $2019);
                                                                                            var $2035 = $2041;
                                                                                            break;
                                                                                    };
                                                                                    var $2028 = $2035;
                                                                                    break;
                                                                            };
                                                                            var $2026 = $2028;
                                                                            break;
                                                                    };
                                                                    var $2020 = $2026;
                                                                    break;
                                                            };
                                                            var $2012 = $2020;
                                                            break;
                                                    };
                                                    var $2010 = $2012;
                                                    break;
                                            };
                                            return $2010;
                                        }), Kindelia$parse$text(")"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2042 = self.err;
                                                var self = $2008;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2044 = self.value;
                                                        var $2045 = Parser$Reply$error$(Parser$Error$combine$($2044, $2042));
                                                        var $2043 = $2045;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2046 = Parser$Reply$error$($2042);
                                                        var $2043 = $2046;
                                                        break;
                                                };
                                                var $2009 = $2043;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2047 = self.pst;
                                                var $2048 = self.val;
                                                var self = $2047;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2050 = self.err;
                                                        var $2051 = self.nam;
                                                        var $2052 = self.ini;
                                                        var $2053 = self.idx;
                                                        var $2054 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2008, $2050), $2051, $2052, $2053, $2054);
                                                        var $2055 = Parser$Reply$value$(_reply$pst$30, Kindelia$Term$call$($2000, $2048));
                                                        var $2049 = $2055;
                                                        break;
                                                };
                                                var $2009 = $2049;
                                                break;
                                        };
                                        var $2007 = $2009;
                                        break;
                                };
                                var $2001 = $2007;
                                break;
                        };
                        var $1993 = $2001;
                        break;
                };
                var $1991 = $1993;
                break;
        };
        return $1991;
    };
    const Kindelia$parse$term$call = x0 => x1 => Kindelia$parse$term$call$(x0, x1);

    function Kindelia$Term$var$(_name$1) {
        var $2056 = ({
            _: 'Kindelia.Term.var',
            'name': _name$1
        });
        return $2056;
    };
    const Kindelia$Term$var = x0 => Kindelia$Term$var$(x0);

    function Kindelia$parse$term$var$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2058 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2060 = self.err;
                        var self = $2058;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2062 = self.value;
                                var $2063 = Parser$Reply$error$(Parser$Error$combine$($2062, $2060));
                                var $2061 = $2063;
                                break;
                            case 'Maybe.none':
                                var $2064 = Parser$Reply$error$($2060);
                                var $2061 = $2064;
                                break;
                        };
                        var $2059 = $2061;
                        break;
                    case 'Parser.Reply.value':
                        var $2065 = self.pst;
                        var $2066 = self.val;
                        var self = $2065;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2068 = self.err;
                                var $2069 = self.nam;
                                var $2070 = self.ini;
                                var $2071 = self.idx;
                                var $2072 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2058, $2068), $2069, $2070, $2071, $2072);
                                var $2073 = Parser$Reply$value$(_reply$pst$16, Kindelia$Term$var$($2066));
                                var $2067 = $2073;
                                break;
                        };
                        var $2059 = $2067;
                        break;
                };
                var $2057 = $2059;
                break;
        };
        return $2057;
    };
    const Kindelia$parse$term$var = x0 => x1 => Kindelia$parse$term$var$(x0, x1);

    function Kindelia$parse$term$(_world$1) {
        var $2074 = Parser$choice(List$cons$(Kindelia$parse$term$let(_world$1), List$cons$(Kindelia$parse$term$create(_world$1), List$cons$(Kindelia$parse$term$match(_world$1), List$cons$(Kindelia$parse$term$word(_world$1), List$cons$(Kindelia$parse$term$compare(_world$1), List$cons$(Kindelia$parse$term$operate(_world$1), List$cons$(Kindelia$parse$term$set(_world$1), List$cons$(Kindelia$parse$term$get(_world$1), List$cons$(Kindelia$parse$term$bind$(_world$1), List$cons$(Kindelia$parse$term$return(_world$1), List$cons$(Kindelia$parse$term$call(_world$1), List$cons$(Kindelia$parse$term$var(_world$1), List$nil)))))))))))));
        return $2074;
    };
    const Kindelia$parse$term = x0 => Kindelia$parse$term$(x0);

    function Kindelia$Bond$new$(_name$1, _inam$2, _ityp$3, _otyp$4, _main$5) {
        var $2075 = ({
            _: 'Kindelia.Bond.new',
            'name': _name$1,
            'inam': _inam$2,
            'ityp': _ityp$3,
            'otyp': _otyp$4,
            'main': _main$5
        });
        return $2075;
    };
    const Kindelia$Bond$new = x0 => x1 => x2 => x3 => x4 => Kindelia$Bond$new$(x0, x1, x2, x3, x4);

    function Kindelia$parse$bond$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2077 = self.err;
                var _reply$8 = Kindelia$parse$text$("bond", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2079 = self.err;
                        var self = $2077;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2081 = self.value;
                                var $2082 = Parser$Reply$error$(Parser$Error$combine$($2081, $2079));
                                var $2080 = $2082;
                                break;
                            case 'Maybe.none':
                                var $2083 = Parser$Reply$error$($2079);
                                var $2080 = $2083;
                                break;
                        };
                        var $2078 = $2080;
                        break;
                    case 'Parser.Reply.value':
                        var $2084 = self.pst;
                        var self = $2084;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2086 = self.err;
                                var $2087 = self.nam;
                                var $2088 = self.ini;
                                var $2089 = self.idx;
                                var $2090 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2077, $2086), $2087, $2088, $2089, $2090);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2092 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2094 = self.err;
                                                var self = $2092;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2096 = self.value;
                                                        var $2097 = Parser$Reply$error$(Parser$Error$combine$($2096, $2094));
                                                        var $2095 = $2097;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2098 = Parser$Reply$error$($2094);
                                                        var $2095 = $2098;
                                                        break;
                                                };
                                                var $2093 = $2095;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2099 = self.pst;
                                                var $2100 = self.val;
                                                var self = $2099;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2102 = self.err;
                                                        var $2103 = self.nam;
                                                        var $2104 = self.ini;
                                                        var $2105 = self.idx;
                                                        var $2106 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2092, $2102), $2103, $2104, $2105, $2106);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2108 = self.err;
                                                                var _reply$36 = Parser$wrap$(Kindelia$parse$text("("), Kindelia$parse$ann(_world$1), Kindelia$parse$text(")"), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2110 = self.err;
                                                                        var self = $2108;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2112 = self.value;
                                                                                var $2113 = Parser$Reply$error$(Parser$Error$combine$($2112, $2110));
                                                                                var $2111 = $2113;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2114 = Parser$Reply$error$($2110);
                                                                                var $2111 = $2114;
                                                                                break;
                                                                        };
                                                                        var $2109 = $2111;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2115 = self.pst;
                                                                        var $2116 = self.val;
                                                                        var self = $2115;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2118 = self.err;
                                                                                var $2119 = self.nam;
                                                                                var $2120 = self.ini;
                                                                                var $2121 = self.idx;
                                                                                var $2122 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2108, $2118), $2119, $2120, $2121, $2122);
                                                                                var _iarg$45 = List$mapped$($2116, (_x$45 => {
                                                                                    var self = _x$45;
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $2125 = self.fst;
                                                                                            var $2126 = $2125;
                                                                                            var $2124 = $2126;
                                                                                            break;
                                                                                    };
                                                                                    return $2124;
                                                                                }));
                                                                                var _ityp$46 = List$mapped$($2116, (_x$46 => {
                                                                                    var self = _x$46;
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $2128 = self.snd;
                                                                                            var $2129 = $2128;
                                                                                            var $2127 = $2129;
                                                                                            break;
                                                                                    };
                                                                                    return $2127;
                                                                                }));
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2130 = self.err;
                                                                                        var _reply$52 = Kindelia$parse$text$(":", _reply$pst$44);
                                                                                        var self = _reply$52;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2132 = self.err;
                                                                                                var self = $2130;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2134 = self.value;
                                                                                                        var $2135 = Parser$Reply$error$(Parser$Error$combine$($2134, $2132));
                                                                                                        var $2133 = $2135;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2136 = Parser$Reply$error$($2132);
                                                                                                        var $2133 = $2136;
                                                                                                        break;
                                                                                                };
                                                                                                var $2131 = $2133;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2137 = self.pst;
                                                                                                var self = $2137;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2139 = self.err;
                                                                                                        var $2140 = self.nam;
                                                                                                        var $2141 = self.ini;
                                                                                                        var $2142 = self.idx;
                                                                                                        var $2143 = self.str;
                                                                                                        var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($2130, $2139), $2140, $2141, $2142, $2143);
                                                                                                        var self = _reply$pst$60;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2145 = self.err;
                                                                                                                var _reply$66 = Kindelia$parse$type$(_world$1)(_reply$pst$60);
                                                                                                                var self = _reply$66;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2147 = self.err;
                                                                                                                        var self = $2145;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2149 = self.value;
                                                                                                                                var $2150 = Parser$Reply$error$(Parser$Error$combine$($2149, $2147));
                                                                                                                                var $2148 = $2150;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2151 = Parser$Reply$error$($2147);
                                                                                                                                var $2148 = $2151;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2146 = $2148;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2152 = self.pst;
                                                                                                                        var $2153 = self.val;
                                                                                                                        var self = $2152;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2155 = self.err;
                                                                                                                                var $2156 = self.nam;
                                                                                                                                var $2157 = self.ini;
                                                                                                                                var $2158 = self.idx;
                                                                                                                                var $2159 = self.str;
                                                                                                                                var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($2145, $2155), $2156, $2157, $2158, $2159);
                                                                                                                                var self = _reply$pst$74;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2161 = self.err;
                                                                                                                                        var _reply$80 = Kindelia$parse$text$("{", _reply$pst$74);
                                                                                                                                        var self = _reply$80;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2163 = self.err;
                                                                                                                                                var self = $2161;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2165 = self.value;
                                                                                                                                                        var $2166 = Parser$Reply$error$(Parser$Error$combine$($2165, $2163));
                                                                                                                                                        var $2164 = $2166;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2167 = Parser$Reply$error$($2163);
                                                                                                                                                        var $2164 = $2167;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2162 = $2164;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2168 = self.pst;
                                                                                                                                                var self = $2168;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2170 = self.err;
                                                                                                                                                        var $2171 = self.nam;
                                                                                                                                                        var $2172 = self.ini;
                                                                                                                                                        var $2173 = self.idx;
                                                                                                                                                        var $2174 = self.str;
                                                                                                                                                        var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($2161, $2170), $2171, $2172, $2173, $2174);
                                                                                                                                                        var self = _reply$pst$88;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $2176 = self.err;
                                                                                                                                                                var _reply$94 = Kindelia$parse$term$(_world$1)(_reply$pst$88);
                                                                                                                                                                var self = _reply$94;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $2178 = self.err;
                                                                                                                                                                        var self = $2176;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $2180 = self.value;
                                                                                                                                                                                var $2181 = Parser$Reply$error$(Parser$Error$combine$($2180, $2178));
                                                                                                                                                                                var $2179 = $2181;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $2182 = Parser$Reply$error$($2178);
                                                                                                                                                                                var $2179 = $2182;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2177 = $2179;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $2183 = self.pst;
                                                                                                                                                                        var $2184 = self.val;
                                                                                                                                                                        var self = $2183;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $2186 = self.err;
                                                                                                                                                                                var $2187 = self.nam;
                                                                                                                                                                                var $2188 = self.ini;
                                                                                                                                                                                var $2189 = self.idx;
                                                                                                                                                                                var $2190 = self.str;
                                                                                                                                                                                var _reply$pst$102 = Parser$State$new$(Parser$Error$maybe_combine$($2176, $2186), $2187, $2188, $2189, $2190);
                                                                                                                                                                                var self = _reply$pst$102;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $2192 = self.err;
                                                                                                                                                                                        var _reply$108 = Kindelia$parse$text$("}", _reply$pst$102);
                                                                                                                                                                                        var self = _reply$108;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $2194 = self.err;
                                                                                                                                                                                                var self = $2192;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $2196 = self.value;
                                                                                                                                                                                                        var $2197 = Parser$Reply$error$(Parser$Error$combine$($2196, $2194));
                                                                                                                                                                                                        var $2195 = $2197;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $2198 = Parser$Reply$error$($2194);
                                                                                                                                                                                                        var $2195 = $2198;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $2193 = $2195;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $2199 = self.pst;
                                                                                                                                                                                                var self = $2199;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $2201 = self.err;
                                                                                                                                                                                                        var $2202 = self.nam;
                                                                                                                                                                                                        var $2203 = self.ini;
                                                                                                                                                                                                        var $2204 = self.idx;
                                                                                                                                                                                                        var $2205 = self.str;
                                                                                                                                                                                                        var _reply$pst$116 = Parser$State$new$(Parser$Error$maybe_combine$($2192, $2201), $2202, $2203, $2204, $2205);
                                                                                                                                                                                                        var $2206 = Parser$Reply$value$(_reply$pst$116, Kindelia$Bond$new$($2100, _iarg$45, _ityp$46, $2153, $2184));
                                                                                                                                                                                                        var $2200 = $2206;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $2193 = $2200;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $2191 = $2193;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $2185 = $2191;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2177 = $2185;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $2175 = $2177;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $2169 = $2175;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2162 = $2169;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2160 = $2162;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2154 = $2160;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2146 = $2154;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2144 = $2146;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2138 = $2144;
                                                                                                        break;
                                                                                                };
                                                                                                var $2131 = $2138;
                                                                                                break;
                                                                                        };
                                                                                        var $2123 = $2131;
                                                                                        break;
                                                                                };
                                                                                var $2117 = $2123;
                                                                                break;
                                                                        };
                                                                        var $2109 = $2117;
                                                                        break;
                                                                };
                                                                var $2107 = $2109;
                                                                break;
                                                        };
                                                        var $2101 = $2107;
                                                        break;
                                                };
                                                var $2093 = $2101;
                                                break;
                                        };
                                        var $2091 = $2093;
                                        break;
                                };
                                var $2085 = $2091;
                                break;
                        };
                        var $2078 = $2085;
                        break;
                };
                var $2076 = $2078;
                break;
        };
        return $2076;
    };
    const Kindelia$parse$bond = x0 => x1 => Kindelia$parse$bond$(x0, x1);

    function Kindelia$Transaction$new_bond$(_bond$1) {
        var $2207 = ({
            _: 'Kindelia.Transaction.new_bond',
            'bond': _bond$1
        });
        return $2207;
    };
    const Kindelia$Transaction$new_bond = x0 => Kindelia$Transaction$new_bond$(x0);

    function Maybe$default$(_m$2, _a$3) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $2209 = self.value;
                var $2210 = $2209;
                var $2208 = $2210;
                break;
            case 'Maybe.none':
                var $2211 = _a$3;
                var $2208 = $2211;
                break;
        };
        return $2208;
    };
    const Maybe$default = x0 => x1 => Maybe$default$(x0, x1);

    function Kindelia$File$new$(_name$1, _ownr$2, _type$3, _expr$4) {
        var $2212 = ({
            _: 'Kindelia.File.new',
            'name': _name$1,
            'ownr': _ownr$2,
            'type': _type$3,
            'expr': _expr$4
        });
        return $2212;
    };
    const Kindelia$File$new = x0 => x1 => x2 => x3 => Kindelia$File$new$(x0, x1, x2, x3);

    function Kindelia$parse$file$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2214 = self.err;
                var _reply$8 = Kindelia$parse$text$("file", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2216 = self.err;
                        var self = $2214;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2218 = self.value;
                                var $2219 = Parser$Reply$error$(Parser$Error$combine$($2218, $2216));
                                var $2217 = $2219;
                                break;
                            case 'Maybe.none':
                                var $2220 = Parser$Reply$error$($2216);
                                var $2217 = $2220;
                                break;
                        };
                        var $2215 = $2217;
                        break;
                    case 'Parser.Reply.value':
                        var $2221 = self.pst;
                        var self = $2221;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2223 = self.err;
                                var $2224 = self.nam;
                                var $2225 = self.ini;
                                var $2226 = self.idx;
                                var $2227 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2214, $2223), $2224, $2225, $2226, $2227);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2229 = self.err;
                                        var _reply$22 = Parser$maybe$((_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $2232 = self.err;
                                                    var _reply$28 = Parser$many$((_pst$28 => {
                                                        var self = _pst$28;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2235 = self.err;
                                                                var _reply$34 = Kindelia$parse$name$(_pst$28);
                                                                var self = _reply$34;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2237 = self.err;
                                                                        var self = $2235;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2239 = self.value;
                                                                                var $2240 = Parser$Reply$error$(Parser$Error$combine$($2239, $2237));
                                                                                var $2238 = $2240;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2241 = Parser$Reply$error$($2237);
                                                                                var $2238 = $2241;
                                                                                break;
                                                                        };
                                                                        var $2236 = $2238;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2242 = self.pst;
                                                                        var $2243 = self.val;
                                                                        var self = $2242;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2245 = self.err;
                                                                                var $2246 = self.nam;
                                                                                var $2247 = self.ini;
                                                                                var $2248 = self.idx;
                                                                                var $2249 = self.str;
                                                                                var _reply$pst$42 = Parser$State$new$(Parser$Error$maybe_combine$($2235, $2245), $2246, $2247, $2248, $2249);
                                                                                var self = _reply$pst$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2251 = self.err;
                                                                                        var _reply$48 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$42);
                                                                                        var self = _reply$48;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2253 = self.err;
                                                                                                var self = $2251;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2255 = self.value;
                                                                                                        var $2256 = Parser$Reply$error$(Parser$Error$combine$($2255, $2253));
                                                                                                        var $2254 = $2256;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2257 = Parser$Reply$error$($2253);
                                                                                                        var $2254 = $2257;
                                                                                                        break;
                                                                                                };
                                                                                                var $2252 = $2254;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2258 = self.pst;
                                                                                                var self = $2258;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2260 = self.err;
                                                                                                        var $2261 = self.nam;
                                                                                                        var $2262 = self.ini;
                                                                                                        var $2263 = self.idx;
                                                                                                        var $2264 = self.str;
                                                                                                        var _reply$pst$56 = Parser$State$new$(Parser$Error$maybe_combine$($2251, $2260), $2261, $2262, $2263, $2264);
                                                                                                        var $2265 = Parser$Reply$value$(_reply$pst$56, $2243);
                                                                                                        var $2259 = $2265;
                                                                                                        break;
                                                                                                };
                                                                                                var $2252 = $2259;
                                                                                                break;
                                                                                        };
                                                                                        var $2250 = $2252;
                                                                                        break;
                                                                                };
                                                                                var $2244 = $2250;
                                                                                break;
                                                                        };
                                                                        var $2236 = $2244;
                                                                        break;
                                                                };
                                                                var $2234 = $2236;
                                                                break;
                                                        };
                                                        return $2234;
                                                    }))(_pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $2266 = self.err;
                                                            var self = $2232;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $2268 = self.value;
                                                                    var $2269 = Parser$Reply$error$(Parser$Error$combine$($2268, $2266));
                                                                    var $2267 = $2269;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $2270 = Parser$Reply$error$($2266);
                                                                    var $2267 = $2270;
                                                                    break;
                                                            };
                                                            var $2233 = $2267;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $2271 = self.pst;
                                                            var $2272 = self.val;
                                                            var self = $2271;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2274 = self.err;
                                                                    var $2275 = self.nam;
                                                                    var $2276 = self.ini;
                                                                    var $2277 = self.idx;
                                                                    var $2278 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($2232, $2274), $2275, $2276, $2277, $2278);
                                                                    var self = $2272;
                                                                    switch (self._) {
                                                                        case 'List.nil':
                                                                            var $2280 = (_pst$37 => {
                                                                                var $2281 = Parser$Reply$value$(_pst$37, List$nil);
                                                                                return $2281;
                                                                            });
                                                                            var $2279 = $2280;
                                                                            break;
                                                                        case 'List.cons':
                                                                            var $2282 = (_pst$39 => {
                                                                                var self = _pst$39;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2284 = self.err;
                                                                                        var _reply$45 = Kindelia$parse$text$("@", _pst$39);
                                                                                        var self = _reply$45;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2286 = self.err;
                                                                                                var self = $2284;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2288 = self.value;
                                                                                                        var $2289 = Parser$Reply$error$(Parser$Error$combine$($2288, $2286));
                                                                                                        var $2287 = $2289;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2290 = Parser$Reply$error$($2286);
                                                                                                        var $2287 = $2290;
                                                                                                        break;
                                                                                                };
                                                                                                var $2285 = $2287;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2291 = self.pst;
                                                                                                var self = $2291;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2293 = self.err;
                                                                                                        var $2294 = self.nam;
                                                                                                        var $2295 = self.ini;
                                                                                                        var $2296 = self.idx;
                                                                                                        var $2297 = self.str;
                                                                                                        var _reply$pst$53 = Parser$State$new$(Parser$Error$maybe_combine$($2284, $2293), $2294, $2295, $2296, $2297);
                                                                                                        var $2298 = Parser$Reply$value$(_reply$pst$53, $2272);
                                                                                                        var $2292 = $2298;
                                                                                                        break;
                                                                                                };
                                                                                                var $2285 = $2292;
                                                                                                break;
                                                                                        };
                                                                                        var $2283 = $2285;
                                                                                        break;
                                                                                };
                                                                                return $2283;
                                                                            });
                                                                            var $2279 = $2282;
                                                                            break;
                                                                    };
                                                                    var $2279 = $2279(_reply$pst$36);
                                                                    var $2273 = $2279;
                                                                    break;
                                                            };
                                                            var $2233 = $2273;
                                                            break;
                                                    };
                                                    var $2231 = $2233;
                                                    break;
                                            };
                                            return $2231;
                                        }), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2299 = self.err;
                                                var self = $2229;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2301 = self.value;
                                                        var $2302 = Parser$Reply$error$(Parser$Error$combine$($2301, $2299));
                                                        var $2300 = $2302;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2303 = Parser$Reply$error$($2299);
                                                        var $2300 = $2303;
                                                        break;
                                                };
                                                var $2230 = $2300;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2304 = self.pst;
                                                var $2305 = self.val;
                                                var self = $2304;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2307 = self.err;
                                                        var $2308 = self.nam;
                                                        var $2309 = self.ini;
                                                        var $2310 = self.idx;
                                                        var $2311 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2229, $2307), $2308, $2309, $2310, $2311);
                                                        var _ownr$31 = Maybe$default$($2305, List$nil);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2313 = self.err;
                                                                var _reply$37 = Kindelia$parse$name$(_reply$pst$30);
                                                                var self = _reply$37;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2315 = self.err;
                                                                        var self = $2313;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2317 = self.value;
                                                                                var $2318 = Parser$Reply$error$(Parser$Error$combine$($2317, $2315));
                                                                                var $2316 = $2318;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2319 = Parser$Reply$error$($2315);
                                                                                var $2316 = $2319;
                                                                                break;
                                                                        };
                                                                        var $2314 = $2316;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2320 = self.pst;
                                                                        var $2321 = self.val;
                                                                        var self = $2320;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2323 = self.err;
                                                                                var $2324 = self.nam;
                                                                                var $2325 = self.ini;
                                                                                var $2326 = self.idx;
                                                                                var $2327 = self.str;
                                                                                var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($2313, $2323), $2324, $2325, $2326, $2327);
                                                                                var self = _reply$pst$45;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2329 = self.err;
                                                                                        var _reply$51 = Kindelia$parse$text$(":", _reply$pst$45);
                                                                                        var self = _reply$51;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2331 = self.err;
                                                                                                var self = $2329;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2333 = self.value;
                                                                                                        var $2334 = Parser$Reply$error$(Parser$Error$combine$($2333, $2331));
                                                                                                        var $2332 = $2334;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2335 = Parser$Reply$error$($2331);
                                                                                                        var $2332 = $2335;
                                                                                                        break;
                                                                                                };
                                                                                                var $2330 = $2332;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2336 = self.pst;
                                                                                                var self = $2336;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2338 = self.err;
                                                                                                        var $2339 = self.nam;
                                                                                                        var $2340 = self.ini;
                                                                                                        var $2341 = self.idx;
                                                                                                        var $2342 = self.str;
                                                                                                        var _reply$pst$59 = Parser$State$new$(Parser$Error$maybe_combine$($2329, $2338), $2339, $2340, $2341, $2342);
                                                                                                        var self = _reply$pst$59;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2344 = self.err;
                                                                                                                var _reply$65 = Kindelia$parse$type$(_world$1)(_reply$pst$59);
                                                                                                                var self = _reply$65;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2346 = self.err;
                                                                                                                        var self = $2344;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2348 = self.value;
                                                                                                                                var $2349 = Parser$Reply$error$(Parser$Error$combine$($2348, $2346));
                                                                                                                                var $2347 = $2349;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2350 = Parser$Reply$error$($2346);
                                                                                                                                var $2347 = $2350;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2345 = $2347;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2351 = self.pst;
                                                                                                                        var $2352 = self.val;
                                                                                                                        var self = $2351;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2354 = self.err;
                                                                                                                                var $2355 = self.nam;
                                                                                                                                var $2356 = self.ini;
                                                                                                                                var $2357 = self.idx;
                                                                                                                                var $2358 = self.str;
                                                                                                                                var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($2344, $2354), $2355, $2356, $2357, $2358);
                                                                                                                                var self = _reply$pst$73;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2360 = self.err;
                                                                                                                                        var _reply$79 = Kindelia$parse$text$("=", _reply$pst$73);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2362 = self.err;
                                                                                                                                                var self = $2360;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2364 = self.value;
                                                                                                                                                        var $2365 = Parser$Reply$error$(Parser$Error$combine$($2364, $2362));
                                                                                                                                                        var $2363 = $2365;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2366 = Parser$Reply$error$($2362);
                                                                                                                                                        var $2363 = $2366;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2361 = $2363;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2367 = self.pst;
                                                                                                                                                var self = $2367;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2369 = self.err;
                                                                                                                                                        var $2370 = self.nam;
                                                                                                                                                        var $2371 = self.ini;
                                                                                                                                                        var $2372 = self.idx;
                                                                                                                                                        var $2373 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2360, $2369), $2370, $2371, $2372, $2373);
                                                                                                                                                        var self = _reply$pst$87;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $2375 = self.err;
                                                                                                                                                                var _reply$93 = Kindelia$parse$term$(_world$1)(_reply$pst$87);
                                                                                                                                                                var self = _reply$93;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $2377 = self.err;
                                                                                                                                                                        var self = $2375;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $2379 = self.value;
                                                                                                                                                                                var $2380 = Parser$Reply$error$(Parser$Error$combine$($2379, $2377));
                                                                                                                                                                                var $2378 = $2380;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $2381 = Parser$Reply$error$($2377);
                                                                                                                                                                                var $2378 = $2381;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2376 = $2378;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $2382 = self.pst;
                                                                                                                                                                        var $2383 = self.val;
                                                                                                                                                                        var self = $2382;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $2385 = self.err;
                                                                                                                                                                                var $2386 = self.nam;
                                                                                                                                                                                var $2387 = self.ini;
                                                                                                                                                                                var $2388 = self.idx;
                                                                                                                                                                                var $2389 = self.str;
                                                                                                                                                                                var _reply$pst$101 = Parser$State$new$(Parser$Error$maybe_combine$($2375, $2385), $2386, $2387, $2388, $2389);
                                                                                                                                                                                var $2390 = Parser$Reply$value$(_reply$pst$101, Kindelia$File$new$($2321, _ownr$31, $2352, $2383));
                                                                                                                                                                                var $2384 = $2390;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2376 = $2384;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $2374 = $2376;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $2368 = $2374;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2361 = $2368;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2359 = $2361;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2353 = $2359;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2345 = $2353;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2343 = $2345;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2337 = $2343;
                                                                                                        break;
                                                                                                };
                                                                                                var $2330 = $2337;
                                                                                                break;
                                                                                        };
                                                                                        var $2328 = $2330;
                                                                                        break;
                                                                                };
                                                                                var $2322 = $2328;
                                                                                break;
                                                                        };
                                                                        var $2314 = $2322;
                                                                        break;
                                                                };
                                                                var $2312 = $2314;
                                                                break;
                                                        };
                                                        var $2306 = $2312;
                                                        break;
                                                };
                                                var $2230 = $2306;
                                                break;
                                        };
                                        var $2228 = $2230;
                                        break;
                                };
                                var $2222 = $2228;
                                break;
                        };
                        var $2215 = $2222;
                        break;
                };
                var $2213 = $2215;
                break;
        };
        return $2213;
    };
    const Kindelia$parse$file = x0 => x1 => Kindelia$parse$file$(x0, x1);

    function Kindelia$Transaction$new_file$(_file$1) {
        var $2391 = ({
            _: 'Kindelia.Transaction.new_file',
            'file': _file$1
        });
        return $2391;
    };
    const Kindelia$Transaction$new_file = x0 => Kindelia$Transaction$new_file$(x0);

    function Kindelia$Eval$new$(_term$1, _type$2) {
        var $2392 = ({
            _: 'Kindelia.Eval.new',
            'term': _term$1,
            'type': _type$2
        });
        return $2392;
    };
    const Kindelia$Eval$new = x0 => x1 => Kindelia$Eval$new$(x0, x1);

    function Kindelia$parse$eval$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2394 = self.err;
                var _reply$8 = Kindelia$parse$text$("eval", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2396 = self.err;
                        var self = $2394;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2398 = self.value;
                                var $2399 = Parser$Reply$error$(Parser$Error$combine$($2398, $2396));
                                var $2397 = $2399;
                                break;
                            case 'Maybe.none':
                                var $2400 = Parser$Reply$error$($2396);
                                var $2397 = $2400;
                                break;
                        };
                        var $2395 = $2397;
                        break;
                    case 'Parser.Reply.value':
                        var $2401 = self.pst;
                        var self = $2401;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2403 = self.err;
                                var $2404 = self.nam;
                                var $2405 = self.ini;
                                var $2406 = self.idx;
                                var $2407 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2394, $2403), $2404, $2405, $2406, $2407);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2409 = self.err;
                                        var _reply$22 = Kindelia$parse$text$("{", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2411 = self.err;
                                                var self = $2409;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2413 = self.value;
                                                        var $2414 = Parser$Reply$error$(Parser$Error$combine$($2413, $2411));
                                                        var $2412 = $2414;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2415 = Parser$Reply$error$($2411);
                                                        var $2412 = $2415;
                                                        break;
                                                };
                                                var $2410 = $2412;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2416 = self.pst;
                                                var self = $2416;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2418 = self.err;
                                                        var $2419 = self.nam;
                                                        var $2420 = self.ini;
                                                        var $2421 = self.idx;
                                                        var $2422 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2409, $2418), $2419, $2420, $2421, $2422);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2424 = self.err;
                                                                var _reply$36 = Kindelia$parse$term$(_world$1)(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2426 = self.err;
                                                                        var self = $2424;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2428 = self.value;
                                                                                var $2429 = Parser$Reply$error$(Parser$Error$combine$($2428, $2426));
                                                                                var $2427 = $2429;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2430 = Parser$Reply$error$($2426);
                                                                                var $2427 = $2430;
                                                                                break;
                                                                        };
                                                                        var $2425 = $2427;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2431 = self.pst;
                                                                        var $2432 = self.val;
                                                                        var self = $2431;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2434 = self.err;
                                                                                var $2435 = self.nam;
                                                                                var $2436 = self.ini;
                                                                                var $2437 = self.idx;
                                                                                var $2438 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2424, $2434), $2435, $2436, $2437, $2438);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2440 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$text$("}", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2442 = self.err;
                                                                                                var self = $2440;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2444 = self.value;
                                                                                                        var $2445 = Parser$Reply$error$(Parser$Error$combine$($2444, $2442));
                                                                                                        var $2443 = $2445;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2446 = Parser$Reply$error$($2442);
                                                                                                        var $2443 = $2446;
                                                                                                        break;
                                                                                                };
                                                                                                var $2441 = $2443;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2447 = self.pst;
                                                                                                var self = $2447;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2449 = self.err;
                                                                                                        var $2450 = self.nam;
                                                                                                        var $2451 = self.ini;
                                                                                                        var $2452 = self.idx;
                                                                                                        var $2453 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2440, $2449), $2450, $2451, $2452, $2453);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2455 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$text$(":", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2457 = self.err;
                                                                                                                        var self = $2455;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2459 = self.value;
                                                                                                                                var $2460 = Parser$Reply$error$(Parser$Error$combine$($2459, $2457));
                                                                                                                                var $2458 = $2460;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2461 = Parser$Reply$error$($2457);
                                                                                                                                var $2458 = $2461;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2456 = $2458;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2462 = self.pst;
                                                                                                                        var self = $2462;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2464 = self.err;
                                                                                                                                var $2465 = self.nam;
                                                                                                                                var $2466 = self.ini;
                                                                                                                                var $2467 = self.idx;
                                                                                                                                var $2468 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2455, $2464), $2465, $2466, $2467, $2468);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2470 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$type$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2472 = self.err;
                                                                                                                                                var self = $2470;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2474 = self.value;
                                                                                                                                                        var $2475 = Parser$Reply$error$(Parser$Error$combine$($2474, $2472));
                                                                                                                                                        var $2473 = $2475;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2476 = Parser$Reply$error$($2472);
                                                                                                                                                        var $2473 = $2476;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2471 = $2473;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2477 = self.pst;
                                                                                                                                                var $2478 = self.val;
                                                                                                                                                var self = $2477;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2480 = self.err;
                                                                                                                                                        var $2481 = self.nam;
                                                                                                                                                        var $2482 = self.ini;
                                                                                                                                                        var $2483 = self.idx;
                                                                                                                                                        var $2484 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2470, $2480), $2481, $2482, $2483, $2484);
                                                                                                                                                        var $2485 = Parser$Reply$value$(_reply$pst$86, Kindelia$Eval$new$($2432, $2478));
                                                                                                                                                        var $2479 = $2485;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2471 = $2479;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2469 = $2471;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2463 = $2469;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2456 = $2463;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2454 = $2456;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2448 = $2454;
                                                                                                        break;
                                                                                                };
                                                                                                var $2441 = $2448;
                                                                                                break;
                                                                                        };
                                                                                        var $2439 = $2441;
                                                                                        break;
                                                                                };
                                                                                var $2433 = $2439;
                                                                                break;
                                                                        };
                                                                        var $2425 = $2433;
                                                                        break;
                                                                };
                                                                var $2423 = $2425;
                                                                break;
                                                        };
                                                        var $2417 = $2423;
                                                        break;
                                                };
                                                var $2410 = $2417;
                                                break;
                                        };
                                        var $2408 = $2410;
                                        break;
                                };
                                var $2402 = $2408;
                                break;
                        };
                        var $2395 = $2402;
                        break;
                };
                var $2393 = $2395;
                break;
        };
        return $2393;
    };
    const Kindelia$parse$eval = x0 => x1 => Kindelia$parse$eval$(x0, x1);

    function Kindelia$Transaction$new_eval$(_eval$1) {
        var $2486 = ({
            _: 'Kindelia.Transaction.new_eval',
            'eval': _eval$1
        });
        return $2486;
    };
    const Kindelia$Transaction$new_eval = x0 => Kindelia$Transaction$new_eval$(x0);

    function Kindelia$parse$transaction$(_world$1) {
        var $2487 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2489 = self.err;
                    var _reply$8 = Kindelia$parse$data$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2491 = self.err;
                            var self = $2489;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2493 = self.value;
                                    var $2494 = Parser$Reply$error$(Parser$Error$combine$($2493, $2491));
                                    var $2492 = $2494;
                                    break;
                                case 'Maybe.none':
                                    var $2495 = Parser$Reply$error$($2491);
                                    var $2492 = $2495;
                                    break;
                            };
                            var $2490 = $2492;
                            break;
                        case 'Parser.Reply.value':
                            var $2496 = self.pst;
                            var $2497 = self.val;
                            var self = $2496;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2499 = self.err;
                                    var $2500 = self.nam;
                                    var $2501 = self.ini;
                                    var $2502 = self.idx;
                                    var $2503 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2489, $2499), $2500, $2501, $2502, $2503);
                                    var $2504 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_data$($2497));
                                    var $2498 = $2504;
                                    break;
                            };
                            var $2490 = $2498;
                            break;
                    };
                    var $2488 = $2490;
                    break;
            };
            return $2488;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2506 = self.err;
                    var _reply$8 = Kindelia$parse$bond$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2508 = self.err;
                            var self = $2506;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2510 = self.value;
                                    var $2511 = Parser$Reply$error$(Parser$Error$combine$($2510, $2508));
                                    var $2509 = $2511;
                                    break;
                                case 'Maybe.none':
                                    var $2512 = Parser$Reply$error$($2508);
                                    var $2509 = $2512;
                                    break;
                            };
                            var $2507 = $2509;
                            break;
                        case 'Parser.Reply.value':
                            var $2513 = self.pst;
                            var $2514 = self.val;
                            var self = $2513;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2516 = self.err;
                                    var $2517 = self.nam;
                                    var $2518 = self.ini;
                                    var $2519 = self.idx;
                                    var $2520 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2506, $2516), $2517, $2518, $2519, $2520);
                                    var $2521 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_bond$($2514));
                                    var $2515 = $2521;
                                    break;
                            };
                            var $2507 = $2515;
                            break;
                    };
                    var $2505 = $2507;
                    break;
            };
            return $2505;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2523 = self.err;
                    var _reply$8 = Kindelia$parse$file$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2525 = self.err;
                            var self = $2523;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2527 = self.value;
                                    var $2528 = Parser$Reply$error$(Parser$Error$combine$($2527, $2525));
                                    var $2526 = $2528;
                                    break;
                                case 'Maybe.none':
                                    var $2529 = Parser$Reply$error$($2525);
                                    var $2526 = $2529;
                                    break;
                            };
                            var $2524 = $2526;
                            break;
                        case 'Parser.Reply.value':
                            var $2530 = self.pst;
                            var $2531 = self.val;
                            var self = $2530;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2533 = self.err;
                                    var $2534 = self.nam;
                                    var $2535 = self.ini;
                                    var $2536 = self.idx;
                                    var $2537 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2523, $2533), $2534, $2535, $2536, $2537);
                                    var $2538 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_file$($2531));
                                    var $2532 = $2538;
                                    break;
                            };
                            var $2524 = $2532;
                            break;
                    };
                    var $2522 = $2524;
                    break;
            };
            return $2522;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2540 = self.err;
                    var _reply$8 = Kindelia$parse$eval$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2542 = self.err;
                            var self = $2540;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2544 = self.value;
                                    var $2545 = Parser$Reply$error$(Parser$Error$combine$($2544, $2542));
                                    var $2543 = $2545;
                                    break;
                                case 'Maybe.none':
                                    var $2546 = Parser$Reply$error$($2542);
                                    var $2543 = $2546;
                                    break;
                            };
                            var $2541 = $2543;
                            break;
                        case 'Parser.Reply.value':
                            var $2547 = self.pst;
                            var $2548 = self.val;
                            var self = $2547;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2550 = self.err;
                                    var $2551 = self.nam;
                                    var $2552 = self.ini;
                                    var $2553 = self.idx;
                                    var $2554 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2540, $2550), $2551, $2552, $2553, $2554);
                                    var $2555 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_eval$($2548));
                                    var $2549 = $2555;
                                    break;
                            };
                            var $2541 = $2549;
                            break;
                    };
                    var $2539 = $2541;
                    break;
            };
            return $2539;
        }), List$nil)))));
        return $2487;
    };
    const Kindelia$parse$transaction = x0 => Kindelia$parse$transaction$(x0);

    function Kindelia$parse$block$(_world$1) {
        var $2556 = Parser$until$(Kindelia$parse$text("save"), Kindelia$parse$transaction$(_world$1));
        return $2556;
    };
    const Kindelia$parse$block = x0 => Kindelia$parse$block$(x0);

    function IO$(_A$1) {
        var $2557 = null;
        return $2557;
    };
    const IO = x0 => IO$(x0);
    const Nat$ltn = a0 => a1 => (a0 < a1);

    function String$length$go$(_xs$1, _n$2) {
        var String$length$go$ = (_xs$1, _n$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _n$2]
        });
        var String$length$go = _xs$1 => _n$2 => String$length$go$(_xs$1, _n$2);
        var arg = [_xs$1, _n$2];
        while (true) {
            let [_xs$1, _n$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $2558 = _n$2;
                    return $2558;
                } else {
                    var $2559 = self.charCodeAt(0);
                    var $2560 = self.slice(1);
                    var $2561 = String$length$go$($2560, Nat$succ$(_n$2));
                    return $2561;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$length$go = x0 => x1 => String$length$go$(x0, x1);

    function String$length$(_xs$1) {
        var $2562 = String$length$go$(_xs$1, 0n);
        return $2562;
    };
    const String$length = x0 => String$length$(x0);

    function String$flatten$go$(_xs$1, _res$2) {
        var String$flatten$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$flatten$go = _xs$1 => _res$2 => String$flatten$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                switch (self._) {
                    case 'List.cons':
                        var $2563 = self.head;
                        var $2564 = self.tail;
                        var $2565 = String$flatten$go$($2564, (_res$2 + $2563));
                        return $2565;
                    case 'List.nil':
                        var $2566 = _res$2;
                        return $2566;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$flatten$go = x0 => x1 => String$flatten$go$(x0, x1);

    function String$flatten$(_xs$1) {
        var $2567 = String$flatten$go$(_xs$1, "");
        return $2567;
    };
    const String$flatten = x0 => String$flatten$(x0);

    function String$join$go$(_sep$1, _list$2, _fst$3) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $2569 = self.head;
                var $2570 = self.tail;
                var $2571 = String$flatten$(List$cons$((() => {
                    var self = _fst$3;
                    if (self) {
                        var $2572 = "";
                        return $2572;
                    } else {
                        var $2573 = _sep$1;
                        return $2573;
                    };
                })(), List$cons$($2569, List$cons$(String$join$go$(_sep$1, $2570, Bool$false), List$nil))));
                var $2568 = $2571;
                break;
            case 'List.nil':
                var $2574 = "";
                var $2568 = $2574;
                break;
        };
        return $2568;
    };
    const String$join$go = x0 => x1 => x2 => String$join$go$(x0, x1, x2);

    function String$join$(_sep$1, _list$2) {
        var $2575 = String$join$go$(_sep$1, _list$2, Bool$true);
        return $2575;
    };
    const String$join = x0 => x1 => String$join$(x0, x1);

    function Kind$Code$highlight$end$(_col$1, _row$2, _res$3) {
        var $2576 = String$join$("\u{a}", _res$3);
        return $2576;
    };
    const Kind$Code$highlight$end = x0 => x1 => x2 => Kind$Code$highlight$end$(x0, x1, x2);

    function Maybe$extract$(_m$2, _a$4, _f$5) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $2578 = self.value;
                var $2579 = _f$5($2578);
                var $2577 = $2579;
                break;
            case 'Maybe.none':
                var $2580 = _a$4;
                var $2577 = $2580;
                break;
        };
        return $2577;
    };
    const Maybe$extract = x0 => x1 => x2 => Maybe$extract$(x0, x1, x2);

    function Nat$is_zero$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2582 = Bool$true;
            var $2581 = $2582;
        } else {
            var $2583 = (self - 1n);
            var $2584 = Bool$false;
            var $2581 = $2584;
        };
        return $2581;
    };
    const Nat$is_zero = x0 => Nat$is_zero$(x0);

    function Nat$double$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2586 = Nat$zero;
            var $2585 = $2586;
        } else {
            var $2587 = (self - 1n);
            var $2588 = Nat$succ$(Nat$succ$(Nat$double$($2587)));
            var $2585 = $2588;
        };
        return $2585;
    };
    const Nat$double = x0 => Nat$double$(x0);

    function Nat$pred$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2590 = Nat$zero;
            var $2589 = $2590;
        } else {
            var $2591 = (self - 1n);
            var $2592 = $2591;
            var $2589 = $2592;
        };
        return $2589;
    };
    const Nat$pred = x0 => Nat$pred$(x0);

    function String$reverse$go$(_xs$1, _res$2) {
        var String$reverse$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$reverse$go = _xs$1 => _res$2 => String$reverse$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $2593 = _res$2;
                    return $2593;
                } else {
                    var $2594 = self.charCodeAt(0);
                    var $2595 = self.slice(1);
                    var $2596 = String$reverse$go$($2595, String$cons$($2594, _res$2));
                    return $2596;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$reverse$go = x0 => x1 => String$reverse$go$(x0, x1);

    function String$reverse$(_xs$1) {
        var $2597 = String$reverse$go$(_xs$1, String$nil);
        return $2597;
    };
    const String$reverse = x0 => String$reverse$(x0);

    function String$pad_right$(_size$1, _chr$2, _str$3) {
        var self = _size$1;
        if (self === 0n) {
            var $2599 = _str$3;
            var $2598 = $2599;
        } else {
            var $2600 = (self - 1n);
            var self = _str$3;
            if (self.length === 0) {
                var $2602 = String$cons$(_chr$2, String$pad_right$($2600, _chr$2, ""));
                var $2601 = $2602;
            } else {
                var $2603 = self.charCodeAt(0);
                var $2604 = self.slice(1);
                var $2605 = String$cons$($2603, String$pad_right$($2600, _chr$2, $2604));
                var $2601 = $2605;
            };
            var $2598 = $2601;
        };
        return $2598;
    };
    const String$pad_right = x0 => x1 => x2 => String$pad_right$(x0, x1, x2);

    function String$pad_left$(_size$1, _chr$2, _str$3) {
        var $2606 = String$reverse$(String$pad_right$(_size$1, _chr$2, String$reverse$(_str$3)));
        return $2606;
    };
    const String$pad_left = x0 => x1 => x2 => String$pad_left$(x0, x1, x2);

    function Either$(_A$1, _B$2) {
        var $2607 = null;
        return $2607;
    };
    const Either = x0 => x1 => Either$(x0, x1);

    function Either$left$(_value$3) {
        var $2608 = ({
            _: 'Either.left',
            'value': _value$3
        });
        return $2608;
    };
    const Either$left = x0 => Either$left$(x0);

    function Either$right$(_value$3) {
        var $2609 = ({
            _: 'Either.right',
            'value': _value$3
        });
        return $2609;
    };
    const Either$right = x0 => Either$right$(x0);

    function Nat$sub_rem$(_n$1, _m$2) {
        var Nat$sub_rem$ = (_n$1, _m$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2]
        });
        var Nat$sub_rem = _n$1 => _m$2 => Nat$sub_rem$(_n$1, _m$2);
        var arg = [_n$1, _m$2];
        while (true) {
            let [_n$1, _m$2] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $2610 = Either$left$(_n$1);
                    return $2610;
                } else {
                    var $2611 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $2613 = Either$right$(Nat$succ$($2611));
                        var $2612 = $2613;
                    } else {
                        var $2614 = (self - 1n);
                        var $2615 = Nat$sub_rem$($2614, $2611);
                        var $2612 = $2615;
                    };
                    return $2612;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$sub_rem = x0 => x1 => Nat$sub_rem$(x0, x1);

    function Nat$div_mod$go$(_n$1, _m$2, _d$3) {
        var Nat$div_mod$go$ = (_n$1, _m$2, _d$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _d$3]
        });
        var Nat$div_mod$go = _n$1 => _m$2 => _d$3 => Nat$div_mod$go$(_n$1, _m$2, _d$3);
        var arg = [_n$1, _m$2, _d$3];
        while (true) {
            let [_n$1, _m$2, _d$3] = arg;
            var R = (() => {
                var self = Nat$sub_rem$(_n$1, _m$2);
                switch (self._) {
                    case 'Either.left':
                        var $2616 = self.value;
                        var $2617 = Nat$div_mod$go$($2616, _m$2, Nat$succ$(_d$3));
                        return $2617;
                    case 'Either.right':
                        var $2618 = Pair$new$(_d$3, _n$1);
                        return $2618;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$div_mod$go = x0 => x1 => x2 => Nat$div_mod$go$(x0, x1, x2);
    const Nat$div_mod = a0 => a1 => (({
        _: 'Pair.new',
        'fst': a0 / a1,
        'snd': a0 % a1
    }));

    function Nat$to_base$go$(_base$1, _nat$2, _res$3) {
        var Nat$to_base$go$ = (_base$1, _nat$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_base$1, _nat$2, _res$3]
        });
        var Nat$to_base$go = _base$1 => _nat$2 => _res$3 => Nat$to_base$go$(_base$1, _nat$2, _res$3);
        var arg = [_base$1, _nat$2, _res$3];
        while (true) {
            let [_base$1, _nat$2, _res$3] = arg;
            var R = (() => {
                var self = (({
                    _: 'Pair.new',
                    'fst': _nat$2 / _base$1,
                    'snd': _nat$2 % _base$1
                }));
                switch (self._) {
                    case 'Pair.new':
                        var $2619 = self.fst;
                        var $2620 = self.snd;
                        var self = $2619;
                        if (self === 0n) {
                            var $2622 = List$cons$($2620, _res$3);
                            var $2621 = $2622;
                        } else {
                            var $2623 = (self - 1n);
                            var $2624 = Nat$to_base$go$(_base$1, $2619, List$cons$($2620, _res$3));
                            var $2621 = $2624;
                        };
                        return $2621;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$to_base$go = x0 => x1 => x2 => Nat$to_base$go$(x0, x1, x2);

    function Nat$to_base$(_base$1, _nat$2) {
        var $2625 = Nat$to_base$go$(_base$1, _nat$2, List$nil);
        return $2625;
    };
    const Nat$to_base = x0 => x1 => Nat$to_base$(x0, x1);

    function Nat$mod$go$(_n$1, _m$2, _r$3) {
        var Nat$mod$go$ = (_n$1, _m$2, _r$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _r$3]
        });
        var Nat$mod$go = _n$1 => _m$2 => _r$3 => Nat$mod$go$(_n$1, _m$2, _r$3);
        var arg = [_n$1, _m$2, _r$3];
        while (true) {
            let [_n$1, _m$2, _r$3] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $2626 = Nat$mod$go$(_n$1, _r$3, _m$2);
                    return $2626;
                } else {
                    var $2627 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $2629 = _r$3;
                        var $2628 = $2629;
                    } else {
                        var $2630 = (self - 1n);
                        var $2631 = Nat$mod$go$($2630, $2627, Nat$succ$(_r$3));
                        var $2628 = $2631;
                    };
                    return $2628;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$mod$go = x0 => x1 => x2 => Nat$mod$go$(x0, x1, x2);
    const Nat$mod = a0 => a1 => (a0 % a1);
    const Nat$lte = a0 => a1 => (a0 <= a1);

    function List$at$(_index$2, _list$3) {
        var List$at$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$at = _index$2 => _list$3 => List$at$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $2632 = self.head;
                        var $2633 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $2635 = Maybe$some$($2632);
                            var $2634 = $2635;
                        } else {
                            var $2636 = (self - 1n);
                            var $2637 = List$at$($2636, $2633);
                            var $2634 = $2637;
                        };
                        return $2634;
                    case 'List.nil':
                        var $2638 = Maybe$none;
                        return $2638;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$at = x0 => x1 => List$at$(x0, x1);

    function Nat$show_digit$(_base$1, _n$2) {
        var _m$3 = (_n$2 % _base$1);
        var _base64$4 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$cons$(97, List$cons$(98, List$cons$(99, List$cons$(100, List$cons$(101, List$cons$(102, List$cons$(103, List$cons$(104, List$cons$(105, List$cons$(106, List$cons$(107, List$cons$(108, List$cons$(109, List$cons$(110, List$cons$(111, List$cons$(112, List$cons$(113, List$cons$(114, List$cons$(115, List$cons$(116, List$cons$(117, List$cons$(118, List$cons$(119, List$cons$(120, List$cons$(121, List$cons$(122, List$cons$(65, List$cons$(66, List$cons$(67, List$cons$(68, List$cons$(69, List$cons$(70, List$cons$(71, List$cons$(72, List$cons$(73, List$cons$(74, List$cons$(75, List$cons$(76, List$cons$(77, List$cons$(78, List$cons$(79, List$cons$(80, List$cons$(81, List$cons$(82, List$cons$(83, List$cons$(84, List$cons$(85, List$cons$(86, List$cons$(87, List$cons$(88, List$cons$(89, List$cons$(90, List$cons$(43, List$cons$(47, List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
        var self = ((_base$1 > 0n) && (_base$1 <= 64n));
        if (self) {
            var self = List$at$(_m$3, _base64$4);
            switch (self._) {
                case 'Maybe.some':
                    var $2641 = self.value;
                    var $2642 = $2641;
                    var $2640 = $2642;
                    break;
                case 'Maybe.none':
                    var $2643 = 35;
                    var $2640 = $2643;
                    break;
            };
            var $2639 = $2640;
        } else {
            var $2644 = 35;
            var $2639 = $2644;
        };
        return $2639;
    };
    const Nat$show_digit = x0 => x1 => Nat$show_digit$(x0, x1);

    function Nat$to_string_base$(_base$1, _nat$2) {
        var $2645 = List$fold$(Nat$to_base$(_base$1, _nat$2), String$nil, (_n$3 => _str$4 => {
            var $2646 = String$cons$(Nat$show_digit$(_base$1, _n$3), _str$4);
            return $2646;
        }));
        return $2645;
    };
    const Nat$to_string_base = x0 => x1 => Nat$to_string_base$(x0, x1);

    function Nat$show$(_n$1) {
        var $2647 = Nat$to_string_base$(10n, _n$1);
        return $2647;
    };
    const Nat$show = x0 => Nat$show$(x0);
    const Bool$not = a0 => (!a0);

    function U16$new$(_value$1) {
        var $2648 = word_to_u16(_value$1);
        return $2648;
    };
    const U16$new = x0 => U16$new$(x0);
    const Nat$to_u16 = a0 => (Number(a0) & 0xFFFF);

    function Kind$Code$color$(_col$1, _str$2) {
        var $2649 = String$cons$(27, ("[" + (_col$1 + ("m" + (_str$2 + String$cons$(27, "[0m"))))));
        return $2649;
    };
    const Kind$Code$color = x0 => x1 => Kind$Code$color$(x0, x1);
    const Nat$eql = a0 => a1 => (a0 === a1);

    function List$take$(_n$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $2651 = self.head;
                var $2652 = self.tail;
                var self = _n$2;
                if (self === 0n) {
                    var $2654 = List$nil;
                    var $2653 = $2654;
                } else {
                    var $2655 = (self - 1n);
                    var $2656 = List$cons$($2651, List$take$($2655, $2652));
                    var $2653 = $2656;
                };
                var $2650 = $2653;
                break;
            case 'List.nil':
                var $2657 = List$nil;
                var $2650 = $2657;
                break;
        };
        return $2650;
    };
    const List$take = x0 => x1 => List$take$(x0, x1);

    function Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) {
        var Kind$Code$highlight$go$ = (_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) => ({
            ctr: 'TCO',
            arg: [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9]
        });
        var Kind$Code$highlight$go = _code$1 => _ixi$2 => _ix0$3 => _ix1$4 => _col$5 => _row$6 => _lft$7 => _lin$8 => _res$9 => Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9);
        var arg = [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9];
        while (true) {
            let [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9] = arg;
            var R = (() => {
                var _spa$10 = 3n;
                var self = _code$1;
                if (self.length === 0) {
                    var $2659 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                    var $2658 = $2659;
                } else {
                    var $2660 = self.charCodeAt(0);
                    var $2661 = self.slice(1);
                    var self = ($2660 === 10);
                    if (self) {
                        var _stp$13 = Maybe$extract$(_lft$7, Bool$false, Nat$is_zero);
                        var self = _stp$13;
                        if (self) {
                            var $2664 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                            var $2663 = $2664;
                        } else {
                            var _siz$14 = Nat$succ$(Nat$double$(_spa$10));
                            var self = _ix1$4;
                            if (self === 0n) {
                                var self = _lft$7;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $2667 = self.value;
                                        var $2668 = Maybe$some$(Nat$pred$($2667));
                                        var $2666 = $2668;
                                        break;
                                    case 'Maybe.none':
                                        var $2669 = Maybe$some$(_spa$10);
                                        var $2666 = $2669;
                                        break;
                                };
                                var _lft$15 = $2666;
                            } else {
                                var $2670 = (self - 1n);
                                var $2671 = _lft$7;
                                var _lft$15 = $2671;
                            };
                            var _ixi$16 = Nat$pred$(_ixi$2);
                            var _ix0$17 = Nat$pred$(_ix0$3);
                            var _ix1$18 = Nat$pred$(_ix1$4);
                            var _col$19 = 0n;
                            var _row$20 = Nat$succ$(_row$6);
                            var _res$21 = List$cons$(String$reverse$(_lin$8), _res$9);
                            var _lin$22 = String$reverse$(String$flatten$(List$cons$(String$pad_left$(4n, 32, Nat$show$(_row$20)), List$cons$(" | ", List$nil))));
                            var $2665 = Kind$Code$highlight$go$($2661, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$20, _lft$15, _lin$22, _res$21);
                            var $2663 = $2665;
                        };
                        var $2662 = $2663;
                    } else {
                        var _chr$13 = String$cons$($2660, String$nil);
                        var self = (Nat$is_zero$(_ix0$3) && (!Nat$is_zero$(_ix1$4)));
                        if (self) {
                            var $2673 = String$reverse$(Kind$Code$color$("41", Kind$Code$color$("37", _chr$13)));
                            var _chr$14 = $2673;
                        } else {
                            var self = (Nat$is_zero$(_ixi$2) && (!Nat$is_zero$(_ix1$4)));
                            if (self) {
                                var $2675 = String$reverse$(Kind$Code$color$("31", Kind$Code$color$("4", _chr$13)));
                                var $2674 = $2675;
                            } else {
                                var $2676 = _chr$13;
                                var $2674 = $2676;
                            };
                            var _chr$14 = $2674;
                        };
                        var self = (_ix0$3 === 1n);
                        if (self) {
                            var $2677 = List$take$(_spa$10, _res$9);
                            var _res$15 = $2677;
                        } else {
                            var $2678 = _res$9;
                            var _res$15 = $2678;
                        };
                        var _ixi$16 = Nat$pred$(_ixi$2);
                        var _ix0$17 = Nat$pred$(_ix0$3);
                        var _ix1$18 = Nat$pred$(_ix1$4);
                        var _col$19 = Nat$succ$(_col$5);
                        var _lin$20 = String$flatten$(List$cons$(_chr$14, List$cons$(_lin$8, List$nil)));
                        var $2672 = Kind$Code$highlight$go$($2661, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$6, _lft$7, _lin$20, _res$15);
                        var $2662 = $2672;
                    };
                    var $2658 = $2662;
                };
                return $2658;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$highlight$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Code$highlight$go$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Code$highlight$(_code$1, _init$2, _idx0$3, _idx1$4) {
        var $2679 = Kind$Code$highlight$go$((_code$1 + " \u{a}"), _init$2, _idx0$3, _idx1$4, 0n, 1n, Maybe$none, String$reverse$("   1 | "), List$nil);
        return $2679;
    };
    const Kind$Code$highlight = x0 => x1 => x2 => x3 => Kind$Code$highlight$(x0, x1, x2, x3);

    function IO$ask$(_query$2, _param$3, _then$4) {
        var $2680 = ({
            _: 'IO.ask',
            'query': _query$2,
            'param': _param$3,
            'then': _then$4
        });
        return $2680;
    };
    const IO$ask = x0 => x1 => x2 => IO$ask$(x0, x1, x2);

    function IO$bind$(_a$3, _f$4) {
        var self = _a$3;
        switch (self._) {
            case 'IO.end':
                var $2682 = self.value;
                var $2683 = _f$4($2682);
                var $2681 = $2683;
                break;
            case 'IO.ask':
                var $2684 = self.query;
                var $2685 = self.param;
                var $2686 = self.then;
                var $2687 = IO$ask$($2684, $2685, (_x$8 => {
                    var $2688 = IO$bind$($2686(_x$8), _f$4);
                    return $2688;
                }));
                var $2681 = $2687;
                break;
        };
        return $2681;
    };
    const IO$bind = x0 => x1 => IO$bind$(x0, x1);

    function IO$end$(_value$2) {
        var $2689 = ({
            _: 'IO.end',
            'value': _value$2
        });
        return $2689;
    };
    const IO$end = x0 => IO$end$(x0);

    function IO$monad$(_new$2) {
        var $2690 = _new$2(IO$bind)(IO$end);
        return $2690;
    };
    const IO$monad = x0 => IO$monad$(x0);

    function IO$put_string$(_text$1) {
        var $2691 = IO$ask$("put_string", _text$1, (_skip$2 => {
            var $2692 = IO$end$(Unit$new);
            return $2692;
        }));
        return $2691;
    };
    const IO$put_string = x0 => IO$put_string$(x0);

    function IO$print$(_text$1) {
        var $2693 = IO$put_string$((_text$1 + "\u{a}"));
        return $2693;
    };
    const IO$print = x0 => IO$print$(x0);
    const Bits$e = '';
    const Bits$o = a0 => (a0 + '0');

    function Word$subber$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $2695 = self.pred;
                var $2696 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2698 = self.pred;
                            var $2699 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2701 = Word$i$(Word$subber$(_a$pred$10, $2698, Bool$true));
                                    var $2700 = $2701;
                                } else {
                                    var $2702 = Word$o$(Word$subber$(_a$pred$10, $2698, Bool$false));
                                    var $2700 = $2702;
                                };
                                return $2700;
                            });
                            var $2697 = $2699;
                            break;
                        case 'Word.i':
                            var $2703 = self.pred;
                            var $2704 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2706 = Word$o$(Word$subber$(_a$pred$10, $2703, Bool$true));
                                    var $2705 = $2706;
                                } else {
                                    var $2707 = Word$i$(Word$subber$(_a$pred$10, $2703, Bool$true));
                                    var $2705 = $2707;
                                };
                                return $2705;
                            });
                            var $2697 = $2704;
                            break;
                        case 'Word.e':
                            var $2708 = (_a$pred$8 => {
                                var $2709 = Word$e;
                                return $2709;
                            });
                            var $2697 = $2708;
                            break;
                    };
                    var $2697 = $2697($2695);
                    return $2697;
                });
                var $2694 = $2696;
                break;
            case 'Word.i':
                var $2710 = self.pred;
                var $2711 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2713 = self.pred;
                            var $2714 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2716 = Word$o$(Word$subber$(_a$pred$10, $2713, Bool$false));
                                    var $2715 = $2716;
                                } else {
                                    var $2717 = Word$i$(Word$subber$(_a$pred$10, $2713, Bool$false));
                                    var $2715 = $2717;
                                };
                                return $2715;
                            });
                            var $2712 = $2714;
                            break;
                        case 'Word.i':
                            var $2718 = self.pred;
                            var $2719 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2721 = Word$i$(Word$subber$(_a$pred$10, $2718, Bool$true));
                                    var $2720 = $2721;
                                } else {
                                    var $2722 = Word$o$(Word$subber$(_a$pred$10, $2718, Bool$false));
                                    var $2720 = $2722;
                                };
                                return $2720;
                            });
                            var $2712 = $2719;
                            break;
                        case 'Word.e':
                            var $2723 = (_a$pred$8 => {
                                var $2724 = Word$e;
                                return $2724;
                            });
                            var $2712 = $2723;
                            break;
                    };
                    var $2712 = $2712($2710);
                    return $2712;
                });
                var $2694 = $2711;
                break;
            case 'Word.e':
                var $2725 = (_b$5 => {
                    var $2726 = Word$e;
                    return $2726;
                });
                var $2694 = $2725;
                break;
        };
        var $2694 = $2694(_b$3);
        return $2694;
    };
    const Word$subber = x0 => x1 => x2 => Word$subber$(x0, x1, x2);

    function Word$sub$(_a$2, _b$3) {
        var $2727 = Word$subber$(_a$2, _b$3, Bool$false);
        return $2727;
    };
    const Word$sub = x0 => x1 => Word$sub$(x0, x1);
    const U16$sub = a0 => a1 => ((a0 - a1) & 0xFFFF);

    function Word$adder$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $2729 = self.pred;
                var $2730 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2732 = self.pred;
                            var $2733 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2735 = Word$i$(Word$adder$(_a$pred$10, $2732, Bool$false));
                                    var $2734 = $2735;
                                } else {
                                    var $2736 = Word$o$(Word$adder$(_a$pred$10, $2732, Bool$false));
                                    var $2734 = $2736;
                                };
                                return $2734;
                            });
                            var $2731 = $2733;
                            break;
                        case 'Word.i':
                            var $2737 = self.pred;
                            var $2738 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2740 = Word$o$(Word$adder$(_a$pred$10, $2737, Bool$true));
                                    var $2739 = $2740;
                                } else {
                                    var $2741 = Word$i$(Word$adder$(_a$pred$10, $2737, Bool$false));
                                    var $2739 = $2741;
                                };
                                return $2739;
                            });
                            var $2731 = $2738;
                            break;
                        case 'Word.e':
                            var $2742 = (_a$pred$8 => {
                                var $2743 = Word$e;
                                return $2743;
                            });
                            var $2731 = $2742;
                            break;
                    };
                    var $2731 = $2731($2729);
                    return $2731;
                });
                var $2728 = $2730;
                break;
            case 'Word.i':
                var $2744 = self.pred;
                var $2745 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2747 = self.pred;
                            var $2748 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2750 = Word$o$(Word$adder$(_a$pred$10, $2747, Bool$true));
                                    var $2749 = $2750;
                                } else {
                                    var $2751 = Word$i$(Word$adder$(_a$pred$10, $2747, Bool$false));
                                    var $2749 = $2751;
                                };
                                return $2749;
                            });
                            var $2746 = $2748;
                            break;
                        case 'Word.i':
                            var $2752 = self.pred;
                            var $2753 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2755 = Word$i$(Word$adder$(_a$pred$10, $2752, Bool$true));
                                    var $2754 = $2755;
                                } else {
                                    var $2756 = Word$o$(Word$adder$(_a$pred$10, $2752, Bool$true));
                                    var $2754 = $2756;
                                };
                                return $2754;
                            });
                            var $2746 = $2753;
                            break;
                        case 'Word.e':
                            var $2757 = (_a$pred$8 => {
                                var $2758 = Word$e;
                                return $2758;
                            });
                            var $2746 = $2757;
                            break;
                    };
                    var $2746 = $2746($2744);
                    return $2746;
                });
                var $2728 = $2745;
                break;
            case 'Word.e':
                var $2759 = (_b$5 => {
                    var $2760 = Word$e;
                    return $2760;
                });
                var $2728 = $2759;
                break;
        };
        var $2728 = $2728(_b$3);
        return $2728;
    };
    const Word$adder = x0 => x1 => x2 => Word$adder$(x0, x1, x2);

    function Word$add$(_a$2, _b$3) {
        var $2761 = Word$adder$(_a$2, _b$3, Bool$false);
        return $2761;
    };
    const Word$add = x0 => x1 => Word$add$(x0, x1);
    const U16$add = a0 => a1 => ((a0 + a1) & 0xFFFF);

    function Pair$fst$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $2763 = self.fst;
                var $2764 = $2763;
                var $2762 = $2764;
                break;
        };
        return $2762;
    };
    const Pair$fst = x0 => Pair$fst$(x0);
    const Nat$div = a0 => a1 => (a0 / a1);
    const Bits$i = a0 => (a0 + '1');

    function Kindelia$serialize$fixlen$(_size$1, _value$2) {
        var self = _size$1;
        if (self === 0n) {
            var $2766 = Bits$e;
            var $2765 = $2766;
        } else {
            var $2767 = (self - 1n);
            var self = ((_value$2 % 2n) === 0n);
            if (self) {
                var $2769 = (Kindelia$serialize$fixlen$($2767, (_value$2 / 2n)) + '0');
                var $2768 = $2769;
            } else {
                var $2770 = (Kindelia$serialize$fixlen$($2767, (_value$2 / 2n)) + '1');
                var $2768 = $2770;
            };
            var $2765 = $2768;
        };
        return $2765;
    };
    const Kindelia$serialize$fixlen = x0 => x1 => Kindelia$serialize$fixlen$(x0, x1);

    function Word$fold$(_nil$3, _w0$4, _w1$5, _word$6) {
        var self = _word$6;
        switch (self._) {
            case 'Word.o':
                var $2772 = self.pred;
                var $2773 = _w0$4(Word$fold$(_nil$3, _w0$4, _w1$5, $2772));
                var $2771 = $2773;
                break;
            case 'Word.i':
                var $2774 = self.pred;
                var $2775 = _w1$5(Word$fold$(_nil$3, _w0$4, _w1$5, $2774));
                var $2771 = $2775;
                break;
            case 'Word.e':
                var $2776 = _nil$3;
                var $2771 = $2776;
                break;
        };
        return $2771;
    };
    const Word$fold = x0 => x1 => x2 => x3 => Word$fold$(x0, x1, x2, x3);

    function Word$to_nat$(_word$2) {
        var $2777 = Word$fold$(0n, a1 => (2n * a1), (_x$4 => {
            var $2778 = Nat$succ$((2n * _x$4));
            return $2778;
        }), _word$2);
        return $2777;
    };
    const Word$to_nat = x0 => Word$to_nat$(x0);
    const U16$to_nat = a0 => (BigInt(a0));
    const Bits$concat = a0 => a1 => (a1 + a0);

    function Kindelia$serialize$name$(_name$1) {
        var self = _name$1;
        if (self.length === 0) {
            var $2780 = (Bits$e + '0');
            var $2779 = $2780;
        } else {
            var $2781 = self.charCodeAt(0);
            var $2782 = self.slice(1);
            var self = U16$btw$(48, $2781, 57);
            if (self) {
                var $2784 = (($2781 - 48) & 0xFFFF);
                var _numb$4 = $2784;
            } else {
                var self = U16$btw$(65, $2781, 90);
                if (self) {
                    var $2786 = (((($2781 - 65) & 0xFFFF) + 10) & 0xFFFF);
                    var $2785 = $2786;
                } else {
                    var self = U16$btw$(97, $2781, 122);
                    if (self) {
                        var $2788 = (((($2781 - 97) & 0xFFFF) + 36) & 0xFFFF);
                        var $2787 = $2788;
                    } else {
                        var self = U16$btw$(95, $2781, 95);
                        if (self) {
                            var $2790 = 62;
                            var $2789 = $2790;
                        } else {
                            var $2791 = 63;
                            var $2789 = $2791;
                        };
                        var $2787 = $2789;
                    };
                    var $2785 = $2787;
                };
                var _numb$4 = $2785;
            };
            var _head$5 = Kindelia$serialize$fixlen$(6n, (BigInt(_numb$4)));
            var _tail$6 = Kindelia$serialize$name$($2782);
            var $2783 = ((_tail$6 + _head$5) + '1');
            var $2779 = $2783;
        };
        return $2779;
    };
    const Kindelia$serialize$name = x0 => Kindelia$serialize$name$(x0);

    function Kindelia$serialize$list$(_item$2, _list$3) {
        var self = _list$3;
        switch (self._) {
            case 'List.cons':
                var $2793 = self.head;
                var $2794 = self.tail;
                var $2795 = ((Kindelia$serialize$list$(_item$2, $2794) + _item$2($2793)) + '1');
                var $2792 = $2795;
                break;
            case 'List.nil':
                var $2796 = (Bits$e + '0');
                var $2792 = $2796;
                break;
        };
        return $2792;
    };
    const Kindelia$serialize$list = x0 => x1 => Kindelia$serialize$list$(x0, x1);

    function Kindelia$serialize$type$(_world$1, _typ$2) {
        var self = _typ$2;
        switch (self._) {
            case 'Kindelia.Type.data':
                var $2798 = self.name;
                var $2799 = ((Kindelia$serialize$name$($2798) + '0') + '1');
                var $2797 = $2799;
                break;
            case 'Kindelia.Type.effe':
                var $2800 = self.rety;
                var $2801 = ((Kindelia$serialize$type$(_world$1, $2800) + '1') + '0');
                var $2797 = $2801;
                break;
            case 'Kindelia.Type.word':
                var $2802 = ((Bits$e + '0') + '0');
                var $2797 = $2802;
                break;
        };
        return $2797;
    };
    const Kindelia$serialize$type = x0 => x1 => Kindelia$serialize$type$(x0, x1);

    function Kindelia$serialize$constructor$(_world$1, _ctor$2) {
        var self = _ctor$2;
        switch (self._) {
            case 'Kindelia.Constructor.new':
                var $2804 = self.name;
                var $2805 = self.fnam;
                var $2806 = self.ftyp;
                var _name$6 = Kindelia$serialize$name$($2804);
                var _nams$7 = Kindelia$serialize$list$(Kindelia$serialize$name, $2805);
                var _typs$8 = Kindelia$serialize$list$(Kindelia$serialize$type(_world$1), $2806);
                var $2807 = ((_typs$8 + _nams$7) + _name$6);
                var $2803 = $2807;
                break;
        };
        return $2803;
    };
    const Kindelia$serialize$constructor = x0 => x1 => Kindelia$serialize$constructor$(x0, x1);

    function Kindelia$serialize$data$(_world$1, _data$2) {
        var self = _data$2;
        switch (self._) {
            case 'Kindelia.Data.new':
                var $2809 = self.name;
                var $2810 = self.constructors;
                var _name$5 = Kindelia$serialize$name$($2809);
                var _ctrs$6 = Kindelia$serialize$list$(Kindelia$serialize$constructor(_world$1), $2810);
                var $2811 = (_ctrs$6 + _name$5);
                var $2808 = $2811;
                break;
        };
        return $2808;
    };
    const Kindelia$serialize$data = x0 => x1 => Kindelia$serialize$data$(x0, x1);

    function List$find_index$go$(_xs$2, _f$3, _i$4) {
        var List$find_index$go$ = (_xs$2, _f$3, _i$4) => ({
            ctr: 'TCO',
            arg: [_xs$2, _f$3, _i$4]
        });
        var List$find_index$go = _xs$2 => _f$3 => _i$4 => List$find_index$go$(_xs$2, _f$3, _i$4);
        var arg = [_xs$2, _f$3, _i$4];
        while (true) {
            let [_xs$2, _f$3, _i$4] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $2812 = self.head;
                        var $2813 = self.tail;
                        var self = _f$3($2812);
                        if (self) {
                            var $2815 = Maybe$some$(_i$4);
                            var $2814 = $2815;
                        } else {
                            var $2816 = List$find_index$go$($2813, _f$3, Nat$succ$(_i$4));
                            var $2814 = $2816;
                        };
                        return $2814;
                    case 'List.nil':
                        var $2817 = Maybe$none;
                        return $2817;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$find_index$go = x0 => x1 => x2 => List$find_index$go$(x0, x1, x2);

    function List$find_index$(_xs$2, _f$3) {
        var $2818 = List$find_index$go$(_xs$2, _f$3, Nat$zero);
        return $2818;
    };
    const List$find_index = x0 => x1 => List$find_index$(x0, x1);
    const String$eql = a0 => a1 => (a0 === a1);

    function Kindelia$serialize$varlen$go$(_value$1) {
        var self = _value$1;
        if (self === 0n) {
            var $2820 = Bits$e;
            var $2819 = $2820;
        } else {
            var $2821 = (self - 1n);
            var self = (_value$1 === 1n);
            if (self) {
                var $2823 = (Bits$e + '0');
                var $2822 = $2823;
            } else {
                var self = ((_value$1 % 2n) === 0n);
                if (self) {
                    var $2825 = ((Kindelia$serialize$varlen$go$((_value$1 / 2n)) + '0') + '1');
                    var $2824 = $2825;
                } else {
                    var $2826 = ((Kindelia$serialize$varlen$go$((_value$1 / 2n)) + '1') + '1');
                    var $2824 = $2826;
                };
                var $2822 = $2824;
            };
            var $2819 = $2822;
        };
        return $2819;
    };
    const Kindelia$serialize$varlen$go = x0 => Kindelia$serialize$varlen$go$(x0);

    function Kindelia$serialize$varlen$(_value$1) {
        var $2827 = Kindelia$serialize$varlen$go$((_value$1 + 1n));
        return $2827;
    };
    const Kindelia$serialize$varlen = x0 => Kindelia$serialize$varlen$(x0);

    function Kindelia$serialize$name$local$(_world$1, _vars$2, _name$3) {
        var self = List$find_index$(_vars$2, a1 => (_name$3 === a1));
        switch (self._) {
            case 'Maybe.some':
                var $2829 = self.value;
                var $2830 = Kindelia$serialize$varlen$($2829);
                var $2828 = $2830;
                break;
            case 'Maybe.none':
                var $2831 = Bits$e;
                var $2828 = $2831;
                break;
        };
        return $2828;
    };
    const Kindelia$serialize$name$local = x0 => x1 => x2 => Kindelia$serialize$name$local$(x0, x1, x2);

    function List$map$(_f$3, _as$4) {
        var self = _as$4;
        switch (self._) {
            case 'List.cons':
                var $2833 = self.head;
                var $2834 = self.tail;
                var $2835 = List$cons$(_f$3($2833), List$map$(_f$3, $2834));
                var $2832 = $2835;
                break;
            case 'List.nil':
                var $2836 = List$nil;
                var $2832 = $2836;
                break;
        };
        return $2832;
    };
    const List$map = x0 => x1 => List$map$(x0, x1);

    function List$concat$(_as$2, _bs$3) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $2838 = self.head;
                var $2839 = self.tail;
                var $2840 = List$cons$($2838, List$concat$($2839, _bs$3));
                var $2837 = $2840;
                break;
            case 'List.nil':
                var $2841 = _bs$3;
                var $2837 = $2841;
                break;
        };
        return $2837;
    };
    const List$concat = x0 => x1 => List$concat$(x0, x1);

    function Kindelia$serialize$cases$(_world$1, _vars$2, _name$3, _ctors$4, _cases$5) {
        var self = _ctors$4;
        switch (self._) {
            case 'List.cons':
                var $2843 = self.head;
                var $2844 = self.tail;
                var self = _cases$5;
                switch (self._) {
                    case 'List.cons':
                        var $2846 = self.head;
                        var $2847 = self.tail;
                        var _flds$10 = List$map$(a1 => ((_name$3 + ".") + a1), (() => {
                            var self = $2843;
                            switch (self._) {
                                case 'Kindelia.Constructor.new':
                                    var $2849 = self.fnam;
                                    var $2850 = $2849;
                                    return $2850;
                            };
                        })());
                        var _head$11 = Kindelia$serialize$term$(_world$1, List$concat$(List$reverse$(_flds$10), _vars$2), $2846);
                        var _tail$12 = Kindelia$serialize$cases$(_world$1, _vars$2, _name$3, $2844, $2847);
                        var $2848 = (_tail$12 + _head$11);
                        var $2845 = $2848;
                        break;
                    case 'List.nil':
                        var $2851 = Bits$e;
                        var $2845 = $2851;
                        break;
                };
                var $2842 = $2845;
                break;
            case 'List.nil':
                var self = _cases$5;
                switch (self._) {
                    case 'List.nil':
                    case 'List.cons':
                        var $2853 = Bits$e;
                        var $2852 = $2853;
                        break;
                };
                var $2842 = $2852;
                break;
        };
        return $2842;
    };
    const Kindelia$serialize$cases = x0 => x1 => x2 => x3 => x4 => Kindelia$serialize$cases$(x0, x1, x2, x3, x4);

    function Kindelia$get_constructors$(_world$1, _name$2) {
        var self = Kindelia$get_data$(_world$1, _name$2);
        switch (self._) {
            case 'Maybe.some':
                var $2855 = self.value;
                var $2856 = Maybe$some$((() => {
                    var self = $2855;
                    switch (self._) {
                        case 'Kindelia.Data.new':
                            var $2857 = self.constructors;
                            var $2858 = $2857;
                            return $2858;
                    };
                })());
                var $2854 = $2856;
                break;
            case 'Maybe.none':
                var $2859 = Maybe$none;
                var $2854 = $2859;
                break;
        };
        return $2854;
    };
    const Kindelia$get_constructors = x0 => x1 => Kindelia$get_constructors$(x0, x1);
    const U64$to_nat = a0 => (a0);

    function Kindelia$serialize$term$(_world$1, _vars$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kindelia.Term.var':
                var $2861 = self.name;
                var $2862 = (Kindelia$serialize$name$local$(_world$1, _vars$2, $2861) + '0');
                var $2860 = $2862;
                break;
            case 'Kindelia.Term.call':
                var $2863 = self.bond;
                var $2864 = self.args;
                var _bond$6 = Kindelia$serialize$name$($2863);
                var _args$7 = Kindelia$serialize$list$(Kindelia$serialize$term(_world$1)(_vars$2), $2864);
                var $2865 = (((((_args$7 + _bond$6) + '0') + '0') + '1') + '1');
                var $2860 = $2865;
                break;
            case 'Kindelia.Term.let':
                var $2866 = self.name;
                var $2867 = self.type;
                var $2868 = self.expr;
                var $2869 = self.body;
                var _name$8 = Kindelia$serialize$name$($2866);
                var _type$9 = Kindelia$serialize$type$(_world$1, $2867);
                var _expr$10 = Kindelia$serialize$term$(_world$1, _vars$2, $2868);
                var _body$11 = Kindelia$serialize$term$(_world$1, List$cons$($2866, _vars$2), $2869);
                var $2870 = (((((((_body$11 + _expr$10) + _type$9) + _name$8) + '0') + '0') + '0') + '1');
                var $2860 = $2870;
                break;
            case 'Kindelia.Term.create':
                var $2871 = self.ctor;
                var $2872 = self.vals;
                var _ctor$6 = Kindelia$serialize$name$($2871);
                var _vals$7 = Kindelia$serialize$list$(Kindelia$serialize$term(_world$1)(_vars$2), $2872);
                var $2873 = (((((_vals$7 + _ctor$6) + '0') + '1') + '0') + '1');
                var $2860 = $2873;
                break;
            case 'Kindelia.Term.match':
                var $2874 = self.name;
                var $2875 = self.data;
                var $2876 = self.cses;
                var _name$7 = Kindelia$serialize$name$local$(_world$1, _vars$2, $2874);
                var _data$8 = Kindelia$serialize$name$($2875);
                var _cses$9 = Kindelia$serialize$cases$(_world$1, _vars$2, $2874, Maybe$default$(Kindelia$get_constructors$(_world$1, $2875), List$nil), $2876);
                var $2877 = ((((((_cses$9 + _data$8) + _name$7) + '0') + '1') + '1') + '1');
                var $2860 = $2877;
                break;
            case 'Kindelia.Term.word':
                var $2878 = self.numb;
                var _numb$5 = Kindelia$serialize$fixlen$(64n, ($2878));
                var $2879 = ((((_numb$5 + '1') + '0') + '0') + '1');
                var $2860 = $2879;
                break;
            case 'Kindelia.Term.compare':
                var $2880 = self.val0;
                var $2881 = self.val1;
                var $2882 = self.iflt;
                var $2883 = self.ifeq;
                var $2884 = self.ifgt;
                var _val0$9 = Kindelia$serialize$term$(_world$1, _vars$2, $2880);
                var _val1$10 = Kindelia$serialize$term$(_world$1, _vars$2, $2881);
                var _iflt$11 = Kindelia$serialize$term$(_world$1, _vars$2, $2882);
                var _ifeq$12 = Kindelia$serialize$term$(_world$1, _vars$2, $2883);
                var _ifgt$13 = Kindelia$serialize$term$(_world$1, _vars$2, $2884);
                var $2885 = ((((((((_ifgt$13 + _ifeq$12) + _iflt$11) + _val1$10) + _val0$9) + '1') + '0') + '1') + '1');
                var $2860 = $2885;
                break;
            case 'Kindelia.Term.operate':
                var $2886 = self.oper;
                var $2887 = self.val0;
                var $2888 = self.val1;
                var _oper$7 = Kindelia$serialize$fixlen$(3n, (() => {
                    var self = $2886;
                    switch (self._) {
                        case 'Kindelia.Operation.add':
                            var $2890 = 0n;
                            return $2890;
                        case 'Kindelia.Operation.sub':
                            var $2891 = 1n;
                            return $2891;
                        case 'Kindelia.Operation.mul':
                            var $2892 = 2n;
                            return $2892;
                        case 'Kindelia.Operation.div':
                            var $2893 = 3n;
                            return $2893;
                        case 'Kindelia.Operation.mod':
                            var $2894 = 4n;
                            return $2894;
                        case 'Kindelia.Operation.or':
                            var $2895 = 5n;
                            return $2895;
                        case 'Kindelia.Operation.and':
                            var $2896 = 6n;
                            return $2896;
                        case 'Kindelia.Operation.xor':
                            var $2897 = 7n;
                            return $2897;
                    };
                })());
                var _val0$8 = Kindelia$serialize$term$(_world$1, _vars$2, $2887);
                var _val1$9 = Kindelia$serialize$term$(_world$1, _vars$2, $2888);
                var $2889 = ((((((_val1$9 + _val0$8) + _oper$7) + '1') + '1') + '0') + '1');
                var $2860 = $2889;
                break;
            case 'Kindelia.Term.set':
                var $2898 = self.file;
                var $2899 = self.expr;
                var $2900 = self.body;
                var _slit$7 = Kindelia$serialize$name$($2898);
                var _expr$8 = Kindelia$serialize$term$(_world$1, _vars$2, $2899);
                var _body$9 = Kindelia$serialize$term$(_world$1, _vars$2, $2900);
                var $2901 = ((((((((_body$9 + _expr$8) + _slit$7) + '0') + '0') + '1') + '1') + '1') + '1');
                var $2860 = $2901;
                break;
            case 'Kindelia.Term.get':
                var $2902 = self.name;
                var $2903 = self.file;
                var $2904 = self.body;
                var _slit$7 = Kindelia$serialize$name$($2903);
                var _name$8 = Kindelia$serialize$name$($2902);
                var _body$9 = Kindelia$serialize$term$(_world$1, List$cons$($2902, _vars$2), $2904);
                var $2905 = ((((((((_body$9 + _name$8) + _slit$7) + '0') + '1') + '1') + '1') + '1') + '1');
                var $2860 = $2905;
                break;
            case 'Kindelia.Term.bind':
                var $2906 = self.name;
                var $2907 = self.type;
                var $2908 = self.expr;
                var $2909 = self.body;
                var _name$8 = Kindelia$serialize$name$($2906);
                var _type$9 = Kindelia$serialize$type$(_world$1, $2907);
                var _expr$10 = Kindelia$serialize$term$(_world$1, _vars$2, $2908);
                var _body$11 = Kindelia$serialize$term$(_world$1, List$cons$($2906, _vars$2), $2909);
                var $2910 = (((((((((_body$11 + _expr$10) + _type$9) + _name$8) + '1') + '0') + '1') + '1') + '1') + '1');
                var $2860 = $2910;
                break;
            case 'Kindelia.Term.return':
                var $2911 = self.expr;
                var _expr$5 = Kindelia$serialize$term$(_world$1, _vars$2, $2911);
                var $2912 = ((((((_expr$5 + '1') + '1') + '1') + '1') + '1') + '1');
                var $2860 = $2912;
                break;
        };
        return $2860;
    };
    const Kindelia$serialize$term = x0 => x1 => x2 => Kindelia$serialize$term$(x0, x1, x2);

    function Kindelia$serialize$bond$(_world$1, _bond$2) {
        var self = _bond$2;
        switch (self._) {
            case 'Kindelia.Bond.new':
                var $2914 = self.name;
                var $2915 = self.inam;
                var $2916 = self.ityp;
                var $2917 = self.otyp;
                var $2918 = self.main;
                var _name$8 = Kindelia$serialize$name$($2914);
                var _inam$9 = Kindelia$serialize$list$(Kindelia$serialize$name, $2915);
                var _ityp$10 = Kindelia$serialize$list$(Kindelia$serialize$type(_world$1), $2916);
                var _otyp$11 = Kindelia$serialize$type$(_world$1, $2917);
                var _main$12 = Kindelia$serialize$term$(_world$1, List$reverse$($2915), $2918);
                var $2919 = ((((_main$12 + _otyp$11) + _ityp$10) + _inam$9) + _name$8);
                var $2913 = $2919;
                break;
        };
        return $2913;
    };
    const Kindelia$serialize$bond = x0 => x1 => Kindelia$serialize$bond$(x0, x1);

    function Kindelia$serialize$file$(_world$1, _file$2) {
        var self = _file$2;
        switch (self._) {
            case 'Kindelia.File.new':
                var $2921 = self.name;
                var $2922 = self.ownr;
                var $2923 = self.type;
                var $2924 = self.expr;
                var _name$7 = Kindelia$serialize$name$($2921);
                var _ownr$8 = Kindelia$serialize$list$(Kindelia$serialize$name, $2922);
                var _type$9 = Kindelia$serialize$type$(_world$1, $2923);
                var _expr$10 = Kindelia$serialize$term$(_world$1, List$nil, $2924);
                var $2925 = (((_expr$10 + _type$9) + _ownr$8) + _name$7);
                var $2920 = $2925;
                break;
        };
        return $2920;
    };
    const Kindelia$serialize$file = x0 => x1 => Kindelia$serialize$file$(x0, x1);

    function Kindelia$serialize$eval$(_world$1, _eval$2) {
        var self = _eval$2;
        switch (self._) {
            case 'Kindelia.Eval.new':
                var $2927 = self.term;
                var $2928 = self.type;
                var _term$5 = Kindelia$serialize$term$(_world$1, List$nil, $2927);
                var _type$6 = Kindelia$serialize$type$(_world$1, $2928);
                var $2929 = (_type$6 + _term$5);
                var $2926 = $2929;
                break;
        };
        return $2926;
    };
    const Kindelia$serialize$eval = x0 => x1 => Kindelia$serialize$eval$(x0, x1);

    function Kindelia$serialize$transaction$(_world$1, _transaction$2) {
        var self = _transaction$2;
        switch (self._) {
            case 'Kindelia.Transaction.new_data':
                var $2931 = self.data;
                var _data$4 = Kindelia$serialize$data$(_world$1, $2931);
                var $2932 = ((_data$4 + '0') + '0');
                var $2930 = $2932;
                break;
            case 'Kindelia.Transaction.new_bond':
                var $2933 = self.bond;
                var _bond$4 = Kindelia$serialize$bond$(_world$1, $2933);
                var $2934 = ((_bond$4 + '0') + '1');
                var $2930 = $2934;
                break;
            case 'Kindelia.Transaction.new_file':
                var $2935 = self.file;
                var _file$4 = Kindelia$serialize$file$(_world$1, $2935);
                var $2936 = ((_file$4 + '1') + '0');
                var $2930 = $2936;
                break;
            case 'Kindelia.Transaction.new_eval':
                var $2937 = self.eval;
                var _term$4 = Kindelia$serialize$eval$(_world$1, $2937);
                var $2938 = ((_term$4 + '1') + '1');
                var $2930 = $2938;
                break;
        };
        return $2930;
    };
    const Kindelia$serialize$transaction = x0 => x1 => Kindelia$serialize$transaction$(x0, x1);

    function Kindelia$serialize$block$(_world$1, _block$2) {
        var self = _block$2;
        switch (self._) {
            case 'List.cons':
                var $2940 = self.head;
                var $2941 = self.tail;
                var _head$5 = Kindelia$serialize$transaction$(_world$1, $2940);
                var _tail$6 = Kindelia$serialize$block$(_world$1, $2941);
                var $2942 = (_tail$6 + _head$5);
                var $2939 = $2942;
                break;
            case 'List.nil':
                var $2943 = Bits$e;
                var $2939 = $2943;
                break;
        };
        return $2939;
    };
    const Kindelia$serialize$block = x0 => x1 => Kindelia$serialize$block$(x0, x1);

    function Bits$is_empty$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'e':
                var $2945 = Bool$true;
                var $2944 = $2945;
                break;
            case 'o':
            case 'i':
                var $2946 = Bool$false;
                var $2944 = $2946;
                break;
        };
        return $2944;
    };
    const Bits$is_empty = x0 => Bits$is_empty$(x0);

    function Kindelia$deserialize$fixlen$(_size$1, _bits$2) {
        var self = _size$1;
        if (self === 0n) {
            var $2948 = Pair$new$(_bits$2, 0n);
            var $2947 = $2948;
        } else {
            var $2949 = (self - 1n);
            var self = _bits$2;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $2951 = self.slice(0, -1);
                    var self = Kindelia$deserialize$fixlen$($2949, $2951);
                    switch (self._) {
                        case 'Pair.new':
                            var $2953 = self.fst;
                            var $2954 = self.snd;
                            var $2955 = Pair$new$($2953, ($2954 * 2n));
                            var $2952 = $2955;
                            break;
                    };
                    var $2950 = $2952;
                    break;
                case 'i':
                    var $2956 = self.slice(0, -1);
                    var self = Kindelia$deserialize$fixlen$($2949, $2956);
                    switch (self._) {
                        case 'Pair.new':
                            var $2958 = self.fst;
                            var $2959 = self.snd;
                            var $2960 = Pair$new$($2958, (($2959 * 2n) + 1n));
                            var $2957 = $2960;
                            break;
                    };
                    var $2950 = $2957;
                    break;
                case 'e':
                    var $2961 = Pair$new$(Bits$e, 0n);
                    var $2950 = $2961;
                    break;
            };
            var $2947 = $2950;
        };
        return $2947;
    };
    const Kindelia$deserialize$fixlen = x0 => x1 => Kindelia$deserialize$fixlen$(x0, x1);
    const U16$from_nat = a0 => (Number(a0) & 0xFFFF);

    function Kindelia$deserialize$name$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2963 = self.slice(0, -1);
                var $2964 = Pair$new$($2963, "");
                var $2962 = $2964;
                break;
            case 'i':
                var $2965 = self.slice(0, -1);
                var self = Kindelia$deserialize$fixlen$(6n, $2965);
                switch (self._) {
                    case 'Pair.new':
                        var $2967 = self.fst;
                        var $2968 = self.snd;
                        var self = Kindelia$deserialize$name$($2967);
                        switch (self._) {
                            case 'Pair.new':
                                var $2970 = self.fst;
                                var $2971 = self.snd;
                                var _numb$7 = (Number($2968) & 0xFFFF);
                                var self = U16$btw$(0, _numb$7, 9);
                                if (self) {
                                    var $2973 = ((_numb$7 + 48) & 0xFFFF);
                                    var _head$8 = $2973;
                                } else {
                                    var self = U16$btw$(10, _numb$7, 35);
                                    if (self) {
                                        var $2975 = ((((_numb$7 - 10) & 0xFFFF) + 65) & 0xFFFF);
                                        var $2974 = $2975;
                                    } else {
                                        var self = U16$btw$(36, _numb$7, 61);
                                        if (self) {
                                            var $2977 = ((((_numb$7 - 36) & 0xFFFF) + 97) & 0xFFFF);
                                            var $2976 = $2977;
                                        } else {
                                            var self = U16$btw$(62, _numb$7, 62);
                                            if (self) {
                                                var $2979 = 95;
                                                var $2978 = $2979;
                                            } else {
                                                var $2980 = 46;
                                                var $2978 = $2980;
                                            };
                                            var $2976 = $2978;
                                        };
                                        var $2974 = $2976;
                                    };
                                    var _head$8 = $2974;
                                };
                                var $2972 = Pair$new$($2970, String$cons$(_head$8, $2971));
                                var $2969 = $2972;
                                break;
                        };
                        var $2966 = $2969;
                        break;
                };
                var $2962 = $2966;
                break;
            case 'e':
                var $2981 = Pair$new$(Bits$e, "");
                var $2962 = $2981;
                break;
        };
        return $2962;
    };
    const Kindelia$deserialize$name = x0 => Kindelia$deserialize$name$(x0);

    function Kindelia$deserialize$list$(_item$2, _bits$3) {
        var self = _bits$3;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2983 = self.slice(0, -1);
                var $2984 = Pair$new$($2983, List$nil);
                var $2982 = $2984;
                break;
            case 'i':
                var $2985 = self.slice(0, -1);
                var self = _item$2($2985);
                switch (self._) {
                    case 'Pair.new':
                        var $2987 = self.fst;
                        var $2988 = self.snd;
                        var self = Kindelia$deserialize$list$(_item$2, $2987);
                        switch (self._) {
                            case 'Pair.new':
                                var $2990 = self.fst;
                                var $2991 = self.snd;
                                var $2992 = Pair$new$($2990, List$cons$($2988, $2991));
                                var $2989 = $2992;
                                break;
                        };
                        var $2986 = $2989;
                        break;
                };
                var $2982 = $2986;
                break;
            case 'e':
                var $2993 = Pair$new$(Bits$e, List$nil);
                var $2982 = $2993;
                break;
        };
        return $2982;
    };
    const Kindelia$deserialize$list = x0 => x1 => Kindelia$deserialize$list$(x0, x1);

    function Kindelia$deserialize$type$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$fixlen$(2n, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $2995 = self.fst;
                var $2996 = self.snd;
                var self = ($2996 === 0n);
                if (self) {
                    var $2998 = Pair$new$($2995, Kindelia$Type$word);
                    var $2997 = $2998;
                } else {
                    var self = ($2996 === 1n);
                    if (self) {
                        var self = Kindelia$deserialize$name$($2995);
                        switch (self._) {
                            case 'Pair.new':
                                var $3001 = self.fst;
                                var $3002 = self.snd;
                                var $3003 = Pair$new$($3001, Kindelia$Type$data$($3002));
                                var $3000 = $3003;
                                break;
                        };
                        var $2999 = $3000;
                    } else {
                        var self = ($2996 === 2n);
                        if (self) {
                            var self = Kindelia$deserialize$type$(_world$1, $2995);
                            switch (self._) {
                                case 'Pair.new':
                                    var $3006 = self.fst;
                                    var $3007 = self.snd;
                                    var $3008 = Pair$new$($3006, Kindelia$Type$effe$($3007));
                                    var $3005 = $3008;
                                    break;
                            };
                            var $3004 = $3005;
                        } else {
                            var $3009 = Pair$new$($2995, Kindelia$Type$word);
                            var $3004 = $3009;
                        };
                        var $2999 = $3004;
                    };
                    var $2997 = $2999;
                };
                var $2994 = $2997;
                break;
        };
        return $2994;
    };
    const Kindelia$deserialize$type = x0 => x1 => Kindelia$deserialize$type$(x0, x1);

    function Kindelia$deserialize$constructor$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3011 = self.fst;
                var $3012 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$name, $3011);
                switch (self._) {
                    case 'Pair.new':
                        var $3014 = self.fst;
                        var $3015 = self.snd;
                        var self = Kindelia$deserialize$list$(Kindelia$deserialize$type(_world$1), $3014);
                        switch (self._) {
                            case 'Pair.new':
                                var $3017 = self.fst;
                                var $3018 = self.snd;
                                var $3019 = Pair$new$($3017, Kindelia$Constructor$new$($3012, $3015, $3018));
                                var $3016 = $3019;
                                break;
                        };
                        var $3013 = $3016;
                        break;
                };
                var $3010 = $3013;
                break;
        };
        return $3010;
    };
    const Kindelia$deserialize$constructor = x0 => x1 => Kindelia$deserialize$constructor$(x0, x1);

    function Kindelia$deserialize$data$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3021 = self.fst;
                var $3022 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$constructor(_world$1), $3021);
                switch (self._) {
                    case 'Pair.new':
                        var $3024 = self.fst;
                        var $3025 = self.snd;
                        var $3026 = Pair$new$($3024, Kindelia$Data$new$($3022, $3025));
                        var $3023 = $3026;
                        break;
                };
                var $3020 = $3023;
                break;
        };
        return $3020;
    };
    const Kindelia$deserialize$data = x0 => x1 => Kindelia$deserialize$data$(x0, x1);
    const U64$from_nat = a0 => (a0 & 0xFFFFFFFFFFFFFFFFn);

    function Kindelia$deserialize$varlen$go$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3028 = self.slice(0, -1);
                var $3029 = Pair$new$($3028, 1n);
                var $3027 = $3029;
                break;
            case 'i':
                var $3030 = self.slice(0, -1);
                var self = $3030;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3032 = self.slice(0, -1);
                        var self = Kindelia$deserialize$varlen$go$($3032);
                        switch (self._) {
                            case 'Pair.new':
                                var $3034 = self.fst;
                                var $3035 = self.snd;
                                var $3036 = Pair$new$($3034, ($3035 * 2n));
                                var $3033 = $3036;
                                break;
                        };
                        var $3031 = $3033;
                        break;
                    case 'i':
                        var $3037 = self.slice(0, -1);
                        var self = Kindelia$deserialize$varlen$go$($3037);
                        switch (self._) {
                            case 'Pair.new':
                                var $3039 = self.fst;
                                var $3040 = self.snd;
                                var $3041 = Pair$new$($3039, (($3040 * 2n) + 1n));
                                var $3038 = $3041;
                                break;
                        };
                        var $3031 = $3038;
                        break;
                    case 'e':
                        var $3042 = Pair$new$($3030, 0n);
                        var $3031 = $3042;
                        break;
                };
                var $3027 = $3031;
                break;
            case 'e':
                var $3043 = Pair$new$(Bits$e, 0n);
                var $3027 = $3043;
                break;
        };
        return $3027;
    };
    const Kindelia$deserialize$varlen$go = x0 => Kindelia$deserialize$varlen$go$(x0);
    const Nat$sub = a0 => a1 => (a0 - a1 <= 0n ? 0n : a0 - a1);

    function Kindelia$deserialize$varlen$(_bits$1) {
        var self = Kindelia$deserialize$varlen$go$(_bits$1);
        switch (self._) {
            case 'Pair.new':
                var $3045 = self.fst;
                var $3046 = self.snd;
                var $3047 = Pair$new$($3045, ($3046 - 1n <= 0n ? 0n : $3046 - 1n));
                var $3044 = $3047;
                break;
        };
        return $3044;
    };
    const Kindelia$deserialize$varlen = x0 => Kindelia$deserialize$varlen$(x0);

    function List$get$(_index$2, _list$3) {
        var List$get$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$get = _index$2 => _list$3 => List$get$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $3048 = self.head;
                        var $3049 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $3051 = Maybe$some$($3048);
                            var $3050 = $3051;
                        } else {
                            var $3052 = (self - 1n);
                            var $3053 = List$get$($3052, $3049);
                            var $3050 = $3053;
                        };
                        return $3050;
                    case 'List.nil':
                        var $3054 = Maybe$none;
                        return $3054;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$get = x0 => x1 => List$get$(x0, x1);

    function Kindelia$deserialize$name$local$(_world$1, _vars$2, _bits$3) {
        var self = Kindelia$deserialize$varlen$(_bits$3);
        switch (self._) {
            case 'Pair.new':
                var $3056 = self.fst;
                var $3057 = self.snd;
                var $3058 = Pair$new$($3056, Maybe$default$(List$get$($3057, _vars$2), ""));
                var $3055 = $3058;
                break;
        };
        return $3055;
    };
    const Kindelia$deserialize$name$local = x0 => x1 => x2 => Kindelia$deserialize$name$local$(x0, x1, x2);

    function Kindelia$deserialize$cases$(_world$1, _vars$2, _name$3, _ctors$4, _bits$5) {
        var self = _ctors$4;
        switch (self._) {
            case 'List.cons':
                var $3060 = self.head;
                var $3061 = self.tail;
                var _flds$8 = List$map$(a1 => ((_name$3 + ".") + a1), (() => {
                    var self = $3060;
                    switch (self._) {
                        case 'Kindelia.Constructor.new':
                            var $3063 = self.fnam;
                            var $3064 = $3063;
                            return $3064;
                    };
                })());
                var self = Kindelia$deserialize$term$(_world$1, List$concat$(List$reverse$(_flds$8), _vars$2), _bits$5);
                switch (self._) {
                    case 'Pair.new':
                        var $3065 = self.fst;
                        var $3066 = self.snd;
                        var self = Kindelia$deserialize$cases$(_world$1, _vars$2, _name$3, $3061, $3065);
                        switch (self._) {
                            case 'Pair.new':
                                var $3068 = self.fst;
                                var $3069 = self.snd;
                                var $3070 = Pair$new$($3068, List$cons$($3066, $3069));
                                var $3067 = $3070;
                                break;
                        };
                        var $3062 = $3067;
                        break;
                };
                var $3059 = $3062;
                break;
            case 'List.nil':
                var $3071 = Pair$new$(_bits$5, List$nil);
                var $3059 = $3071;
                break;
        };
        return $3059;
    };
    const Kindelia$deserialize$cases = x0 => x1 => x2 => x3 => x4 => Kindelia$deserialize$cases$(x0, x1, x2, x3, x4);

    function Kindelia$deserialize$term$(_world$1, _vars$2, _bits$3) {
        var self = _bits$3;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3073 = self.slice(0, -1);
                var self = Kindelia$deserialize$name$local$(_world$1, _vars$2, $3073);
                switch (self._) {
                    case 'Pair.new':
                        var $3075 = self.fst;
                        var $3076 = self.snd;
                        var $3077 = Pair$new$($3075, Kindelia$Term$var$($3076));
                        var $3074 = $3077;
                        break;
                };
                var $3072 = $3074;
                break;
            case 'i':
                var $3078 = self.slice(0, -1);
                var self = Kindelia$deserialize$fixlen$(3n, $3078);
                switch (self._) {
                    case 'Pair.new':
                        var $3080 = self.fst;
                        var $3081 = self.snd;
                        var self = ($3081 === 0n);
                        if (self) {
                            var self = Kindelia$deserialize$name$($3080);
                            switch (self._) {
                                case 'Pair.new':
                                    var $3084 = self.fst;
                                    var $3085 = self.snd;
                                    var self = Kindelia$deserialize$type$(_world$1, $3084);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3087 = self.fst;
                                            var $3088 = self.snd;
                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3087);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3090 = self.fst;
                                                    var $3091 = self.snd;
                                                    var self = Kindelia$deserialize$term$(_world$1, List$cons$($3085, _vars$2), $3090);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3093 = self.fst;
                                                            var $3094 = self.snd;
                                                            var $3095 = Pair$new$($3093, Kindelia$Term$let$($3085, $3088, $3091, $3094));
                                                            var $3092 = $3095;
                                                            break;
                                                    };
                                                    var $3089 = $3092;
                                                    break;
                                            };
                                            var $3086 = $3089;
                                            break;
                                    };
                                    var $3083 = $3086;
                                    break;
                            };
                            var $3082 = $3083;
                        } else {
                            var self = ($3081 === 1n);
                            if (self) {
                                var self = Kindelia$deserialize$name$($3080);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3098 = self.fst;
                                        var $3099 = self.snd;
                                        var self = Kindelia$deserialize$list$(Kindelia$deserialize$term(_world$1)(_vars$2), $3098);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3101 = self.fst;
                                                var $3102 = self.snd;
                                                var $3103 = Pair$new$($3101, Kindelia$Term$call$($3099, $3102));
                                                var $3100 = $3103;
                                                break;
                                        };
                                        var $3097 = $3100;
                                        break;
                                };
                                var $3096 = $3097;
                            } else {
                                var self = ($3081 === 2n);
                                if (self) {
                                    var self = Kindelia$deserialize$name$($3080);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3106 = self.fst;
                                            var $3107 = self.snd;
                                            var self = Kindelia$deserialize$list$(Kindelia$deserialize$term(_world$1)(_vars$2), $3106);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3109 = self.fst;
                                                    var $3110 = self.snd;
                                                    var $3111 = Pair$new$($3109, Kindelia$Term$create$($3107, $3110));
                                                    var $3108 = $3111;
                                                    break;
                                            };
                                            var $3105 = $3108;
                                            break;
                                    };
                                    var $3104 = $3105;
                                } else {
                                    var self = ($3081 === 3n);
                                    if (self) {
                                        var self = Kindelia$deserialize$name$local$(_world$1, _vars$2, $3080);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3114 = self.fst;
                                                var $3115 = self.snd;
                                                var self = Kindelia$deserialize$name$($3114);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3117 = self.fst;
                                                        var $3118 = self.snd;
                                                        var self = Kindelia$deserialize$cases$(_world$1, _vars$2, $3115, Maybe$default$(Kindelia$get_constructors$(_world$1, $3118), List$nil), $3117);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3120 = self.fst;
                                                                var $3121 = self.snd;
                                                                var $3122 = Pair$new$($3120, Kindelia$Term$match$($3115, $3118, $3121));
                                                                var $3119 = $3122;
                                                                break;
                                                        };
                                                        var $3116 = $3119;
                                                        break;
                                                };
                                                var $3113 = $3116;
                                                break;
                                        };
                                        var $3112 = $3113;
                                    } else {
                                        var self = ($3081 === 4n);
                                        if (self) {
                                            var self = Kindelia$deserialize$fixlen$(64n, $3080);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3125 = self.fst;
                                                    var $3126 = self.snd;
                                                    var $3127 = Pair$new$($3125, Kindelia$Term$word$(($3126 & 0xFFFFFFFFFFFFFFFFn)));
                                                    var $3124 = $3127;
                                                    break;
                                            };
                                            var $3123 = $3124;
                                        } else {
                                            var self = ($3081 === 5n);
                                            if (self) {
                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3080);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3130 = self.fst;
                                                        var $3131 = self.snd;
                                                        var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3130);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3133 = self.fst;
                                                                var $3134 = self.snd;
                                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3133);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $3136 = self.fst;
                                                                        var $3137 = self.snd;
                                                                        var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3136);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3139 = self.fst;
                                                                                var $3140 = self.snd;
                                                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3139);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3142 = self.fst;
                                                                                        var $3143 = self.snd;
                                                                                        var $3144 = Pair$new$($3142, Kindelia$Term$compare$($3131, $3134, $3137, $3140, $3143));
                                                                                        var $3141 = $3144;
                                                                                        break;
                                                                                };
                                                                                var $3138 = $3141;
                                                                                break;
                                                                        };
                                                                        var $3135 = $3138;
                                                                        break;
                                                                };
                                                                var $3132 = $3135;
                                                                break;
                                                        };
                                                        var $3129 = $3132;
                                                        break;
                                                };
                                                var $3128 = $3129;
                                            } else {
                                                var self = ($3081 === 6n);
                                                if (self) {
                                                    var self = Kindelia$deserialize$fixlen$(3n, $3080);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3147 = self.fst;
                                                            var $3148 = self.snd;
                                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3147);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $3150 = self.fst;
                                                                    var $3151 = self.snd;
                                                                    var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3150);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $3153 = self.fst;
                                                                            var $3154 = self.snd;
                                                                            var self = ($3148 === 0n);
                                                                            if (self) {
                                                                                var $3156 = Kindelia$Operation$add;
                                                                                var _oper$13 = $3156;
                                                                            } else {
                                                                                var self = ($3148 === 1n);
                                                                                if (self) {
                                                                                    var $3158 = Kindelia$Operation$sub;
                                                                                    var $3157 = $3158;
                                                                                } else {
                                                                                    var self = ($3148 === 2n);
                                                                                    if (self) {
                                                                                        var $3160 = Kindelia$Operation$mul;
                                                                                        var $3159 = $3160;
                                                                                    } else {
                                                                                        var self = ($3148 === 3n);
                                                                                        if (self) {
                                                                                            var $3162 = Kindelia$Operation$div;
                                                                                            var $3161 = $3162;
                                                                                        } else {
                                                                                            var self = ($3148 === 4n);
                                                                                            if (self) {
                                                                                                var $3164 = Kindelia$Operation$mod;
                                                                                                var $3163 = $3164;
                                                                                            } else {
                                                                                                var self = ($3148 === 5n);
                                                                                                if (self) {
                                                                                                    var $3166 = Kindelia$Operation$or;
                                                                                                    var $3165 = $3166;
                                                                                                } else {
                                                                                                    var self = ($3148 === 6n);
                                                                                                    if (self) {
                                                                                                        var $3168 = Kindelia$Operation$and;
                                                                                                        var $3167 = $3168;
                                                                                                    } else {
                                                                                                        var self = ($3148 === 7n);
                                                                                                        if (self) {
                                                                                                            var $3170 = Kindelia$Operation$xor;
                                                                                                            var $3169 = $3170;
                                                                                                        } else {
                                                                                                            var $3171 = Kindelia$Operation$add;
                                                                                                            var $3169 = $3171;
                                                                                                        };
                                                                                                        var $3167 = $3169;
                                                                                                    };
                                                                                                    var $3165 = $3167;
                                                                                                };
                                                                                                var $3163 = $3165;
                                                                                            };
                                                                                            var $3161 = $3163;
                                                                                        };
                                                                                        var $3159 = $3161;
                                                                                    };
                                                                                    var $3157 = $3159;
                                                                                };
                                                                                var _oper$13 = $3157;
                                                                            };
                                                                            var $3155 = Pair$new$($3153, Kindelia$Term$operate$(_oper$13, $3151, $3154));
                                                                            var $3152 = $3155;
                                                                            break;
                                                                    };
                                                                    var $3149 = $3152;
                                                                    break;
                                                            };
                                                            var $3146 = $3149;
                                                            break;
                                                    };
                                                    var $3145 = $3146;
                                                } else {
                                                    var self = ($3081 === 7n);
                                                    if (self) {
                                                        var self = Kindelia$deserialize$fixlen$(2n, $3080);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3174 = self.fst;
                                                                var $3175 = self.snd;
                                                                var self = ($3175 === 0n);
                                                                if (self) {
                                                                    var self = Kindelia$deserialize$name$($3174);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $3178 = self.fst;
                                                                            var $3179 = self.snd;
                                                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3178);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $3181 = self.fst;
                                                                                    var $3182 = self.snd;
                                                                                    var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3181);
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $3184 = self.fst;
                                                                                            var $3185 = self.snd;
                                                                                            var $3186 = Pair$new$($3184, Kindelia$Term$set$($3179, $3182, $3185));
                                                                                            var $3183 = $3186;
                                                                                            break;
                                                                                    };
                                                                                    var $3180 = $3183;
                                                                                    break;
                                                                            };
                                                                            var $3177 = $3180;
                                                                            break;
                                                                    };
                                                                    var $3176 = $3177;
                                                                } else {
                                                                    var self = ($3175 === 1n);
                                                                    if (self) {
                                                                        var self = Kindelia$deserialize$name$($3174);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3189 = self.fst;
                                                                                var $3190 = self.snd;
                                                                                var self = Kindelia$deserialize$name$($3189);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3192 = self.fst;
                                                                                        var $3193 = self.snd;
                                                                                        var self = Kindelia$deserialize$term$(_world$1, List$cons$($3193, _vars$2), $3192);
                                                                                        switch (self._) {
                                                                                            case 'Pair.new':
                                                                                                var $3195 = self.fst;
                                                                                                var $3196 = self.snd;
                                                                                                var $3197 = Pair$new$($3195, Kindelia$Term$get$($3193, $3190, $3196));
                                                                                                var $3194 = $3197;
                                                                                                break;
                                                                                        };
                                                                                        var $3191 = $3194;
                                                                                        break;
                                                                                };
                                                                                var $3188 = $3191;
                                                                                break;
                                                                        };
                                                                        var $3187 = $3188;
                                                                    } else {
                                                                        var self = ($3175 === 2n);
                                                                        if (self) {
                                                                            var self = Kindelia$deserialize$name$($3174);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $3200 = self.fst;
                                                                                    var $3201 = self.snd;
                                                                                    var self = Kindelia$deserialize$type$(_world$1, $3200);
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $3203 = self.fst;
                                                                                            var $3204 = self.snd;
                                                                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3203);
                                                                                            switch (self._) {
                                                                                                case 'Pair.new':
                                                                                                    var $3206 = self.fst;
                                                                                                    var $3207 = self.snd;
                                                                                                    var self = Kindelia$deserialize$term$(_world$1, List$cons$($3201, _vars$2), $3206);
                                                                                                    switch (self._) {
                                                                                                        case 'Pair.new':
                                                                                                            var $3209 = self.fst;
                                                                                                            var $3210 = self.snd;
                                                                                                            var $3211 = Pair$new$($3209, Kindelia$Term$bind$($3201, $3204, $3207, $3210));
                                                                                                            var $3208 = $3211;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3205 = $3208;
                                                                                                    break;
                                                                                            };
                                                                                            var $3202 = $3205;
                                                                                            break;
                                                                                    };
                                                                                    var $3199 = $3202;
                                                                                    break;
                                                                            };
                                                                            var $3198 = $3199;
                                                                        } else {
                                                                            var self = ($3175 === 3n);
                                                                            if (self) {
                                                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3174);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3214 = self.fst;
                                                                                        var $3215 = self.snd;
                                                                                        var $3216 = Pair$new$($3214, Kindelia$Term$return$($3215));
                                                                                        var $3213 = $3216;
                                                                                        break;
                                                                                };
                                                                                var $3212 = $3213;
                                                                            } else {
                                                                                var $3217 = Pair$new$($3174, Kindelia$Term$word$(0n));
                                                                                var $3212 = $3217;
                                                                            };
                                                                            var $3198 = $3212;
                                                                        };
                                                                        var $3187 = $3198;
                                                                    };
                                                                    var $3176 = $3187;
                                                                };
                                                                var $3173 = $3176;
                                                                break;
                                                        };
                                                        var $3172 = $3173;
                                                    } else {
                                                        var $3218 = Pair$new$($3080, Kindelia$Term$word$(0n));
                                                        var $3172 = $3218;
                                                    };
                                                    var $3145 = $3172;
                                                };
                                                var $3128 = $3145;
                                            };
                                            var $3123 = $3128;
                                        };
                                        var $3112 = $3123;
                                    };
                                    var $3104 = $3112;
                                };
                                var $3096 = $3104;
                            };
                            var $3082 = $3096;
                        };
                        var $3079 = $3082;
                        break;
                };
                var $3072 = $3079;
                break;
            case 'e':
                var $3219 = Pair$new$(_bits$3, Kindelia$Term$word$(0n));
                var $3072 = $3219;
                break;
        };
        return $3072;
    };
    const Kindelia$deserialize$term = x0 => x1 => x2 => Kindelia$deserialize$term$(x0, x1, x2);

    function Kindelia$deserialize$bond$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3221 = self.fst;
                var $3222 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$name, $3221);
                switch (self._) {
                    case 'Pair.new':
                        var $3224 = self.fst;
                        var $3225 = self.snd;
                        var self = Kindelia$deserialize$list$(Kindelia$deserialize$type(_world$1), $3224);
                        switch (self._) {
                            case 'Pair.new':
                                var $3227 = self.fst;
                                var $3228 = self.snd;
                                var self = Kindelia$deserialize$type$(_world$1, $3227);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3230 = self.fst;
                                        var $3231 = self.snd;
                                        var self = Kindelia$deserialize$term$(_world$1, List$reverse$($3225), $3230);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3233 = self.fst;
                                                var $3234 = self.snd;
                                                var $3235 = Pair$new$($3233, Kindelia$Bond$new$($3222, $3225, $3228, $3231, $3234));
                                                var $3232 = $3235;
                                                break;
                                        };
                                        var $3229 = $3232;
                                        break;
                                };
                                var $3226 = $3229;
                                break;
                        };
                        var $3223 = $3226;
                        break;
                };
                var $3220 = $3223;
                break;
        };
        return $3220;
    };
    const Kindelia$deserialize$bond = x0 => x1 => Kindelia$deserialize$bond$(x0, x1);

    function Kindelia$deserialize$file$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3237 = self.fst;
                var $3238 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$name, $3237);
                switch (self._) {
                    case 'Pair.new':
                        var $3240 = self.fst;
                        var $3241 = self.snd;
                        var self = Kindelia$deserialize$type$(_world$1, $3240);
                        switch (self._) {
                            case 'Pair.new':
                                var $3243 = self.fst;
                                var $3244 = self.snd;
                                var self = Kindelia$deserialize$term$(_world$1, List$nil, $3243);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3246 = self.fst;
                                        var $3247 = self.snd;
                                        var $3248 = Pair$new$($3246, Kindelia$File$new$($3238, $3241, $3244, $3247));
                                        var $3245 = $3248;
                                        break;
                                };
                                var $3242 = $3245;
                                break;
                        };
                        var $3239 = $3242;
                        break;
                };
                var $3236 = $3239;
                break;
        };
        return $3236;
    };
    const Kindelia$deserialize$file = x0 => x1 => Kindelia$deserialize$file$(x0, x1);

    function Kindelia$deserialize$eval$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$term$(_world$1, List$nil, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3250 = self.fst;
                var $3251 = self.snd;
                var self = Kindelia$deserialize$type$(_world$1, $3250);
                switch (self._) {
                    case 'Pair.new':
                        var $3253 = self.fst;
                        var $3254 = self.snd;
                        var $3255 = Pair$new$($3253, Kindelia$Eval$new$($3251, $3254));
                        var $3252 = $3255;
                        break;
                };
                var $3249 = $3252;
                break;
        };
        return $3249;
    };
    const Kindelia$deserialize$eval = x0 => x1 => Kindelia$deserialize$eval$(x0, x1);

    function Kindelia$deserialize$transaction$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$fixlen$(2n, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3257 = self.fst;
                var $3258 = self.snd;
                var self = ($3258 === 0n);
                if (self) {
                    var self = Kindelia$deserialize$data$(_world$1, $3257);
                    switch (self._) {
                        case 'Pair.new':
                            var $3261 = self.fst;
                            var $3262 = self.snd;
                            var $3263 = Pair$new$($3261, Kindelia$Transaction$new_data$($3262));
                            var $3260 = $3263;
                            break;
                    };
                    var $3259 = $3260;
                } else {
                    var self = ($3258 === 1n);
                    if (self) {
                        var self = Kindelia$deserialize$bond$(_world$1, $3257);
                        switch (self._) {
                            case 'Pair.new':
                                var $3266 = self.fst;
                                var $3267 = self.snd;
                                var $3268 = Pair$new$($3266, Kindelia$Transaction$new_bond$($3267));
                                var $3265 = $3268;
                                break;
                        };
                        var $3264 = $3265;
                    } else {
                        var self = ($3258 === 2n);
                        if (self) {
                            var self = Kindelia$deserialize$file$(_world$1, $3257);
                            switch (self._) {
                                case 'Pair.new':
                                    var $3271 = self.fst;
                                    var $3272 = self.snd;
                                    var $3273 = Pair$new$($3271, Kindelia$Transaction$new_file$($3272));
                                    var $3270 = $3273;
                                    break;
                            };
                            var $3269 = $3270;
                        } else {
                            var self = ($3258 === 3n);
                            if (self) {
                                var self = Kindelia$deserialize$eval$(_world$1, $3257);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3276 = self.fst;
                                        var $3277 = self.snd;
                                        var $3278 = Pair$new$($3276, Kindelia$Transaction$new_eval$($3277));
                                        var $3275 = $3278;
                                        break;
                                };
                                var $3274 = $3275;
                            } else {
                                var $3279 = Pair$new$($3257, Kindelia$Transaction$new_data$(Kindelia$Data$new$("", List$nil)));
                                var $3274 = $3279;
                            };
                            var $3269 = $3274;
                        };
                        var $3264 = $3269;
                    };
                    var $3259 = $3264;
                };
                var $3256 = $3259;
                break;
        };
        return $3256;
    };
    const Kindelia$deserialize$transaction = x0 => x1 => Kindelia$deserialize$transaction$(x0, x1);

    function Kindelia$deserialize$block$(_world$1, _bits$2) {
        var self = Bits$is_empty$(_bits$2);
        if (self) {
            var $3281 = Pair$new$(Bits$e, List$nil);
            var $3280 = $3281;
        } else {
            var self = Kindelia$deserialize$transaction$(_world$1, _bits$2);
            switch (self._) {
                case 'Pair.new':
                    var $3283 = self.fst;
                    var $3284 = self.snd;
                    var self = Kindelia$deserialize$block$(_world$1, $3283);
                    switch (self._) {
                        case 'Pair.new':
                            var $3286 = self.fst;
                            var $3287 = self.snd;
                            var $3288 = Pair$new$($3286, List$cons$($3284, $3287));
                            var $3285 = $3288;
                            break;
                    };
                    var $3282 = $3285;
                    break;
            };
            var $3280 = $3282;
        };
        return $3280;
    };
    const Kindelia$deserialize$block = x0 => x1 => Kindelia$deserialize$block$(x0, x1);

    function Bits$hex$encode$(_x$1) {
        var self = _x$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3290 = self.slice(0, -1);
                var self = $3290;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3292 = self.slice(0, -1);
                        var self = $3292;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3294 = self.slice(0, -1);
                                var self = $3294;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3296 = self.slice(0, -1);
                                        var $3297 = ("0" + Bits$hex$encode$($3296));
                                        var $3295 = $3297;
                                        break;
                                    case 'i':
                                        var $3298 = self.slice(0, -1);
                                        var $3299 = ("8" + Bits$hex$encode$($3298));
                                        var $3295 = $3299;
                                        break;
                                    case 'e':
                                        var $3300 = "0";
                                        var $3295 = $3300;
                                        break;
                                };
                                var $3293 = $3295;
                                break;
                            case 'i':
                                var $3301 = self.slice(0, -1);
                                var self = $3301;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3303 = self.slice(0, -1);
                                        var $3304 = ("4" + Bits$hex$encode$($3303));
                                        var $3302 = $3304;
                                        break;
                                    case 'i':
                                        var $3305 = self.slice(0, -1);
                                        var $3306 = ("c" + Bits$hex$encode$($3305));
                                        var $3302 = $3306;
                                        break;
                                    case 'e':
                                        var $3307 = "4";
                                        var $3302 = $3307;
                                        break;
                                };
                                var $3293 = $3302;
                                break;
                            case 'e':
                                var $3308 = "0";
                                var $3293 = $3308;
                                break;
                        };
                        var $3291 = $3293;
                        break;
                    case 'i':
                        var $3309 = self.slice(0, -1);
                        var self = $3309;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3311 = self.slice(0, -1);
                                var self = $3311;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3313 = self.slice(0, -1);
                                        var $3314 = ("2" + Bits$hex$encode$($3313));
                                        var $3312 = $3314;
                                        break;
                                    case 'i':
                                        var $3315 = self.slice(0, -1);
                                        var $3316 = ("a" + Bits$hex$encode$($3315));
                                        var $3312 = $3316;
                                        break;
                                    case 'e':
                                        var $3317 = "2";
                                        var $3312 = $3317;
                                        break;
                                };
                                var $3310 = $3312;
                                break;
                            case 'i':
                                var $3318 = self.slice(0, -1);
                                var self = $3318;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3320 = self.slice(0, -1);
                                        var $3321 = ("6" + Bits$hex$encode$($3320));
                                        var $3319 = $3321;
                                        break;
                                    case 'i':
                                        var $3322 = self.slice(0, -1);
                                        var $3323 = ("e" + Bits$hex$encode$($3322));
                                        var $3319 = $3323;
                                        break;
                                    case 'e':
                                        var $3324 = "6";
                                        var $3319 = $3324;
                                        break;
                                };
                                var $3310 = $3319;
                                break;
                            case 'e':
                                var $3325 = "2";
                                var $3310 = $3325;
                                break;
                        };
                        var $3291 = $3310;
                        break;
                    case 'e':
                        var $3326 = "0";
                        var $3291 = $3326;
                        break;
                };
                var $3289 = $3291;
                break;
            case 'i':
                var $3327 = self.slice(0, -1);
                var self = $3327;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3329 = self.slice(0, -1);
                        var self = $3329;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3331 = self.slice(0, -1);
                                var self = $3331;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3333 = self.slice(0, -1);
                                        var $3334 = ("1" + Bits$hex$encode$($3333));
                                        var $3332 = $3334;
                                        break;
                                    case 'i':
                                        var $3335 = self.slice(0, -1);
                                        var $3336 = ("9" + Bits$hex$encode$($3335));
                                        var $3332 = $3336;
                                        break;
                                    case 'e':
                                        var $3337 = "1";
                                        var $3332 = $3337;
                                        break;
                                };
                                var $3330 = $3332;
                                break;
                            case 'i':
                                var $3338 = self.slice(0, -1);
                                var self = $3338;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3340 = self.slice(0, -1);
                                        var $3341 = ("5" + Bits$hex$encode$($3340));
                                        var $3339 = $3341;
                                        break;
                                    case 'i':
                                        var $3342 = self.slice(0, -1);
                                        var $3343 = ("d" + Bits$hex$encode$($3342));
                                        var $3339 = $3343;
                                        break;
                                    case 'e':
                                        var $3344 = "5";
                                        var $3339 = $3344;
                                        break;
                                };
                                var $3330 = $3339;
                                break;
                            case 'e':
                                var $3345 = "1";
                                var $3330 = $3345;
                                break;
                        };
                        var $3328 = $3330;
                        break;
                    case 'i':
                        var $3346 = self.slice(0, -1);
                        var self = $3346;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3348 = self.slice(0, -1);
                                var self = $3348;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3350 = self.slice(0, -1);
                                        var $3351 = ("3" + Bits$hex$encode$($3350));
                                        var $3349 = $3351;
                                        break;
                                    case 'i':
                                        var $3352 = self.slice(0, -1);
                                        var $3353 = ("b" + Bits$hex$encode$($3352));
                                        var $3349 = $3353;
                                        break;
                                    case 'e':
                                        var $3354 = "3";
                                        var $3349 = $3354;
                                        break;
                                };
                                var $3347 = $3349;
                                break;
                            case 'i':
                                var $3355 = self.slice(0, -1);
                                var self = $3355;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3357 = self.slice(0, -1);
                                        var $3358 = ("7" + Bits$hex$encode$($3357));
                                        var $3356 = $3358;
                                        break;
                                    case 'i':
                                        var $3359 = self.slice(0, -1);
                                        var $3360 = ("f" + Bits$hex$encode$($3359));
                                        var $3356 = $3360;
                                        break;
                                    case 'e':
                                        var $3361 = "7";
                                        var $3356 = $3361;
                                        break;
                                };
                                var $3347 = $3356;
                                break;
                            case 'e':
                                var $3362 = "3";
                                var $3347 = $3362;
                                break;
                        };
                        var $3328 = $3347;
                        break;
                    case 'e':
                        var $3363 = "1";
                        var $3328 = $3363;
                        break;
                };
                var $3289 = $3328;
                break;
            case 'e':
                var $3364 = "";
                var $3289 = $3364;
                break;
        };
        return $3289;
    };
    const Bits$hex$encode = x0 => Bits$hex$encode$(x0);
    const Bits$eql = a0 => a1 => (a1 === a0);

    function Kindelia$World$new$(_entry$1) {
        var $3365 = ({
            _: 'Kindelia.World.new',
            'entry': _entry$1
        });
        return $3365;
    };
    const Kindelia$World$new = x0 => Kindelia$World$new$(x0);

    function BBT$(_K$1, _V$2) {
        var $3366 = null;
        return $3366;
    };
    const BBT = x0 => x1 => BBT$(x0, x1);

    function BBT$bin$(_size$3, _key$4, _val$5, _left$6, _right$7) {
        var $3367 = ({
            _: 'BBT.bin',
            'size': _size$3,
            'key': _key$4,
            'val': _val$5,
            'left': _left$6,
            'right': _right$7
        });
        return $3367;
    };
    const BBT$bin = x0 => x1 => x2 => x3 => x4 => BBT$bin$(x0, x1, x2, x3, x4);

    function U32$new$(_value$1) {
        var $3368 = word_to_u32(_value$1);
        return $3368;
    };
    const U32$new = x0 => U32$new$(x0);
    const Nat$to_u32 = a0 => (Number(a0) >>> 0);
    const BBT$tip = ({
        _: 'BBT.tip'
    });

    function BBT$singleton$(_key$3, _val$4) {
        var $3369 = BBT$bin$(1, _key$3, _val$4, BBT$tip, BBT$tip);
        return $3369;
    };
    const BBT$singleton = x0 => x1 => BBT$singleton$(x0, x1);

    function BBT$size$(_map$3) {
        var self = _map$3;
        switch (self._) {
            case 'BBT.bin':
                var $3371 = self.size;
                var $3372 = $3371;
                var $3370 = $3372;
                break;
            case 'BBT.tip':
                var $3373 = 0;
                var $3370 = $3373;
                break;
        };
        return $3370;
    };
    const BBT$size = x0 => BBT$size$(x0);
    const U32$add = a0 => a1 => ((a0 + a1) >>> 0);

    function Word$shift_left$one$go$(_word$2, _prev$3) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3375 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $3377 = Word$i$(Word$shift_left$one$go$($3375, Bool$false));
                    var $3376 = $3377;
                } else {
                    var $3378 = Word$o$(Word$shift_left$one$go$($3375, Bool$false));
                    var $3376 = $3378;
                };
                var $3374 = $3376;
                break;
            case 'Word.i':
                var $3379 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $3381 = Word$i$(Word$shift_left$one$go$($3379, Bool$true));
                    var $3380 = $3381;
                } else {
                    var $3382 = Word$o$(Word$shift_left$one$go$($3379, Bool$true));
                    var $3380 = $3382;
                };
                var $3374 = $3380;
                break;
            case 'Word.e':
                var $3383 = Word$e;
                var $3374 = $3383;
                break;
        };
        return $3374;
    };
    const Word$shift_left$one$go = x0 => x1 => Word$shift_left$one$go$(x0, x1);

    function Word$shift_left$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3385 = self.pred;
                var $3386 = Word$o$(Word$shift_left$one$go$($3385, Bool$false));
                var $3384 = $3386;
                break;
            case 'Word.i':
                var $3387 = self.pred;
                var $3388 = Word$o$(Word$shift_left$one$go$($3387, Bool$true));
                var $3384 = $3388;
                break;
            case 'Word.e':
                var $3389 = Word$e;
                var $3384 = $3389;
                break;
        };
        return $3384;
    };
    const Word$shift_left$one = x0 => Word$shift_left$one$(x0);

    function Word$shift_left$(_value$2, _n$3) {
        var Word$shift_left$ = (_value$2, _n$3) => ({
            ctr: 'TCO',
            arg: [_value$2, _n$3]
        });
        var Word$shift_left = _value$2 => _n$3 => Word$shift_left$(_value$2, _n$3);
        var arg = [_value$2, _n$3];
        while (true) {
            let [_value$2, _n$3] = arg;
            var R = (() => {
                var self = _n$3;
                if (self === 0n) {
                    var $3390 = _value$2;
                    return $3390;
                } else {
                    var $3391 = (self - 1n);
                    var $3392 = Word$shift_left$(Word$shift_left$one$(_value$2), $3391);
                    return $3392;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_left = x0 => x1 => Word$shift_left$(x0, x1);

    function Word$mul$go$(_a$3, _b$4, _acc$5) {
        var Word$mul$go$ = (_a$3, _b$4, _acc$5) => ({
            ctr: 'TCO',
            arg: [_a$3, _b$4, _acc$5]
        });
        var Word$mul$go = _a$3 => _b$4 => _acc$5 => Word$mul$go$(_a$3, _b$4, _acc$5);
        var arg = [_a$3, _b$4, _acc$5];
        while (true) {
            let [_a$3, _b$4, _acc$5] = arg;
            var R = (() => {
                var self = _a$3;
                switch (self._) {
                    case 'Word.o':
                        var $3393 = self.pred;
                        var $3394 = Word$mul$go$($3393, Word$shift_left$(_b$4, 1n), _acc$5);
                        return $3394;
                    case 'Word.i':
                        var $3395 = self.pred;
                        var $3396 = Word$mul$go$($3395, Word$shift_left$(_b$4, 1n), Word$add$(_b$4, _acc$5));
                        return $3396;
                    case 'Word.e':
                        var $3397 = _acc$5;
                        return $3397;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$mul$go = x0 => x1 => x2 => Word$mul$go$(x0, x1, x2);

    function Word$to_zero$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3399 = self.pred;
                var $3400 = Word$o$(Word$to_zero$($3399));
                var $3398 = $3400;
                break;
            case 'Word.i':
                var $3401 = self.pred;
                var $3402 = Word$o$(Word$to_zero$($3401));
                var $3398 = $3402;
                break;
            case 'Word.e':
                var $3403 = Word$e;
                var $3398 = $3403;
                break;
        };
        return $3398;
    };
    const Word$to_zero = x0 => Word$to_zero$(x0);

    function Word$mul$(_a$2, _b$3) {
        var $3404 = Word$mul$go$(_a$2, _b$3, Word$to_zero$(_a$2));
        return $3404;
    };
    const Word$mul = x0 => x1 => Word$mul$(x0, x1);
    const U32$mul = a0 => a1 => ((a0 * a1) >>> 0);
    const BBT$w = 3;
    const U32$ltn = a0 => a1 => (a0 < a1);
    const U32$from_nat = a0 => (Number(a0) >>> 0);

    function BBT$node$(_key$3, _val$4, _left$5, _right$6) {
        var _size_left$7 = BBT$size$(_left$5);
        var _size_right$8 = BBT$size$(_right$6);
        var _new_size$9 = ((1 + ((_size_left$7 + _size_right$8) >>> 0)) >>> 0);
        var $3405 = BBT$bin$(_new_size$9, _key$3, _val$4, _left$5, _right$6);
        return $3405;
    };
    const BBT$node = x0 => x1 => x2 => x3 => BBT$node$(x0, x1, x2, x3);

    function Cmp$as_gtn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $3407 = Bool$false;
                var $3406 = $3407;
                break;
            case 'Cmp.gtn':
                var $3408 = Bool$true;
                var $3406 = $3408;
                break;
        };
        return $3406;
    };
    const Cmp$as_gtn = x0 => Cmp$as_gtn$(x0);

    function Word$gtn$(_a$2, _b$3) {
        var $3409 = Cmp$as_gtn$(Word$cmp$(_a$2, _b$3));
        return $3409;
    };
    const Word$gtn = x0 => x1 => Word$gtn$(x0, x1);
    const U32$gtn = a0 => a1 => (a0 > a1);

    function BBT$balance$(_k$3, _v$4, _l$5, _r$6) {
        var _size_l$7 = BBT$size$(_l$5);
        var _size_r$8 = BBT$size$(_r$6);
        var _size_l_plus_size_r$9 = ((_size_l$7 + _size_r$8) >>> 0);
        var _w_x_size_l$10 = ((BBT$w * _size_l$7) >>> 0);
        var _w_x_size_r$11 = ((BBT$w * _size_r$8) >>> 0);
        var self = (_size_l_plus_size_r$9 < 2);
        if (self) {
            var $3411 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
            var $3410 = $3411;
        } else {
            var self = (_size_r$8 > _w_x_size_l$10);
            if (self) {
                var self = _r$6;
                switch (self._) {
                    case 'BBT.bin':
                        var $3414 = self.key;
                        var $3415 = self.val;
                        var $3416 = self.left;
                        var $3417 = self.right;
                        var _size_rl$17 = BBT$size$($3416);
                        var _size_rr$18 = BBT$size$($3417);
                        var self = (_size_rl$17 < _size_rr$18);
                        if (self) {
                            var _new_key$19 = $3414;
                            var _new_val$20 = $3415;
                            var _new_left$21 = BBT$node$(_k$3, _v$4, _l$5, $3416);
                            var _new_right$22 = $3417;
                            var $3419 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                            var $3418 = $3419;
                        } else {
                            var self = $3416;
                            switch (self._) {
                                case 'BBT.bin':
                                    var $3421 = self.key;
                                    var $3422 = self.val;
                                    var $3423 = self.left;
                                    var $3424 = self.right;
                                    var _new_key$24 = $3421;
                                    var _new_val$25 = $3422;
                                    var _new_left$26 = BBT$node$(_k$3, _v$4, _l$5, $3423);
                                    var _new_right$27 = BBT$node$($3414, $3415, $3424, $3417);
                                    var $3425 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                    var $3420 = $3425;
                                    break;
                                case 'BBT.tip':
                                    var $3426 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                    var $3420 = $3426;
                                    break;
                            };
                            var $3418 = $3420;
                        };
                        var $3413 = $3418;
                        break;
                    case 'BBT.tip':
                        var $3427 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                        var $3413 = $3427;
                        break;
                };
                var $3412 = $3413;
            } else {
                var self = (_size_l$7 > _w_x_size_r$11);
                if (self) {
                    var self = _l$5;
                    switch (self._) {
                        case 'BBT.bin':
                            var $3430 = self.key;
                            var $3431 = self.val;
                            var $3432 = self.left;
                            var $3433 = self.right;
                            var _size_ll$17 = BBT$size$($3432);
                            var _size_lr$18 = BBT$size$($3433);
                            var self = (_size_lr$18 < _size_ll$17);
                            if (self) {
                                var _new_key$19 = $3430;
                                var _new_val$20 = $3431;
                                var _new_left$21 = $3432;
                                var _new_right$22 = BBT$node$(_k$3, _v$4, $3433, _r$6);
                                var $3435 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                                var $3434 = $3435;
                            } else {
                                var self = $3433;
                                switch (self._) {
                                    case 'BBT.bin':
                                        var $3437 = self.key;
                                        var $3438 = self.val;
                                        var $3439 = self.left;
                                        var $3440 = self.right;
                                        var _new_key$24 = $3437;
                                        var _new_val$25 = $3438;
                                        var _new_left$26 = BBT$node$($3430, $3431, $3432, $3439);
                                        var _new_right$27 = BBT$node$(_k$3, _v$4, $3440, _r$6);
                                        var $3441 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                        var $3436 = $3441;
                                        break;
                                    case 'BBT.tip':
                                        var $3442 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                        var $3436 = $3442;
                                        break;
                                };
                                var $3434 = $3436;
                            };
                            var $3429 = $3434;
                            break;
                        case 'BBT.tip':
                            var $3443 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                            var $3429 = $3443;
                            break;
                    };
                    var $3428 = $3429;
                } else {
                    var $3444 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                    var $3428 = $3444;
                };
                var $3412 = $3428;
            };
            var $3410 = $3412;
        };
        return $3410;
    };
    const BBT$balance = x0 => x1 => x2 => x3 => BBT$balance$(x0, x1, x2, x3);

    function BBT$insert$(_cmp$3, _key$4, _val$5, _map$6) {
        var self = _map$6;
        switch (self._) {
            case 'BBT.bin':
                var $3446 = self.key;
                var $3447 = self.val;
                var $3448 = self.left;
                var $3449 = self.right;
                var self = _cmp$3(_key$4)($3446);
                switch (self._) {
                    case 'Cmp.ltn':
                        var _new_key$12 = $3446;
                        var _new_val$13 = $3447;
                        var _new_left$14 = BBT$insert$(_cmp$3, _key$4, _val$5, $3448);
                        var _new_right$15 = $3449;
                        var $3451 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $3450 = $3451;
                        break;
                    case 'Cmp.eql':
                        var $3452 = BBT$node$(_key$4, _val$5, $3448, $3449);
                        var $3450 = $3452;
                        break;
                    case 'Cmp.gtn':
                        var _new_key$12 = $3446;
                        var _new_val$13 = $3447;
                        var _new_left$14 = $3448;
                        var _new_right$15 = BBT$insert$(_cmp$3, _key$4, _val$5, $3449);
                        var $3453 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $3450 = $3453;
                        break;
                };
                var $3445 = $3450;
                break;
            case 'BBT.tip':
                var $3454 = BBT$singleton$(_key$4, _val$5);
                var $3445 = $3454;
                break;
        };
        return $3445;
    };
    const BBT$insert = x0 => x1 => x2 => x3 => BBT$insert$(x0, x1, x2, x3);

    function Map$set$(_key$2, _val$3, _map$4) {
        var $3455 = BBT$insert$(String$cmp, _key$2, _val$3, _map$4);
        return $3455;
    };
    const Map$set = x0 => x1 => x2 => Map$set$(x0, x1, x2);

    function Kindelia$Entry$data$(_value$1) {
        var $3456 = ({
            _: 'Kindelia.Entry.data',
            'value': _value$1
        });
        return $3456;
    };
    const Kindelia$Entry$data = x0 => Kindelia$Entry$data$(x0);

    function Kindelia$Entry$bond$(_value$1) {
        var $3457 = ({
            _: 'Kindelia.Entry.bond',
            'value': _value$1
        });
        return $3457;
    };
    const Kindelia$Entry$bond = x0 => Kindelia$Entry$bond$(x0);

    function Map$(_V$1) {
        var $3458 = null;
        return $3458;
    };
    const Map = x0 => Map$(x0);

    function Kindelia$extend$(_map$2, _keys$3, _vals$4) {
        var Kindelia$extend$ = (_map$2, _keys$3, _vals$4) => ({
            ctr: 'TCO',
            arg: [_map$2, _keys$3, _vals$4]
        });
        var Kindelia$extend = _map$2 => _keys$3 => _vals$4 => Kindelia$extend$(_map$2, _keys$3, _vals$4);
        var arg = [_map$2, _keys$3, _vals$4];
        while (true) {
            let [_map$2, _keys$3, _vals$4] = arg;
            var R = (() => {
                var self = _keys$3;
                switch (self._) {
                    case 'List.cons':
                        var $3459 = self.head;
                        var $3460 = self.tail;
                        var self = _vals$4;
                        switch (self._) {
                            case 'List.cons':
                                var $3462 = self.head;
                                var $3463 = self.tail;
                                var $3464 = Kindelia$extend$(Map$set$($3459, $3462, _map$2), $3460, $3463);
                                var $3461 = $3464;
                                break;
                            case 'List.nil':
                                var $3465 = _map$2;
                                var $3461 = $3465;
                                break;
                        };
                        return $3461;
                    case 'List.nil':
                        var self = _vals$4;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $3467 = _map$2;
                                var $3466 = $3467;
                                break;
                        };
                        return $3466;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kindelia$extend = x0 => x1 => x2 => Kindelia$extend$(x0, x1, x2);

    function Pair$snd$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $3469 = self.snd;
                var $3470 = $3469;
                var $3468 = $3470;
                break;
        };
        return $3468;
    };
    const Pair$snd = x0 => Pair$snd$(x0);

    function BBT$from_list$go$(_cmp$3, _acc$4, _xs$5) {
        var BBT$from_list$go$ = (_cmp$3, _acc$4, _xs$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _acc$4, _xs$5]
        });
        var BBT$from_list$go = _cmp$3 => _acc$4 => _xs$5 => BBT$from_list$go$(_cmp$3, _acc$4, _xs$5);
        var arg = [_cmp$3, _acc$4, _xs$5];
        while (true) {
            let [_cmp$3, _acc$4, _xs$5] = arg;
            var R = (() => {
                var self = _xs$5;
                switch (self._) {
                    case 'List.cons':
                        var $3471 = self.head;
                        var $3472 = self.tail;
                        var _key$8 = Pair$fst$($3471);
                        var _val$9 = Pair$snd$($3471);
                        var _new_acc$10 = BBT$insert$(_cmp$3, _key$8, _val$9, _acc$4);
                        var $3473 = BBT$from_list$go$(_cmp$3, _new_acc$10, $3472);
                        return $3473;
                    case 'List.nil':
                        var $3474 = _acc$4;
                        return $3474;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$from_list$go = x0 => x1 => x2 => BBT$from_list$go$(x0, x1, x2);

    function BBT$from_list$(_cmp$3, _xs$4) {
        var $3475 = BBT$from_list$go$(_cmp$3, BBT$tip, _xs$4);
        return $3475;
    };
    const BBT$from_list = x0 => x1 => BBT$from_list$(x0, x1);

    function Map$from_list$(_xs$2) {
        var $3476 = BBT$from_list$(String$cmp, _xs$2);
        return $3476;
    };
    const Map$from_list = x0 => Map$from_list$(x0);

    function Kindelia$equal$(_a$1, _b$2) {
        var Kindelia$equal$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var Kindelia$equal = _a$1 => _b$2 => Kindelia$equal$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                switch (self._) {
                    case 'Kindelia.Type.data':
                        var $3477 = self.name;
                        var self = _b$2;
                        switch (self._) {
                            case 'Kindelia.Type.data':
                                var $3479 = self.name;
                                var $3480 = ($3477 === $3479);
                                var $3478 = $3480;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.effe':
                                var $3481 = Bool$false;
                                var $3478 = $3481;
                                break;
                        };
                        return $3478;
                    case 'Kindelia.Type.effe':
                        var $3482 = self.rety;
                        var self = _b$2;
                        switch (self._) {
                            case 'Kindelia.Type.effe':
                                var $3484 = self.rety;
                                var $3485 = Kindelia$equal$($3482, $3484);
                                var $3483 = $3485;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3486 = Bool$false;
                                var $3483 = $3486;
                                break;
                        };
                        return $3483;
                    case 'Kindelia.Type.word':
                        var self = _b$2;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                                var $3488 = Bool$true;
                                var $3487 = $3488;
                                break;
                            case 'Kindelia.Type.data':
                            case 'Kindelia.Type.effe':
                                var $3489 = Bool$false;
                                var $3487 = $3489;
                                break;
                        };
                        return $3487;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kindelia$equal = x0 => x1 => Kindelia$equal$(x0, x1);

    function Kindelia$get_bond$(_world$1, _name$2) {
        var self = _world$1;
        switch (self._) {
            case 'Kindelia.World.new':
                var $3491 = self.entry;
                var $3492 = Maybe$monad$((_m$bind$4 => _m$pure$5 => {
                    var $3493 = _m$bind$4;
                    return $3493;
                }))(Map$get$(_name$2, $3491))((_entry$4 => {
                    var self = _entry$4;
                    switch (self._) {
                        case 'Kindelia.Entry.bond':
                            var $3495 = self.value;
                            var $3496 = Maybe$some$($3495);
                            var $3494 = $3496;
                            break;
                        case 'Kindelia.Entry.data':
                        case 'Kindelia.Entry.file':
                            var $3497 = Maybe$none;
                            var $3494 = $3497;
                            break;
                    };
                    return $3494;
                }));
                var $3490 = $3492;
                break;
        };
        return $3490;
    };
    const Kindelia$get_bond = x0 => x1 => Kindelia$get_bond$(x0, x1);

    function List$zip$(_as$3, _bs$4) {
        var self = _as$3;
        switch (self._) {
            case 'List.cons':
                var $3499 = self.head;
                var $3500 = self.tail;
                var self = _bs$4;
                switch (self._) {
                    case 'List.cons':
                        var $3502 = self.head;
                        var $3503 = self.tail;
                        var $3504 = List$cons$(Pair$new$($3499, $3502), List$zip$($3500, $3503));
                        var $3501 = $3504;
                        break;
                    case 'List.nil':
                        var $3505 = List$nil;
                        var $3501 = $3505;
                        break;
                };
                var $3498 = $3501;
                break;
            case 'List.nil':
                var $3506 = List$nil;
                var $3498 = $3506;
                break;
        };
        return $3498;
    };
    const List$zip = x0 => x1 => List$zip$(x0, x1);

    function List$all$(_cond$2, _list$3) {
        var List$all$ = (_cond$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _list$3]
        });
        var List$all = _cond$2 => _list$3 => List$all$(_cond$2, _list$3);
        var arg = [_cond$2, _list$3];
        while (true) {
            let [_cond$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $3507 = self.head;
                        var $3508 = self.tail;
                        var self = _cond$2($3507);
                        if (self) {
                            var $3510 = List$all$(_cond$2, $3508);
                            var $3509 = $3510;
                        } else {
                            var $3511 = Bool$false;
                            var $3509 = $3511;
                        };
                        return $3509;
                    case 'List.nil':
                        var $3512 = Bool$true;
                        return $3512;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$all = x0 => x1 => List$all$(x0, x1);

    function Maybe$mapped$(_m$2, _f$4) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $3514 = self.value;
                var $3515 = Maybe$some$(_f$4($3514));
                var $3513 = $3515;
                break;
            case 'Maybe.none':
                var $3516 = Maybe$none;
                var $3513 = $3516;
                break;
        };
        return $3513;
    };
    const Maybe$mapped = x0 => x1 => Maybe$mapped$(x0, x1);

    function List$ifind$go$(_xs$2, _f$3, _i$4) {
        var List$ifind$go$ = (_xs$2, _f$3, _i$4) => ({
            ctr: 'TCO',
            arg: [_xs$2, _f$3, _i$4]
        });
        var List$ifind$go = _xs$2 => _f$3 => _i$4 => List$ifind$go$(_xs$2, _f$3, _i$4);
        var arg = [_xs$2, _f$3, _i$4];
        while (true) {
            let [_xs$2, _f$3, _i$4] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $3517 = self.head;
                        var $3518 = self.tail;
                        var self = _f$3(_i$4)($3517);
                        if (self) {
                            var $3520 = Maybe$some$(Pair$new$(_i$4, $3517));
                            var $3519 = $3520;
                        } else {
                            var $3521 = List$ifind$go$($3518, _f$3, Nat$succ$(_i$4));
                            var $3519 = $3521;
                        };
                        return $3519;
                    case 'List.nil':
                        var $3522 = Maybe$none;
                        return $3522;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$ifind$go = x0 => x1 => x2 => List$ifind$go$(x0, x1, x2);

    function List$ifind$(_f$2, _xs$3) {
        var $3523 = List$ifind$go$(_xs$3, _f$2, Nat$zero);
        return $3523;
    };
    const List$ifind = x0 => x1 => List$ifind$(x0, x1);

    function Kindelia$get_constructor_value$(_data$1, _name$2) {
        var $3524 = Maybe$mapped$(List$ifind$((_i$3 => _ctr$4 => {
            var $3525 = ((() => {
                var self = _ctr$4;
                switch (self._) {
                    case 'Kindelia.Constructor.new':
                        var $3526 = self.name;
                        var $3527 = $3526;
                        return $3527;
                };
            })() === _name$2);
            return $3525;
        }), (() => {
            var self = _data$1;
            switch (self._) {
                case 'Kindelia.Data.new':
                    var $3528 = self.constructors;
                    var $3529 = $3528;
                    return $3529;
            };
        })()), (_x$3 => {
            var self = _x$3;
            switch (self._) {
                case 'Pair.new':
                    var $3531 = self.snd;
                    var $3532 = $3531;
                    var $3530 = $3532;
                    break;
            };
            return $3530;
        }));
        return $3524;
    };
    const Kindelia$get_constructor_value = x0 => x1 => Kindelia$get_constructor_value$(x0, x1);
    const List$length = a0 => (list_length(a0));

    function List$zip_with$(_f$4, _as$5, _bs$6) {
        var self = _as$5;
        switch (self._) {
            case 'List.cons':
                var $3534 = self.head;
                var $3535 = self.tail;
                var self = _bs$6;
                switch (self._) {
                    case 'List.cons':
                        var $3537 = self.head;
                        var $3538 = self.tail;
                        var $3539 = List$cons$(_f$4($3534)($3537), List$zip_with$(_f$4, $3535, $3538));
                        var $3536 = $3539;
                        break;
                    case 'List.nil':
                        var $3540 = List$nil;
                        var $3536 = $3540;
                        break;
                };
                var $3533 = $3536;
                break;
            case 'List.nil':
                var $3541 = List$nil;
                var $3533 = $3541;
                break;
        };
        return $3533;
    };
    const List$zip_with = x0 => x1 => x2 => List$zip_with$(x0, x1, x2);

    function List$zipped_with$(_as$3, _bs$4, _f$6) {
        var $3542 = List$zip_with$(_f$6, _as$3, _bs$4);
        return $3542;
    };
    const List$zipped_with = x0 => x1 => x2 => List$zipped_with$(x0, x1, x2);

    function List$and$(_list$1) {
        var $3543 = List$all$((_x$2 => {
            var $3544 = _x$2;
            return $3544;
        }), _list$1);
        return $3543;
    };
    const List$and = x0 => List$and$(x0);

    function Kindelia$get_file$(_world$1, _name$2) {
        var self = _world$1;
        switch (self._) {
            case 'Kindelia.World.new':
                var $3546 = self.entry;
                var $3547 = Maybe$monad$((_m$bind$4 => _m$pure$5 => {
                    var $3548 = _m$bind$4;
                    return $3548;
                }))(Map$get$(_name$2, $3546))((_entry$4 => {
                    var self = _entry$4;
                    switch (self._) {
                        case 'Kindelia.Entry.file':
                            var $3550 = self.value;
                            var $3551 = Maybe$some$($3550);
                            var $3549 = $3551;
                            break;
                        case 'Kindelia.Entry.data':
                        case 'Kindelia.Entry.bond':
                            var $3552 = Maybe$none;
                            var $3549 = $3552;
                            break;
                    };
                    return $3549;
                }));
                var $3545 = $3547;
                break;
        };
        return $3545;
    };
    const Kindelia$get_file = x0 => x1 => Kindelia$get_file$(x0, x1);

    function List$is_empty$(_list$2) {
        var self = _list$2;
        switch (self._) {
            case 'List.nil':
                var $3554 = Bool$true;
                var $3553 = $3554;
                break;
            case 'List.cons':
                var $3555 = Bool$false;
                var $3553 = $3555;
                break;
        };
        return $3553;
    };
    const List$is_empty = x0 => List$is_empty$(x0);

    function Maybe$if$(_cond$2, _x$3) {
        var self = _x$3;
        switch (self._) {
            case 'Maybe.some':
                var $3557 = self.value;
                var $3558 = _cond$2($3557);
                var $3556 = $3558;
                break;
            case 'Maybe.none':
                var $3559 = Bool$false;
                var $3556 = $3559;
                break;
        };
        return $3556;
    };
    const Maybe$if = x0 => x1 => Maybe$if$(x0, x1);

    function List$find$(_cond$2, _xs$3) {
        var List$find$ = (_cond$2, _xs$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _xs$3]
        });
        var List$find = _cond$2 => _xs$3 => List$find$(_cond$2, _xs$3);
        var arg = [_cond$2, _xs$3];
        while (true) {
            let [_cond$2, _xs$3] = arg;
            var R = (() => {
                var self = _xs$3;
                switch (self._) {
                    case 'List.cons':
                        var $3560 = self.head;
                        var $3561 = self.tail;
                        var self = _cond$2($3560);
                        if (self) {
                            var $3563 = Maybe$some$($3560);
                            var $3562 = $3563;
                        } else {
                            var $3564 = List$find$(_cond$2, $3561);
                            var $3562 = $3564;
                        };
                        return $3562;
                    case 'List.nil':
                        var $3565 = Maybe$none;
                        return $3565;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$find = x0 => x1 => List$find$(x0, x1);

    function List$in$(_cond$2, _list$3) {
        var self = List$find$(_cond$2, _list$3);
        switch (self._) {
            case 'Maybe.none':
                var $3567 = Bool$false;
                var $3566 = $3567;
                break;
            case 'Maybe.some':
                var $3568 = Bool$true;
                var $3566 = $3568;
                break;
        };
        return $3566;
    };
    const List$in = x0 => x1 => List$in$(x0, x1);
    const Bool$or = a0 => a1 => (a0 || a1);

    function Kindelia$check$(_context$1, _world$2, _term$3, _type$4, _caller$5) {
        var self = _context$1;
        switch (self._) {
            case 'BBT.tip':
                var self = _world$2;
                switch (self._) {
                    case 'Kindelia.World.new':
                        var self = _term$3;
                        switch (self._) {
                            case 'Kindelia.Term.var':
                                var $3572 = self.name;
                                var self = Map$get$($3572, _context$1);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3574 = self.value;
                                        var $3575 = Kindelia$equal$($3574, _type$4);
                                        var $3573 = $3575;
                                        break;
                                    case 'Maybe.none':
                                        var $3576 = Bool$false;
                                        var $3573 = $3576;
                                        break;
                                };
                                var $3571 = $3573;
                                break;
                            case 'Kindelia.Term.call':
                                var $3577 = self.bond;
                                var $3578 = self.args;
                                var self = Kindelia$get_bond$(_world$2, $3577);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3580 = self.value;
                                        var _bond$10 = $3580;
                                        var self = _bond$10;
                                        switch (self._) {
                                            case 'Kindelia.Bond.new':
                                                var $3582 = self.ityp;
                                                var $3583 = self.otyp;
                                                var _otyp$16 = Kindelia$equal$($3583, _type$4);
                                                var _args$17 = List$zip$($3578, $3582);
                                                var _args$18 = List$all$((_x$18 => {
                                                    var $3585 = Kindelia$check$(_context$1, _world$2, (() => {
                                                        var self = _x$18;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3586 = self.fst;
                                                                var $3587 = $3586;
                                                                return $3587;
                                                        };
                                                    })(), (() => {
                                                        var self = _x$18;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3588 = self.snd;
                                                                var $3589 = $3588;
                                                                return $3589;
                                                        };
                                                    })(), _caller$5);
                                                    return $3585;
                                                }), _args$17);
                                                var $3584 = (_otyp$16 && _args$18);
                                                var $3581 = $3584;
                                                break;
                                        };
                                        var $3579 = $3581;
                                        break;
                                    case 'Maybe.none':
                                        var $3590 = Bool$false;
                                        var $3579 = $3590;
                                        break;
                                };
                                var $3571 = $3579;
                                break;
                            case 'Kindelia.Term.let':
                                var $3591 = self.name;
                                var $3592 = self.type;
                                var $3593 = self.expr;
                                var $3594 = self.body;
                                var _expr$11 = Kindelia$check$(_context$1, _world$2, $3593, $3592, _caller$5);
                                var _ctx2$12 = Map$set$($3591, $3592, _context$1);
                                var _body$13 = Kindelia$check$(_ctx2$12, _world$2, $3594, _type$4, _caller$5);
                                var $3595 = (_expr$11 && _body$13);
                                var $3571 = $3595;
                                break;
                            case 'Kindelia.Term.create':
                                var $3596 = self.ctor;
                                var $3597 = self.vals;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.data':
                                        var $3599 = self.name;
                                        var self = Kindelia$get_data$(_world$2, $3599);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3601 = self.value;
                                                var _data$11 = $3601;
                                                var self = _data$11;
                                                switch (self._) {
                                                    case 'Kindelia.Data.new':
                                                        var self = Kindelia$get_constructor_value$(_data$11, $3596);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $3604 = self.value;
                                                                var _ctor$15 = $3604;
                                                                var self = _ctor$15;
                                                                switch (self._) {
                                                                    case 'Kindelia.Constructor.new':
                                                                        var $3606 = self.ftyp;
                                                                        var _size$19 = ((list_length($3597)) === (list_length($3606)));
                                                                        var _vals$20 = List$zip$($3597, $3606);
                                                                        var _vals$21 = List$all$((_x$21 => {
                                                                            var $3608 = Kindelia$check$(_context$1, _world$2, (() => {
                                                                                var self = _x$21;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3609 = self.fst;
                                                                                        var $3610 = $3609;
                                                                                        return $3610;
                                                                                };
                                                                            })(), (() => {
                                                                                var self = _x$21;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3611 = self.snd;
                                                                                        var $3612 = $3611;
                                                                                        return $3612;
                                                                                };
                                                                            })(), _caller$5);
                                                                            return $3608;
                                                                        }), _vals$20);
                                                                        var $3607 = (_size$19 && _vals$21);
                                                                        var $3605 = $3607;
                                                                        break;
                                                                };
                                                                var $3603 = $3605;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $3613 = Bool$false;
                                                                var $3603 = $3613;
                                                                break;
                                                        };
                                                        var $3602 = $3603;
                                                        break;
                                                };
                                                var $3600 = $3602;
                                                break;
                                            case 'Maybe.none':
                                                var $3614 = Bool$false;
                                                var $3600 = $3614;
                                                break;
                                        };
                                        var $3598 = $3600;
                                        break;
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.effe':
                                        var $3615 = Bool$false;
                                        var $3598 = $3615;
                                        break;
                                };
                                var $3571 = $3598;
                                break;
                            case 'Kindelia.Term.match':
                                var $3616 = self.name;
                                var $3617 = self.data;
                                var $3618 = self.cses;
                                var self = Kindelia$get_data$(_world$2, $3617);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3620 = self.value;
                                        var _data$11 = $3620;
                                        var self = _data$11;
                                        switch (self._) {
                                            case 'Kindelia.Data.new':
                                                var $3622 = self.constructors;
                                                var _size$14 = ((list_length($3618)) === (list_length($3622)));
                                                var _expr$15 = Kindelia$check$(_context$1, _world$2, Kindelia$Term$var$($3616), Kindelia$Type$data$($3617), _caller$5);
                                                var _cses$16 = List$zipped_with$($3618, $3622, (_case_body$16 => _case_ctor$17 => {
                                                    var _nams$18 = List$map$(a1 => (($3616 + ".") + a1), (() => {
                                                        var self = _case_ctor$17;
                                                        switch (self._) {
                                                            case 'Kindelia.Constructor.new':
                                                                var $3625 = self.fnam;
                                                                var $3626 = $3625;
                                                                return $3626;
                                                        };
                                                    })());
                                                    var self = _case_ctor$17;
                                                    switch (self._) {
                                                        case 'Kindelia.Constructor.new':
                                                            var $3627 = self.ftyp;
                                                            var $3628 = $3627;
                                                            var _typs$19 = $3628;
                                                            break;
                                                    };
                                                    var _ctx2$20 = Kindelia$extend$(_context$1, _nams$18, _typs$19);
                                                    var $3624 = Kindelia$check$(_ctx2$20, _world$2, _case_body$16, _type$4, _caller$5);
                                                    return $3624;
                                                }));
                                                var $3623 = (_size$14 && List$and$(_cses$16));
                                                var $3621 = $3623;
                                                break;
                                        };
                                        var $3619 = $3621;
                                        break;
                                    case 'Maybe.none':
                                        var $3629 = Bool$false;
                                        var $3619 = $3629;
                                        break;
                                };
                                var $3571 = $3619;
                                break;
                            case 'Kindelia.Term.compare':
                                var $3630 = self.val0;
                                var $3631 = self.val1;
                                var $3632 = self.iflt;
                                var $3633 = self.ifeq;
                                var $3634 = self.ifgt;
                                var _val0$12 = Kindelia$check$(_context$1, _world$2, $3630, Kindelia$Type$word, _caller$5);
                                var _val1$13 = Kindelia$check$(_context$1, _world$2, $3631, Kindelia$Type$word, _caller$5);
                                var _iflt$14 = Kindelia$check$(_context$1, _world$2, $3632, _type$4, _caller$5);
                                var _ifeq$15 = Kindelia$check$(_context$1, _world$2, $3633, _type$4, _caller$5);
                                var _ifgt$16 = Kindelia$check$(_context$1, _world$2, $3634, _type$4, _caller$5);
                                var $3635 = (_val0$12 && (_val1$13 && (_iflt$14 && (_ifeq$15 && _ifgt$16))));
                                var $3571 = $3635;
                                break;
                            case 'Kindelia.Term.operate':
                                var $3636 = self.val0;
                                var $3637 = self.val1;
                                var _val0$10 = Kindelia$check$(_context$1, _world$2, $3636, Kindelia$Type$word, _caller$5);
                                var _val1$11 = Kindelia$check$(_context$1, _world$2, $3637, Kindelia$Type$word, _caller$5);
                                var $3638 = (_val0$10 && _val1$11);
                                var $3571 = $3638;
                                break;
                            case 'Kindelia.Term.set':
                                var $3639 = self.file;
                                var $3640 = self.expr;
                                var $3641 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3643 = Bool$false;
                                        var $3642 = $3643;
                                        break;
                                    case 'Kindelia.Type.effe':
                                        var self = Kindelia$get_file$(_world$2, $3639);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3645 = self.value;
                                                var _file$12 = $3645;
                                                var self = _file$12;
                                                switch (self._) {
                                                    case 'Kindelia.File.new':
                                                        var $3647 = self.ownr;
                                                        var $3648 = self.type;
                                                        var _empty$17 = List$is_empty$($3647);
                                                        var _valid$18 = Maybe$if$((_x$18 => {
                                                            var $3650 = List$in$(a1 => (_x$18 === a1), $3647);
                                                            return $3650;
                                                        }), _caller$5);
                                                        var _ownr$19 = (_empty$17 || _valid$18);
                                                        var _expr$20 = Kindelia$check$(_context$1, _world$2, $3640, $3648, _caller$5);
                                                        var _body$21 = Kindelia$check$(_context$1, _world$2, $3641, _type$4, _caller$5);
                                                        var $3649 = (_ownr$19 && (_expr$20 && _body$21));
                                                        var $3646 = $3649;
                                                        break;
                                                };
                                                var $3644 = $3646;
                                                break;
                                            case 'Maybe.none':
                                                var $3651 = Bool$false;
                                                var $3644 = $3651;
                                                break;
                                        };
                                        var $3642 = $3644;
                                        break;
                                };
                                var $3571 = $3642;
                                break;
                            case 'Kindelia.Term.get':
                                var $3652 = self.name;
                                var $3653 = self.file;
                                var $3654 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3656 = Bool$false;
                                        var $3655 = $3656;
                                        break;
                                    case 'Kindelia.Type.effe':
                                        var self = Kindelia$get_file$(_world$2, $3653);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3658 = self.value;
                                                var _file$12 = $3658;
                                                var self = _file$12;
                                                switch (self._) {
                                                    case 'Kindelia.File.new':
                                                        var $3660 = self.type;
                                                        var _ctx2$17 = Kindelia$extend$(_context$1, List$cons$($3652, List$nil), List$cons$($3660, List$nil));
                                                        var _body$18 = Kindelia$check$(_ctx2$17, _world$2, $3654, _type$4, _caller$5);
                                                        var $3661 = _body$18;
                                                        var $3659 = $3661;
                                                        break;
                                                };
                                                var $3657 = $3659;
                                                break;
                                            case 'Maybe.none':
                                                var $3662 = Bool$false;
                                                var $3657 = $3662;
                                                break;
                                        };
                                        var $3655 = $3657;
                                        break;
                                };
                                var $3571 = $3655;
                                break;
                            case 'Kindelia.Term.bind':
                                var $3663 = self.name;
                                var $3664 = self.type;
                                var $3665 = self.expr;
                                var $3666 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3668 = Bool$false;
                                        var $3667 = $3668;
                                        break;
                                    case 'Kindelia.Type.effe':
                                        var _expr$12 = Kindelia$check$(_context$1, _world$2, $3665, Kindelia$Type$effe$($3664), _caller$5);
                                        var _ctx2$13 = Map$set$($3663, $3664, _context$1);
                                        var _body$14 = Kindelia$check$(_ctx2$13, _world$2, $3666, _type$4, _caller$5);
                                        var $3669 = (_expr$12 && _body$14);
                                        var $3667 = $3669;
                                        break;
                                };
                                var $3571 = $3667;
                                break;
                            case 'Kindelia.Term.return':
                                var $3670 = self.expr;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.effe':
                                        var $3672 = self.rety;
                                        var $3673 = Kindelia$check$(_context$1, _world$2, $3670, $3672, _caller$5);
                                        var $3671 = $3673;
                                        break;
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3674 = Bool$false;
                                        var $3671 = $3674;
                                        break;
                                };
                                var $3571 = $3671;
                                break;
                            case 'Kindelia.Term.word':
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                        var $3676 = Bool$true;
                                        var $3675 = $3676;
                                        break;
                                    case 'Kindelia.Type.data':
                                    case 'Kindelia.Type.effe':
                                        var $3677 = Bool$false;
                                        var $3675 = $3677;
                                        break;
                                };
                                var $3571 = $3675;
                                break;
                        };
                        var $3570 = $3571;
                        break;
                };
                var $3569 = $3570;
                break;
            case 'BBT.bin':
                var self = _world$2;
                switch (self._) {
                    case 'Kindelia.World.new':
                        var self = _term$3;
                        switch (self._) {
                            case 'Kindelia.Term.var':
                                var $3680 = self.name;
                                var self = Map$get$($3680, _context$1);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3682 = self.value;
                                        var $3683 = Kindelia$equal$($3682, _type$4);
                                        var $3681 = $3683;
                                        break;
                                    case 'Maybe.none':
                                        var $3684 = Bool$false;
                                        var $3681 = $3684;
                                        break;
                                };
                                var $3679 = $3681;
                                break;
                            case 'Kindelia.Term.call':
                                var $3685 = self.bond;
                                var $3686 = self.args;
                                var self = Kindelia$get_bond$(_world$2, $3685);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3688 = self.value;
                                        var _bond$15 = $3688;
                                        var self = _bond$15;
                                        switch (self._) {
                                            case 'Kindelia.Bond.new':
                                                var $3690 = self.ityp;
                                                var $3691 = self.otyp;
                                                var _otyp$21 = Kindelia$equal$($3691, _type$4);
                                                var _args$22 = List$zip$($3686, $3690);
                                                var _args$23 = List$all$((_x$23 => {
                                                    var $3693 = Kindelia$check$(_context$1, _world$2, (() => {
                                                        var self = _x$23;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3694 = self.fst;
                                                                var $3695 = $3694;
                                                                return $3695;
                                                        };
                                                    })(), (() => {
                                                        var self = _x$23;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3696 = self.snd;
                                                                var $3697 = $3696;
                                                                return $3697;
                                                        };
                                                    })(), _caller$5);
                                                    return $3693;
                                                }), _args$22);
                                                var $3692 = (_otyp$21 && _args$23);
                                                var $3689 = $3692;
                                                break;
                                        };
                                        var $3687 = $3689;
                                        break;
                                    case 'Maybe.none':
                                        var $3698 = Bool$false;
                                        var $3687 = $3698;
                                        break;
                                };
                                var $3679 = $3687;
                                break;
                            case 'Kindelia.Term.let':
                                var $3699 = self.name;
                                var $3700 = self.type;
                                var $3701 = self.expr;
                                var $3702 = self.body;
                                var _expr$16 = Kindelia$check$(_context$1, _world$2, $3701, $3700, _caller$5);
                                var _ctx2$17 = Map$set$($3699, $3700, _context$1);
                                var _body$18 = Kindelia$check$(_ctx2$17, _world$2, $3702, _type$4, _caller$5);
                                var $3703 = (_expr$16 && _body$18);
                                var $3679 = $3703;
                                break;
                            case 'Kindelia.Term.create':
                                var $3704 = self.ctor;
                                var $3705 = self.vals;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.data':
                                        var $3707 = self.name;
                                        var self = Kindelia$get_data$(_world$2, $3707);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3709 = self.value;
                                                var _data$16 = $3709;
                                                var self = _data$16;
                                                switch (self._) {
                                                    case 'Kindelia.Data.new':
                                                        var self = Kindelia$get_constructor_value$(_data$16, $3704);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $3712 = self.value;
                                                                var _ctor$20 = $3712;
                                                                var self = _ctor$20;
                                                                switch (self._) {
                                                                    case 'Kindelia.Constructor.new':
                                                                        var $3714 = self.ftyp;
                                                                        var _size$24 = ((list_length($3705)) === (list_length($3714)));
                                                                        var _vals$25 = List$zip$($3705, $3714);
                                                                        var _vals$26 = List$all$((_x$26 => {
                                                                            var $3716 = Kindelia$check$(_context$1, _world$2, (() => {
                                                                                var self = _x$26;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3717 = self.fst;
                                                                                        var $3718 = $3717;
                                                                                        return $3718;
                                                                                };
                                                                            })(), (() => {
                                                                                var self = _x$26;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3719 = self.snd;
                                                                                        var $3720 = $3719;
                                                                                        return $3720;
                                                                                };
                                                                            })(), _caller$5);
                                                                            return $3716;
                                                                        }), _vals$25);
                                                                        var $3715 = (_size$24 && _vals$26);
                                                                        var $3713 = $3715;
                                                                        break;
                                                                };
                                                                var $3711 = $3713;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $3721 = Bool$false;
                                                                var $3711 = $3721;
                                                                break;
                                                        };
                                                        var $3710 = $3711;
                                                        break;
                                                };
                                                var $3708 = $3710;
                                                break;
                                            case 'Maybe.none':
                                                var $3722 = Bool$false;
                                                var $3708 = $3722;
                                                break;
                                        };
                                        var $3706 = $3708;
                                        break;
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.effe':
                                        var $3723 = Bool$false;
                                        var $3706 = $3723;
                                        break;
                                };
                                var $3679 = $3706;
                                break;
                            case 'Kindelia.Term.match':
                                var $3724 = self.name;
                                var $3725 = self.data;
                                var $3726 = self.cses;
                                var self = Kindelia$get_data$(_world$2, $3725);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3728 = self.value;
                                        var _data$16 = $3728;
                                        var self = _data$16;
                                        switch (self._) {
                                            case 'Kindelia.Data.new':
                                                var $3730 = self.constructors;
                                                var _size$19 = ((list_length($3726)) === (list_length($3730)));
                                                var _expr$20 = Kindelia$check$(_context$1, _world$2, Kindelia$Term$var$($3724), Kindelia$Type$data$($3725), _caller$5);
                                                var _cses$21 = List$zipped_with$($3726, $3730, (_case_body$21 => _case_ctor$22 => {
                                                    var _nams$23 = List$map$(a1 => (($3724 + ".") + a1), (() => {
                                                        var self = _case_ctor$22;
                                                        switch (self._) {
                                                            case 'Kindelia.Constructor.new':
                                                                var $3733 = self.fnam;
                                                                var $3734 = $3733;
                                                                return $3734;
                                                        };
                                                    })());
                                                    var self = _case_ctor$22;
                                                    switch (self._) {
                                                        case 'Kindelia.Constructor.new':
                                                            var $3735 = self.ftyp;
                                                            var $3736 = $3735;
                                                            var _typs$24 = $3736;
                                                            break;
                                                    };
                                                    var _ctx2$25 = Kindelia$extend$(_context$1, _nams$23, _typs$24);
                                                    var $3732 = Kindelia$check$(_ctx2$25, _world$2, _case_body$21, _type$4, _caller$5);
                                                    return $3732;
                                                }));
                                                var $3731 = (_size$19 && List$and$(_cses$21));
                                                var $3729 = $3731;
                                                break;
                                        };
                                        var $3727 = $3729;
                                        break;
                                    case 'Maybe.none':
                                        var $3737 = Bool$false;
                                        var $3727 = $3737;
                                        break;
                                };
                                var $3679 = $3727;
                                break;
                            case 'Kindelia.Term.compare':
                                var $3738 = self.val0;
                                var $3739 = self.val1;
                                var $3740 = self.iflt;
                                var $3741 = self.ifeq;
                                var $3742 = self.ifgt;
                                var _val0$17 = Kindelia$check$(_context$1, _world$2, $3738, Kindelia$Type$word, _caller$5);
                                var _val1$18 = Kindelia$check$(_context$1, _world$2, $3739, Kindelia$Type$word, _caller$5);
                                var _iflt$19 = Kindelia$check$(_context$1, _world$2, $3740, _type$4, _caller$5);
                                var _ifeq$20 = Kindelia$check$(_context$1, _world$2, $3741, _type$4, _caller$5);
                                var _ifgt$21 = Kindelia$check$(_context$1, _world$2, $3742, _type$4, _caller$5);
                                var $3743 = (_val0$17 && (_val1$18 && (_iflt$19 && (_ifeq$20 && _ifgt$21))));
                                var $3679 = $3743;
                                break;
                            case 'Kindelia.Term.operate':
                                var $3744 = self.val0;
                                var $3745 = self.val1;
                                var _val0$15 = Kindelia$check$(_context$1, _world$2, $3744, Kindelia$Type$word, _caller$5);
                                var _val1$16 = Kindelia$check$(_context$1, _world$2, $3745, Kindelia$Type$word, _caller$5);
                                var $3746 = (_val0$15 && _val1$16);
                                var $3679 = $3746;
                                break;
                            case 'Kindelia.Term.set':
                                var $3747 = self.file;
                                var $3748 = self.expr;
                                var $3749 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3751 = Bool$false;
                                        var $3750 = $3751;
                                        break;
                                    case 'Kindelia.Type.effe':
                                        var self = Kindelia$get_file$(_world$2, $3747);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3753 = self.value;
                                                var _file$17 = $3753;
                                                var self = _file$17;
                                                switch (self._) {
                                                    case 'Kindelia.File.new':
                                                        var $3755 = self.ownr;
                                                        var $3756 = self.type;
                                                        var _empty$22 = List$is_empty$($3755);
                                                        var _valid$23 = Maybe$if$((_x$23 => {
                                                            var $3758 = List$in$(a1 => (_x$23 === a1), $3755);
                                                            return $3758;
                                                        }), _caller$5);
                                                        var _ownr$24 = (_empty$22 || _valid$23);
                                                        var _expr$25 = Kindelia$check$(_context$1, _world$2, $3748, $3756, _caller$5);
                                                        var _body$26 = Kindelia$check$(_context$1, _world$2, $3749, _type$4, _caller$5);
                                                        var $3757 = (_ownr$24 && (_expr$25 && _body$26));
                                                        var $3754 = $3757;
                                                        break;
                                                };
                                                var $3752 = $3754;
                                                break;
                                            case 'Maybe.none':
                                                var $3759 = Bool$false;
                                                var $3752 = $3759;
                                                break;
                                        };
                                        var $3750 = $3752;
                                        break;
                                };
                                var $3679 = $3750;
                                break;
                            case 'Kindelia.Term.get':
                                var $3760 = self.name;
                                var $3761 = self.file;
                                var $3762 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3764 = Bool$false;
                                        var $3763 = $3764;
                                        break;
                                    case 'Kindelia.Type.effe':
                                        var self = Kindelia$get_file$(_world$2, $3761);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3766 = self.value;
                                                var _file$17 = $3766;
                                                var self = _file$17;
                                                switch (self._) {
                                                    case 'Kindelia.File.new':
                                                        var $3768 = self.type;
                                                        var _ctx2$22 = Kindelia$extend$(_context$1, List$cons$($3760, List$nil), List$cons$($3768, List$nil));
                                                        var _body$23 = Kindelia$check$(_ctx2$22, _world$2, $3762, _type$4, _caller$5);
                                                        var $3769 = _body$23;
                                                        var $3767 = $3769;
                                                        break;
                                                };
                                                var $3765 = $3767;
                                                break;
                                            case 'Maybe.none':
                                                var $3770 = Bool$false;
                                                var $3765 = $3770;
                                                break;
                                        };
                                        var $3763 = $3765;
                                        break;
                                };
                                var $3679 = $3763;
                                break;
                            case 'Kindelia.Term.bind':
                                var $3771 = self.name;
                                var $3772 = self.type;
                                var $3773 = self.expr;
                                var $3774 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3776 = Bool$false;
                                        var $3775 = $3776;
                                        break;
                                    case 'Kindelia.Type.effe':
                                        var _expr$17 = Kindelia$check$(_context$1, _world$2, $3773, Kindelia$Type$effe$($3772), _caller$5);
                                        var _ctx2$18 = Map$set$($3771, $3772, _context$1);
                                        var _body$19 = Kindelia$check$(_ctx2$18, _world$2, $3774, _type$4, _caller$5);
                                        var $3777 = (_expr$17 && _body$19);
                                        var $3775 = $3777;
                                        break;
                                };
                                var $3679 = $3775;
                                break;
                            case 'Kindelia.Term.return':
                                var $3778 = self.expr;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.effe':
                                        var $3780 = self.rety;
                                        var $3781 = Kindelia$check$(_context$1, _world$2, $3778, $3780, _caller$5);
                                        var $3779 = $3781;
                                        break;
                                    case 'Kindelia.Type.word':
                                    case 'Kindelia.Type.data':
                                        var $3782 = Bool$false;
                                        var $3779 = $3782;
                                        break;
                                };
                                var $3679 = $3779;
                                break;
                            case 'Kindelia.Term.word':
                                var self = _type$4;
                                switch (self._) {
                                    case 'Kindelia.Type.word':
                                        var $3784 = Bool$true;
                                        var $3783 = $3784;
                                        break;
                                    case 'Kindelia.Type.data':
                                    case 'Kindelia.Type.effe':
                                        var $3785 = Bool$false;
                                        var $3783 = $3785;
                                        break;
                                };
                                var $3679 = $3783;
                                break;
                        };
                        var $3678 = $3679;
                        break;
                };
                var $3569 = $3678;
                break;
        };
        return $3569;
    };
    const Kindelia$check = x0 => x1 => x2 => x3 => x4 => Kindelia$check$(x0, x1, x2, x3, x4);

    function Kindelia$Entry$file$(_value$1) {
        var $3786 = ({
            _: 'Kindelia.Entry.file',
            'value': _value$1
        });
        return $3786;
    };
    const Kindelia$Entry$file = x0 => Kindelia$Entry$file$(x0);

    function Kindelia$sanitize$many$(_world$1, _table$2, _fresh$3, _terms$4) {
        var self = _terms$4;
        switch (self._) {
            case 'List.cons':
                var $3788 = self.head;
                var $3789 = self.tail;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3788);
                switch (self._) {
                    case 'Pair.new':
                        var $3791 = self.fst;
                        var $3792 = self.snd;
                        var self = Kindelia$sanitize$many$(_world$1, _table$2, $3791, $3789);
                        switch (self._) {
                            case 'Pair.new':
                                var $3794 = self.fst;
                                var $3795 = self.snd;
                                var $3796 = Pair$new$($3794, List$cons$($3792, $3795));
                                var $3793 = $3796;
                                break;
                        };
                        var $3790 = $3793;
                        break;
                };
                var $3787 = $3790;
                break;
            case 'List.nil':
                var $3797 = Pair$new$(_fresh$3, List$nil);
                var $3787 = $3797;
                break;
        };
        return $3787;
    };
    const Kindelia$sanitize$many = x0 => x1 => x2 => x3 => Kindelia$sanitize$many$(x0, x1, x2, x3);

    function Triple$new$(_fst$4, _snd$5, _trd$6) {
        var $3798 = ({
            _: 'Triple.new',
            'fst': _fst$4,
            'snd': _snd$5,
            'trd': _trd$6
        });
        return $3798;
    };
    const Triple$new = x0 => x1 => x2 => Triple$new$(x0, x1, x2);

    function Kindelia$rename$(_table$1, _fresh$2, _old_name$3) {
        var _new_name$4 = ("$" + Nat$show$(_fresh$2));
        var _table$5 = Map$set$(_old_name$3, _new_name$4, _table$1);
        var _fresh$6 = Nat$succ$(_fresh$2);
        var $3799 = Triple$new$(_table$5, _fresh$6, _new_name$4);
        return $3799;
    };
    const Kindelia$rename = x0 => x1 => x2 => Kindelia$rename$(x0, x1, x2);
    const List$for = a0 => a1 => a2 => (list_for(a0)(a1)(a2));

    function Kindelia$sanitize$cases$(_world$1, _table$2, _fresh$3, _old_name$4, _new_name$5, _ctrs$6, _cses$7) {
        var self = _ctrs$6;
        switch (self._) {
            case 'List.cons':
                var $3801 = self.head;
                var $3802 = self.tail;
                var self = _cses$7;
                switch (self._) {
                    case 'List.cons':
                        var $3804 = self.head;
                        var $3805 = self.tail;
                        var _new_table$12 = _table$2;
                        var _new_table$13 = (() => {
                            var $3808 = _new_table$12;
                            var self = $3801;
                            switch (self._) {
                                case 'Kindelia.Constructor.new':
                                    var $3810 = self.fnam;
                                    var $3811 = $3810;
                                    var $3809 = $3811;
                                    break;
                            };
                            let _new_table$14 = $3808;
                            let _field$13;
                            while ($3809._ === 'List.cons') {
                                _field$13 = $3809.head;
                                var $3808 = Map$set$((_old_name$4 + ("." + _field$13)), (_new_name$5 + ("." + _field$13)), _new_table$14);
                                _new_table$14 = $3808;
                                $3809 = $3809.tail;
                            }
                            return _new_table$14;
                        })();
                        var self = Kindelia$sanitize$(_world$1, _new_table$13, _fresh$3, $3804);
                        switch (self._) {
                            case 'Pair.new':
                                var $3812 = self.fst;
                                var $3813 = self.snd;
                                var self = Kindelia$sanitize$cases$(_world$1, _table$2, $3812, _old_name$4, _new_name$5, $3802, $3805);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3815 = self.fst;
                                        var $3816 = self.snd;
                                        var $3817 = Pair$new$($3815, List$cons$($3813, $3816));
                                        var $3814 = $3817;
                                        break;
                                };
                                var $3806 = $3814;
                                break;
                        };
                        var $3803 = $3806;
                        break;
                    case 'List.nil':
                        var $3818 = Pair$new$(_fresh$3, List$nil);
                        var $3803 = $3818;
                        break;
                };
                var $3800 = $3803;
                break;
            case 'List.nil':
                var self = _cses$7;
                switch (self._) {
                    case 'List.nil':
                    case 'List.cons':
                        var $3820 = Pair$new$(_fresh$3, List$nil);
                        var $3819 = $3820;
                        break;
                };
                var $3800 = $3819;
                break;
        };
        return $3800;
    };
    const Kindelia$sanitize$cases = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kindelia$sanitize$cases$(x0, x1, x2, x3, x4, x5, x6);

    function Kindelia$sanitize$(_world$1, _table$2, _fresh$3, _term$4) {
        var self = _term$4;
        switch (self._) {
            case 'Kindelia.Term.var':
                var $3822 = self.name;
                var _term$6 = Kindelia$Term$var$(Maybe$default$(Map$get$($3822, _table$2), $3822));
                var $3823 = Pair$new$(_fresh$3, _term$6);
                var $3821 = $3823;
                break;
            case 'Kindelia.Term.call':
                var $3824 = self.bond;
                var $3825 = self.args;
                var self = Kindelia$sanitize$many$(_world$1, _table$2, _fresh$3, $3825);
                switch (self._) {
                    case 'Pair.new':
                        var $3827 = self.fst;
                        var $3828 = self.snd;
                        var $3829 = Pair$new$($3827, Kindelia$Term$call$($3824, $3828));
                        var $3826 = $3829;
                        break;
                };
                var $3821 = $3826;
                break;
            case 'Kindelia.Term.let':
                var $3830 = self.name;
                var $3831 = self.type;
                var $3832 = self.expr;
                var $3833 = self.body;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3832);
                switch (self._) {
                    case 'Pair.new':
                        var $3835 = self.fst;
                        var $3836 = self.snd;
                        var self = Kindelia$rename$(_table$2, $3835, $3830);
                        switch (self._) {
                            case 'Triple.new':
                                var $3838 = self.fst;
                                var $3839 = self.snd;
                                var $3840 = self.trd;
                                var self = Kindelia$sanitize$(_world$1, $3838, $3839, $3833);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3842 = self.fst;
                                        var $3843 = self.snd;
                                        var $3844 = Pair$new$($3842, Kindelia$Term$let$($3840, $3831, $3836, $3843));
                                        var $3841 = $3844;
                                        break;
                                };
                                var $3837 = $3841;
                                break;
                        };
                        var $3834 = $3837;
                        break;
                };
                var $3821 = $3834;
                break;
            case 'Kindelia.Term.create':
                var $3845 = self.ctor;
                var $3846 = self.vals;
                var self = Kindelia$sanitize$many$(_world$1, _table$2, _fresh$3, $3846);
                switch (self._) {
                    case 'Pair.new':
                        var $3848 = self.fst;
                        var $3849 = self.snd;
                        var $3850 = Pair$new$($3848, Kindelia$Term$create$($3845, $3849));
                        var $3847 = $3850;
                        break;
                };
                var $3821 = $3847;
                break;
            case 'Kindelia.Term.match':
                var $3851 = self.name;
                var $3852 = self.data;
                var $3853 = self.cses;
                var _ctrs$8 = Maybe$default$(Kindelia$get_constructors$(_world$1, $3852), List$nil);
                var _old_name$9 = $3851;
                var _new_name$10 = Maybe$default$(Map$get$($3851, _table$2), $3851);
                var self = Kindelia$sanitize$cases$(_world$1, _table$2, _fresh$3, _old_name$9, _new_name$10, _ctrs$8, $3853);
                switch (self._) {
                    case 'Pair.new':
                        var $3855 = self.fst;
                        var $3856 = self.snd;
                        var $3857 = Pair$new$($3855, Kindelia$Term$match$(_new_name$10, $3852, $3856));
                        var $3854 = $3857;
                        break;
                };
                var $3821 = $3854;
                break;
            case 'Kindelia.Term.word':
                var $3858 = self.numb;
                var $3859 = Pair$new$(_fresh$3, Kindelia$Term$word$($3858));
                var $3821 = $3859;
                break;
            case 'Kindelia.Term.compare':
                var $3860 = self.val0;
                var $3861 = self.val1;
                var $3862 = self.iflt;
                var $3863 = self.ifeq;
                var $3864 = self.ifgt;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3860);
                switch (self._) {
                    case 'Pair.new':
                        var $3866 = self.fst;
                        var $3867 = self.snd;
                        var self = Kindelia$sanitize$(_world$1, _table$2, $3866, $3861);
                        switch (self._) {
                            case 'Pair.new':
                                var $3869 = self.fst;
                                var $3870 = self.snd;
                                var self = Kindelia$sanitize$(_world$1, _table$2, $3869, $3862);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3872 = self.fst;
                                        var $3873 = self.snd;
                                        var self = Kindelia$sanitize$(_world$1, _table$2, $3872, $3863);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3875 = self.fst;
                                                var $3876 = self.snd;
                                                var self = Kindelia$sanitize$(_world$1, _table$2, $3875, $3864);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3878 = self.fst;
                                                        var $3879 = self.snd;
                                                        var $3880 = Pair$new$($3878, Kindelia$Term$compare$($3867, $3870, $3873, $3876, $3879));
                                                        var $3877 = $3880;
                                                        break;
                                                };
                                                var $3874 = $3877;
                                                break;
                                        };
                                        var $3871 = $3874;
                                        break;
                                };
                                var $3868 = $3871;
                                break;
                        };
                        var $3865 = $3868;
                        break;
                };
                var $3821 = $3865;
                break;
            case 'Kindelia.Term.operate':
                var $3881 = self.oper;
                var $3882 = self.val0;
                var $3883 = self.val1;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3882);
                switch (self._) {
                    case 'Pair.new':
                        var $3885 = self.fst;
                        var $3886 = self.snd;
                        var self = Kindelia$sanitize$(_world$1, _table$2, $3885, $3883);
                        switch (self._) {
                            case 'Pair.new':
                                var $3888 = self.fst;
                                var $3889 = self.snd;
                                var $3890 = Pair$new$($3888, Kindelia$Term$operate$($3881, $3886, $3889));
                                var $3887 = $3890;
                                break;
                        };
                        var $3884 = $3887;
                        break;
                };
                var $3821 = $3884;
                break;
            case 'Kindelia.Term.set':
                var $3891 = self.file;
                var $3892 = self.expr;
                var $3893 = self.body;
                var self = Kindelia$get_file$(_world$1, $3891);
                switch (self._) {
                    case 'Maybe.some':
                        var $3895 = self.value;
                        var _file$9 = $3895;
                        var self = _file$9;
                        switch (self._) {
                            case 'Kindelia.File.new':
                                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3892);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3898 = self.fst;
                                        var $3899 = self.snd;
                                        var self = Kindelia$sanitize$(_world$1, _table$2, $3898, $3893);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3901 = self.fst;
                                                var $3902 = self.snd;
                                                var $3903 = Pair$new$($3901, Kindelia$Term$set$($3891, $3899, $3902));
                                                var $3900 = $3903;
                                                break;
                                        };
                                        var $3897 = $3900;
                                        break;
                                };
                                var $3896 = $3897;
                                break;
                        };
                        var $3894 = $3896;
                        break;
                    case 'Maybe.none':
                        var $3904 = Pair$new$(_fresh$3, _term$4);
                        var $3894 = $3904;
                        break;
                };
                var $3821 = $3894;
                break;
            case 'Kindelia.Term.get':
                var $3905 = self.name;
                var $3906 = self.file;
                var $3907 = self.body;
                var self = Kindelia$get_file$(_world$1, $3906);
                switch (self._) {
                    case 'Maybe.some':
                        var $3909 = self.value;
                        var _file$9 = $3909;
                        var self = _file$9;
                        switch (self._) {
                            case 'Kindelia.File.new':
                                var self = Kindelia$rename$(_table$2, _fresh$3, $3905);
                                switch (self._) {
                                    case 'Triple.new':
                                        var $3912 = self.fst;
                                        var $3913 = self.snd;
                                        var $3914 = self.trd;
                                        var self = Kindelia$sanitize$(_world$1, $3912, $3913, $3907);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3916 = self.fst;
                                                var $3917 = self.snd;
                                                var $3918 = Pair$new$($3916, Kindelia$Term$get$($3914, $3906, $3917));
                                                var $3915 = $3918;
                                                break;
                                        };
                                        var $3911 = $3915;
                                        break;
                                };
                                var $3910 = $3911;
                                break;
                        };
                        var $3908 = $3910;
                        break;
                    case 'Maybe.none':
                        var $3919 = Pair$new$(_fresh$3, _term$4);
                        var $3908 = $3919;
                        break;
                };
                var $3821 = $3908;
                break;
            case 'Kindelia.Term.bind':
                var $3920 = self.name;
                var $3921 = self.type;
                var $3922 = self.expr;
                var $3923 = self.body;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3922);
                switch (self._) {
                    case 'Pair.new':
                        var $3925 = self.fst;
                        var $3926 = self.snd;
                        var self = Kindelia$rename$(_table$2, $3925, $3920);
                        switch (self._) {
                            case 'Triple.new':
                                var $3928 = self.fst;
                                var $3929 = self.snd;
                                var $3930 = self.trd;
                                var self = Kindelia$sanitize$(_world$1, $3928, $3929, $3923);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3932 = self.fst;
                                        var $3933 = self.snd;
                                        var $3934 = Pair$new$($3932, Kindelia$Term$bind$($3930, $3921, $3926, $3933));
                                        var $3931 = $3934;
                                        break;
                                };
                                var $3927 = $3931;
                                break;
                        };
                        var $3924 = $3927;
                        break;
                };
                var $3821 = $3924;
                break;
            case 'Kindelia.Term.return':
                var $3935 = self.expr;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3935);
                switch (self._) {
                    case 'Pair.new':
                        var $3937 = self.fst;
                        var $3938 = self.snd;
                        var $3939 = Pair$new$($3937, Kindelia$Term$return$($3938));
                        var $3936 = $3939;
                        break;
                };
                var $3821 = $3936;
                break;
        };
        return $3821;
    };
    const Kindelia$sanitize = x0 => x1 => x2 => x3 => Kindelia$sanitize$(x0, x1, x2, x3);

    function Kindelia$Runtime$(_A$1) {
        var $3940 = null;
        return $3940;
    };
    const Kindelia$Runtime = x0 => Kindelia$Runtime$(x0);

    function Kindelia$Runtime$new$(_world$2, _subst$3, _fresh$4, _gas$5, _term$6) {
        var $3941 = ({
            _: 'Kindelia.Runtime.new',
            'world': _world$2,
            'subst': _subst$3,
            'fresh': _fresh$4,
            'gas': _gas$5,
            'term': _term$6
        });
        return $3941;
    };
    const Kindelia$Runtime$new = x0 => x1 => x2 => x3 => x4 => Kindelia$Runtime$new$(x0, x1, x2, x3, x4);

    function Triple$(_A$1, _B$2, _C$3) {
        var $3942 = null;
        return $3942;
    };
    const Triple = x0 => x1 => x2 => Triple$(x0, x1, x2);

    function Kindelia$rename$many$(_table$1, _fresh$2, _names$3) {
        var self = _names$3;
        switch (self._) {
            case 'List.cons':
                var $3944 = self.head;
                var $3945 = self.tail;
                var self = Kindelia$rename$(_table$1, _fresh$2, $3944);
                switch (self._) {
                    case 'Triple.new':
                        var $3947 = self.fst;
                        var $3948 = self.snd;
                        var $3949 = self.trd;
                        var self = Kindelia$rename$many$($3947, $3948, $3945);
                        switch (self._) {
                            case 'Triple.new':
                                var $3951 = self.fst;
                                var $3952 = self.snd;
                                var $3953 = self.trd;
                                var $3954 = Triple$new$($3951, $3952, List$cons$($3949, $3953));
                                var $3950 = $3954;
                                break;
                        };
                        var $3946 = $3950;
                        break;
                };
                var $3943 = $3946;
                break;
            case 'List.nil':
                var $3955 = Triple$new$(_table$1, _fresh$2, List$nil);
                var $3943 = $3955;
                break;
        };
        return $3943;
    };
    const Kindelia$rename$many = x0 => x1 => x2 => Kindelia$rename$many$(x0, x1, x2);

    function Kindelia$get_constructor_index$(_data$1, _name$2) {
        var $3956 = Maybe$mapped$(List$ifind$((_i$3 => _ctr$4 => {
            var $3957 = ((() => {
                var self = _ctr$4;
                switch (self._) {
                    case 'Kindelia.Constructor.new':
                        var $3958 = self.name;
                        var $3959 = $3958;
                        return $3959;
                };
            })() === _name$2);
            return $3957;
        }), (() => {
            var self = _data$1;
            switch (self._) {
                case 'Kindelia.Data.new':
                    var $3960 = self.constructors;
                    var $3961 = $3960;
                    return $3961;
            };
        })()), (_x$3 => {
            var self = _x$3;
            switch (self._) {
                case 'Pair.new':
                    var $3963 = self.fst;
                    var $3964 = $3963;
                    var $3962 = $3964;
                    break;
            };
            return $3962;
        }));
        return $3956;
    };
    const Kindelia$get_constructor_index = x0 => x1 => Kindelia$get_constructor_index$(x0, x1);
    const U64$ltn = a0 => a1 => (a0 < a1);
    const U64$eql = a0 => a1 => (a0 === a1);

    function U64$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $3966 = Cmp$ltn;
            var $3965 = $3966;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $3968 = Cmp$eql;
                var $3967 = $3968;
            } else {
                var $3969 = Cmp$gtn;
                var $3967 = $3969;
            };
            var $3965 = $3967;
        };
        return $3965;
    };
    const U64$cmp = x0 => x1 => U64$cmp$(x0, x1);
    const U64$add = a0 => a1 => ((a0 + a1) & 0xFFFFFFFFFFFFFFFFn);
    const U64$sub = a0 => a1 => ((a0 - a1) & 0xFFFFFFFFFFFFFFFFn);
    const U64$mul = a0 => a1 => ((a0 * a1) & 0xFFFFFFFFFFFFFFFFn);

    function Word$bit_length$go$(_word$2, _c$3, _n$4) {
        var Word$bit_length$go$ = (_word$2, _c$3, _n$4) => ({
            ctr: 'TCO',
            arg: [_word$2, _c$3, _n$4]
        });
        var Word$bit_length$go = _word$2 => _c$3 => _n$4 => Word$bit_length$go$(_word$2, _c$3, _n$4);
        var arg = [_word$2, _c$3, _n$4];
        while (true) {
            let [_word$2, _c$3, _n$4] = arg;
            var R = (() => {
                var self = _word$2;
                switch (self._) {
                    case 'Word.o':
                        var $3970 = self.pred;
                        var $3971 = Word$bit_length$go$($3970, Nat$succ$(_c$3), _n$4);
                        return $3971;
                    case 'Word.i':
                        var $3972 = self.pred;
                        var $3973 = Word$bit_length$go$($3972, Nat$succ$(_c$3), Nat$succ$(_c$3));
                        return $3973;
                    case 'Word.e':
                        var $3974 = _n$4;
                        return $3974;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$bit_length$go = x0 => x1 => x2 => Word$bit_length$go$(x0, x1, x2);

    function Word$bit_length$(_word$2) {
        var $3975 = Word$bit_length$go$(_word$2, 0n, 0n);
        return $3975;
    };
    const Word$bit_length = x0 => Word$bit_length$(x0);

    function Cmp$as_gte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $3977 = Bool$false;
                var $3976 = $3977;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $3978 = Bool$true;
                var $3976 = $3978;
                break;
        };
        return $3976;
    };
    const Cmp$as_gte = x0 => Cmp$as_gte$(x0);

    function Word$gte$(_a$2, _b$3) {
        var $3979 = Cmp$as_gte$(Word$cmp$(_a$2, _b$3));
        return $3979;
    };
    const Word$gte = x0 => x1 => Word$gte$(x0, x1);

    function Word$or$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $3981 = self.pred;
                var $3982 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3984 = self.pred;
                            var $3985 = (_a$pred$9 => {
                                var $3986 = Word$o$(Word$or$(_a$pred$9, $3984));
                                return $3986;
                            });
                            var $3983 = $3985;
                            break;
                        case 'Word.i':
                            var $3987 = self.pred;
                            var $3988 = (_a$pred$9 => {
                                var $3989 = Word$i$(Word$or$(_a$pred$9, $3987));
                                return $3989;
                            });
                            var $3983 = $3988;
                            break;
                        case 'Word.e':
                            var $3990 = (_a$pred$7 => {
                                var $3991 = Word$e;
                                return $3991;
                            });
                            var $3983 = $3990;
                            break;
                    };
                    var $3983 = $3983($3981);
                    return $3983;
                });
                var $3980 = $3982;
                break;
            case 'Word.i':
                var $3992 = self.pred;
                var $3993 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3995 = self.pred;
                            var $3996 = (_a$pred$9 => {
                                var $3997 = Word$i$(Word$or$(_a$pred$9, $3995));
                                return $3997;
                            });
                            var $3994 = $3996;
                            break;
                        case 'Word.i':
                            var $3998 = self.pred;
                            var $3999 = (_a$pred$9 => {
                                var $4000 = Word$i$(Word$or$(_a$pred$9, $3998));
                                return $4000;
                            });
                            var $3994 = $3999;
                            break;
                        case 'Word.e':
                            var $4001 = (_a$pred$7 => {
                                var $4002 = Word$e;
                                return $4002;
                            });
                            var $3994 = $4001;
                            break;
                    };
                    var $3994 = $3994($3992);
                    return $3994;
                });
                var $3980 = $3993;
                break;
            case 'Word.e':
                var $4003 = (_b$4 => {
                    var $4004 = Word$e;
                    return $4004;
                });
                var $3980 = $4003;
                break;
        };
        var $3980 = $3980(_b$3);
        return $3980;
    };
    const Word$or = x0 => x1 => Word$or$(x0, x1);

    function Word$shift_right$one$go$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $4006 = self.pred;
                var $4007 = Word$o$(Word$shift_right$one$go$($4006));
                var $4005 = $4007;
                break;
            case 'Word.i':
                var $4008 = self.pred;
                var $4009 = Word$i$(Word$shift_right$one$go$($4008));
                var $4005 = $4009;
                break;
            case 'Word.e':
                var $4010 = Word$o$(Word$e);
                var $4005 = $4010;
                break;
        };
        return $4005;
    };
    const Word$shift_right$one$go = x0 => Word$shift_right$one$go$(x0);

    function Word$shift_right$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $4012 = self.pred;
                var $4013 = Word$shift_right$one$go$($4012);
                var $4011 = $4013;
                break;
            case 'Word.i':
                var $4014 = self.pred;
                var $4015 = Word$shift_right$one$go$($4014);
                var $4011 = $4015;
                break;
            case 'Word.e':
                var $4016 = Word$e;
                var $4011 = $4016;
                break;
        };
        return $4011;
    };
    const Word$shift_right$one = x0 => Word$shift_right$one$(x0);

    function Word$shift_right$(_value$2, _n$3) {
        var Word$shift_right$ = (_value$2, _n$3) => ({
            ctr: 'TCO',
            arg: [_value$2, _n$3]
        });
        var Word$shift_right = _value$2 => _n$3 => Word$shift_right$(_value$2, _n$3);
        var arg = [_value$2, _n$3];
        while (true) {
            let [_value$2, _n$3] = arg;
            var R = (() => {
                var self = _n$3;
                if (self === 0n) {
                    var $4017 = _value$2;
                    return $4017;
                } else {
                    var $4018 = (self - 1n);
                    var $4019 = Word$shift_right$(Word$shift_right$one$(_value$2), $4018);
                    return $4019;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_right = x0 => x1 => Word$shift_right$(x0, x1);

    function Word$div$go$(_shift$2, _sub_copy$3, _shift_copy$4, _value$5) {
        var Word$div$go$ = (_shift$2, _sub_copy$3, _shift_copy$4, _value$5) => ({
            ctr: 'TCO',
            arg: [_shift$2, _sub_copy$3, _shift_copy$4, _value$5]
        });
        var Word$div$go = _shift$2 => _sub_copy$3 => _shift_copy$4 => _value$5 => Word$div$go$(_shift$2, _sub_copy$3, _shift_copy$4, _value$5);
        var arg = [_shift$2, _sub_copy$3, _shift_copy$4, _value$5];
        while (true) {
            let [_shift$2, _sub_copy$3, _shift_copy$4, _value$5] = arg;
            var R = (() => {
                var self = Word$gte$(_sub_copy$3, _shift_copy$4);
                if (self) {
                    var _mask$6 = Word$shift_left$(Word$inc$(Word$to_zero$(_sub_copy$3)), _shift$2);
                    var $4020 = Pair$new$(Bool$true, Word$or$(_value$5, _mask$6));
                    var self = $4020;
                } else {
                    var $4021 = Pair$new$(Bool$false, _value$5);
                    var self = $4021;
                };
                switch (self._) {
                    case 'Pair.new':
                        var $4022 = self.fst;
                        var $4023 = self.snd;
                        var self = _shift$2;
                        if (self === 0n) {
                            var $4025 = $4023;
                            var $4024 = $4025;
                        } else {
                            var $4026 = (self - 1n);
                            var _new_shift_copy$9 = Word$shift_right$(_shift_copy$4, 1n);
                            var self = $4022;
                            if (self) {
                                var $4028 = Word$div$go$($4026, Word$sub$(_sub_copy$3, _shift_copy$4), _new_shift_copy$9, $4023);
                                var $4027 = $4028;
                            } else {
                                var $4029 = Word$div$go$($4026, _sub_copy$3, _new_shift_copy$9, $4023);
                                var $4027 = $4029;
                            };
                            var $4024 = $4027;
                        };
                        return $4024;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$div$go = x0 => x1 => x2 => x3 => Word$div$go$(x0, x1, x2, x3);

    function Word$div$(_a$2, _b$3) {
        var _a_bits$4 = Word$bit_length$(_a$2);
        var _b_bits$5 = Word$bit_length$(_b$3);
        var self = (_a_bits$4 < _b_bits$5);
        if (self) {
            var $4031 = Word$to_zero$(_a$2);
            var $4030 = $4031;
        } else {
            var _shift$6 = (_a_bits$4 - _b_bits$5 <= 0n ? 0n : _a_bits$4 - _b_bits$5);
            var _shift_copy$7 = Word$shift_left$(_b$3, _shift$6);
            var $4032 = Word$div$go$(_shift$6, _a$2, _shift_copy$7, Word$to_zero$(_a$2));
            var $4030 = $4032;
        };
        return $4030;
    };
    const Word$div = x0 => x1 => Word$div$(x0, x1);
    const U64$div = a0 => a1 => ((a0 / a1) & 0xFFFFFFFFFFFFFFFFn);

    function Word$mod$(_a$2, _b$3) {
        var _q$4 = Word$div$(_a$2, _b$3);
        var $4033 = Word$sub$(_a$2, Word$mul$(_b$3, _q$4));
        return $4033;
    };
    const Word$mod = x0 => x1 => Word$mod$(x0, x1);
    const U64$mod = a0 => a1 => (a0 % a1);
    const U64$or = a0 => a1 => (a0 | a1);

    function Word$and$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $4035 = self.pred;
                var $4036 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4038 = self.pred;
                            var $4039 = (_a$pred$9 => {
                                var $4040 = Word$o$(Word$and$(_a$pred$9, $4038));
                                return $4040;
                            });
                            var $4037 = $4039;
                            break;
                        case 'Word.i':
                            var $4041 = self.pred;
                            var $4042 = (_a$pred$9 => {
                                var $4043 = Word$o$(Word$and$(_a$pred$9, $4041));
                                return $4043;
                            });
                            var $4037 = $4042;
                            break;
                        case 'Word.e':
                            var $4044 = (_a$pred$7 => {
                                var $4045 = Word$e;
                                return $4045;
                            });
                            var $4037 = $4044;
                            break;
                    };
                    var $4037 = $4037($4035);
                    return $4037;
                });
                var $4034 = $4036;
                break;
            case 'Word.i':
                var $4046 = self.pred;
                var $4047 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4049 = self.pred;
                            var $4050 = (_a$pred$9 => {
                                var $4051 = Word$o$(Word$and$(_a$pred$9, $4049));
                                return $4051;
                            });
                            var $4048 = $4050;
                            break;
                        case 'Word.i':
                            var $4052 = self.pred;
                            var $4053 = (_a$pred$9 => {
                                var $4054 = Word$i$(Word$and$(_a$pred$9, $4052));
                                return $4054;
                            });
                            var $4048 = $4053;
                            break;
                        case 'Word.e':
                            var $4055 = (_a$pred$7 => {
                                var $4056 = Word$e;
                                return $4056;
                            });
                            var $4048 = $4055;
                            break;
                    };
                    var $4048 = $4048($4046);
                    return $4048;
                });
                var $4034 = $4047;
                break;
            case 'Word.e':
                var $4057 = (_b$4 => {
                    var $4058 = Word$e;
                    return $4058;
                });
                var $4034 = $4057;
                break;
        };
        var $4034 = $4034(_b$3);
        return $4034;
    };
    const Word$and = x0 => x1 => Word$and$(x0, x1);
    const U64$and = a0 => a1 => (a0 & a1);

    function Word$xor$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $4060 = self.pred;
                var $4061 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4063 = self.pred;
                            var $4064 = (_a$pred$9 => {
                                var $4065 = Word$o$(Word$xor$(_a$pred$9, $4063));
                                return $4065;
                            });
                            var $4062 = $4064;
                            break;
                        case 'Word.i':
                            var $4066 = self.pred;
                            var $4067 = (_a$pred$9 => {
                                var $4068 = Word$i$(Word$xor$(_a$pred$9, $4066));
                                return $4068;
                            });
                            var $4062 = $4067;
                            break;
                        case 'Word.e':
                            var $4069 = (_a$pred$7 => {
                                var $4070 = Word$e;
                                return $4070;
                            });
                            var $4062 = $4069;
                            break;
                    };
                    var $4062 = $4062($4060);
                    return $4062;
                });
                var $4059 = $4061;
                break;
            case 'Word.i':
                var $4071 = self.pred;
                var $4072 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4074 = self.pred;
                            var $4075 = (_a$pred$9 => {
                                var $4076 = Word$i$(Word$xor$(_a$pred$9, $4074));
                                return $4076;
                            });
                            var $4073 = $4075;
                            break;
                        case 'Word.i':
                            var $4077 = self.pred;
                            var $4078 = (_a$pred$9 => {
                                var $4079 = Word$o$(Word$xor$(_a$pred$9, $4077));
                                return $4079;
                            });
                            var $4073 = $4078;
                            break;
                        case 'Word.e':
                            var $4080 = (_a$pred$7 => {
                                var $4081 = Word$e;
                                return $4081;
                            });
                            var $4073 = $4080;
                            break;
                    };
                    var $4073 = $4073($4071);
                    return $4073;
                });
                var $4059 = $4072;
                break;
            case 'Word.e':
                var $4082 = (_b$4 => {
                    var $4083 = Word$e;
                    return $4083;
                });
                var $4059 = $4082;
                break;
        };
        var $4059 = $4059(_b$3);
        return $4059;
    };
    const Word$xor = x0 => x1 => Word$xor$(x0, x1);
    const U64$xor = a0 => a1 => (a0 ^ a1);

    function Kindelia$reduce$(_state$1) {
        var self = _state$1;
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4085 = self.world;
                var $4086 = self.subst;
                var $4087 = self.fresh;
                var $4088 = self.gas;
                var $4089 = self.term;
                var self = $4089;
                switch (self._) {
                    case 'Kindelia.Term.var':
                        var $4091 = self.name;
                        var _term$8 = Maybe$default$(Map$get$($4091, $4086), $4089);
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4085, $4086, $4087, $4088, _term$8));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4093 = self.world;
                                var $4094 = self.subst;
                                var $4095 = self.fresh;
                                var $4096 = self.gas;
                                var $4097 = self.term;
                                var $4098 = Kindelia$Runtime$new$($4093, Map$set$($4091, $4097, $4094), $4095, $4096, $4097);
                                var $4092 = $4098;
                                break;
                        };
                        var $4090 = $4092;
                        break;
                    case 'Kindelia.Term.call':
                        var $4099 = self.bond;
                        var $4100 = self.args;
                        var self = Kindelia$get_bond$($4085, $4099);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4102 = self.value;
                                var _bond$10 = $4102;
                                var self = _bond$10;
                                switch (self._) {
                                    case 'Kindelia.Bond.new':
                                        var $4104 = self.inam;
                                        var $4105 = self.main;
                                        var self = Kindelia$rename$many$(Map$from_list$(List$nil), $4087, $4104);
                                        switch (self._) {
                                            case 'Triple.new':
                                                var $4107 = self.fst;
                                                var $4108 = self.snd;
                                                var $4109 = self.trd;
                                                var self = Kindelia$sanitize$($4085, $4107, $4108, $4105);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $4111 = self.fst;
                                                        var $4112 = self.snd;
                                                        var _subst$21 = Kindelia$extend$($4086, $4109, $4100);
                                                        var $4113 = Kindelia$reduce$(Kindelia$Runtime$new$($4085, _subst$21, $4111, $4088, $4112));
                                                        var $4110 = $4113;
                                                        break;
                                                };
                                                var $4106 = $4110;
                                                break;
                                        };
                                        var $4103 = $4106;
                                        break;
                                };
                                var $4101 = $4103;
                                break;
                            case 'Maybe.none':
                                var $4114 = _state$1;
                                var $4101 = $4114;
                                break;
                        };
                        var $4090 = $4101;
                        break;
                    case 'Kindelia.Term.let':
                        var $4115 = self.name;
                        var $4116 = self.expr;
                        var $4117 = self.body;
                        var $4118 = Kindelia$reduce$(Kindelia$Runtime$new$($4085, Map$set$($4115, $4116, $4086), $4087, $4088, $4117));
                        var $4090 = $4118;
                        break;
                    case 'Kindelia.Term.match':
                        var $4119 = self.name;
                        var $4120 = self.data;
                        var $4121 = self.cses;
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4085, $4086, $4087, $4088, Maybe$default$(Map$get$($4119, $4086), Kindelia$Term$word$(0n))));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4123 = self.world;
                                var $4124 = self.subst;
                                var $4125 = self.fresh;
                                var $4126 = self.gas;
                                var $4127 = self.term;
                                var self = $4127;
                                switch (self._) {
                                    case 'Kindelia.Term.create':
                                        var $4129 = self.ctor;
                                        var $4130 = self.vals;
                                        var self = Kindelia$get_data$($4123, $4120);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $4132 = self.value;
                                                var _data$18 = $4132;
                                                var self = _data$18;
                                                switch (self._) {
                                                    case 'Kindelia.Data.new':
                                                        var self = Kindelia$get_constructor_value$(_data$18, $4129);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $4135 = self.value;
                                                                var _ctor$22 = $4135;
                                                                var self = _ctor$22;
                                                                switch (self._) {
                                                                    case 'Kindelia.Constructor.new':
                                                                        var self = Kindelia$get_constructor_index$(_data$18, $4129);
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4138 = self.value;
                                                                                var self = List$get$($4138, $4121);
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $4140 = self.value;
                                                                                        var _nams$28 = List$map$(a1 => (($4119 + ".") + a1), (() => {
                                                                                            var self = _ctor$22;
                                                                                            switch (self._) {
                                                                                                case 'Kindelia.Constructor.new':
                                                                                                    var $4142 = self.fnam;
                                                                                                    var $4143 = $4142;
                                                                                                    return $4143;
                                                                                            };
                                                                                        })());
                                                                                        var _subst$29 = Kindelia$extend$($4124, _nams$28, $4130);
                                                                                        var $4141 = Kindelia$reduce$(Kindelia$Runtime$new$($4123, _subst$29, $4125, $4126, $4140));
                                                                                        var $4139 = $4141;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $4144 = _state$1;
                                                                                        var $4139 = $4144;
                                                                                        break;
                                                                                };
                                                                                var $4137 = $4139;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4145 = _state$1;
                                                                                var $4137 = $4145;
                                                                                break;
                                                                        };
                                                                        var $4136 = $4137;
                                                                        break;
                                                                };
                                                                var $4134 = $4136;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $4146 = _state$1;
                                                                var $4134 = $4146;
                                                                break;
                                                        };
                                                        var $4133 = $4134;
                                                        break;
                                                };
                                                var $4131 = $4133;
                                                break;
                                            case 'Maybe.none':
                                                var $4147 = _state$1;
                                                var $4131 = $4147;
                                                break;
                                        };
                                        var $4128 = $4131;
                                        break;
                                    case 'Kindelia.Term.var':
                                    case 'Kindelia.Term.call':
                                    case 'Kindelia.Term.let':
                                    case 'Kindelia.Term.match':
                                    case 'Kindelia.Term.word':
                                    case 'Kindelia.Term.compare':
                                    case 'Kindelia.Term.operate':
                                    case 'Kindelia.Term.set':
                                    case 'Kindelia.Term.get':
                                    case 'Kindelia.Term.bind':
                                    case 'Kindelia.Term.return':
                                        var $4148 = _state$1;
                                        var $4128 = $4148;
                                        break;
                                };
                                var $4122 = $4128;
                                break;
                        };
                        var $4090 = $4122;
                        break;
                    case 'Kindelia.Term.compare':
                        var $4149 = self.val0;
                        var $4150 = self.val1;
                        var $4151 = self.iflt;
                        var $4152 = self.ifeq;
                        var $4153 = self.ifgt;
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4085, $4086, $4087, $4088, $4149));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4155 = self.world;
                                var $4156 = self.subst;
                                var $4157 = self.fresh;
                                var $4158 = self.gas;
                                var $4159 = self.term;
                                var self = Kindelia$reduce$(Kindelia$Runtime$new$($4155, $4156, $4157, $4158, $4150));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4161 = self.world;
                                        var $4162 = self.subst;
                                        var $4163 = self.fresh;
                                        var $4164 = self.gas;
                                        var $4165 = self.term;
                                        var self = $4159;
                                        switch (self._) {
                                            case 'Kindelia.Term.word':
                                                var $4167 = self.numb;
                                                var self = $4165;
                                                switch (self._) {
                                                    case 'Kindelia.Term.word':
                                                        var $4169 = self.numb;
                                                        var self = U64$cmp$($4167, $4169);
                                                        switch (self._) {
                                                            case 'Cmp.ltn':
                                                                var $4171 = Kindelia$reduce$(Kindelia$Runtime$new$($4161, $4162, $4163, $4164, $4151));
                                                                var $4170 = $4171;
                                                                break;
                                                            case 'Cmp.eql':
                                                                var $4172 = Kindelia$reduce$(Kindelia$Runtime$new$($4161, $4162, $4163, $4164, $4152));
                                                                var $4170 = $4172;
                                                                break;
                                                            case 'Cmp.gtn':
                                                                var $4173 = Kindelia$reduce$(Kindelia$Runtime$new$($4161, $4162, $4163, $4164, $4153));
                                                                var $4170 = $4173;
                                                                break;
                                                        };
                                                        var $4168 = $4170;
                                                        break;
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4174 = _state$1;
                                                        var $4168 = $4174;
                                                        break;
                                                };
                                                var $4166 = $4168;
                                                break;
                                            case 'Kindelia.Term.var':
                                            case 'Kindelia.Term.return':
                                                var self = $4165;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4176 = _state$1;
                                                        var $4175 = $4176;
                                                        break;
                                                };
                                                var $4166 = $4175;
                                                break;
                                            case 'Kindelia.Term.call':
                                            case 'Kindelia.Term.create':
                                                var self = $4165;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4178 = _state$1;
                                                        var $4177 = $4178;
                                                        break;
                                                };
                                                var $4166 = $4177;
                                                break;
                                            case 'Kindelia.Term.let':
                                            case 'Kindelia.Term.bind':
                                                var self = $4165;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4180 = _state$1;
                                                        var $4179 = $4180;
                                                        break;
                                                };
                                                var $4166 = $4179;
                                                break;
                                            case 'Kindelia.Term.match':
                                            case 'Kindelia.Term.operate':
                                            case 'Kindelia.Term.set':
                                            case 'Kindelia.Term.get':
                                                var self = $4165;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4182 = _state$1;
                                                        var $4181 = $4182;
                                                        break;
                                                };
                                                var $4166 = $4181;
                                                break;
                                            case 'Kindelia.Term.compare':
                                                var self = $4165;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4184 = _state$1;
                                                        var $4183 = $4184;
                                                        break;
                                                };
                                                var $4166 = $4183;
                                                break;
                                        };
                                        var $4160 = $4166;
                                        break;
                                };
                                var $4154 = $4160;
                                break;
                        };
                        var $4090 = $4154;
                        break;
                    case 'Kindelia.Term.operate':
                        var $4185 = self.oper;
                        var $4186 = self.val0;
                        var $4187 = self.val1;
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4085, $4086, $4087, $4088, $4186));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4189 = self.world;
                                var $4190 = self.subst;
                                var $4191 = self.fresh;
                                var $4192 = self.gas;
                                var $4193 = self.term;
                                var self = Kindelia$reduce$(Kindelia$Runtime$new$($4189, $4190, $4191, $4192, $4187));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4195 = self.world;
                                        var $4196 = self.subst;
                                        var $4197 = self.fresh;
                                        var $4198 = self.gas;
                                        var $4199 = self.term;
                                        var self = $4193;
                                        switch (self._) {
                                            case 'Kindelia.Term.word':
                                                var $4201 = self.numb;
                                                var self = $4199;
                                                switch (self._) {
                                                    case 'Kindelia.Term.word':
                                                        var $4203 = self.numb;
                                                        var self = $4185;
                                                        switch (self._) {
                                                            case 'Kindelia.Operation.add':
                                                                var $4205 = Kindelia$Runtime$new$($4195, $4196, $4197, $4198, Kindelia$Term$word$((($4201 + $4203) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4204 = $4205;
                                                                break;
                                                            case 'Kindelia.Operation.sub':
                                                                var $4206 = Kindelia$Runtime$new$($4195, $4196, $4197, $4198, Kindelia$Term$word$((($4201 - $4203) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4204 = $4206;
                                                                break;
                                                            case 'Kindelia.Operation.mul':
                                                                var $4207 = Kindelia$Runtime$new$($4195, $4196, $4197, $4198, Kindelia$Term$word$((($4201 * $4203) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4204 = $4207;
                                                                break;
                                                            case 'Kindelia.Operation.div':
                                                                var $4208 = Kindelia$Runtime$new$($4195, $4196, $4197, $4198, Kindelia$Term$word$((($4201 / $4203) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4204 = $4208;
                                                                break;
                                                            case 'Kindelia.Operation.mod':
                                                                var $4209 = Kindelia$Runtime$new$($4195, $4196, $4197, $4198, Kindelia$Term$word$(($4201 % $4203)));
                                                                var $4204 = $4209;
                                                                break;
                                                            case 'Kindelia.Operation.or':
                                                                var $4210 = Kindelia$Runtime$new$($4195, $4196, $4197, $4198, Kindelia$Term$word$(($4201 | $4203)));
                                                                var $4204 = $4210;
                                                                break;
                                                            case 'Kindelia.Operation.and':
                                                                var $4211 = Kindelia$Runtime$new$($4195, $4196, $4197, $4198, Kindelia$Term$word$(($4201 & $4203)));
                                                                var $4204 = $4211;
                                                                break;
                                                            case 'Kindelia.Operation.xor':
                                                                var $4212 = Kindelia$Runtime$new$($4195, $4196, $4197, $4198, Kindelia$Term$word$(($4201 ^ $4203)));
                                                                var $4204 = $4212;
                                                                break;
                                                        };
                                                        var $4202 = $4204;
                                                        break;
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4213 = _state$1;
                                                        var $4202 = $4213;
                                                        break;
                                                };
                                                var $4200 = $4202;
                                                break;
                                            case 'Kindelia.Term.var':
                                            case 'Kindelia.Term.return':
                                                var self = $4199;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4215 = _state$1;
                                                        var $4214 = $4215;
                                                        break;
                                                };
                                                var $4200 = $4214;
                                                break;
                                            case 'Kindelia.Term.call':
                                            case 'Kindelia.Term.create':
                                                var self = $4199;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4217 = _state$1;
                                                        var $4216 = $4217;
                                                        break;
                                                };
                                                var $4200 = $4216;
                                                break;
                                            case 'Kindelia.Term.let':
                                            case 'Kindelia.Term.bind':
                                                var self = $4199;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4219 = _state$1;
                                                        var $4218 = $4219;
                                                        break;
                                                };
                                                var $4200 = $4218;
                                                break;
                                            case 'Kindelia.Term.match':
                                            case 'Kindelia.Term.operate':
                                            case 'Kindelia.Term.set':
                                            case 'Kindelia.Term.get':
                                                var self = $4199;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4221 = _state$1;
                                                        var $4220 = $4221;
                                                        break;
                                                };
                                                var $4200 = $4220;
                                                break;
                                            case 'Kindelia.Term.compare':
                                                var self = $4199;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4223 = _state$1;
                                                        var $4222 = $4223;
                                                        break;
                                                };
                                                var $4200 = $4222;
                                                break;
                                        };
                                        var $4194 = $4200;
                                        break;
                                };
                                var $4188 = $4194;
                                break;
                        };
                        var $4090 = $4188;
                        break;
                    case 'Kindelia.Term.create':
                    case 'Kindelia.Term.word':
                    case 'Kindelia.Term.set':
                    case 'Kindelia.Term.get':
                    case 'Kindelia.Term.bind':
                    case 'Kindelia.Term.return':
                        var $4224 = _state$1;
                        var $4090 = $4224;
                        break;
                };
                var $4084 = $4090;
                break;
        };
        return $4084;
    };
    const Kindelia$reduce = x0 => Kindelia$reduce$(x0);

    function Kindelia$normalize$many$(_state$1) {
        var self = _state$1;
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4226 = self.world;
                var $4227 = self.subst;
                var $4228 = self.fresh;
                var $4229 = self.gas;
                var $4230 = self.term;
                var self = $4230;
                switch (self._) {
                    case 'List.cons':
                        var $4232 = self.head;
                        var $4233 = self.tail;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4226, $4227, $4228, $4229, $4232));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4235 = self.world;
                                var $4236 = self.subst;
                                var $4237 = self.fresh;
                                var $4238 = self.gas;
                                var $4239 = self.term;
                                var self = Kindelia$normalize$many$(Kindelia$Runtime$new$($4235, $4236, $4237, $4238, $4233));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4241 = self.world;
                                        var $4242 = self.subst;
                                        var $4243 = self.fresh;
                                        var $4244 = self.gas;
                                        var $4245 = self.term;
                                        var $4246 = Kindelia$Runtime$new$($4241, $4242, $4243, $4244, List$cons$($4239, $4245));
                                        var $4240 = $4246;
                                        break;
                                };
                                var $4234 = $4240;
                                break;
                        };
                        var $4231 = $4234;
                        break;
                    case 'List.nil':
                        var $4247 = _state$1;
                        var $4231 = $4247;
                        break;
                };
                var $4225 = $4231;
                break;
        };
        return $4225;
    };
    const Kindelia$normalize$many = x0 => Kindelia$normalize$many$(x0);

    function Kindelia$normalize$cases$(_ctrs$1, _name$2, _state$3) {
        var self = _state$3;
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4249 = self.world;
                var $4250 = self.subst;
                var $4251 = self.fresh;
                var $4252 = self.gas;
                var $4253 = self.term;
                var self = _ctrs$1;
                switch (self._) {
                    case 'List.cons':
                        var $4255 = self.head;
                        var $4256 = self.tail;
                        var self = $4253;
                        switch (self._) {
                            case 'List.cons':
                                var $4258 = self.head;
                                var $4259 = self.tail;
                                var _nams$13 = List$map$(a1 => ((_name$2 + ".") + a1), (() => {
                                    var self = $4255;
                                    switch (self._) {
                                        case 'Kindelia.Constructor.new':
                                            var $4261 = self.fnam;
                                            var $4262 = $4261;
                                            return $4262;
                                    };
                                })());
                                var _vals$14 = List$map$(Kindelia$Term$var, _nams$13);
                                var _subst$15 = Kindelia$extend$($4250, _nams$13, _vals$14);
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4249, _subst$15, $4251, $4252, $4258));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4263 = self.world;
                                        var $4264 = self.subst;
                                        var $4265 = self.fresh;
                                        var $4266 = self.gas;
                                        var $4267 = self.term;
                                        var self = Kindelia$normalize$cases$($4256, _name$2, Kindelia$Runtime$new$($4263, $4264, $4265, $4266, $4259));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4269 = self.world;
                                                var $4270 = self.subst;
                                                var $4271 = self.fresh;
                                                var $4272 = self.gas;
                                                var $4273 = self.term;
                                                var $4274 = Kindelia$Runtime$new$($4269, $4270, $4271, $4272, List$cons$($4267, $4273));
                                                var $4268 = $4274;
                                                break;
                                        };
                                        var $4260 = $4268;
                                        break;
                                };
                                var $4257 = $4260;
                                break;
                            case 'List.nil':
                                var $4275 = _state$3;
                                var $4257 = $4275;
                                break;
                        };
                        var $4254 = $4257;
                        break;
                    case 'List.nil':
                        var self = $4253;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $4277 = _state$3;
                                var $4276 = $4277;
                                break;
                        };
                        var $4254 = $4276;
                        break;
                };
                var $4248 = $4254;
                break;
        };
        return $4248;
    };
    const Kindelia$normalize$cases = x0 => x1 => x2 => Kindelia$normalize$cases$(x0, x1, x2);

    function Kindelia$normalize$(_state$1) {
        var self = Kindelia$reduce$(_state$1);
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4279 = self.world;
                var $4280 = self.subst;
                var $4281 = self.fresh;
                var $4282 = self.gas;
                var $4283 = self.term;
                var self = $4283;
                switch (self._) {
                    case 'Kindelia.Term.create':
                        var $4285 = self.ctor;
                        var $4286 = self.vals;
                        var self = Kindelia$normalize$many$(Kindelia$Runtime$new$($4279, $4280, $4281, $4282, $4286));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4288 = self.world;
                                var $4289 = self.subst;
                                var $4290 = self.fresh;
                                var $4291 = self.gas;
                                var $4292 = self.term;
                                var $4293 = Kindelia$Runtime$new$($4288, $4289, $4290, $4291, Kindelia$Term$create$($4285, $4292));
                                var $4287 = $4293;
                                break;
                        };
                        var $4284 = $4287;
                        break;
                    case 'Kindelia.Term.match':
                        var $4294 = self.name;
                        var $4295 = self.data;
                        var $4296 = self.cses;
                        var self = Kindelia$get_constructors$($4279, $4295);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4298 = self.value;
                                var _ctrs$11 = $4298;
                                var self = _ctrs$11;
                                switch (self._) {
                                    case 'List.nil':
                                        var self = Kindelia$normalize$cases$(_ctrs$11, $4294, Kindelia$Runtime$new$($4279, $4280, $4281, $4282, $4296));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4301 = self.world;
                                                var $4302 = self.subst;
                                                var $4303 = self.fresh;
                                                var $4304 = self.gas;
                                                var $4305 = self.term;
                                                var $4306 = Kindelia$Runtime$new$($4301, $4302, $4303, $4304, Kindelia$Term$match$($4294, $4295, $4305));
                                                var $4300 = $4306;
                                                break;
                                        };
                                        var $4299 = $4300;
                                        break;
                                    case 'List.cons':
                                        var self = Kindelia$normalize$cases$(_ctrs$11, $4294, Kindelia$Runtime$new$($4279, $4280, $4281, $4282, $4296));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4308 = self.world;
                                                var $4309 = self.subst;
                                                var $4310 = self.fresh;
                                                var $4311 = self.gas;
                                                var $4312 = self.term;
                                                var $4313 = Kindelia$Runtime$new$($4308, $4309, $4310, $4311, Kindelia$Term$match$($4294, $4295, $4312));
                                                var $4307 = $4313;
                                                break;
                                        };
                                        var $4299 = $4307;
                                        break;
                                };
                                var $4297 = $4299;
                                break;
                            case 'Maybe.none':
                                var $4314 = Kindelia$Runtime$new$($4279, $4280, $4281, $4282, $4283);
                                var $4297 = $4314;
                                break;
                        };
                        var $4284 = $4297;
                        break;
                    case 'Kindelia.Term.compare':
                        var $4315 = self.val0;
                        var $4316 = self.val1;
                        var $4317 = self.iflt;
                        var $4318 = self.ifeq;
                        var $4319 = self.ifgt;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4279, $4280, $4281, $4282, $4315));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4321 = self.world;
                                var $4322 = self.subst;
                                var $4323 = self.fresh;
                                var $4324 = self.gas;
                                var $4325 = self.term;
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4321, $4322, $4323, $4324, $4316));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4327 = self.world;
                                        var $4328 = self.subst;
                                        var $4329 = self.fresh;
                                        var $4330 = self.gas;
                                        var $4331 = self.term;
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4327, $4328, $4329, $4330, $4317));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4333 = self.world;
                                                var $4334 = self.subst;
                                                var $4335 = self.fresh;
                                                var $4336 = self.gas;
                                                var $4337 = self.term;
                                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4333, $4334, $4335, $4336, $4318));
                                                switch (self._) {
                                                    case 'Kindelia.Runtime.new':
                                                        var $4339 = self.world;
                                                        var $4340 = self.subst;
                                                        var $4341 = self.fresh;
                                                        var $4342 = self.gas;
                                                        var $4343 = self.term;
                                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4339, $4340, $4341, $4342, $4319));
                                                        switch (self._) {
                                                            case 'Kindelia.Runtime.new':
                                                                var $4345 = self.world;
                                                                var $4346 = self.subst;
                                                                var $4347 = self.fresh;
                                                                var $4348 = self.gas;
                                                                var $4349 = self.term;
                                                                var $4350 = Kindelia$Runtime$new$($4345, $4346, $4347, $4348, Kindelia$Term$compare$($4325, $4331, $4337, $4343, $4349));
                                                                var $4344 = $4350;
                                                                break;
                                                        };
                                                        var $4338 = $4344;
                                                        break;
                                                };
                                                var $4332 = $4338;
                                                break;
                                        };
                                        var $4326 = $4332;
                                        break;
                                };
                                var $4320 = $4326;
                                break;
                        };
                        var $4284 = $4320;
                        break;
                    case 'Kindelia.Term.operate':
                        var $4351 = self.oper;
                        var $4352 = self.val0;
                        var $4353 = self.val1;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4279, $4280, $4281, $4282, $4352));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4355 = self.world;
                                var $4356 = self.subst;
                                var $4357 = self.fresh;
                                var $4358 = self.gas;
                                var $4359 = self.term;
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4355, $4356, $4357, $4358, $4353));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4361 = self.world;
                                        var $4362 = self.subst;
                                        var $4363 = self.fresh;
                                        var $4364 = self.gas;
                                        var $4365 = self.term;
                                        var $4366 = Kindelia$Runtime$new$($4361, $4362, $4363, $4364, Kindelia$Term$operate$($4351, $4359, $4365));
                                        var $4360 = $4366;
                                        break;
                                };
                                var $4354 = $4360;
                                break;
                        };
                        var $4284 = $4354;
                        break;
                    case 'Kindelia.Term.set':
                        var $4367 = self.file;
                        var $4368 = self.expr;
                        var $4369 = self.body;
                        var self = Kindelia$get_file$($4279, $4367);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4371 = self.value;
                                var _file$11 = $4371;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4279, $4280, $4281, $4282, $4368));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4374 = self.world;
                                                var $4375 = self.subst;
                                                var $4376 = self.fresh;
                                                var $4377 = self.gas;
                                                var $4378 = self.term;
                                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4374, $4375, $4376, $4377, $4369));
                                                switch (self._) {
                                                    case 'Kindelia.Runtime.new':
                                                        var $4380 = self.world;
                                                        var $4381 = self.subst;
                                                        var $4382 = self.fresh;
                                                        var $4383 = self.gas;
                                                        var $4384 = self.term;
                                                        var $4385 = Kindelia$Runtime$new$($4380, $4381, $4382, $4383, Kindelia$Term$set$($4367, $4378, $4384));
                                                        var $4379 = $4385;
                                                        break;
                                                };
                                                var $4373 = $4379;
                                                break;
                                        };
                                        var $4372 = $4373;
                                        break;
                                };
                                var $4370 = $4372;
                                break;
                            case 'Maybe.none':
                                var $4386 = _state$1;
                                var $4370 = $4386;
                                break;
                        };
                        var $4284 = $4370;
                        break;
                    case 'Kindelia.Term.get':
                        var $4387 = self.name;
                        var $4388 = self.file;
                        var $4389 = self.body;
                        var self = Kindelia$get_file$($4279, $4388);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4391 = self.value;
                                var _file$11 = $4391;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4279, Map$set$($4387, Kindelia$Term$var$($4387), $4280), $4281, $4282, $4389));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4394 = self.world;
                                                var $4395 = self.subst;
                                                var $4396 = self.fresh;
                                                var $4397 = self.gas;
                                                var $4398 = self.term;
                                                var $4399 = Kindelia$Runtime$new$($4394, $4395, $4396, $4397, Kindelia$Term$get$($4387, $4388, $4398));
                                                var $4393 = $4399;
                                                break;
                                        };
                                        var $4392 = $4393;
                                        break;
                                };
                                var $4390 = $4392;
                                break;
                            case 'Maybe.none':
                                var $4400 = _state$1;
                                var $4390 = $4400;
                                break;
                        };
                        var $4284 = $4390;
                        break;
                    case 'Kindelia.Term.bind':
                        var $4401 = self.name;
                        var $4402 = self.type;
                        var $4403 = self.expr;
                        var $4404 = self.body;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4279, $4280, $4281, $4282, $4403));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4406 = self.world;
                                var $4407 = self.subst;
                                var $4408 = self.fresh;
                                var $4409 = self.gas;
                                var $4410 = self.term;
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4406, Map$set$($4401, Kindelia$Term$var$($4401), $4407), $4408, $4409, $4404));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4412 = self.world;
                                        var $4413 = self.subst;
                                        var $4414 = self.fresh;
                                        var $4415 = self.gas;
                                        var $4416 = self.term;
                                        var $4417 = Kindelia$Runtime$new$($4412, $4413, $4414, $4415, Kindelia$Term$bind$($4401, $4402, $4410, $4416));
                                        var $4411 = $4417;
                                        break;
                                };
                                var $4405 = $4411;
                                break;
                        };
                        var $4284 = $4405;
                        break;
                    case 'Kindelia.Term.return':
                        var $4418 = self.expr;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4279, $4280, $4281, $4282, $4418));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4420 = self.world;
                                var $4421 = self.subst;
                                var $4422 = self.fresh;
                                var $4423 = self.gas;
                                var $4424 = self.term;
                                var $4425 = Kindelia$Runtime$new$($4420, $4421, $4422, $4423, Kindelia$Term$return$($4424));
                                var $4419 = $4425;
                                break;
                        };
                        var $4284 = $4419;
                        break;
                    case 'Kindelia.Term.var':
                    case 'Kindelia.Term.call':
                    case 'Kindelia.Term.let':
                    case 'Kindelia.Term.word':
                        var $4426 = Kindelia$Runtime$new$($4279, $4280, $4281, $4282, $4283);
                        var $4284 = $4426;
                        break;
                };
                var $4278 = $4284;
                break;
        };
        return $4278;
    };
    const Kindelia$normalize = x0 => Kindelia$normalize$(x0);

    function Kindelia$run$(_state$1) {
        var self = Kindelia$reduce$(_state$1);
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4428 = self.world;
                var $4429 = self.subst;
                var $4430 = self.fresh;
                var $4431 = self.gas;
                var $4432 = self.term;
                var self = $4432;
                switch (self._) {
                    case 'Kindelia.Term.set':
                        var $4434 = self.file;
                        var $4435 = self.expr;
                        var $4436 = self.body;
                        var self = Kindelia$get_file$($4428, $4434);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4438 = self.value;
                                var _file$11 = $4438;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4428, $4429, $4430, $4431, $4435));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4441 = self.world;
                                                var $4442 = self.subst;
                                                var $4443 = self.fresh;
                                                var $4444 = self.gas;
                                                var $4445 = self.term;
                                                var _new_entry$21 = Kindelia$Entry$file$((() => {
                                                    var self = _file$11;
                                                    switch (self._) {
                                                        case 'Kindelia.File.new':
                                                            var $4447 = self.name;
                                                            var $4448 = self.ownr;
                                                            var $4449 = self.type;
                                                            var $4450 = Kindelia$File$new$($4447, $4448, $4449, $4445);
                                                            return $4450;
                                                    };
                                                })());
                                                var self = $4441;
                                                switch (self._) {
                                                    case 'Kindelia.World.new':
                                                        var $4451 = Kindelia$World$new$(Map$set$($4434, _new_entry$21, (() => {
                                                            var self = $4441;
                                                            switch (self._) {
                                                                case 'Kindelia.World.new':
                                                                    var $4452 = self.entry;
                                                                    var $4453 = $4452;
                                                                    return $4453;
                                                            };
                                                        })()));
                                                        var _new_world$22 = $4451;
                                                        break;
                                                };
                                                var $4446 = Kindelia$run$(Kindelia$Runtime$new$(_new_world$22, $4442, $4443, $4444, $4436));
                                                var $4440 = $4446;
                                                break;
                                        };
                                        var $4439 = $4440;
                                        break;
                                };
                                var $4437 = $4439;
                                break;
                            case 'Maybe.none':
                                var $4454 = _state$1;
                                var $4437 = $4454;
                                break;
                        };
                        var $4433 = $4437;
                        break;
                    case 'Kindelia.Term.get':
                        var $4455 = self.name;
                        var $4456 = self.file;
                        var $4457 = self.body;
                        var self = Kindelia$get_file$($4428, $4456);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4459 = self.value;
                                var _file$11 = $4459;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var $4461 = self.expr;
                                        var $4462 = Kindelia$run$(Kindelia$Runtime$new$($4428, Map$set$($4455, $4461, $4429), $4430, $4431, $4457));
                                        var $4460 = $4462;
                                        break;
                                };
                                var $4458 = $4460;
                                break;
                            case 'Maybe.none':
                                var $4463 = _state$1;
                                var $4458 = $4463;
                                break;
                        };
                        var $4433 = $4458;
                        break;
                    case 'Kindelia.Term.bind':
                        var $4464 = self.name;
                        var $4465 = self.type;
                        var $4466 = self.expr;
                        var $4467 = self.body;
                        var self = Kindelia$run$(Kindelia$Runtime$new$($4428, $4429, $4430, $4431, $4466));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4469 = self.world;
                                var $4470 = self.subst;
                                var $4471 = self.fresh;
                                var $4472 = self.gas;
                                var $4473 = self.term;
                                var self = $4473;
                                switch (self._) {
                                    case 'Kindelia.Term.return':
                                        var $4475 = self.expr;
                                        var $4476 = Kindelia$run$(Kindelia$Runtime$new$($4469, Map$set$($4464, $4475, $4470), $4471, $4472, $4467));
                                        var $4474 = $4476;
                                        break;
                                    case 'Kindelia.Term.var':
                                    case 'Kindelia.Term.call':
                                    case 'Kindelia.Term.let':
                                    case 'Kindelia.Term.create':
                                    case 'Kindelia.Term.match':
                                    case 'Kindelia.Term.word':
                                    case 'Kindelia.Term.compare':
                                    case 'Kindelia.Term.operate':
                                    case 'Kindelia.Term.set':
                                    case 'Kindelia.Term.get':
                                    case 'Kindelia.Term.bind':
                                        var $4477 = Kindelia$Runtime$new$($4469, $4470, $4471, $4472, Kindelia$Term$bind$($4464, $4465, $4473, $4467));
                                        var $4474 = $4477;
                                        break;
                                };
                                var $4468 = $4474;
                                break;
                        };
                        var $4433 = $4468;
                        break;
                    case 'Kindelia.Term.var':
                    case 'Kindelia.Term.call':
                    case 'Kindelia.Term.let':
                    case 'Kindelia.Term.create':
                    case 'Kindelia.Term.match':
                    case 'Kindelia.Term.word':
                    case 'Kindelia.Term.compare':
                    case 'Kindelia.Term.operate':
                    case 'Kindelia.Term.return':
                        var $4478 = Kindelia$Runtime$new$($4428, $4429, $4430, $4431, $4432);
                        var $4433 = $4478;
                        break;
                };
                var $4427 = $4433;
                break;
        };
        return $4427;
    };
    const Kindelia$run = x0 => Kindelia$run$(x0);

    function Kindelia$show$type$(_world$1, _type$2) {
        var self = _type$2;
        switch (self._) {
            case 'Kindelia.Type.data':
                var $4480 = self.name;
                var $4481 = $4480;
                var $4479 = $4481;
                break;
            case 'Kindelia.Type.effe':
                var $4482 = self.rety;
                var $4483 = ("& " + Kindelia$show$type$(_world$1, $4482));
                var $4479 = $4483;
                break;
            case 'Kindelia.Type.word':
                var $4484 = "#word";
                var $4479 = $4484;
                break;
        };
        return $4479;
    };
    const Kindelia$show$type = x0 => x1 => Kindelia$show$type$(x0, x1);

    function Word$show$(_size$1, _a$2) {
        var $4485 = Nat$show$(Word$to_nat$(_a$2));
        return $4485;
    };
    const Word$show = x0 => x1 => Word$show$(x0, x1);
    const U64$show = a0 => (String(a0));

    function String$is_empty$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $4487 = Bool$true;
            var $4486 = $4487;
        } else {
            var $4488 = self.charCodeAt(0);
            var $4489 = self.slice(1);
            var $4490 = Bool$false;
            var $4486 = $4490;
        };
        return $4486;
    };
    const String$is_empty = x0 => String$is_empty$(x0);

    function Kindelia$show$term$(_world$1, _term$2) {
        var self = _term$2;
        switch (self._) {
            case 'Kindelia.Term.var':
                var $4492 = self.name;
                var $4493 = $4492;
                var $4491 = $4493;
                break;
            case 'Kindelia.Term.call':
                var $4494 = self.bond;
                var $4495 = self.args;
                var _bond$5 = $4494;
                var _args$6 = List$map$(Kindelia$show$term(_world$1), $4495);
                var $4496 = (_bond$5 + ("(" + (String$join$(",", _args$6) + ")")));
                var $4491 = $4496;
                break;
            case 'Kindelia.Term.let':
                var $4497 = self.name;
                var $4498 = self.type;
                var $4499 = self.expr;
                var $4500 = self.body;
                var _name$7 = $4497;
                var _type$8 = Kindelia$show$type$(_world$1, $4498);
                var _expr$9 = Kindelia$show$term$(_world$1, $4499);
                var _body$10 = Kindelia$show$term$(_world$1, $4500);
                var $4501 = ("let " + (_name$7 + (" : " + (_type$8 + (" = " + (_expr$9 + (" " + _body$10)))))));
                var $4491 = $4501;
                break;
            case 'Kindelia.Term.create':
                var $4502 = self.ctor;
                var $4503 = self.vals;
                var _vals$5 = List$mapped$($4503, Kindelia$show$term(_world$1));
                var $4504 = ($4502 + ("{" + (String$join$(",", _vals$5) + "}")));
                var $4491 = $4504;
                break;
            case 'Kindelia.Term.match':
                var $4505 = self.name;
                var $4506 = self.data;
                var $4507 = self.cses;
                var self = Kindelia$get_data$(_world$1, $4506);
                switch (self._) {
                    case 'Maybe.some':
                        var $4509 = self.value;
                        var _data$7 = $4509;
                        var self = _data$7;
                        switch (self._) {
                            case 'Kindelia.Data.new':
                                var $4511 = self.constructors;
                                var _name$10 = $4505;
                                var _cses$11 = List$zipped_with$($4511, $4507, (_case_ctor$11 => _case_body$12 => {
                                    var $4513 = ((() => {
                                        var self = _case_ctor$11;
                                        switch (self._) {
                                            case 'Kindelia.Constructor.new':
                                                var $4514 = self.name;
                                                var $4515 = $4514;
                                                return $4515;
                                        };
                                    })() + (": " + Kindelia$show$term$(_world$1, _case_body$12)));
                                    return $4513;
                                }));
                                var $4512 = ("case " + (_name$10 + (" : " + ($4506 + (" { " + (String$join$(", ", _cses$11) + " }"))))));
                                var $4510 = $4512;
                                break;
                        };
                        var $4508 = $4510;
                        break;
                    case 'Maybe.none':
                        var $4516 = "?";
                        var $4508 = $4516;
                        break;
                };
                var $4491 = $4508;
                break;
            case 'Kindelia.Term.word':
                var $4517 = self.numb;
                var $4518 = ("#" + (String($4517)));
                var $4491 = $4518;
                break;
            case 'Kindelia.Term.compare':
                var $4519 = self.val0;
                var $4520 = self.val1;
                var $4521 = self.iflt;
                var $4522 = self.ifeq;
                var $4523 = self.ifgt;
                var _val0$8 = Kindelia$show$term$(_world$1, $4519);
                var _val1$9 = Kindelia$show$term$(_world$1, $4520);
                var _iflt$10 = Kindelia$show$term$(_world$1, $4521);
                var _ifeq$11 = Kindelia$show$term$(_world$1, $4522);
                var _ifgt$12 = Kindelia$show$term$(_world$1, $4523);
                var $4524 = ("compare " + (_val0$8 + (" " + (_val1$9 + (" { _<_: " + (_iflt$10 + (" _=_: " + (_ifeq$11 + (" _>_: " + (_ifgt$12 + " }"))))))))));
                var $4491 = $4524;
                break;
            case 'Kindelia.Term.operate':
                var $4525 = self.oper;
                var $4526 = self.val0;
                var $4527 = self.val1;
                var self = $4525;
                switch (self._) {
                    case 'Kindelia.Operation.add':
                        var $4529 = "+";
                        var _oper$6 = $4529;
                        break;
                    case 'Kindelia.Operation.sub':
                        var $4530 = "-";
                        var _oper$6 = $4530;
                        break;
                    case 'Kindelia.Operation.mul':
                        var $4531 = "*";
                        var _oper$6 = $4531;
                        break;
                    case 'Kindelia.Operation.div':
                        var $4532 = "/";
                        var _oper$6 = $4532;
                        break;
                    case 'Kindelia.Operation.mod':
                        var $4533 = "%";
                        var _oper$6 = $4533;
                        break;
                    case 'Kindelia.Operation.or':
                        var $4534 = "|";
                        var _oper$6 = $4534;
                        break;
                    case 'Kindelia.Operation.and':
                        var $4535 = "&";
                        var _oper$6 = $4535;
                        break;
                    case 'Kindelia.Operation.xor':
                        var $4536 = "^";
                        var _oper$6 = $4536;
                        break;
                };
                var _val0$7 = Kindelia$show$term$(_world$1, $4526);
                var _val1$8 = Kindelia$show$term$(_world$1, $4527);
                var $4528 = (_oper$6 + ("(" + (_val0$7 + ("," + (_val1$8 + ")")))));
                var $4491 = $4528;
                break;
            case 'Kindelia.Term.set':
                var $4537 = self.file;
                var $4538 = self.expr;
                var $4539 = self.body;
                var _file$6 = $4537;
                var _expr$7 = Kindelia$show$term$(_world$1, $4538);
                var _body$8 = Kindelia$show$term$(_world$1, $4539);
                var $4540 = ("set " + (_file$6 + (" = " + (_expr$7 + ("; " + _body$8)))));
                var $4491 = $4540;
                break;
            case 'Kindelia.Term.get':
                var $4541 = self.name;
                var $4542 = self.file;
                var $4543 = self.body;
                var _file$6 = $4542;
                var _name$7 = $4541;
                var _body$8 = Kindelia$show$term$(_world$1, $4543);
                var $4544 = ("get " + (_name$7 + (" = " + (_file$6 + ("; " + _body$8)))));
                var $4491 = $4544;
                break;
            case 'Kindelia.Term.bind':
                var $4545 = self.name;
                var $4546 = self.type;
                var $4547 = self.expr;
                var $4548 = self.body;
                var _name$7 = $4545;
                var _type$8 = Kindelia$show$type$(_world$1, $4546);
                var _expr$9 = Kindelia$show$term$(_world$1, $4547);
                var _body$10 = Kindelia$show$term$(_world$1, $4548);
                var self = String$is_empty$(_name$7);
                if (self) {
                    var $4550 = ("run " + (_expr$9 + ("; " + _body$10)));
                    var $4549 = $4550;
                } else {
                    var $4551 = ("run " + (_name$7 + (" : " + (_type$8 + (" = " + (_expr$9 + ("; " + _body$10)))))));
                    var $4549 = $4551;
                };
                var $4491 = $4549;
                break;
            case 'Kindelia.Term.return':
                var $4552 = self.expr;
                var _expr$4 = Kindelia$show$term$(_world$1, $4552);
                var $4553 = ("return " + _expr$4);
                var $4491 = $4553;
                break;
        };
        return $4491;
    };
    const Kindelia$show$term = x0 => x1 => Kindelia$show$term$(x0, x1);

    function Kindelia$transact$(_world$1, _transaction$2) {
        var self = _world$1;
        switch (self._) {
            case 'Kindelia.World.new':
                var $4555 = self.entry;
                var self = _transaction$2;
                switch (self._) {
                    case 'Kindelia.Transaction.new_data':
                        var $4557 = self.data;
                        var _data$5 = $4557;
                        var self = _data$5;
                        switch (self._) {
                            case 'Kindelia.Data.new':
                                var $4559 = self.name;
                                var self = Map$get$($4559, $4555);
                                switch (self._) {
                                    case 'Maybe.none':
                                        var self = _world$1;
                                        switch (self._) {
                                            case 'Kindelia.World.new':
                                                var $4562 = Kindelia$World$new$(Map$set$($4559, Kindelia$Entry$data$(_data$5), $4555));
                                                var _world$8 = $4562;
                                                break;
                                        };
                                        var $4561 = Maybe$some$(Pair$new$(_world$8, ("[data] " + $4559)));
                                        var $4560 = $4561;
                                        break;
                                    case 'Maybe.some':
                                        var $4563 = Maybe$none;
                                        var $4560 = $4563;
                                        break;
                                };
                                var $4558 = $4560;
                                break;
                        };
                        var $4556 = $4558;
                        break;
                    case 'Kindelia.Transaction.new_bond':
                        var $4564 = self.bond;
                        var _bond$5 = $4564;
                        var self = _bond$5;
                        switch (self._) {
                            case 'Kindelia.Bond.new':
                                var $4566 = self.name;
                                var $4567 = self.inam;
                                var $4568 = self.ityp;
                                var $4569 = self.otyp;
                                var $4570 = self.main;
                                var self = Map$get$($4566, $4555);
                                switch (self._) {
                                    case 'Maybe.none':
                                        var self = _world$1;
                                        switch (self._) {
                                            case 'Kindelia.World.new':
                                                var $4573 = Kindelia$World$new$(Map$set$($4566, Kindelia$Entry$bond$(_bond$5), $4555));
                                                var _world$11 = $4573;
                                                break;
                                        };
                                        var _context$12 = Kindelia$extend$(Map$from_list$(List$nil), $4567, $4568);
                                        var self = Kindelia$check$(_context$12, _world$11, $4570, $4569, Maybe$some$($4566));
                                        if (self) {
                                            var $4574 = Maybe$some$(Pair$new$(_world$11, ("[bond] " + $4566)));
                                            var $4572 = $4574;
                                        } else {
                                            var $4575 = Maybe$none;
                                            var $4572 = $4575;
                                        };
                                        var $4571 = $4572;
                                        break;
                                    case 'Maybe.some':
                                        var $4576 = Maybe$none;
                                        var $4571 = $4576;
                                        break;
                                };
                                var $4565 = $4571;
                                break;
                        };
                        var $4556 = $4565;
                        break;
                    case 'Kindelia.Transaction.new_file':
                        var $4577 = self.file;
                        var _file$5 = $4577;
                        var self = _file$5;
                        switch (self._) {
                            case 'Kindelia.File.new':
                                var $4579 = self.name;
                                var $4580 = self.type;
                                var $4581 = self.expr;
                                var self = Map$get$($4579, $4555);
                                switch (self._) {
                                    case 'Maybe.none':
                                        var self = _world$1;
                                        switch (self._) {
                                            case 'Kindelia.World.new':
                                                var $4584 = Kindelia$World$new$(Map$set$($4579, Kindelia$Entry$file$(_file$5), $4555));
                                                var _world$10 = $4584;
                                                break;
                                        };
                                        var self = Kindelia$check$(Map$from_list$(List$nil), _world$10, $4581, $4580, Maybe$none);
                                        if (self) {
                                            var $4585 = Maybe$some$(Pair$new$(_world$10, ("[file] " + $4579)));
                                            var $4583 = $4585;
                                        } else {
                                            var $4586 = Maybe$none;
                                            var $4583 = $4586;
                                        };
                                        var $4582 = $4583;
                                        break;
                                    case 'Maybe.some':
                                        var $4587 = Maybe$none;
                                        var $4582 = $4587;
                                        break;
                                };
                                var $4578 = $4582;
                                break;
                        };
                        var $4556 = $4578;
                        break;
                    case 'Kindelia.Transaction.new_eval':
                        var $4588 = self.eval;
                        var _eval$5 = $4588;
                        var self = _eval$5;
                        switch (self._) {
                            case 'Kindelia.Eval.new':
                                var $4590 = self.term;
                                var $4591 = self.type;
                                var self = Kindelia$check$(Map$from_list$(List$nil), _world$1, $4590, $4591, Maybe$none);
                                if (self) {
                                    var _fresh$8 = 0n;
                                    var self = Kindelia$sanitize$(_world$1, Map$from_list$(List$nil), _fresh$8, $4590);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $4594 = self.fst;
                                            var $4595 = self.snd;
                                            var self = $4591;
                                            switch (self._) {
                                                case 'Kindelia.Type.word':
                                                case 'Kindelia.Type.data':
                                                    var $4597 = Kindelia$normalize$(Kindelia$Runtime$new$(_world$1, Map$from_list$(List$nil), $4594, 0n, $4595));
                                                    var self = $4597;
                                                    break;
                                                case 'Kindelia.Type.effe':
                                                    var $4598 = Kindelia$normalize$(Kindelia$run$(Kindelia$Runtime$new$(_world$1, Map$from_list$(List$nil), $4594, 0n, $4595)));
                                                    var self = $4598;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kindelia.Runtime.new':
                                                    var $4599 = self.world;
                                                    var $4600 = self.term;
                                                    var $4601 = Maybe$some$(Pair$new$($4599, ("[eval] " + Kindelia$show$term$($4599, $4600))));
                                                    var $4596 = $4601;
                                                    break;
                                            };
                                            var $4593 = $4596;
                                            break;
                                    };
                                    var $4592 = $4593;
                                } else {
                                    var $4602 = Maybe$none;
                                    var $4592 = $4602;
                                };
                                var $4589 = $4592;
                                break;
                        };
                        var $4556 = $4589;
                        break;
                };
                var $4554 = $4556;
                break;
        };
        return $4554;
    };
    const Kindelia$transact = x0 => x1 => Kindelia$transact$(x0, x1);

    function Kindelia$api$run$go$transactions$(_world$1, _block_number$2, _code$3, _transactions$4) {
        var self = _transactions$4;
        switch (self._) {
            case 'List.cons':
                var $4604 = self.head;
                var $4605 = self.tail;
                var self = Kindelia$transact$(_world$1, $4604);
                switch (self._) {
                    case 'Maybe.some':
                        var $4607 = self.value;
                        var self = $4607;
                        switch (self._) {
                            case 'Pair.new':
                                var $4609 = self.fst;
                                var $4610 = self.snd;
                                var $4611 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                                    var $4612 = _m$bind$10;
                                    return $4612;
                                }))(IO$print$(("- " + $4610)))((_$10 => {
                                    var $4613 = Kindelia$api$run$go$transactions$($4609, _block_number$2, _code$3, $4605);
                                    return $4613;
                                }));
                                var $4608 = $4611;
                                break;
                        };
                        var $4606 = $4608;
                        break;
                    case 'Maybe.none':
                        var $4614 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                            var $4615 = _m$bind$7;
                            return $4615;
                        }))(IO$print$("- [fail]"))((_$7 => {
                            var $4616 = Kindelia$api$run$go$transactions$(_world$1, _block_number$2, _code$3, $4605);
                            return $4616;
                        }));
                        var $4606 = $4614;
                        break;
                };
                var $4603 = $4606;
                break;
            case 'List.nil':
                var $4617 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $4618 = _m$bind$5;
                    return $4618;
                }))(IO$print$(""))((_$5 => {
                    var $4619 = Kindelia$api$run$go$(_world$1, Nat$succ$(_block_number$2), _code$3);
                    return $4619;
                }));
                var $4603 = $4617;
                break;
        };
        return $4603;
    };
    const Kindelia$api$run$go$transactions = x0 => x1 => x2 => x3 => Kindelia$api$run$go$transactions$(x0, x1, x2, x3);

    function Kindelia$api$run$go$(_world$1, _block_number$2, _code$3) {
        var _parsed$4 = Kindelia$parse$block$(_world$1)(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$3));
        var self = _parsed$4;
        switch (self._) {
            case 'Parser.Reply.error':
                var $4621 = self.err;
                var self = $4621;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $4623 = self.nam;
                        var $4624 = self.ini;
                        var $4625 = self.idx;
                        var $4626 = self.msg;
                        var self = ($4625 < String$length$(_code$3));
                        if (self) {
                            var _err$10 = ($4626 + (() => {
                                var self = $4623;
                                if (self.length === 0) {
                                    var $4629 = "";
                                    return $4629;
                                } else {
                                    var $4630 = self.charCodeAt(0);
                                    var $4631 = self.slice(1);
                                    var $4632 = (" Inside " + ($4623 + ":"));
                                    return $4632;
                                };
                            })());
                            var _hig$11 = Kind$Code$highlight$(_code$3, $4624, $4625, Nat$succ$($4625));
                            var _str$12 = String$flatten$(List$cons$(_err$10, List$cons$("\u{a}", List$cons$(_hig$11, List$nil))));
                            var $4628 = IO$monad$((_m$bind$13 => _m$pure$14 => {
                                var $4633 = _m$bind$13;
                                return $4633;
                            }))(IO$print$(("Error parsing block #" + Nat$show$(_block_number$2))))((_$13 => {
                                var $4634 = IO$print$(_str$12);
                                return $4634;
                            }));
                            var $4627 = $4628;
                        } else {
                            var $4635 = IO$print$("Done.");
                            var $4627 = $4635;
                        };
                        var $4622 = $4627;
                        break;
                };
                var $4620 = $4622;
                break;
            case 'Parser.Reply.value':
                var $4636 = self.pst;
                var $4637 = self.val;
                var _block$7 = $4637;
                var $4638 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                    var $4639 = _m$bind$8;
                    return $4639;
                }))(IO$print$(("Block #" + Nat$show$(_block_number$2))))((_$8 => {
                    var _bits_0$9 = Kindelia$serialize$block$(_world$1, _block$7);
                    var _bits_1$10 = Kindelia$serialize$block$(_world$1, (() => {
                        var self = Kindelia$deserialize$block$(_world$1, _bits_0$9);
                        switch (self._) {
                            case 'Pair.new':
                                var $4641 = self.snd;
                                var $4642 = $4641;
                                return $4642;
                        };
                    })());
                    var $4640 = IO$monad$((_m$bind$11 => _m$pure$12 => {
                        var $4643 = _m$bind$11;
                        return $4643;
                    }))(IO$print$(("$ " + (Bits$hex$encode$(_bits_0$9) + (" " + (() => {
                        var self = (_bits_1$10 === _bits_0$9);
                        if (self) {
                            var $4644 = "ok";
                            return $4644;
                        } else {
                            var $4645 = "bad_serialization";
                            return $4645;
                        };
                    })())))))((_$11 => {
                        var $4646 = Kindelia$api$run$go$transactions$(_world$1, _block_number$2, (() => {
                            var self = $4636;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4647 = self.str;
                                    var $4648 = $4647;
                                    return $4648;
                            };
                        })(), _block$7);
                        return $4646;
                    }));
                    return $4640;
                }));
                var $4620 = $4638;
                break;
        };
        return $4620;
    };
    const Kindelia$api$run$go = x0 => x1 => x2 => Kindelia$api$run$go$(x0, x1, x2);
    const Kindelia$genesis = Kindelia$World$new$(Map$from_list$(List$nil));

    function Kindelia$api$run$(_code$1) {
        var $4649 = Kindelia$api$run$go$(Kindelia$genesis, 0n, _code$1);
        return $4649;
    };
    const Kindelia$api$run = x0 => Kindelia$api$run$(x0);
    const Kindelia = (() => {
        var _x$1 = Kindelia$api$run;
        var $4650 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $4651 = _m$pure$3;
            return $4651;
        }))(Unit$new);
        return $4650;
    })();
    return {
        '$main$': () => run(Kindelia),
        'run': run,
        'Parser.Reply': Parser$Reply,
        'List': List,
        'Parser.Reply.error': Parser$Reply$error,
        'Bool.false': Bool$false,
        'Bool.true': Bool$true,
        'Nat.gtn': Nat$gtn,
        'Parser.Error.combine': Parser$Error$combine,
        'List.cons': List$cons,
        'Parser.Reply.value': Parser$Reply$value,
        'List.reverse.go': List$reverse$go,
        'List.nil': List$nil,
        'List.reverse': List$reverse,
        'Parser.until.go': Parser$until$go,
        'Parser.until': Parser$until,
        'Parser.many.go': Parser$many$go,
        'Parser.many': Parser$many,
        'Parser.Error.new': Parser$Error$new,
        'Parser.Reply.fail': Parser$Reply$fail,
        'Maybe.some': Maybe$some,
        'Maybe': Maybe,
        'Maybe.none': Maybe$none,
        'Parser.Error.maybe_combine': Parser$Error$maybe_combine,
        'Parser.State.new': Parser$State$new,
        'Parser.choice': Parser$choice,
        'Parser': Parser,
        'Unit.new': Unit$new,
        'String.cons': String$cons,
        'String.concat': String$concat,
        'Cmp.as_eql': Cmp$as_eql,
        'Cmp.ltn': Cmp$ltn,
        'Cmp.gtn': Cmp$gtn,
        'Word.cmp.go': Word$cmp$go,
        'Cmp.eql': Cmp$eql,
        'Word.cmp': Word$cmp,
        'Word.eql': Word$eql,
        'Nat.succ': Nat$succ,
        'Nat.zero': Nat$zero,
        'U16.eql': U16$eql,
        'String.nil': String$nil,
        'Parser.text.go': Parser$text$go,
        'Parser.text': Parser$text,
        'Parser.eof': Parser$eof,
        'Parser.one': Parser$one,
        'Kindelia.parse.ignore': Kindelia$parse$ignore,
        'Kindelia.parse.text': Kindelia$parse$text,
        'Parser.letter': Parser$letter,
        'Bool.and': Bool$and,
        'Cmp.as_lte': Cmp$as_lte,
        'Word.lte': Word$lte,
        'U16.lte': U16$lte,
        'U16.btw': U16$btw,
        'Kindelia.parse.letter': Kindelia$parse$letter,
        'List.fold': List$fold,
        'Kindelia.parse.name': Kindelia$parse$name,
        'Parser.wrap': Parser$wrap,
        'Pair': Pair,
        'Parser.maybe': Parser$maybe,
        'Kindelia.Type.effe': Kindelia$Type$effe,
        'Kindelia.Type.word': Kindelia$Type$word,
        'Kindelia.Type.data': Kindelia$Type$data,
        'Kindelia.parse.type': Kindelia$parse$type,
        'Pair.new': Pair$new,
        'Kindelia.parse.ann': Kindelia$parse$ann,
        'List.mapped': List$mapped,
        'Kindelia.Constructor.new': Kindelia$Constructor$new,
        'Kindelia.parse.constructor': Kindelia$parse$constructor,
        'Kindelia.Data.new': Kindelia$Data$new,
        'Kindelia.parse.data': Kindelia$parse$data,
        'Kindelia.Transaction.new_data': Kindelia$Transaction$new_data,
        'Kindelia.Term.let': Kindelia$Term$let,
        'Kindelia.parse.term.let': Kindelia$parse$term$let,
        'Kindelia.Term.create': Kindelia$Term$create,
        'Kindelia.parse.term.create': Kindelia$parse$term$create,
        'Maybe.bind': Maybe$bind,
        'Maybe.monad': Maybe$monad,
        'BBT.lookup': BBT$lookup,
        'Cmp.as_ltn': Cmp$as_ltn,
        'Word.ltn': Word$ltn,
        'U16.ltn': U16$ltn,
        'U16.cmp': U16$cmp,
        'String.cmp': String$cmp,
        'Map.get': Map$get,
        'Kindelia.get_data': Kindelia$get_data,
        'Parser.fail': Parser$fail,
        'Kindelia.parse.term.match.cases': Kindelia$parse$term$match$cases,
        'Kindelia.Term.match': Kindelia$Term$match,
        'Kindelia.parse.term.match': Kindelia$parse$term$match,
        'Parser.many1': Parser$many1,
        'Parser.digit': Parser$digit,
        'Nat.add': Nat$add,
        'Nat.mul': Nat$mul,
        'Nat.from_base.go': Nat$from_base$go,
        'Nat.from_base': Nat$from_base,
        'Parser.nat': Parser$nat,
        'Nat.gte': Nat$gte,
        'Nat.pow.aux': Nat$pow$aux,
        'Nat.pow': Nat$pow,
        'Kindelia.Term.word': Kindelia$Term$word,
        'U64.new': U64$new,
        'Nat.apply': Nat$apply,
        'Word': Word,
        'Word.e': Word$e,
        'Word.i': Word$i,
        'Word.o': Word$o,
        'Word.inc': Word$inc,
        'Word.zero': Word$zero,
        'Nat.to_word': Nat$to_word,
        'Nat.to_u64': Nat$to_u64,
        'Kindelia.parse.term.word': Kindelia$parse$term$word,
        'Kindelia.Term.compare': Kindelia$Term$compare,
        'Kindelia.parse.term.compare': Kindelia$parse$term$compare,
        'Kindelia.Operation.add': Kindelia$Operation$add,
        'Kindelia.Operation.sub': Kindelia$Operation$sub,
        'Kindelia.Operation.mul': Kindelia$Operation$mul,
        'Kindelia.Operation.div': Kindelia$Operation$div,
        'Kindelia.Operation.mod': Kindelia$Operation$mod,
        'Kindelia.Operation.or': Kindelia$Operation$or,
        'Kindelia.Operation.and': Kindelia$Operation$and,
        'Kindelia.Operation.xor': Kindelia$Operation$xor,
        'Kindelia.parse.term.operation': Kindelia$parse$term$operation,
        'Kindelia.Term.operate': Kindelia$Term$operate,
        'Kindelia.parse.term.operate': Kindelia$parse$term$operate,
        'Kindelia.Term.set': Kindelia$Term$set,
        'Kindelia.parse.term.set': Kindelia$parse$term$set,
        'Kindelia.Term.get': Kindelia$Term$get,
        'Kindelia.parse.term.get': Kindelia$parse$term$get,
        'Kindelia.Term.bind': Kindelia$Term$bind,
        'Kindelia.parse.term.bind': Kindelia$parse$term$bind,
        'Kindelia.Term.return': Kindelia$Term$return,
        'Kindelia.parse.term.return': Kindelia$parse$term$return,
        'Kindelia.Term.call': Kindelia$Term$call,
        'Kindelia.parse.term.call': Kindelia$parse$term$call,
        'Kindelia.Term.var': Kindelia$Term$var,
        'Kindelia.parse.term.var': Kindelia$parse$term$var,
        'Kindelia.parse.term': Kindelia$parse$term,
        'Kindelia.Bond.new': Kindelia$Bond$new,
        'Kindelia.parse.bond': Kindelia$parse$bond,
        'Kindelia.Transaction.new_bond': Kindelia$Transaction$new_bond,
        'Maybe.default': Maybe$default,
        'Kindelia.File.new': Kindelia$File$new,
        'Kindelia.parse.file': Kindelia$parse$file,
        'Kindelia.Transaction.new_file': Kindelia$Transaction$new_file,
        'Kindelia.Eval.new': Kindelia$Eval$new,
        'Kindelia.parse.eval': Kindelia$parse$eval,
        'Kindelia.Transaction.new_eval': Kindelia$Transaction$new_eval,
        'Kindelia.parse.transaction': Kindelia$parse$transaction,
        'Kindelia.parse.block': Kindelia$parse$block,
        'IO': IO,
        'Nat.ltn': Nat$ltn,
        'String.length.go': String$length$go,
        'String.length': String$length,
        'String.flatten.go': String$flatten$go,
        'String.flatten': String$flatten,
        'String.join.go': String$join$go,
        'String.join': String$join,
        'Kind.Code.highlight.end': Kind$Code$highlight$end,
        'Maybe.extract': Maybe$extract,
        'Nat.is_zero': Nat$is_zero,
        'Nat.double': Nat$double,
        'Nat.pred': Nat$pred,
        'String.reverse.go': String$reverse$go,
        'String.reverse': String$reverse,
        'String.pad_right': String$pad_right,
        'String.pad_left': String$pad_left,
        'Either': Either,
        'Either.left': Either$left,
        'Either.right': Either$right,
        'Nat.sub_rem': Nat$sub_rem,
        'Nat.div_mod.go': Nat$div_mod$go,
        'Nat.div_mod': Nat$div_mod,
        'Nat.to_base.go': Nat$to_base$go,
        'Nat.to_base': Nat$to_base,
        'Nat.mod.go': Nat$mod$go,
        'Nat.mod': Nat$mod,
        'Nat.lte': Nat$lte,
        'List.at': List$at,
        'Nat.show_digit': Nat$show_digit,
        'Nat.to_string_base': Nat$to_string_base,
        'Nat.show': Nat$show,
        'Bool.not': Bool$not,
        'U16.new': U16$new,
        'Nat.to_u16': Nat$to_u16,
        'Kind.Code.color': Kind$Code$color,
        'Nat.eql': Nat$eql,
        'List.take': List$take,
        'Kind.Code.highlight.go': Kind$Code$highlight$go,
        'Kind.Code.highlight': Kind$Code$highlight,
        'IO.ask': IO$ask,
        'IO.bind': IO$bind,
        'IO.end': IO$end,
        'IO.monad': IO$monad,
        'IO.put_string': IO$put_string,
        'IO.print': IO$print,
        'Bits.e': Bits$e,
        'Bits.o': Bits$o,
        'Word.subber': Word$subber,
        'Word.sub': Word$sub,
        'U16.sub': U16$sub,
        'Word.adder': Word$adder,
        'Word.add': Word$add,
        'U16.add': U16$add,
        'Pair.fst': Pair$fst,
        'Nat.div': Nat$div,
        'Bits.i': Bits$i,
        'Kindelia.serialize.fixlen': Kindelia$serialize$fixlen,
        'Word.fold': Word$fold,
        'Word.to_nat': Word$to_nat,
        'U16.to_nat': U16$to_nat,
        'Bits.concat': Bits$concat,
        'Kindelia.serialize.name': Kindelia$serialize$name,
        'Kindelia.serialize.list': Kindelia$serialize$list,
        'Kindelia.serialize.type': Kindelia$serialize$type,
        'Kindelia.serialize.constructor': Kindelia$serialize$constructor,
        'Kindelia.serialize.data': Kindelia$serialize$data,
        'List.find_index.go': List$find_index$go,
        'List.find_index': List$find_index,
        'String.eql': String$eql,
        'Kindelia.serialize.varlen.go': Kindelia$serialize$varlen$go,
        'Kindelia.serialize.varlen': Kindelia$serialize$varlen,
        'Kindelia.serialize.name.local': Kindelia$serialize$name$local,
        'List.map': List$map,
        'List.concat': List$concat,
        'Kindelia.serialize.cases': Kindelia$serialize$cases,
        'Kindelia.get_constructors': Kindelia$get_constructors,
        'U64.to_nat': U64$to_nat,
        'Kindelia.serialize.term': Kindelia$serialize$term,
        'Kindelia.serialize.bond': Kindelia$serialize$bond,
        'Kindelia.serialize.file': Kindelia$serialize$file,
        'Kindelia.serialize.eval': Kindelia$serialize$eval,
        'Kindelia.serialize.transaction': Kindelia$serialize$transaction,
        'Kindelia.serialize.block': Kindelia$serialize$block,
        'Bits.is_empty': Bits$is_empty,
        'Kindelia.deserialize.fixlen': Kindelia$deserialize$fixlen,
        'U16.from_nat': U16$from_nat,
        'Kindelia.deserialize.name': Kindelia$deserialize$name,
        'Kindelia.deserialize.list': Kindelia$deserialize$list,
        'Kindelia.deserialize.type': Kindelia$deserialize$type,
        'Kindelia.deserialize.constructor': Kindelia$deserialize$constructor,
        'Kindelia.deserialize.data': Kindelia$deserialize$data,
        'U64.from_nat': U64$from_nat,
        'Kindelia.deserialize.varlen.go': Kindelia$deserialize$varlen$go,
        'Nat.sub': Nat$sub,
        'Kindelia.deserialize.varlen': Kindelia$deserialize$varlen,
        'List.get': List$get,
        'Kindelia.deserialize.name.local': Kindelia$deserialize$name$local,
        'Kindelia.deserialize.cases': Kindelia$deserialize$cases,
        'Kindelia.deserialize.term': Kindelia$deserialize$term,
        'Kindelia.deserialize.bond': Kindelia$deserialize$bond,
        'Kindelia.deserialize.file': Kindelia$deserialize$file,
        'Kindelia.deserialize.eval': Kindelia$deserialize$eval,
        'Kindelia.deserialize.transaction': Kindelia$deserialize$transaction,
        'Kindelia.deserialize.block': Kindelia$deserialize$block,
        'Bits.hex.encode': Bits$hex$encode,
        'Bits.eql': Bits$eql,
        'Kindelia.World.new': Kindelia$World$new,
        'BBT': BBT,
        'BBT.bin': BBT$bin,
        'U32.new': U32$new,
        'Nat.to_u32': Nat$to_u32,
        'BBT.tip': BBT$tip,
        'BBT.singleton': BBT$singleton,
        'BBT.size': BBT$size,
        'U32.add': U32$add,
        'Word.shift_left.one.go': Word$shift_left$one$go,
        'Word.shift_left.one': Word$shift_left$one,
        'Word.shift_left': Word$shift_left,
        'Word.mul.go': Word$mul$go,
        'Word.to_zero': Word$to_zero,
        'Word.mul': Word$mul,
        'U32.mul': U32$mul,
        'BBT.w': BBT$w,
        'U32.ltn': U32$ltn,
        'U32.from_nat': U32$from_nat,
        'BBT.node': BBT$node,
        'Cmp.as_gtn': Cmp$as_gtn,
        'Word.gtn': Word$gtn,
        'U32.gtn': U32$gtn,
        'BBT.balance': BBT$balance,
        'BBT.insert': BBT$insert,
        'Map.set': Map$set,
        'Kindelia.Entry.data': Kindelia$Entry$data,
        'Kindelia.Entry.bond': Kindelia$Entry$bond,
        'Map': Map,
        'Kindelia.extend': Kindelia$extend,
        'Pair.snd': Pair$snd,
        'BBT.from_list.go': BBT$from_list$go,
        'BBT.from_list': BBT$from_list,
        'Map.from_list': Map$from_list,
        'Kindelia.equal': Kindelia$equal,
        'Kindelia.get_bond': Kindelia$get_bond,
        'List.zip': List$zip,
        'List.all': List$all,
        'Maybe.mapped': Maybe$mapped,
        'List.ifind.go': List$ifind$go,
        'List.ifind': List$ifind,
        'Kindelia.get_constructor_value': Kindelia$get_constructor_value,
        'List.length': List$length,
        'List.zip_with': List$zip_with,
        'List.zipped_with': List$zipped_with,
        'List.and': List$and,
        'Kindelia.get_file': Kindelia$get_file,
        'List.is_empty': List$is_empty,
        'Maybe.if': Maybe$if,
        'List.find': List$find,
        'List.in': List$in,
        'Bool.or': Bool$or,
        'Kindelia.check': Kindelia$check,
        'Kindelia.Entry.file': Kindelia$Entry$file,
        'Kindelia.sanitize.many': Kindelia$sanitize$many,
        'Triple.new': Triple$new,
        'Kindelia.rename': Kindelia$rename,
        'List.for': List$for,
        'Kindelia.sanitize.cases': Kindelia$sanitize$cases,
        'Kindelia.sanitize': Kindelia$sanitize,
        'Kindelia.Runtime': Kindelia$Runtime,
        'Kindelia.Runtime.new': Kindelia$Runtime$new,
        'Triple': Triple,
        'Kindelia.rename.many': Kindelia$rename$many,
        'Kindelia.get_constructor_index': Kindelia$get_constructor_index,
        'U64.ltn': U64$ltn,
        'U64.eql': U64$eql,
        'U64.cmp': U64$cmp,
        'U64.add': U64$add,
        'U64.sub': U64$sub,
        'U64.mul': U64$mul,
        'Word.bit_length.go': Word$bit_length$go,
        'Word.bit_length': Word$bit_length,
        'Cmp.as_gte': Cmp$as_gte,
        'Word.gte': Word$gte,
        'Word.or': Word$or,
        'Word.shift_right.one.go': Word$shift_right$one$go,
        'Word.shift_right.one': Word$shift_right$one,
        'Word.shift_right': Word$shift_right,
        'Word.div.go': Word$div$go,
        'Word.div': Word$div,
        'U64.div': U64$div,
        'Word.mod': Word$mod,
        'U64.mod': U64$mod,
        'U64.or': U64$or,
        'Word.and': Word$and,
        'U64.and': U64$and,
        'Word.xor': Word$xor,
        'U64.xor': U64$xor,
        'Kindelia.reduce': Kindelia$reduce,
        'Kindelia.normalize.many': Kindelia$normalize$many,
        'Kindelia.normalize.cases': Kindelia$normalize$cases,
        'Kindelia.normalize': Kindelia$normalize,
        'Kindelia.run': Kindelia$run,
        'Kindelia.show.type': Kindelia$show$type,
        'Word.show': Word$show,
        'U64.show': U64$show,
        'String.is_empty': String$is_empty,
        'Kindelia.show.term': Kindelia$show$term,
        'Kindelia.transact': Kindelia$transact,
        'Kindelia.api.run.go.transactions': Kindelia$api$run$go$transactions,
        'Kindelia.api.run.go': Kindelia$api$run$go,
        'Kindelia.genesis': Kindelia$genesis,
        'Kindelia.api.run': Kindelia$api$run,
        'Kindelia': Kindelia,
    };
})();
module.exports['$main$']();