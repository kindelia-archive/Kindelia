module.exports = (function() {
    function word_to_u16(w) {
        var u = 0;
        for (var i = 0; i < 16; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u16_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 16; ++i) {
            w = {
                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u16_to_bits(x) {
        var s = '';
        for (var i = 0; i < 16; ++i) {
            s = (x & 1 ? '1' : '0') + s;
            x = x >>> 1;
        }
        return s;
    };

    function word_to_u32(w) {
        var u = 0;
        for (var i = 0; i < 32; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u32_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 32; ++i) {
            w = {
                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u32_for(state, from, til, func) {
        for (var i = from; i < til; ++i) {
            state = func(i)(state);
        }
        return state;
    };

    function word_to_u64(w) {
        var u = 0n;
        for (var i = 0n; i < 64n; i += 1n) {
            u = u | (w._ === 'Word.i' ? 1n << i : 0n);
            w = w.pred;
        };
        return u;
    };

    function u64_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0n; i < 64n; i += 1n) {
            w = {
                _: (u >> (64n - i - 1n)) & 1n ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };
    var list_for = list => nil => cons => {
        while (list._ !== 'List.nil') {
            nil = cons(list.head)(nil);
            list = list.tail;
        }
        return nil;
    };
    var list_length = list => {
        var len = 0;
        while (list._ === 'List.cons') {
            len += 1;
            list = list.tail;
        };
        return BigInt(len);
    };
    const inst_unit = x => x(null);
    const elim_unit = (x => {
        var $1 = (() => c0 => {
            var self = x;
            switch ("unit") {
                case 'unit':
                    var $0 = c0;
                    return $0;
            };
        })();
        return $1;
    });
    const inst_bool = x => x(true)(false);
    const elim_bool = (x => {
        var $4 = (() => c0 => c1 => {
            var self = x;
            if (self) {
                var $2 = c0;
                return $2;
            } else {
                var $3 = c1;
                return $3;
            };
        })();
        return $4;
    });
    const inst_nat = x => x(0n)(x0 => 1n + x0);
    const elim_nat = (x => {
        var $8 = (() => c0 => c1 => {
            var self = x;
            if (self === 0n) {
                var $5 = c0;
                return $5;
            } else {
                var $6 = (self - 1n);
                var $7 = c1($6);
                return $7;
            };
        })();
        return $8;
    });
    const inst_bits = x => x('')(x0 => x0 + '0')(x0 => x0 + '1');
    const elim_bits = (x => {
        var $14 = (() => c0 => c1 => c2 => {
            var self = x;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $9 = self.slice(0, -1);
                    var $10 = c1($9);
                    return $10;
                case 'i':
                    var $11 = self.slice(0, -1);
                    var $12 = c2($11);
                    return $12;
                case 'e':
                    var $13 = c0;
                    return $13;
            };
        })();
        return $14;
    });
    const inst_u16 = x => x(x0 => word_to_u16(x0));
    const elim_u16 = (x => {
        var $17 = (() => c0 => {
            var self = x;
            switch ('u16') {
                case 'u16':
                    var $15 = u16_to_word(self);
                    var $16 = c0($15);
                    return $16;
            };
        })();
        return $17;
    });
    const inst_u32 = x => x(x0 => word_to_u32(x0));
    const elim_u32 = (x => {
        var $20 = (() => c0 => {
            var self = x;
            switch ('u32') {
                case 'u32':
                    var $18 = u32_to_word(self);
                    var $19 = c0($18);
                    return $19;
            };
        })();
        return $20;
    });
    const inst_u64 = x => x(x0 => word_to_u64(x0));
    const elim_u64 = (x => {
        var $23 = (() => c0 => {
            var self = x;
            switch ('u64') {
                case 'u64':
                    var $21 = u64_to_word(self);
                    var $22 = c0($21);
                    return $22;
            };
        })();
        return $23;
    });
    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));
    const elim_string = (x => {
        var $28 = (() => c0 => c1 => {
            var self = x;
            if (self.length === 0) {
                var $24 = c0;
                return $24;
            } else {
                var $25 = self.charCodeAt(0);
                var $26 = self.slice(1);
                var $27 = c1($25)($26);
                return $27;
            };
        })();
        return $28;
    });
    var run = (p) => {
        if (typeof window === 'undefined') {
            var rl = eval("require('readline')").createInterface({
                input: process.stdin,
                output: process.stdout,
                terminal: false
            });
            var fs = eval("require('fs')");
            var pc = eval("process");
            var ht = eval("require('http')");
            var hs = eval("require('https')");
            var dg = eval("require('dgram')");
        } else {
            var rl = {
                question: (x, f) => f(''),
                close: () => {}
            };
            var fs = {
                readFileSync: () => ''
            };
            var pc = {
                exit: () => {},
                argv: []
            };
            var ht = null;
            var hs = null;
            var dg = null;
        };
        var lib = {
            rl,
            fs,
            pc,
            ht,
            hs,
            dg
        };
        return run_io(lib, p)
            .then((x) => {
                rl.close();
                return x;
            })
            .catch((e) => {
                rl.close();
                throw e;
            });
    };
    var set_file = (lib, param) => {
        var path = '';
        for (var i = 0; i < param.length && param[i] !== '='; ++i) {
            path += param[i];
        };
        var data = param.slice(i + 1);
        lib.fs.mkdirSync(path.split('/').slice(0, -1).join('/'), {
            recursive: true
        });
        lib.fs.writeFileSync(path, data);
        return '';
    };
    var del_file = (lib, param) => {
        try {
            lib.fs.unlinkSync(param);
            return '';
        } catch (e) {
            if (e.message.indexOf('EPERM') !== -1) {
                lib.fs.rmdirSync(param);
                return '';
            } else {
                throw e;
            }
        }
    };
    var get_file = (lib, param) => {
        return lib.fs.readFileSync(param, 'utf8');
    }
    var get_dir = (lib, param) => {
        return lib.fs.readdirSync(param).join(';');
    };
    var get_file_mtime = (lib, param) => {
        return String(lib.fs.statSync(param).mtime.getTime());
    };
    var request = (lib, param) => {
        if (typeof fetch === 'undefined') {
            return new Promise((res, err) => {
                (/^https/.test(param) ? lib.hs : lib.ht).get(param, r => {
                    let data = '';
                    r.on('data', chunk => {
                        data += chunk;
                    });
                    r.on('end', () => res(data));
                }).on('error', e => res(''));
            });
        } else {
            return fetch(param).then(res => res.text()).catch(e => '');
        }
    }
    let PORTS = {};

    function init_udp(lib, port_num) {
        return new Promise((resolve, reject) => {
            if (!PORTS[port_num]) {
                PORTS[port_num] = {
                    socket: lib.dg.createSocket('udp4'),
                    mailbox: []
                };
                PORTS[port_num].socket.bind(port_num);
                PORTS[port_num].socket.on('listening', () => resolve(PORTS[port_num]));
                PORTS[port_num].socket.on('message', (data, peer) => {
                    var ip = peer.address;
                    var port = peer.port;
                    PORTS[port_num].mailbox.push({
                        ip: peer.address,
                        port: peer.port,
                        data: data.toString('hex')
                    });
                })
                PORTS[port_num].socket.on('error', (err) => {
                    console.log('err');
                    reject('UDP init error.');
                });
            } else {
                resolve(PORTS[port_num]);
            }
        });
    }
    async function send_udp(lib, port_num, to_ip, to_port_num, data) {
        var port = await init_udp(lib, port_num);
        port.socket.send(Buffer.from(data, 'hex'), to_port_num, to_ip);
        return null;
    }
    async function recv_udp(lib, port_num) {
        var port = await init_udp(lib, port_num);
        var mailbox = port.mailbox;
        port.mailbox = [];
        return mailbox;
    }
    async function stop_udp(lib, port_num) {
        PORTS[port_num].socket.close();
        delete PORTS[port_num];
    }
    var file_error = e => {
        if (e.message.indexOf('NOENT') !== -1) {
            return '';
        } else {
            throw e;
        }
    };
    var io_action = {
        print: async (lib, param) => {
            console.log(param);
            return '';
        },
        put_string: async (lib, param) => {
            process.stdout.write(param);
            return '';
        },
        get_file: async (lib, param) => {
            try {
                return get_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        set_file: async (lib, param) => {
            try {
                return set_file(lib, param)
            } catch (e) {
                return file_error(e);
            }
        },
        del_file: async (lib, param) => {
            try {
                return del_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_dir: async (lib, param) => {
            try {
                return get_dir(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_file_mtime: async (lib, param) => {
            try {
                return get_file_mtime(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        exit: async (lib, param) => {
            lib.pc.exit();
            return '';
        },
        request: async (lib, param) => {
            return request(lib, param);
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        get_line: async (lib, param) => {
            return await new Promise((res, err) => {
                lib.rl.question(param, (line) => res(line));
            });
        },
        get_args: async (lib, param) => {
            return lib.pc.argv[2] || '';
        },
        init_udp: async (lib, param) => {
            try {
                await init_udp(lib, Number(param));
                return '';
            } catch (e) {
                return '';
            }
        },
        send_udp: async (lib, param) => {
            let [port_num, to_ip, to_port_num, data] = param.split(';');
            await send_udp(lib, Number(port_num), to_ip, Number(to_port_num), data);
            return '';
        },
        recv_udp: async (lib, param) => {
            var mailbox = await recv_udp(lib, Number(param));
            var reply = mailbox.map(x => x.ip + ',' + x.port + ',' + x.data).join(';');
            return reply;
        },
        stop_udp: async (lib, param) => {
            await stop_udp(lib, Number(param));
            return '';
        },
        sleep: async (lib, param) => {
            return await new Promise((resolve, reject) => {
                setTimeout(() => resolve(''), Number(param));
            });
        },
    };
    var run_io = async (lib, io, depth = 0) => {
        switch (io._) {
            case 'IO.end':
                return Promise.resolve(io.value);
            case 'IO.ask':
                var action = io_action[io.query];
                var answer = await action(lib, io.param);
                return await run_io(lib, io.then(answer), depth + 1);
        }
    };

    function Parser$Reply$(_V$1) {
        var $29 = null;
        return $29;
    };
    const Parser$Reply = x0 => Parser$Reply$(x0);

    function List$(_A$1) {
        var $30 = null;
        return $30;
    };
    const List = x0 => List$(x0);

    function Parser$Reply$error$(_err$2) {
        var $31 = ({
            _: 'Parser.Reply.error',
            'err': _err$2
        });
        return $31;
    };
    const Parser$Reply$error = x0 => Parser$Reply$error$(x0);
    const Bool$false = false;
    const Bool$true = true;
    const Nat$gtn = a0 => a1 => (a0 > a1);

    function Parser$Error$combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Parser.Error.new':
                var $33 = self.idx;
                var self = _b$2;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $35 = self.idx;
                        var self = ($33 > $35);
                        if (self) {
                            var $37 = _a$1;
                            var $36 = $37;
                        } else {
                            var $38 = _b$2;
                            var $36 = $38;
                        };
                        var $34 = $36;
                        break;
                };
                var $32 = $34;
                break;
        };
        return $32;
    };
    const Parser$Error$combine = x0 => x1 => Parser$Error$combine$(x0, x1);

    function List$cons$(_head$2, _tail$3) {
        var $39 = ({
            _: 'List.cons',
            'head': _head$2,
            'tail': _tail$3
        });
        return $39;
    };
    const List$cons = x0 => x1 => List$cons$(x0, x1);

    function Parser$Reply$value$(_pst$2, _val$3) {
        var $40 = ({
            _: 'Parser.Reply.value',
            'pst': _pst$2,
            'val': _val$3
        });
        return $40;
    };
    const Parser$Reply$value = x0 => x1 => Parser$Reply$value$(x0, x1);

    function List$reverse$go$(_xs$2, _res$3) {
        var List$reverse$go$ = (_xs$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _res$3]
        });
        var List$reverse$go = _xs$2 => _res$3 => List$reverse$go$(_xs$2, _res$3);
        var arg = [_xs$2, _res$3];
        while (true) {
            let [_xs$2, _res$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $41 = self.head;
                        var $42 = self.tail;
                        var $43 = List$reverse$go$($42, List$cons$($41, _res$3));
                        return $43;
                    case 'List.nil':
                        var $44 = _res$3;
                        return $44;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$reverse$go = x0 => x1 => List$reverse$go$(x0, x1);
    const List$nil = ({
        _: 'List.nil'
    });

    function List$reverse$(_xs$2) {
        var $45 = List$reverse$go$(_xs$2, List$nil);
        return $45;
    };
    const List$reverse = x0 => List$reverse$(x0);

    function Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5) {
        var Parser$until$go$ = (_until$2, _parse$3, _values$4, _pst$5) => ({
            ctr: 'TCO',
            arg: [_until$2, _parse$3, _values$4, _pst$5]
        });
        var Parser$until$go = _until$2 => _parse$3 => _values$4 => _pst$5 => Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5);
        var arg = [_until$2, _parse$3, _values$4, _pst$5];
        while (true) {
            let [_until$2, _parse$3, _values$4, _pst$5] = arg;
            var R = (() => {
                var _until_reply$6 = _until$2(_pst$5);
                var self = _until_reply$6;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $47 = self.err;
                        var _reply$8 = _parse$3(_pst$5);
                        var self = _reply$8;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $49 = self.err;
                                var $50 = Parser$Reply$error$(Parser$Error$combine$($49, $47));
                                var $48 = $50;
                                break;
                            case 'Parser.Reply.value':
                                var $51 = self.pst;
                                var $52 = self.val;
                                var $53 = Parser$until$go$(_until$2, _parse$3, List$cons$($52, _values$4), $51);
                                var $48 = $53;
                                break;
                        };
                        var $46 = $48;
                        break;
                    case 'Parser.Reply.value':
                        var $54 = self.pst;
                        var $55 = Parser$Reply$value$($54, List$reverse$(_values$4));
                        var $46 = $55;
                        break;
                };
                return $46;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$until$go = x0 => x1 => x2 => x3 => Parser$until$go$(x0, x1, x2, x3);

    function Parser$until$(_until$2, _parse$3) {
        var $56 = Parser$until$go(_until$2)(_parse$3)(List$nil);
        return $56;
    };
    const Parser$until = x0 => x1 => Parser$until$(x0, x1);

    function Parser$many$go$(_parse$2, _values$3, _pst$4) {
        var Parser$many$go$ = (_parse$2, _values$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_parse$2, _values$3, _pst$4]
        });
        var Parser$many$go = _parse$2 => _values$3 => _pst$4 => Parser$many$go$(_parse$2, _values$3, _pst$4);
        var arg = [_parse$2, _values$3, _pst$4];
        while (true) {
            let [_parse$2, _values$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var self = _parse$2(_pst$4);
                        switch (self._) {
                            case 'Parser.Reply.value':
                                var $58 = self.pst;
                                var $59 = self.val;
                                var $60 = Parser$many$go$(_parse$2, (_xs$12 => {
                                    var $61 = _values$3(List$cons$($59, _xs$12));
                                    return $61;
                                }), $58);
                                var $57 = $60;
                                break;
                            case 'Parser.Reply.error':
                                var $62 = Parser$Reply$value$(_pst$4, _values$3(List$nil));
                                var $57 = $62;
                                break;
                        };
                        return $57;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$many$go = x0 => x1 => x2 => Parser$many$go$(x0, x1, x2);

    function Parser$many$(_parser$2) {
        var $63 = Parser$many$go(_parser$2)((_x$3 => {
            var $64 = _x$3;
            return $64;
        }));
        return $63;
    };
    const Parser$many = x0 => Parser$many$(x0);

    function Parser$Error$new$(_nam$1, _ini$2, _idx$3, _msg$4) {
        var $65 = ({
            _: 'Parser.Error.new',
            'nam': _nam$1,
            'ini': _ini$2,
            'idx': _idx$3,
            'msg': _msg$4
        });
        return $65;
    };
    const Parser$Error$new = x0 => x1 => x2 => x3 => Parser$Error$new$(x0, x1, x2, x3);

    function Parser$Reply$fail$(_nam$2, _ini$3, _idx$4, _msg$5) {
        var $66 = Parser$Reply$error$(Parser$Error$new$(_nam$2, _ini$3, _idx$4, _msg$5));
        return $66;
    };
    const Parser$Reply$fail = x0 => x1 => x2 => x3 => Parser$Reply$fail$(x0, x1, x2, x3);

    function Maybe$some$(_value$2) {
        var $67 = ({
            _: 'Maybe.some',
            'value': _value$2
        });
        return $67;
    };
    const Maybe$some = x0 => Maybe$some$(x0);

    function Maybe$(_A$1) {
        var $68 = null;
        return $68;
    };
    const Maybe = x0 => Maybe$(x0);
    const Maybe$none = ({
        _: 'Maybe.none'
    });

    function Parser$Error$maybe_combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Maybe.some':
                var $70 = self.value;
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $72 = self.value;
                        var $73 = Maybe$some$(Parser$Error$combine$($70, $72));
                        var $71 = $73;
                        break;
                    case 'Maybe.none':
                        var $74 = _a$1;
                        var $71 = $74;
                        break;
                };
                var $69 = $71;
                break;
            case 'Maybe.none':
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.none':
                        var $76 = Maybe$none;
                        var $75 = $76;
                        break;
                    case 'Maybe.some':
                        var $77 = _b$2;
                        var $75 = $77;
                        break;
                };
                var $69 = $75;
                break;
        };
        return $69;
    };
    const Parser$Error$maybe_combine = x0 => x1 => Parser$Error$maybe_combine$(x0, x1);

    function Parser$State$new$(_err$1, _nam$2, _ini$3, _idx$4, _str$5) {
        var $78 = ({
            _: 'Parser.State.new',
            'err': _err$1,
            'nam': _nam$2,
            'ini': _ini$3,
            'idx': _idx$4,
            'str': _str$5
        });
        return $78;
    };
    const Parser$State$new = x0 => x1 => x2 => x3 => x4 => Parser$State$new$(x0, x1, x2, x3, x4);

    function Parser$choice$(_pars$2, _pst$3) {
        var Parser$choice$ = (_pars$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_pars$2, _pst$3]
        });
        var Parser$choice = _pars$2 => _pst$3 => Parser$choice$(_pars$2, _pst$3);
        var arg = [_pars$2, _pst$3];
        while (true) {
            let [_pars$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $79 = self.err;
                        var $80 = self.nam;
                        var $81 = self.ini;
                        var $82 = self.idx;
                        var $83 = self.str;
                        var self = _pars$2;
                        switch (self._) {
                            case 'List.cons':
                                var $85 = self.head;
                                var $86 = self.tail;
                                var _parsed$11 = $85(_pst$3);
                                var self = _parsed$11;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $88 = self.err;
                                        var _cur_err$13 = Maybe$some$($88);
                                        var _far_err$14 = Parser$Error$maybe_combine$($79, _cur_err$13);
                                        var _new_pst$15 = Parser$State$new$(_far_err$14, $80, $81, $82, $83);
                                        var $89 = Parser$choice$($86, _new_pst$15);
                                        var $87 = $89;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $90 = self.pst;
                                        var $91 = self.val;
                                        var $92 = Parser$Reply$value$($90, $91);
                                        var $87 = $92;
                                        break;
                                };
                                var $84 = $87;
                                break;
                            case 'List.nil':
                                var self = $79;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $94 = self.value;
                                        var $95 = Parser$Reply$error$($94);
                                        var $93 = $95;
                                        break;
                                    case 'Maybe.none':
                                        var $96 = Parser$Reply$fail$($80, $81, $82, "No parse.");
                                        var $93 = $96;
                                        break;
                                };
                                var $84 = $93;
                                break;
                        };
                        return $84;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$choice = x0 => x1 => Parser$choice$(x0, x1);

    function Parser$(_V$1) {
        var $97 = null;
        return $97;
    };
    const Parser = x0 => Parser$(x0);
    const Unit$new = null;

    function String$cons$(_head$1, _tail$2) {
        var $98 = (String.fromCharCode(_head$1) + _tail$2);
        return $98;
    };
    const String$cons = x0 => x1 => String$cons$(x0, x1);
    const String$concat = a0 => a1 => (a0 + a1);

    function Cmp$as_eql$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.gtn':
                var $100 = Bool$false;
                var $99 = $100;
                break;
            case 'Cmp.eql':
                var $101 = Bool$true;
                var $99 = $101;
                break;
        };
        return $99;
    };
    const Cmp$as_eql = x0 => Cmp$as_eql$(x0);
    const Cmp$ltn = ({
        _: 'Cmp.ltn'
    });
    const Cmp$gtn = ({
        _: 'Cmp.gtn'
    });

    function Word$cmp$go$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $103 = self.pred;
                var $104 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $106 = self.pred;
                            var $107 = (_a$pred$10 => {
                                var $108 = Word$cmp$go$(_a$pred$10, $106, _c$4);
                                return $108;
                            });
                            var $105 = $107;
                            break;
                        case 'Word.i':
                            var $109 = self.pred;
                            var $110 = (_a$pred$10 => {
                                var $111 = Word$cmp$go$(_a$pred$10, $109, Cmp$ltn);
                                return $111;
                            });
                            var $105 = $110;
                            break;
                        case 'Word.e':
                            var $112 = (_a$pred$8 => {
                                var $113 = _c$4;
                                return $113;
                            });
                            var $105 = $112;
                            break;
                    };
                    var $105 = $105($103);
                    return $105;
                });
                var $102 = $104;
                break;
            case 'Word.i':
                var $114 = self.pred;
                var $115 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $117 = self.pred;
                            var $118 = (_a$pred$10 => {
                                var $119 = Word$cmp$go$(_a$pred$10, $117, Cmp$gtn);
                                return $119;
                            });
                            var $116 = $118;
                            break;
                        case 'Word.i':
                            var $120 = self.pred;
                            var $121 = (_a$pred$10 => {
                                var $122 = Word$cmp$go$(_a$pred$10, $120, _c$4);
                                return $122;
                            });
                            var $116 = $121;
                            break;
                        case 'Word.e':
                            var $123 = (_a$pred$8 => {
                                var $124 = _c$4;
                                return $124;
                            });
                            var $116 = $123;
                            break;
                    };
                    var $116 = $116($114);
                    return $116;
                });
                var $102 = $115;
                break;
            case 'Word.e':
                var $125 = (_b$5 => {
                    var $126 = _c$4;
                    return $126;
                });
                var $102 = $125;
                break;
        };
        var $102 = $102(_b$3);
        return $102;
    };
    const Word$cmp$go = x0 => x1 => x2 => Word$cmp$go$(x0, x1, x2);
    const Cmp$eql = ({
        _: 'Cmp.eql'
    });

    function Word$cmp$(_a$2, _b$3) {
        var $127 = Word$cmp$go$(_a$2, _b$3, Cmp$eql);
        return $127;
    };
    const Word$cmp = x0 => x1 => Word$cmp$(x0, x1);

    function Word$eql$(_a$2, _b$3) {
        var $128 = Cmp$as_eql$(Word$cmp$(_a$2, _b$3));
        return $128;
    };
    const Word$eql = x0 => x1 => Word$eql$(x0, x1);

    function Nat$succ$(_pred$1) {
        var $129 = 1n + _pred$1;
        return $129;
    };
    const Nat$succ = x0 => Nat$succ$(x0);
    const Nat$zero = 0n;
    const U16$eql = a0 => a1 => (a0 === a1);
    const String$nil = '';

    function Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4) {
        var Parser$text$go$ = (_ini_idx$1, _ini_txt$2, _text$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_ini_idx$1, _ini_txt$2, _text$3, _pst$4]
        });
        var Parser$text$go = _ini_idx$1 => _ini_txt$2 => _text$3 => _pst$4 => Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4);
        var arg = [_ini_idx$1, _ini_txt$2, _text$3, _pst$4];
        while (true) {
            let [_ini_idx$1, _ini_txt$2, _text$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var $130 = self.err;
                        var $131 = self.nam;
                        var $132 = self.ini;
                        var $133 = self.idx;
                        var $134 = self.str;
                        var self = _text$3;
                        if (self.length === 0) {
                            var $136 = Parser$Reply$value$(_pst$4, Unit$new);
                            var $135 = $136;
                        } else {
                            var $137 = self.charCodeAt(0);
                            var $138 = self.slice(1);
                            var self = $134;
                            if (self.length === 0) {
                                var _error_msg$12 = ("Expected \'" + (_ini_txt$2 + "\', found end of file."));
                                var $140 = Parser$Reply$fail$($131, $132, _ini_idx$1, _error_msg$12);
                                var $139 = $140;
                            } else {
                                var $141 = self.charCodeAt(0);
                                var $142 = self.slice(1);
                                var self = ($137 === $141);
                                if (self) {
                                    var _pst$14 = Parser$State$new$($130, $131, $132, Nat$succ$($133), $142);
                                    var $144 = Parser$text$go$(_ini_idx$1, _ini_txt$2, $138, _pst$14);
                                    var $143 = $144;
                                } else {
                                    var _chr$14 = String$cons$($141, String$nil);
                                    var _err$15 = ("Expected \'" + (_ini_txt$2 + ("\', found \'" + (_chr$14 + "\'."))));
                                    var $145 = Parser$Reply$fail$($131, $132, _ini_idx$1, _err$15);
                                    var $143 = $145;
                                };
                                var $139 = $143;
                            };
                            var $135 = $139;
                        };
                        return $135;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$text$go = x0 => x1 => x2 => x3 => Parser$text$go$(x0, x1, x2, x3);

    function Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $147 = self.idx;
                var self = Parser$text$go$($147, _text$1, _text$1, _pst$2);
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $149 = self.err;
                        var $150 = Parser$Reply$error$($149);
                        var $148 = $150;
                        break;
                    case 'Parser.Reply.value':
                        var $151 = self.pst;
                        var $152 = self.val;
                        var $153 = Parser$Reply$value$($151, $152);
                        var $148 = $153;
                        break;
                };
                var $146 = $148;
                break;
        };
        return $146;
    };
    const Parser$text = x0 => x1 => Parser$text$(x0, x1);

    function Parser$eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $155 = self.nam;
                var $156 = self.ini;
                var $157 = self.idx;
                var $158 = self.str;
                var self = $158;
                if (self.length === 0) {
                    var $160 = Parser$Reply$value$(_pst$1, Unit$new);
                    var $159 = $160;
                } else {
                    var $161 = self.charCodeAt(0);
                    var $162 = self.slice(1);
                    var $163 = Parser$Reply$fail$($155, $156, $157, "Expected end-of-file.");
                    var $159 = $163;
                };
                var $154 = $159;
                break;
        };
        return $154;
    };
    const Parser$eof = x0 => Parser$eof$(x0);

    function Parser$one$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $165 = self.err;
                var $166 = self.nam;
                var $167 = self.ini;
                var $168 = self.idx;
                var $169 = self.str;
                var self = $169;
                if (self.length === 0) {
                    var $171 = Parser$Reply$fail$($166, $167, $168, "Unexpected end of file.");
                    var $170 = $171;
                } else {
                    var $172 = self.charCodeAt(0);
                    var $173 = self.slice(1);
                    var _pst$9 = Parser$State$new$($165, $166, $167, Nat$succ$($168), $173);
                    var $174 = Parser$Reply$value$(_pst$9, $172);
                    var $170 = $174;
                };
                var $164 = $170;
                break;
        };
        return $164;
    };
    const Parser$one = x0 => Parser$one$(x0);
    const Kindelia$parse$ignore = Parser$many$(Parser$choice(List$cons$(Parser$text(" "), List$cons$(Parser$text("\u{9}"), List$cons$(Parser$text("\u{d}"), List$cons$(Parser$text("\u{a}"), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $176 = self.err;
                var _reply$7 = Parser$text$("//", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $178 = self.err;
                        var self = $176;
                        switch (self._) {
                            case 'Maybe.some':
                                var $180 = self.value;
                                var $181 = Parser$Reply$error$(Parser$Error$combine$($180, $178));
                                var $179 = $181;
                                break;
                            case 'Maybe.none':
                                var $182 = Parser$Reply$error$($178);
                                var $179 = $182;
                                break;
                        };
                        var $177 = $179;
                        break;
                    case 'Parser.Reply.value':
                        var $183 = self.pst;
                        var self = $183;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $185 = self.err;
                                var $186 = self.nam;
                                var $187 = self.ini;
                                var $188 = self.idx;
                                var $189 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($176, $185), $186, $187, $188, $189);
                                var _end$16 = Parser$choice(List$cons$(Parser$text("\u{a}"), List$cons$(Parser$eof, List$nil)));
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $191 = self.err;
                                        var _reply$22 = Parser$until$(_end$16, Parser$one)(_reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $193 = self.err;
                                                var self = $191;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $195 = self.value;
                                                        var $196 = Parser$Reply$error$(Parser$Error$combine$($195, $193));
                                                        var $194 = $196;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $197 = Parser$Reply$error$($193);
                                                        var $194 = $197;
                                                        break;
                                                };
                                                var $192 = $194;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $198 = self.pst;
                                                var self = $198;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $200 = self.err;
                                                        var $201 = self.nam;
                                                        var $202 = self.ini;
                                                        var $203 = self.idx;
                                                        var $204 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($191, $200), $201, $202, $203, $204);
                                                        var $205 = Parser$Reply$value$(_reply$pst$30, Unit$new);
                                                        var $199 = $205;
                                                        break;
                                                };
                                                var $192 = $199;
                                                break;
                                        };
                                        var $190 = $192;
                                        break;
                                };
                                var $184 = $190;
                                break;
                        };
                        var $177 = $184;
                        break;
                };
                var $175 = $177;
                break;
        };
        return $175;
    }), List$nil)))))));

    function Kindelia$parse$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $207 = self.err;
                var _reply$8 = Kindelia$parse$ignore(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $209 = self.err;
                        var self = $207;
                        switch (self._) {
                            case 'Maybe.some':
                                var $211 = self.value;
                                var $212 = Parser$Reply$error$(Parser$Error$combine$($211, $209));
                                var $210 = $212;
                                break;
                            case 'Maybe.none':
                                var $213 = Parser$Reply$error$($209);
                                var $210 = $213;
                                break;
                        };
                        var $208 = $210;
                        break;
                    case 'Parser.Reply.value':
                        var $214 = self.pst;
                        var self = $214;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $216 = self.err;
                                var $217 = self.nam;
                                var $218 = self.ini;
                                var $219 = self.idx;
                                var $220 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($207, $216), $217, $218, $219, $220);
                                var $221 = Parser$text$(_text$1, _reply$pst$16);
                                var $215 = $221;
                                break;
                        };
                        var $208 = $215;
                        break;
                };
                var $206 = $208;
                break;
        };
        return $206;
    };
    const Kindelia$parse$text = x0 => x1 => Kindelia$parse$text$(x0, x1);

    function Parser$letter$(_is_letter$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $223 = self.err;
                var $224 = self.nam;
                var $225 = self.ini;
                var $226 = self.idx;
                var $227 = self.str;
                var self = $227;
                if (self.length === 0) {
                    var $229 = Parser$Reply$fail$($224, $225, $226, "Unexpected eof.");
                    var $228 = $229;
                } else {
                    var $230 = self.charCodeAt(0);
                    var $231 = self.slice(1);
                    var self = _is_letter$1($230);
                    if (self) {
                        var $233 = Parser$Reply$value$(Parser$State$new$($223, $224, $225, Nat$succ$($226), $231), $230);
                        var $232 = $233;
                    } else {
                        var $234 = Parser$Reply$fail$($224, $225, $226, "Expected letter.");
                        var $232 = $234;
                    };
                    var $228 = $232;
                };
                var $222 = $228;
                break;
        };
        return $222;
    };
    const Parser$letter = x0 => x1 => Parser$letter$(x0, x1);
    const Bool$and = a0 => a1 => (a0 && a1);

    function Cmp$as_lte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $236 = Bool$true;
                var $235 = $236;
                break;
            case 'Cmp.gtn':
                var $237 = Bool$false;
                var $235 = $237;
                break;
        };
        return $235;
    };
    const Cmp$as_lte = x0 => Cmp$as_lte$(x0);

    function Word$lte$(_a$2, _b$3) {
        var $238 = Cmp$as_lte$(Word$cmp$(_a$2, _b$3));
        return $238;
    };
    const Word$lte = x0 => x1 => Word$lte$(x0, x1);
    const U16$lte = a0 => a1 => (a0 <= a1);

    function U16$btw$(_a$1, _b$2, _c$3) {
        var $239 = ((_a$1 <= _b$2) && (_b$2 <= _c$3));
        return $239;
    };
    const U16$btw = x0 => x1 => x2 => U16$btw$(x0, x1, x2);
    const Kindelia$parse$letter = Parser$letter((_chr$1 => {
        var self = U16$btw$(65, _chr$1, 90);
        if (self) {
            var $241 = Bool$true;
            var $240 = $241;
        } else {
            var self = U16$btw$(97, _chr$1, 122);
            if (self) {
                var $243 = Bool$true;
                var $242 = $243;
            } else {
                var self = U16$btw$(48, _chr$1, 57);
                if (self) {
                    var $245 = Bool$true;
                    var $244 = $245;
                } else {
                    var self = (46 === _chr$1);
                    if (self) {
                        var $247 = Bool$true;
                        var $246 = $247;
                    } else {
                        var self = (95 === _chr$1);
                        if (self) {
                            var $249 = Bool$true;
                            var $248 = $249;
                        } else {
                            var self = (94 === _chr$1);
                            if (self) {
                                var $251 = Bool$true;
                                var $250 = $251;
                            } else {
                                var $252 = Bool$false;
                                var $250 = $252;
                            };
                            var $248 = $250;
                        };
                        var $246 = $248;
                    };
                    var $244 = $246;
                };
                var $242 = $244;
            };
            var $240 = $242;
        };
        return $240;
    }));

    function List$fold$(_list$2, _nil$4, _cons$5) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $254 = self.head;
                var $255 = self.tail;
                var $256 = _cons$5($254)(List$fold$($255, _nil$4, _cons$5));
                var $253 = $256;
                break;
            case 'List.nil':
                var $257 = _nil$4;
                var $253 = $257;
                break;
        };
        return $253;
    };
    const List$fold = x0 => x1 => x2 => List$fold$(x0, x1, x2);

    function Kindelia$parse$name$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $259 = self.err;
                var _reply$7 = Kindelia$parse$ignore(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $261 = self.err;
                        var self = $259;
                        switch (self._) {
                            case 'Maybe.some':
                                var $263 = self.value;
                                var $264 = Parser$Reply$error$(Parser$Error$combine$($263, $261));
                                var $262 = $264;
                                break;
                            case 'Maybe.none':
                                var $265 = Parser$Reply$error$($261);
                                var $262 = $265;
                                break;
                        };
                        var $260 = $262;
                        break;
                    case 'Parser.Reply.value':
                        var $266 = self.pst;
                        var self = $266;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $268 = self.err;
                                var $269 = self.nam;
                                var $270 = self.ini;
                                var $271 = self.idx;
                                var $272 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($259, $268), $269, $270, $271, $272);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $274 = self.err;
                                        var _reply$21 = Kindelia$parse$letter(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $276 = self.err;
                                                var self = $274;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $278 = self.value;
                                                        var $279 = Parser$Reply$error$(Parser$Error$combine$($278, $276));
                                                        var $277 = $279;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $280 = Parser$Reply$error$($276);
                                                        var $277 = $280;
                                                        break;
                                                };
                                                var $275 = $277;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $281 = self.pst;
                                                var $282 = self.val;
                                                var self = $281;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $284 = self.err;
                                                        var $285 = self.nam;
                                                        var $286 = self.ini;
                                                        var $287 = self.idx;
                                                        var $288 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($274, $284), $285, $286, $287, $288);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $290 = self.err;
                                                                var _reply$35 = Parser$many$(Kindelia$parse$letter)(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $292 = self.err;
                                                                        var self = $290;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $294 = self.value;
                                                                                var $295 = Parser$Reply$error$(Parser$Error$combine$($294, $292));
                                                                                var $293 = $295;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $296 = Parser$Reply$error$($292);
                                                                                var $293 = $296;
                                                                                break;
                                                                        };
                                                                        var $291 = $293;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $297 = self.pst;
                                                                        var $298 = self.val;
                                                                        var self = $297;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $300 = self.err;
                                                                                var $301 = self.nam;
                                                                                var $302 = self.ini;
                                                                                var $303 = self.idx;
                                                                                var $304 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($290, $300), $301, $302, $303, $304);
                                                                                var $305 = Parser$Reply$value$(_reply$pst$43, String$cons$($282, List$fold$($298, String$nil, String$cons)));
                                                                                var $299 = $305;
                                                                                break;
                                                                        };
                                                                        var $291 = $299;
                                                                        break;
                                                                };
                                                                var $289 = $291;
                                                                break;
                                                        };
                                                        var $283 = $289;
                                                        break;
                                                };
                                                var $275 = $283;
                                                break;
                                        };
                                        var $273 = $275;
                                        break;
                                };
                                var $267 = $273;
                                break;
                        };
                        var $260 = $267;
                        break;
                };
                var $258 = $260;
                break;
        };
        return $258;
    };
    const Kindelia$parse$name = x0 => Kindelia$parse$name$(x0);

    function Parser$wrap$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $307 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $309 = self.err;
                        var self = $307;
                        switch (self._) {
                            case 'Maybe.some':
                                var $311 = self.value;
                                var $312 = Parser$Reply$error$(Parser$Error$combine$($311, $309));
                                var $310 = $312;
                                break;
                            case 'Maybe.none':
                                var $313 = Parser$Reply$error$($309);
                                var $310 = $313;
                                break;
                        };
                        var $308 = $310;
                        break;
                    case 'Parser.Reply.value':
                        var $314 = self.pst;
                        var self = $314;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $316 = self.err;
                                var $317 = self.nam;
                                var $318 = self.ini;
                                var $319 = self.idx;
                                var $320 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($307, $316), $317, $318, $319, $320);
                                var $321 = Parser$until$(_close$4, _parse$3)(_reply$pst$19);
                                var $315 = $321;
                                break;
                        };
                        var $308 = $315;
                        break;
                };
                var $306 = $308;
                break;
        };
        return $306;
    };
    const Parser$wrap = x0 => x1 => x2 => x3 => Parser$wrap$(x0, x1, x2, x3);

    function Pair$(_A$1, _B$2) {
        var $322 = null;
        return $322;
    };
    const Pair = x0 => x1 => Pair$(x0, x1);

    function Parser$maybe$(_parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var self = _parse$2(_pst$3);
                switch (self._) {
                    case 'Parser.Reply.value':
                        var $325 = self.pst;
                        var $326 = self.val;
                        var $327 = Parser$Reply$value$($325, Maybe$some$($326));
                        var $324 = $327;
                        break;
                    case 'Parser.Reply.error':
                        var $328 = Parser$Reply$value$(_pst$3, Maybe$none);
                        var $324 = $328;
                        break;
                };
                var $323 = $324;
                break;
        };
        return $323;
    };
    const Parser$maybe = x0 => x1 => Parser$maybe$(x0, x1);

    function Kindelia$Type$effe$(_rety$1) {
        var $329 = ({
            _: 'Kindelia.Type.effe',
            'rety': _rety$1
        });
        return $329;
    };
    const Kindelia$Type$effe = x0 => Kindelia$Type$effe$(x0);
    const Kindelia$Type$word = ({
        _: 'Kindelia.Type.word'
    });

    function Kindelia$Type$data$(_name$1) {
        var $330 = ({
            _: 'Kindelia.Type.data',
            'name': _name$1
        });
        return $330;
    };
    const Kindelia$Type$data = x0 => Kindelia$Type$data$(x0);

    function Kindelia$parse$type$(_world$1) {
        var $331 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $333 = self.err;
                    var _reply$8 = Kindelia$parse$text$("&", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $335 = self.err;
                            var self = $333;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $337 = self.value;
                                    var $338 = Parser$Reply$error$(Parser$Error$combine$($337, $335));
                                    var $336 = $338;
                                    break;
                                case 'Maybe.none':
                                    var $339 = Parser$Reply$error$($335);
                                    var $336 = $339;
                                    break;
                            };
                            var $334 = $336;
                            break;
                        case 'Parser.Reply.value':
                            var $340 = self.pst;
                            var self = $340;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $342 = self.err;
                                    var $343 = self.nam;
                                    var $344 = self.ini;
                                    var $345 = self.idx;
                                    var $346 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($333, $342), $343, $344, $345, $346);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $348 = self.err;
                                            var _reply$22 = Kindelia$parse$type$(_world$1)(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $350 = self.err;
                                                    var self = $348;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $352 = self.value;
                                                            var $353 = Parser$Reply$error$(Parser$Error$combine$($352, $350));
                                                            var $351 = $353;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $354 = Parser$Reply$error$($350);
                                                            var $351 = $354;
                                                            break;
                                                    };
                                                    var $349 = $351;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $355 = self.pst;
                                                    var $356 = self.val;
                                                    var self = $355;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $358 = self.err;
                                                            var $359 = self.nam;
                                                            var $360 = self.ini;
                                                            var $361 = self.idx;
                                                            var $362 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($348, $358), $359, $360, $361, $362);
                                                            var $363 = Parser$Reply$value$(_reply$pst$30, Kindelia$Type$effe$($356));
                                                            var $357 = $363;
                                                            break;
                                                    };
                                                    var $349 = $357;
                                                    break;
                                            };
                                            var $347 = $349;
                                            break;
                                    };
                                    var $341 = $347;
                                    break;
                            };
                            var $334 = $341;
                            break;
                    };
                    var $332 = $334;
                    break;
            };
            return $332;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $365 = self.err;
                    var _reply$8 = Kindelia$parse$text$("#word", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $367 = self.err;
                            var self = $365;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $369 = self.value;
                                    var $370 = Parser$Reply$error$(Parser$Error$combine$($369, $367));
                                    var $368 = $370;
                                    break;
                                case 'Maybe.none':
                                    var $371 = Parser$Reply$error$($367);
                                    var $368 = $371;
                                    break;
                            };
                            var $366 = $368;
                            break;
                        case 'Parser.Reply.value':
                            var $372 = self.pst;
                            var self = $372;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $374 = self.err;
                                    var $375 = self.nam;
                                    var $376 = self.ini;
                                    var $377 = self.idx;
                                    var $378 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($365, $374), $375, $376, $377, $378);
                                    var $379 = Parser$Reply$value$(_reply$pst$16, Kindelia$Type$word);
                                    var $373 = $379;
                                    break;
                            };
                            var $366 = $373;
                            break;
                    };
                    var $364 = $366;
                    break;
            };
            return $364;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $381 = self.err;
                    var _reply$8 = Kindelia$parse$name$(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $383 = self.err;
                            var self = $381;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $385 = self.value;
                                    var $386 = Parser$Reply$error$(Parser$Error$combine$($385, $383));
                                    var $384 = $386;
                                    break;
                                case 'Maybe.none':
                                    var $387 = Parser$Reply$error$($383);
                                    var $384 = $387;
                                    break;
                            };
                            var $382 = $384;
                            break;
                        case 'Parser.Reply.value':
                            var $388 = self.pst;
                            var $389 = self.val;
                            var self = $388;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $391 = self.err;
                                    var $392 = self.nam;
                                    var $393 = self.ini;
                                    var $394 = self.idx;
                                    var $395 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($381, $391), $392, $393, $394, $395);
                                    var $396 = Parser$Reply$value$(_reply$pst$16, Kindelia$Type$data$($389));
                                    var $390 = $396;
                                    break;
                            };
                            var $382 = $390;
                            break;
                    };
                    var $380 = $382;
                    break;
            };
            return $380;
        }), List$nil))));
        return $331;
    };
    const Kindelia$parse$type = x0 => Kindelia$parse$type$(x0);

    function Pair$new$(_fst$3, _snd$4) {
        var $397 = ({
            _: 'Pair.new',
            'fst': _fst$3,
            'snd': _snd$4
        });
        return $397;
    };
    const Pair$new = x0 => x1 => Pair$new$(x0, x1);

    function Kindelia$parse$ann$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $399 = self.err;
                var _reply$8 = Parser$maybe$(Kindelia$parse$text(","), _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $401 = self.err;
                        var self = $399;
                        switch (self._) {
                            case 'Maybe.some':
                                var $403 = self.value;
                                var $404 = Parser$Reply$error$(Parser$Error$combine$($403, $401));
                                var $402 = $404;
                                break;
                            case 'Maybe.none':
                                var $405 = Parser$Reply$error$($401);
                                var $402 = $405;
                                break;
                        };
                        var $400 = $402;
                        break;
                    case 'Parser.Reply.value':
                        var $406 = self.pst;
                        var self = $406;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $408 = self.err;
                                var $409 = self.nam;
                                var $410 = self.ini;
                                var $411 = self.idx;
                                var $412 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($399, $408), $409, $410, $411, $412);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $414 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $416 = self.err;
                                                var self = $414;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $418 = self.value;
                                                        var $419 = Parser$Reply$error$(Parser$Error$combine$($418, $416));
                                                        var $417 = $419;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $420 = Parser$Reply$error$($416);
                                                        var $417 = $420;
                                                        break;
                                                };
                                                var $415 = $417;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $421 = self.pst;
                                                var $422 = self.val;
                                                var self = $421;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $424 = self.err;
                                                        var $425 = self.nam;
                                                        var $426 = self.ini;
                                                        var $427 = self.idx;
                                                        var $428 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($414, $424), $425, $426, $427, $428);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $430 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $432 = self.err;
                                                                        var self = $430;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $434 = self.value;
                                                                                var $435 = Parser$Reply$error$(Parser$Error$combine$($434, $432));
                                                                                var $433 = $435;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $436 = Parser$Reply$error$($432);
                                                                                var $433 = $436;
                                                                                break;
                                                                        };
                                                                        var $431 = $433;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $437 = self.pst;
                                                                        var self = $437;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $439 = self.err;
                                                                                var $440 = self.nam;
                                                                                var $441 = self.ini;
                                                                                var $442 = self.idx;
                                                                                var $443 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($430, $439), $440, $441, $442, $443);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $445 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$type$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $447 = self.err;
                                                                                                var self = $445;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $449 = self.value;
                                                                                                        var $450 = Parser$Reply$error$(Parser$Error$combine$($449, $447));
                                                                                                        var $448 = $450;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $451 = Parser$Reply$error$($447);
                                                                                                        var $448 = $451;
                                                                                                        break;
                                                                                                };
                                                                                                var $446 = $448;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $452 = self.pst;
                                                                                                var $453 = self.val;
                                                                                                var self = $452;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $455 = self.err;
                                                                                                        var $456 = self.nam;
                                                                                                        var $457 = self.ini;
                                                                                                        var $458 = self.idx;
                                                                                                        var $459 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($445, $455), $456, $457, $458, $459);
                                                                                                        var $460 = Parser$Reply$value$(_reply$pst$58, Pair$new$($422, $453));
                                                                                                        var $454 = $460;
                                                                                                        break;
                                                                                                };
                                                                                                var $446 = $454;
                                                                                                break;
                                                                                        };
                                                                                        var $444 = $446;
                                                                                        break;
                                                                                };
                                                                                var $438 = $444;
                                                                                break;
                                                                        };
                                                                        var $431 = $438;
                                                                        break;
                                                                };
                                                                var $429 = $431;
                                                                break;
                                                        };
                                                        var $423 = $429;
                                                        break;
                                                };
                                                var $415 = $423;
                                                break;
                                        };
                                        var $413 = $415;
                                        break;
                                };
                                var $407 = $413;
                                break;
                        };
                        var $400 = $407;
                        break;
                };
                var $398 = $400;
                break;
        };
        return $398;
    };
    const Kindelia$parse$ann = x0 => x1 => Kindelia$parse$ann$(x0, x1);

    function Kindelia$Constructor$new$(_name$1, _args$2) {
        var $461 = ({
            _: 'Kindelia.Constructor.new',
            'name': _name$1,
            'args': _args$2
        });
        return $461;
    };
    const Kindelia$Constructor$new = x0 => x1 => Kindelia$Constructor$new$(x0, x1);

    function Kindelia$parse$constructor$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $463 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $465 = self.err;
                        var self = $463;
                        switch (self._) {
                            case 'Maybe.some':
                                var $467 = self.value;
                                var $468 = Parser$Reply$error$(Parser$Error$combine$($467, $465));
                                var $466 = $468;
                                break;
                            case 'Maybe.none':
                                var $469 = Parser$Reply$error$($465);
                                var $466 = $469;
                                break;
                        };
                        var $464 = $466;
                        break;
                    case 'Parser.Reply.value':
                        var $470 = self.pst;
                        var $471 = self.val;
                        var self = $470;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $473 = self.err;
                                var $474 = self.nam;
                                var $475 = self.ini;
                                var $476 = self.idx;
                                var $477 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($463, $473), $474, $475, $476, $477);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $479 = self.err;
                                        var _reply$22 = Parser$wrap$(Kindelia$parse$text("{"), Kindelia$parse$ann(_world$1), Kindelia$parse$text("}"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $481 = self.err;
                                                var self = $479;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $483 = self.value;
                                                        var $484 = Parser$Reply$error$(Parser$Error$combine$($483, $481));
                                                        var $482 = $484;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $485 = Parser$Reply$error$($481);
                                                        var $482 = $485;
                                                        break;
                                                };
                                                var $480 = $482;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $486 = self.pst;
                                                var $487 = self.val;
                                                var self = $486;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $489 = self.err;
                                                        var $490 = self.nam;
                                                        var $491 = self.ini;
                                                        var $492 = self.idx;
                                                        var $493 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($479, $489), $490, $491, $492, $493);
                                                        var $494 = Parser$Reply$value$(_reply$pst$30, Kindelia$Constructor$new$($471, $487));
                                                        var $488 = $494;
                                                        break;
                                                };
                                                var $480 = $488;
                                                break;
                                        };
                                        var $478 = $480;
                                        break;
                                };
                                var $472 = $478;
                                break;
                        };
                        var $464 = $472;
                        break;
                };
                var $462 = $464;
                break;
        };
        return $462;
    };
    const Kindelia$parse$constructor = x0 => x1 => Kindelia$parse$constructor$(x0, x1);

    function Kindelia$Data$new$(_name$1, _constructors$2) {
        var $495 = ({
            _: 'Kindelia.Data.new',
            'name': _name$1,
            'constructors': _constructors$2
        });
        return $495;
    };
    const Kindelia$Data$new = x0 => x1 => Kindelia$Data$new$(x0, x1);

    function Kindelia$parse$data$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $497 = self.err;
                var _reply$8 = Kindelia$parse$text$("type", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $499 = self.err;
                        var self = $497;
                        switch (self._) {
                            case 'Maybe.some':
                                var $501 = self.value;
                                var $502 = Parser$Reply$error$(Parser$Error$combine$($501, $499));
                                var $500 = $502;
                                break;
                            case 'Maybe.none':
                                var $503 = Parser$Reply$error$($499);
                                var $500 = $503;
                                break;
                        };
                        var $498 = $500;
                        break;
                    case 'Parser.Reply.value':
                        var $504 = self.pst;
                        var self = $504;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $506 = self.err;
                                var $507 = self.nam;
                                var $508 = self.ini;
                                var $509 = self.idx;
                                var $510 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($497, $506), $507, $508, $509, $510);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $512 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $514 = self.err;
                                                var self = $512;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $516 = self.value;
                                                        var $517 = Parser$Reply$error$(Parser$Error$combine$($516, $514));
                                                        var $515 = $517;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $518 = Parser$Reply$error$($514);
                                                        var $515 = $518;
                                                        break;
                                                };
                                                var $513 = $515;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $519 = self.pst;
                                                var $520 = self.val;
                                                var self = $519;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $522 = self.err;
                                                        var $523 = self.nam;
                                                        var $524 = self.ini;
                                                        var $525 = self.idx;
                                                        var $526 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($512, $522), $523, $524, $525, $526);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $528 = self.err;
                                                                var _reply$36 = Parser$wrap$(Kindelia$parse$text("{"), (_pst$36 => {
                                                                    var self = _pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $531 = self.err;
                                                                            var _reply$42 = Kindelia$parse$constructor$(_world$1, _pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $533 = self.err;
                                                                                    var self = $531;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $535 = self.value;
                                                                                            var $536 = Parser$Reply$error$(Parser$Error$combine$($535, $533));
                                                                                            var $534 = $536;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $537 = Parser$Reply$error$($533);
                                                                                            var $534 = $537;
                                                                                            break;
                                                                                    };
                                                                                    var $532 = $534;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $538 = self.pst;
                                                                                    var $539 = self.val;
                                                                                    var self = $538;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $541 = self.err;
                                                                                            var $542 = self.nam;
                                                                                            var $543 = self.ini;
                                                                                            var $544 = self.idx;
                                                                                            var $545 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($531, $541), $542, $543, $544, $545);
                                                                                            var self = _reply$pst$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $547 = self.err;
                                                                                                    var _reply$56 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$50);
                                                                                                    var self = _reply$56;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $549 = self.err;
                                                                                                            var self = $547;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $551 = self.value;
                                                                                                                    var $552 = Parser$Reply$error$(Parser$Error$combine$($551, $549));
                                                                                                                    var $550 = $552;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $553 = Parser$Reply$error$($549);
                                                                                                                    var $550 = $553;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $548 = $550;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $554 = self.pst;
                                                                                                            var self = $554;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $556 = self.err;
                                                                                                                    var $557 = self.nam;
                                                                                                                    var $558 = self.ini;
                                                                                                                    var $559 = self.idx;
                                                                                                                    var $560 = self.str;
                                                                                                                    var _reply$pst$64 = Parser$State$new$(Parser$Error$maybe_combine$($547, $556), $557, $558, $559, $560);
                                                                                                                    var $561 = Parser$Reply$value$(_reply$pst$64, $539);
                                                                                                                    var $555 = $561;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $548 = $555;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $546 = $548;
                                                                                                    break;
                                                                                            };
                                                                                            var $540 = $546;
                                                                                            break;
                                                                                    };
                                                                                    var $532 = $540;
                                                                                    break;
                                                                            };
                                                                            var $530 = $532;
                                                                            break;
                                                                    };
                                                                    return $530;
                                                                }), Kindelia$parse$text("}"), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $562 = self.err;
                                                                        var self = $528;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $564 = self.value;
                                                                                var $565 = Parser$Reply$error$(Parser$Error$combine$($564, $562));
                                                                                var $563 = $565;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $566 = Parser$Reply$error$($562);
                                                                                var $563 = $566;
                                                                                break;
                                                                        };
                                                                        var $529 = $563;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $567 = self.pst;
                                                                        var $568 = self.val;
                                                                        var self = $567;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $570 = self.err;
                                                                                var $571 = self.nam;
                                                                                var $572 = self.ini;
                                                                                var $573 = self.idx;
                                                                                var $574 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($528, $570), $571, $572, $573, $574);
                                                                                var $575 = Parser$Reply$value$(_reply$pst$44, Kindelia$Data$new$($520, $568));
                                                                                var $569 = $575;
                                                                                break;
                                                                        };
                                                                        var $529 = $569;
                                                                        break;
                                                                };
                                                                var $527 = $529;
                                                                break;
                                                        };
                                                        var $521 = $527;
                                                        break;
                                                };
                                                var $513 = $521;
                                                break;
                                        };
                                        var $511 = $513;
                                        break;
                                };
                                var $505 = $511;
                                break;
                        };
                        var $498 = $505;
                        break;
                };
                var $496 = $498;
                break;
        };
        return $496;
    };
    const Kindelia$parse$data = x0 => x1 => Kindelia$parse$data$(x0, x1);

    function Kindelia$Transaction$new_data$(_data$1) {
        var $576 = ({
            _: 'Kindelia.Transaction.new_data',
            'data': _data$1
        });
        return $576;
    };
    const Kindelia$Transaction$new_data = x0 => Kindelia$Transaction$new_data$(x0);

    function Kindelia$Term$let$(_name$1, _type$2, _expr$3, _body$4) {
        var $577 = ({
            _: 'Kindelia.Term.let',
            'name': _name$1,
            'type': _type$2,
            'expr': _expr$3,
            'body': _body$4
        });
        return $577;
    };
    const Kindelia$Term$let = x0 => x1 => x2 => x3 => Kindelia$Term$let$(x0, x1, x2, x3);

    function Kindelia$parse$term$let$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $579 = self.err;
                var _reply$8 = Kindelia$parse$text$("let", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $581 = self.err;
                        var self = $579;
                        switch (self._) {
                            case 'Maybe.some':
                                var $583 = self.value;
                                var $584 = Parser$Reply$error$(Parser$Error$combine$($583, $581));
                                var $582 = $584;
                                break;
                            case 'Maybe.none':
                                var $585 = Parser$Reply$error$($581);
                                var $582 = $585;
                                break;
                        };
                        var $580 = $582;
                        break;
                    case 'Parser.Reply.value':
                        var $586 = self.pst;
                        var self = $586;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $588 = self.err;
                                var $589 = self.nam;
                                var $590 = self.ini;
                                var $591 = self.idx;
                                var $592 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($579, $588), $589, $590, $591, $592);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $594 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $596 = self.err;
                                                var self = $594;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $598 = self.value;
                                                        var $599 = Parser$Reply$error$(Parser$Error$combine$($598, $596));
                                                        var $597 = $599;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $600 = Parser$Reply$error$($596);
                                                        var $597 = $600;
                                                        break;
                                                };
                                                var $595 = $597;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $601 = self.pst;
                                                var $602 = self.val;
                                                var self = $601;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $604 = self.err;
                                                        var $605 = self.nam;
                                                        var $606 = self.ini;
                                                        var $607 = self.idx;
                                                        var $608 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($594, $604), $605, $606, $607, $608);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $610 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $612 = self.err;
                                                                        var self = $610;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $614 = self.value;
                                                                                var $615 = Parser$Reply$error$(Parser$Error$combine$($614, $612));
                                                                                var $613 = $615;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $616 = Parser$Reply$error$($612);
                                                                                var $613 = $616;
                                                                                break;
                                                                        };
                                                                        var $611 = $613;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $617 = self.pst;
                                                                        var self = $617;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $619 = self.err;
                                                                                var $620 = self.nam;
                                                                                var $621 = self.ini;
                                                                                var $622 = self.idx;
                                                                                var $623 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($610, $619), $620, $621, $622, $623);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $625 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$type$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $627 = self.err;
                                                                                                var self = $625;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $629 = self.value;
                                                                                                        var $630 = Parser$Reply$error$(Parser$Error$combine$($629, $627));
                                                                                                        var $628 = $630;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $631 = Parser$Reply$error$($627);
                                                                                                        var $628 = $631;
                                                                                                        break;
                                                                                                };
                                                                                                var $626 = $628;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $632 = self.pst;
                                                                                                var $633 = self.val;
                                                                                                var self = $632;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $635 = self.err;
                                                                                                        var $636 = self.nam;
                                                                                                        var $637 = self.ini;
                                                                                                        var $638 = self.idx;
                                                                                                        var $639 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($625, $635), $636, $637, $638, $639);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $641 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$text$("=", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $643 = self.err;
                                                                                                                        var self = $641;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $645 = self.value;
                                                                                                                                var $646 = Parser$Reply$error$(Parser$Error$combine$($645, $643));
                                                                                                                                var $644 = $646;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $647 = Parser$Reply$error$($643);
                                                                                                                                var $644 = $647;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $642 = $644;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $648 = self.pst;
                                                                                                                        var self = $648;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $650 = self.err;
                                                                                                                                var $651 = self.nam;
                                                                                                                                var $652 = self.ini;
                                                                                                                                var $653 = self.idx;
                                                                                                                                var $654 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($641, $650), $651, $652, $653, $654);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $656 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $658 = self.err;
                                                                                                                                                var self = $656;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $660 = self.value;
                                                                                                                                                        var $661 = Parser$Reply$error$(Parser$Error$combine$($660, $658));
                                                                                                                                                        var $659 = $661;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $662 = Parser$Reply$error$($658);
                                                                                                                                                        var $659 = $662;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $657 = $659;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $663 = self.pst;
                                                                                                                                                var $664 = self.val;
                                                                                                                                                var self = $663;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $666 = self.err;
                                                                                                                                                        var $667 = self.nam;
                                                                                                                                                        var $668 = self.ini;
                                                                                                                                                        var $669 = self.idx;
                                                                                                                                                        var $670 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($656, $666), $667, $668, $669, $670);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $672 = self.err;
                                                                                                                                                                var _reply$92 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $674 = self.err;
                                                                                                                                                                        var self = $672;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $676 = self.value;
                                                                                                                                                                                var $677 = Parser$Reply$error$(Parser$Error$combine$($676, $674));
                                                                                                                                                                                var $675 = $677;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $678 = Parser$Reply$error$($674);
                                                                                                                                                                                var $675 = $678;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $673 = $675;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $679 = self.pst;
                                                                                                                                                                        var self = $679;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $681 = self.err;
                                                                                                                                                                                var $682 = self.nam;
                                                                                                                                                                                var $683 = self.ini;
                                                                                                                                                                                var $684 = self.idx;
                                                                                                                                                                                var $685 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($672, $681), $682, $683, $684, $685);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $687 = self.err;
                                                                                                                                                                                        var _reply$106 = Kindelia$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $689 = self.err;
                                                                                                                                                                                                var self = $687;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $691 = self.value;
                                                                                                                                                                                                        var $692 = Parser$Reply$error$(Parser$Error$combine$($691, $689));
                                                                                                                                                                                                        var $690 = $692;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $693 = Parser$Reply$error$($689);
                                                                                                                                                                                                        var $690 = $693;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $688 = $690;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $694 = self.pst;
                                                                                                                                                                                                var $695 = self.val;
                                                                                                                                                                                                var self = $694;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $697 = self.err;
                                                                                                                                                                                                        var $698 = self.nam;
                                                                                                                                                                                                        var $699 = self.ini;
                                                                                                                                                                                                        var $700 = self.idx;
                                                                                                                                                                                                        var $701 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($687, $697), $698, $699, $700, $701);
                                                                                                                                                                                                        var $702 = Parser$Reply$value$(_reply$pst$114, Kindelia$Term$let$($602, $633, $664, $695));
                                                                                                                                                                                                        var $696 = $702;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $688 = $696;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $686 = $688;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $680 = $686;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $673 = $680;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $671 = $673;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $665 = $671;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $657 = $665;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $655 = $657;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $649 = $655;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $642 = $649;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $640 = $642;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $634 = $640;
                                                                                                        break;
                                                                                                };
                                                                                                var $626 = $634;
                                                                                                break;
                                                                                        };
                                                                                        var $624 = $626;
                                                                                        break;
                                                                                };
                                                                                var $618 = $624;
                                                                                break;
                                                                        };
                                                                        var $611 = $618;
                                                                        break;
                                                                };
                                                                var $609 = $611;
                                                                break;
                                                        };
                                                        var $603 = $609;
                                                        break;
                                                };
                                                var $595 = $603;
                                                break;
                                        };
                                        var $593 = $595;
                                        break;
                                };
                                var $587 = $593;
                                break;
                        };
                        var $580 = $587;
                        break;
                };
                var $578 = $580;
                break;
        };
        return $578;
    };
    const Kindelia$parse$term$let = x0 => x1 => Kindelia$parse$term$let$(x0, x1);

    function Maybe$bind$(_m$3, _f$4) {
        var self = _m$3;
        switch (self._) {
            case 'Maybe.some':
                var $704 = self.value;
                var $705 = _f$4($704);
                var $703 = $705;
                break;
            case 'Maybe.none':
                var $706 = Maybe$none;
                var $703 = $706;
                break;
        };
        return $703;
    };
    const Maybe$bind = x0 => x1 => Maybe$bind$(x0, x1);

    function Maybe$monad$(_new$2) {
        var $707 = _new$2(Maybe$bind)(Maybe$some);
        return $707;
    };
    const Maybe$monad = x0 => Maybe$monad$(x0);

    function BBT$lookup$(_cmp$3, _key$4, _map$5) {
        var BBT$lookup$ = (_cmp$3, _key$4, _map$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _key$4, _map$5]
        });
        var BBT$lookup = _cmp$3 => _key$4 => _map$5 => BBT$lookup$(_cmp$3, _key$4, _map$5);
        var arg = [_cmp$3, _key$4, _map$5];
        while (true) {
            let [_cmp$3, _key$4, _map$5] = arg;
            var R = (() => {
                var self = _map$5;
                switch (self._) {
                    case 'BBT.bin':
                        var $708 = self.key;
                        var $709 = self.val;
                        var $710 = self.left;
                        var $711 = self.right;
                        var self = _cmp$3(_key$4)($708);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $713 = BBT$lookup$(_cmp$3, _key$4, $710);
                                var $712 = $713;
                                break;
                            case 'Cmp.eql':
                                var $714 = Maybe$some$($709);
                                var $712 = $714;
                                break;
                            case 'Cmp.gtn':
                                var $715 = BBT$lookup$(_cmp$3, _key$4, $711);
                                var $712 = $715;
                                break;
                        };
                        return $712;
                    case 'BBT.tip':
                        var $716 = Maybe$none;
                        return $716;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$lookup = x0 => x1 => x2 => BBT$lookup$(x0, x1, x2);

    function Cmp$as_ltn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $718 = Bool$true;
                var $717 = $718;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $719 = Bool$false;
                var $717 = $719;
                break;
        };
        return $717;
    };
    const Cmp$as_ltn = x0 => Cmp$as_ltn$(x0);

    function Word$ltn$(_a$2, _b$3) {
        var $720 = Cmp$as_ltn$(Word$cmp$(_a$2, _b$3));
        return $720;
    };
    const Word$ltn = x0 => x1 => Word$ltn$(x0, x1);
    const U16$ltn = a0 => a1 => (a0 < a1);

    function U16$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $722 = Cmp$ltn;
            var $721 = $722;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $724 = Cmp$eql;
                var $723 = $724;
            } else {
                var $725 = Cmp$gtn;
                var $723 = $725;
            };
            var $721 = $723;
        };
        return $721;
    };
    const U16$cmp = x0 => x1 => U16$cmp$(x0, x1);

    function String$cmp$(_a$1, _b$2) {
        var String$cmp$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var String$cmp = _a$1 => _b$2 => String$cmp$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                if (self.length === 0) {
                    var self = _b$2;
                    if (self.length === 0) {
                        var $727 = Cmp$eql;
                        var $726 = $727;
                    } else {
                        var $728 = self.charCodeAt(0);
                        var $729 = self.slice(1);
                        var $730 = Cmp$ltn;
                        var $726 = $730;
                    };
                    return $726;
                } else {
                    var $731 = self.charCodeAt(0);
                    var $732 = self.slice(1);
                    var self = _b$2;
                    if (self.length === 0) {
                        var $734 = Cmp$gtn;
                        var $733 = $734;
                    } else {
                        var $735 = self.charCodeAt(0);
                        var $736 = self.slice(1);
                        var self = U16$cmp$($731, $735);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $738 = Cmp$ltn;
                                var $737 = $738;
                                break;
                            case 'Cmp.eql':
                                var $739 = String$cmp$($732, $736);
                                var $737 = $739;
                                break;
                            case 'Cmp.gtn':
                                var $740 = Cmp$gtn;
                                var $737 = $740;
                                break;
                        };
                        var $733 = $737;
                    };
                    return $733;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$cmp = x0 => x1 => String$cmp$(x0, x1);

    function Map$get$(_key$2, _map$3) {
        var $741 = BBT$lookup$(String$cmp, _key$2, _map$3);
        return $741;
    };
    const Map$get = x0 => x1 => Map$get$(x0, x1);

    function Kindelia$get_data$(_world$1, _name$2) {
        var $742 = Maybe$monad$((_m$bind$3 => _m$pure$4 => {
            var $743 = _m$bind$3;
            return $743;
        }))(Map$get$(_name$2, _world$1))((_entry$3 => {
            var self = _entry$3;
            switch (self._) {
                case 'Kindelia.Entry.data':
                    var $745 = self.value;
                    var $746 = Maybe$some$($745);
                    var $744 = $746;
                    break;
                case 'Kindelia.Entry.bond':
                case 'Kindelia.Entry.file':
                    var $747 = Maybe$none;
                    var $744 = $747;
                    break;
            };
            return $744;
        }));
        return $742;
    };
    const Kindelia$get_data = x0 => x1 => Kindelia$get_data$(x0, x1);

    function Parser$fail$(_error$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $749 = self.nam;
                var $750 = self.ini;
                var $751 = self.idx;
                var $752 = Parser$Reply$fail$($749, $750, $751, _error$2);
                var $748 = $752;
                break;
        };
        return $748;
    };
    const Parser$fail = x0 => x1 => Parser$fail$(x0, x1);

    function List$find$(_cond$2, _xs$3) {
        var List$find$ = (_cond$2, _xs$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _xs$3]
        });
        var List$find = _cond$2 => _xs$3 => List$find$(_cond$2, _xs$3);
        var arg = [_cond$2, _xs$3];
        while (true) {
            let [_cond$2, _xs$3] = arg;
            var R = (() => {
                var self = _xs$3;
                switch (self._) {
                    case 'List.cons':
                        var $753 = self.head;
                        var $754 = self.tail;
                        var self = _cond$2($753);
                        if (self) {
                            var $756 = Maybe$some$($753);
                            var $755 = $756;
                        } else {
                            var $757 = List$find$(_cond$2, $754);
                            var $755 = $757;
                        };
                        return $755;
                    case 'List.nil':
                        var $758 = Maybe$none;
                        return $758;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$find = x0 => x1 => List$find$(x0, x1);
    const String$eql = a0 => a1 => (a0 === a1);

    function Kindelia$parse$term$create$fields$(_world$1, _fields$2) {
        var self = _fields$2;
        switch (self._) {
            case 'List.cons':
                var $760 = self.head;
                var $761 = self.tail;
                var $762 = (_pst$5 => {
                    var self = _pst$5;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $764 = self.err;
                            var _reply$11 = Kindelia$parse$text$($760, _pst$5);
                            var self = _reply$11;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $766 = self.err;
                                    var self = $764;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $768 = self.value;
                                            var $769 = Parser$Reply$error$(Parser$Error$combine$($768, $766));
                                            var $767 = $769;
                                            break;
                                        case 'Maybe.none':
                                            var $770 = Parser$Reply$error$($766);
                                            var $767 = $770;
                                            break;
                                    };
                                    var $765 = $767;
                                    break;
                                case 'Parser.Reply.value':
                                    var $771 = self.pst;
                                    var self = $771;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $773 = self.err;
                                            var $774 = self.nam;
                                            var $775 = self.ini;
                                            var $776 = self.idx;
                                            var $777 = self.str;
                                            var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($764, $773), $774, $775, $776, $777);
                                            var self = _reply$pst$19;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $779 = self.err;
                                                    var _reply$25 = Kindelia$parse$text$(":", _reply$pst$19);
                                                    var self = _reply$25;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $781 = self.err;
                                                            var self = $779;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $783 = self.value;
                                                                    var $784 = Parser$Reply$error$(Parser$Error$combine$($783, $781));
                                                                    var $782 = $784;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $785 = Parser$Reply$error$($781);
                                                                    var $782 = $785;
                                                                    break;
                                                            };
                                                            var $780 = $782;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $786 = self.pst;
                                                            var self = $786;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $788 = self.err;
                                                                    var $789 = self.nam;
                                                                    var $790 = self.ini;
                                                                    var $791 = self.idx;
                                                                    var $792 = self.str;
                                                                    var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($779, $788), $789, $790, $791, $792);
                                                                    var self = _reply$pst$33;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $794 = self.err;
                                                                            var _reply$39 = Kindelia$parse$term$(_world$1)(_reply$pst$33);
                                                                            var self = _reply$39;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $796 = self.err;
                                                                                    var self = $794;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $798 = self.value;
                                                                                            var $799 = Parser$Reply$error$(Parser$Error$combine$($798, $796));
                                                                                            var $797 = $799;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $800 = Parser$Reply$error$($796);
                                                                                            var $797 = $800;
                                                                                            break;
                                                                                    };
                                                                                    var $795 = $797;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $801 = self.pst;
                                                                                    var $802 = self.val;
                                                                                    var self = $801;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $804 = self.err;
                                                                                            var $805 = self.nam;
                                                                                            var $806 = self.ini;
                                                                                            var $807 = self.idx;
                                                                                            var $808 = self.str;
                                                                                            var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($794, $804), $805, $806, $807, $808);
                                                                                            var self = _reply$pst$47;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $810 = self.err;
                                                                                                    var _reply$53 = Kindelia$parse$term$create$fields$(_world$1, $761)(_reply$pst$47);
                                                                                                    var self = _reply$53;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $812 = self.err;
                                                                                                            var self = $810;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $814 = self.value;
                                                                                                                    var $815 = Parser$Reply$error$(Parser$Error$combine$($814, $812));
                                                                                                                    var $813 = $815;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $816 = Parser$Reply$error$($812);
                                                                                                                    var $813 = $816;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $811 = $813;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $817 = self.pst;
                                                                                                            var $818 = self.val;
                                                                                                            var self = $817;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $820 = self.err;
                                                                                                                    var $821 = self.nam;
                                                                                                                    var $822 = self.ini;
                                                                                                                    var $823 = self.idx;
                                                                                                                    var $824 = self.str;
                                                                                                                    var _reply$pst$61 = Parser$State$new$(Parser$Error$maybe_combine$($810, $820), $821, $822, $823, $824);
                                                                                                                    var $825 = Parser$Reply$value$(_reply$pst$61, List$cons$($802, $818));
                                                                                                                    var $819 = $825;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $811 = $819;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $809 = $811;
                                                                                                    break;
                                                                                            };
                                                                                            var $803 = $809;
                                                                                            break;
                                                                                    };
                                                                                    var $795 = $803;
                                                                                    break;
                                                                            };
                                                                            var $793 = $795;
                                                                            break;
                                                                    };
                                                                    var $787 = $793;
                                                                    break;
                                                            };
                                                            var $780 = $787;
                                                            break;
                                                    };
                                                    var $778 = $780;
                                                    break;
                                            };
                                            var $772 = $778;
                                            break;
                                    };
                                    var $765 = $772;
                                    break;
                            };
                            var $763 = $765;
                            break;
                    };
                    return $763;
                });
                var $759 = $762;
                break;
            case 'List.nil':
                var $826 = (_pst$3 => {
                    var $827 = Parser$Reply$value$(_pst$3, List$nil);
                    return $827;
                });
                var $759 = $826;
                break;
        };
        return $759;
    };
    const Kindelia$parse$term$create$fields = x0 => x1 => Kindelia$parse$term$create$fields$(x0, x1);

    function List$mapped$(_as$2, _f$4) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $829 = self.head;
                var $830 = self.tail;
                var $831 = List$cons$(_f$4($829), List$mapped$($830, _f$4));
                var $828 = $831;
                break;
            case 'List.nil':
                var $832 = List$nil;
                var $828 = $832;
                break;
        };
        return $828;
    };
    const List$mapped = x0 => x1 => List$mapped$(x0, x1);

    function Pair$fst$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $834 = self.fst;
                var $835 = $834;
                var $833 = $835;
                break;
        };
        return $833;
    };
    const Pair$fst = x0 => Pair$fst$(x0);

    function Maybe$default$(_m$2, _a$3) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $837 = self.value;
                var $838 = $837;
                var $836 = $838;
                break;
            case 'Maybe.none':
                var $839 = _a$3;
                var $836 = $839;
                break;
        };
        return $836;
    };
    const Maybe$default = x0 => x1 => Maybe$default$(x0, x1);

    function List$find_index$go$(_xs$2, _f$3, _i$4) {
        var List$find_index$go$ = (_xs$2, _f$3, _i$4) => ({
            ctr: 'TCO',
            arg: [_xs$2, _f$3, _i$4]
        });
        var List$find_index$go = _xs$2 => _f$3 => _i$4 => List$find_index$go$(_xs$2, _f$3, _i$4);
        var arg = [_xs$2, _f$3, _i$4];
        while (true) {
            let [_xs$2, _f$3, _i$4] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $840 = self.head;
                        var $841 = self.tail;
                        var self = _f$3($840);
                        if (self) {
                            var $843 = Maybe$some$(_i$4);
                            var $842 = $843;
                        } else {
                            var $844 = List$find_index$go$($841, _f$3, Nat$succ$(_i$4));
                            var $842 = $844;
                        };
                        return $842;
                    case 'List.nil':
                        var $845 = Maybe$none;
                        return $845;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$find_index$go = x0 => x1 => x2 => List$find_index$go$(x0, x1, x2);

    function List$find_index$(_xs$2, _f$3) {
        var $846 = List$find_index$go$(_xs$2, _f$3, Nat$zero);
        return $846;
    };
    const List$find_index = x0 => x1 => List$find_index$(x0, x1);

    function Kindelia$Term$create$(_ctor$1, _vals$2) {
        var $847 = ({
            _: 'Kindelia.Term.create',
            'ctor': _ctor$1,
            'vals': _vals$2
        });
        return $847;
    };
    const Kindelia$Term$create = x0 => x1 => Kindelia$Term$create$(x0, x1);

    function Kindelia$parse$term$create$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $849 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $851 = self.err;
                        var self = $849;
                        switch (self._) {
                            case 'Maybe.some':
                                var $853 = self.value;
                                var $854 = Parser$Reply$error$(Parser$Error$combine$($853, $851));
                                var $852 = $854;
                                break;
                            case 'Maybe.none':
                                var $855 = Parser$Reply$error$($851);
                                var $852 = $855;
                                break;
                        };
                        var $850 = $852;
                        break;
                    case 'Parser.Reply.value':
                        var $856 = self.pst;
                        var $857 = self.val;
                        var self = $856;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $859 = self.err;
                                var $860 = self.nam;
                                var $861 = self.ini;
                                var $862 = self.idx;
                                var $863 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($849, $859), $860, $861, $862, $863);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $865 = self.err;
                                        var _reply$22 = Kindelia$parse$text$("@", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $867 = self.err;
                                                var self = $865;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $869 = self.value;
                                                        var $870 = Parser$Reply$error$(Parser$Error$combine$($869, $867));
                                                        var $868 = $870;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $871 = Parser$Reply$error$($867);
                                                        var $868 = $871;
                                                        break;
                                                };
                                                var $866 = $868;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $872 = self.pst;
                                                var self = $872;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $874 = self.err;
                                                        var $875 = self.nam;
                                                        var $876 = self.ini;
                                                        var $877 = self.idx;
                                                        var $878 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($865, $874), $875, $876, $877, $878);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $880 = self.err;
                                                                var _reply$36 = Kindelia$parse$name$(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $882 = self.err;
                                                                        var self = $880;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $884 = self.value;
                                                                                var $885 = Parser$Reply$error$(Parser$Error$combine$($884, $882));
                                                                                var $883 = $885;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $886 = Parser$Reply$error$($882);
                                                                                var $883 = $886;
                                                                                break;
                                                                        };
                                                                        var $881 = $883;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $887 = self.pst;
                                                                        var $888 = self.val;
                                                                        var self = $887;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $890 = self.err;
                                                                                var $891 = self.nam;
                                                                                var $892 = self.ini;
                                                                                var $893 = self.idx;
                                                                                var $894 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($880, $890), $891, $892, $893, $894);
                                                                                var self = Kindelia$get_data$(_world$1, $857);
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $896 = self.value;
                                                                                        var _data$46 = $896;
                                                                                        var self = _data$46;
                                                                                        switch (self._) {
                                                                                            case 'Kindelia.Data.new':
                                                                                                var $898 = self.constructors;
                                                                                                var $899 = (_pst$49 => {
                                                                                                    var self = _pst$49;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $901 = self.err;
                                                                                                            var _reply$55 = Kindelia$parse$text$("{", _pst$49);
                                                                                                            var self = _reply$55;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.Reply.error':
                                                                                                                    var $903 = self.err;
                                                                                                                    var self = $901;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Maybe.some':
                                                                                                                            var $905 = self.value;
                                                                                                                            var $906 = Parser$Reply$error$(Parser$Error$combine$($905, $903));
                                                                                                                            var $904 = $906;
                                                                                                                            break;
                                                                                                                        case 'Maybe.none':
                                                                                                                            var $907 = Parser$Reply$error$($903);
                                                                                                                            var $904 = $907;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $902 = $904;
                                                                                                                    break;
                                                                                                                case 'Parser.Reply.value':
                                                                                                                    var $908 = self.pst;
                                                                                                                    var self = $908;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.State.new':
                                                                                                                            var $910 = self.err;
                                                                                                                            var $911 = self.nam;
                                                                                                                            var $912 = self.ini;
                                                                                                                            var $913 = self.idx;
                                                                                                                            var $914 = self.str;
                                                                                                                            var _reply$pst$63 = Parser$State$new$(Parser$Error$maybe_combine$($901, $910), $911, $912, $913, $914);
                                                                                                                            var self = List$find$((_ctor$64 => {
                                                                                                                                var $916 = ((() => {
                                                                                                                                    var self = _ctor$64;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Kindelia.Constructor.new':
                                                                                                                                            var $917 = self.name;
                                                                                                                                            var $918 = $917;
                                                                                                                                            return $918;
                                                                                                                                    };
                                                                                                                                })() === $888);
                                                                                                                                return $916;
                                                                                                                            }), $898);
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $919 = self.value;
                                                                                                                                    var _ctor$65 = $919;
                                                                                                                                    var self = _ctor$65;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Kindelia.Constructor.new':
                                                                                                                                            var $921 = self.args;
                                                                                                                                            var $922 = (_pst$68 => {
                                                                                                                                                var self = _pst$68;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $924 = self.err;
                                                                                                                                                        var _reply$74 = Kindelia$parse$term$create$fields$(_world$1, List$mapped$($921, Pair$fst))(_pst$68);
                                                                                                                                                        var self = _reply$74;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                var $926 = self.err;
                                                                                                                                                                var self = $924;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                        var $928 = self.value;
                                                                                                                                                                        var $929 = Parser$Reply$error$(Parser$Error$combine$($928, $926));
                                                                                                                                                                        var $927 = $929;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                        var $930 = Parser$Reply$error$($926);
                                                                                                                                                                        var $927 = $930;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $925 = $927;
                                                                                                                                                                break;
                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                var $931 = self.pst;
                                                                                                                                                                var $932 = self.val;
                                                                                                                                                                var self = $931;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                        var $934 = self.err;
                                                                                                                                                                        var $935 = self.nam;
                                                                                                                                                                        var $936 = self.ini;
                                                                                                                                                                        var $937 = self.idx;
                                                                                                                                                                        var $938 = self.str;
                                                                                                                                                                        var _reply$pst$82 = Parser$State$new$(Parser$Error$maybe_combine$($924, $934), $935, $936, $937, $938);
                                                                                                                                                                        var self = _reply$pst$82;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $940 = self.err;
                                                                                                                                                                                var _reply$88 = Kindelia$parse$text$("}", _reply$pst$82);
                                                                                                                                                                                var self = _reply$88;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                        var $942 = self.err;
                                                                                                                                                                                        var self = $940;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                var $944 = self.value;
                                                                                                                                                                                                var $945 = Parser$Reply$error$(Parser$Error$combine$($944, $942));
                                                                                                                                                                                                var $943 = $945;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                var $946 = Parser$Reply$error$($942);
                                                                                                                                                                                                var $943 = $946;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $941 = $943;
                                                                                                                                                                                        break;
                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                        var $947 = self.pst;
                                                                                                                                                                                        var self = $947;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                var $949 = self.err;
                                                                                                                                                                                                var $950 = self.nam;
                                                                                                                                                                                                var $951 = self.ini;
                                                                                                                                                                                                var $952 = self.idx;
                                                                                                                                                                                                var $953 = self.str;
                                                                                                                                                                                                var _reply$pst$96 = Parser$State$new$(Parser$Error$maybe_combine$($940, $949), $950, $951, $952, $953);
                                                                                                                                                                                                var _cnam$97 = List$mapped$((() => {
                                                                                                                                                                                                    var self = _data$46;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Kindelia.Data.new':
                                                                                                                                                                                                            var $955 = self.constructors;
                                                                                                                                                                                                            var $956 = $955;
                                                                                                                                                                                                            return $956;
                                                                                                                                                                                                    };
                                                                                                                                                                                                })(), (_x$97 => {
                                                                                                                                                                                                    var self = _x$97;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Kindelia.Constructor.new':
                                                                                                                                                                                                            var $958 = self.name;
                                                                                                                                                                                                            var $959 = $958;
                                                                                                                                                                                                            var $957 = $959;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    return $957;
                                                                                                                                                                                                }));
                                                                                                                                                                                                var _ctor$98 = Maybe$default$(List$find_index$(_cnam$97, a1 => ($888 === a1)), 0n);
                                                                                                                                                                                                var $954 = Parser$Reply$value$(_reply$pst$96, Kindelia$Term$create$(_ctor$98, $932));
                                                                                                                                                                                                var $948 = $954;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $941 = $948;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $939 = $941;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $933 = $939;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $925 = $933;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $923 = $925;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                return $923;
                                                                                                                                            });
                                                                                                                                            var $920 = $922;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $915 = $920;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $960 = Parser$fail("Constructor not found.");
                                                                                                                                    var $915 = $960;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $915 = $915(_reply$pst$63);
                                                                                                                            var $909 = $915;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $902 = $909;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $900 = $902;
                                                                                                            break;
                                                                                                    };
                                                                                                    return $900;
                                                                                                });
                                                                                                var $897 = $899;
                                                                                                break;
                                                                                        };
                                                                                        var $895 = $897;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $961 = Parser$fail("Type not found.");
                                                                                        var $895 = $961;
                                                                                        break;
                                                                                };
                                                                                var $895 = $895(_reply$pst$44);
                                                                                var $889 = $895;
                                                                                break;
                                                                        };
                                                                        var $881 = $889;
                                                                        break;
                                                                };
                                                                var $879 = $881;
                                                                break;
                                                        };
                                                        var $873 = $879;
                                                        break;
                                                };
                                                var $866 = $873;
                                                break;
                                        };
                                        var $864 = $866;
                                        break;
                                };
                                var $858 = $864;
                                break;
                        };
                        var $850 = $858;
                        break;
                };
                var $848 = $850;
                break;
        };
        return $848;
    };
    const Kindelia$parse$term$create = x0 => x1 => Kindelia$parse$term$create$(x0, x1);

    function Kindelia$parse$term$match$cases$(_world$1, _constructors$2) {
        var self = _constructors$2;
        switch (self._) {
            case 'List.cons':
                var $963 = self.head;
                var $964 = self.tail;
                var _ctor$5 = $963;
                var self = _ctor$5;
                switch (self._) {
                    case 'Kindelia.Constructor.new':
                        var $966 = self.name;
                        var $967 = (_pst$8 => {
                            var self = _pst$8;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $969 = self.err;
                                    var _reply$14 = Kindelia$parse$text$($966, _pst$8);
                                    var self = _reply$14;
                                    switch (self._) {
                                        case 'Parser.Reply.error':
                                            var $971 = self.err;
                                            var self = $969;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $973 = self.value;
                                                    var $974 = Parser$Reply$error$(Parser$Error$combine$($973, $971));
                                                    var $972 = $974;
                                                    break;
                                                case 'Maybe.none':
                                                    var $975 = Parser$Reply$error$($971);
                                                    var $972 = $975;
                                                    break;
                                            };
                                            var $970 = $972;
                                            break;
                                        case 'Parser.Reply.value':
                                            var $976 = self.pst;
                                            var self = $976;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $978 = self.err;
                                                    var $979 = self.nam;
                                                    var $980 = self.ini;
                                                    var $981 = self.idx;
                                                    var $982 = self.str;
                                                    var _reply$pst$22 = Parser$State$new$(Parser$Error$maybe_combine$($969, $978), $979, $980, $981, $982);
                                                    var self = _reply$pst$22;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $984 = self.err;
                                                            var _reply$28 = Kindelia$parse$text$(":", _reply$pst$22);
                                                            var self = _reply$28;
                                                            switch (self._) {
                                                                case 'Parser.Reply.error':
                                                                    var $986 = self.err;
                                                                    var self = $984;
                                                                    switch (self._) {
                                                                        case 'Maybe.some':
                                                                            var $988 = self.value;
                                                                            var $989 = Parser$Reply$error$(Parser$Error$combine$($988, $986));
                                                                            var $987 = $989;
                                                                            break;
                                                                        case 'Maybe.none':
                                                                            var $990 = Parser$Reply$error$($986);
                                                                            var $987 = $990;
                                                                            break;
                                                                    };
                                                                    var $985 = $987;
                                                                    break;
                                                                case 'Parser.Reply.value':
                                                                    var $991 = self.pst;
                                                                    var self = $991;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $993 = self.err;
                                                                            var $994 = self.nam;
                                                                            var $995 = self.ini;
                                                                            var $996 = self.idx;
                                                                            var $997 = self.str;
                                                                            var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($984, $993), $994, $995, $996, $997);
                                                                            var self = _reply$pst$36;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $999 = self.err;
                                                                                    var _reply$42 = Kindelia$parse$term$(_world$1)(_reply$pst$36);
                                                                                    var self = _reply$42;
                                                                                    switch (self._) {
                                                                                        case 'Parser.Reply.error':
                                                                                            var $1001 = self.err;
                                                                                            var self = $999;
                                                                                            switch (self._) {
                                                                                                case 'Maybe.some':
                                                                                                    var $1003 = self.value;
                                                                                                    var $1004 = Parser$Reply$error$(Parser$Error$combine$($1003, $1001));
                                                                                                    var $1002 = $1004;
                                                                                                    break;
                                                                                                case 'Maybe.none':
                                                                                                    var $1005 = Parser$Reply$error$($1001);
                                                                                                    var $1002 = $1005;
                                                                                                    break;
                                                                                            };
                                                                                            var $1000 = $1002;
                                                                                            break;
                                                                                        case 'Parser.Reply.value':
                                                                                            var $1006 = self.pst;
                                                                                            var $1007 = self.val;
                                                                                            var self = $1006;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $1009 = self.err;
                                                                                                    var $1010 = self.nam;
                                                                                                    var $1011 = self.ini;
                                                                                                    var $1012 = self.idx;
                                                                                                    var $1013 = self.str;
                                                                                                    var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($999, $1009), $1010, $1011, $1012, $1013);
                                                                                                    var self = _reply$pst$50;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $1015 = self.err;
                                                                                                            var _reply$56 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$50);
                                                                                                            var self = _reply$56;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.Reply.error':
                                                                                                                    var $1017 = self.err;
                                                                                                                    var self = $1015;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Maybe.some':
                                                                                                                            var $1019 = self.value;
                                                                                                                            var $1020 = Parser$Reply$error$(Parser$Error$combine$($1019, $1017));
                                                                                                                            var $1018 = $1020;
                                                                                                                            break;
                                                                                                                        case 'Maybe.none':
                                                                                                                            var $1021 = Parser$Reply$error$($1017);
                                                                                                                            var $1018 = $1021;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1016 = $1018;
                                                                                                                    break;
                                                                                                                case 'Parser.Reply.value':
                                                                                                                    var $1022 = self.pst;
                                                                                                                    var self = $1022;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.State.new':
                                                                                                                            var $1024 = self.err;
                                                                                                                            var $1025 = self.nam;
                                                                                                                            var $1026 = self.ini;
                                                                                                                            var $1027 = self.idx;
                                                                                                                            var $1028 = self.str;
                                                                                                                            var _reply$pst$64 = Parser$State$new$(Parser$Error$maybe_combine$($1015, $1024), $1025, $1026, $1027, $1028);
                                                                                                                            var self = _reply$pst$64;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $1030 = self.err;
                                                                                                                                    var _reply$70 = Kindelia$parse$term$match$cases$(_world$1, $964)(_reply$pst$64);
                                                                                                                                    var self = _reply$70;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                            var $1032 = self.err;
                                                                                                                                            var self = $1030;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Maybe.some':
                                                                                                                                                    var $1034 = self.value;
                                                                                                                                                    var $1035 = Parser$Reply$error$(Parser$Error$combine$($1034, $1032));
                                                                                                                                                    var $1033 = $1035;
                                                                                                                                                    break;
                                                                                                                                                case 'Maybe.none':
                                                                                                                                                    var $1036 = Parser$Reply$error$($1032);
                                                                                                                                                    var $1033 = $1036;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1031 = $1033;
                                                                                                                                            break;
                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                            var $1037 = self.pst;
                                                                                                                                            var $1038 = self.val;
                                                                                                                                            var self = $1037;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $1040 = self.err;
                                                                                                                                                    var $1041 = self.nam;
                                                                                                                                                    var $1042 = self.ini;
                                                                                                                                                    var $1043 = self.idx;
                                                                                                                                                    var $1044 = self.str;
                                                                                                                                                    var _reply$pst$78 = Parser$State$new$(Parser$Error$maybe_combine$($1030, $1040), $1041, $1042, $1043, $1044);
                                                                                                                                                    var $1045 = Parser$Reply$value$(_reply$pst$78, List$cons$($1007, $1038));
                                                                                                                                                    var $1039 = $1045;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1031 = $1039;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1029 = $1031;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1023 = $1029;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1016 = $1023;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1014 = $1016;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1008 = $1014;
                                                                                                    break;
                                                                                            };
                                                                                            var $1000 = $1008;
                                                                                            break;
                                                                                    };
                                                                                    var $998 = $1000;
                                                                                    break;
                                                                            };
                                                                            var $992 = $998;
                                                                            break;
                                                                    };
                                                                    var $985 = $992;
                                                                    break;
                                                            };
                                                            var $983 = $985;
                                                            break;
                                                    };
                                                    var $977 = $983;
                                                    break;
                                            };
                                            var $970 = $977;
                                            break;
                                    };
                                    var $968 = $970;
                                    break;
                            };
                            return $968;
                        });
                        var $965 = $967;
                        break;
                };
                var $962 = $965;
                break;
            case 'List.nil':
                var $1046 = (_pst$3 => {
                    var $1047 = Parser$Reply$value$(_pst$3, List$nil);
                    return $1047;
                });
                var $962 = $1046;
                break;
        };
        return $962;
    };
    const Kindelia$parse$term$match$cases = x0 => x1 => Kindelia$parse$term$match$cases$(x0, x1);

    function Kindelia$Term$match$(_name$1, _data$2, _cses$3) {
        var $1048 = ({
            _: 'Kindelia.Term.match',
            'name': _name$1,
            'data': _data$2,
            'cses': _cses$3
        });
        return $1048;
    };
    const Kindelia$Term$match = x0 => x1 => x2 => Kindelia$Term$match$(x0, x1, x2);

    function Kindelia$parse$term$match$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1050 = self.err;
                var _reply$8 = Kindelia$parse$text$("case ", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1052 = self.err;
                        var self = $1050;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1054 = self.value;
                                var $1055 = Parser$Reply$error$(Parser$Error$combine$($1054, $1052));
                                var $1053 = $1055;
                                break;
                            case 'Maybe.none':
                                var $1056 = Parser$Reply$error$($1052);
                                var $1053 = $1056;
                                break;
                        };
                        var $1051 = $1053;
                        break;
                    case 'Parser.Reply.value':
                        var $1057 = self.pst;
                        var self = $1057;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1059 = self.err;
                                var $1060 = self.nam;
                                var $1061 = self.ini;
                                var $1062 = self.idx;
                                var $1063 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1050, $1059), $1060, $1061, $1062, $1063);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1065 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1067 = self.err;
                                                var self = $1065;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1069 = self.value;
                                                        var $1070 = Parser$Reply$error$(Parser$Error$combine$($1069, $1067));
                                                        var $1068 = $1070;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1071 = Parser$Reply$error$($1067);
                                                        var $1068 = $1071;
                                                        break;
                                                };
                                                var $1066 = $1068;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1072 = self.pst;
                                                var $1073 = self.val;
                                                var self = $1072;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1075 = self.err;
                                                        var $1076 = self.nam;
                                                        var $1077 = self.ini;
                                                        var $1078 = self.idx;
                                                        var $1079 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1065, $1075), $1076, $1077, $1078, $1079);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1081 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1083 = self.err;
                                                                        var self = $1081;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1085 = self.value;
                                                                                var $1086 = Parser$Reply$error$(Parser$Error$combine$($1085, $1083));
                                                                                var $1084 = $1086;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1087 = Parser$Reply$error$($1083);
                                                                                var $1084 = $1087;
                                                                                break;
                                                                        };
                                                                        var $1082 = $1084;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1088 = self.pst;
                                                                        var self = $1088;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1090 = self.err;
                                                                                var $1091 = self.nam;
                                                                                var $1092 = self.ini;
                                                                                var $1093 = self.idx;
                                                                                var $1094 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1081, $1090), $1091, $1092, $1093, $1094);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1096 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$name$(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1098 = self.err;
                                                                                                var self = $1096;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1100 = self.value;
                                                                                                        var $1101 = Parser$Reply$error$(Parser$Error$combine$($1100, $1098));
                                                                                                        var $1099 = $1101;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1102 = Parser$Reply$error$($1098);
                                                                                                        var $1099 = $1102;
                                                                                                        break;
                                                                                                };
                                                                                                var $1097 = $1099;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1103 = self.pst;
                                                                                                var $1104 = self.val;
                                                                                                var self = $1103;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1106 = self.err;
                                                                                                        var $1107 = self.nam;
                                                                                                        var $1108 = self.ini;
                                                                                                        var $1109 = self.idx;
                                                                                                        var $1110 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1096, $1106), $1107, $1108, $1109, $1110);
                                                                                                        var self = Kindelia$get_data$(_world$1, $1104);
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $1112 = self.value;
                                                                                                                var _data$60 = $1112;
                                                                                                                var self = _data$60;
                                                                                                                switch (self._) {
                                                                                                                    case 'Kindelia.Data.new':
                                                                                                                        var $1114 = self.constructors;
                                                                                                                        var $1115 = (_pst$63 => {
                                                                                                                            var self = _pst$63;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $1117 = self.err;
                                                                                                                                    var _reply$69 = Kindelia$parse$text$("{", _pst$63);
                                                                                                                                    var self = _reply$69;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                            var $1119 = self.err;
                                                                                                                                            var self = $1117;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Maybe.some':
                                                                                                                                                    var $1121 = self.value;
                                                                                                                                                    var $1122 = Parser$Reply$error$(Parser$Error$combine$($1121, $1119));
                                                                                                                                                    var $1120 = $1122;
                                                                                                                                                    break;
                                                                                                                                                case 'Maybe.none':
                                                                                                                                                    var $1123 = Parser$Reply$error$($1119);
                                                                                                                                                    var $1120 = $1123;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1118 = $1120;
                                                                                                                                            break;
                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                            var $1124 = self.pst;
                                                                                                                                            var self = $1124;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $1126 = self.err;
                                                                                                                                                    var $1127 = self.nam;
                                                                                                                                                    var $1128 = self.ini;
                                                                                                                                                    var $1129 = self.idx;
                                                                                                                                                    var $1130 = self.str;
                                                                                                                                                    var _reply$pst$77 = Parser$State$new$(Parser$Error$maybe_combine$($1117, $1126), $1127, $1128, $1129, $1130);
                                                                                                                                                    var self = _reply$pst$77;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $1132 = self.err;
                                                                                                                                                            var _reply$83 = Kindelia$parse$term$match$cases$(_world$1, $1114)(_reply$pst$77);
                                                                                                                                                            var self = _reply$83;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                    var $1134 = self.err;
                                                                                                                                                                    var self = $1132;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                            var $1136 = self.value;
                                                                                                                                                                            var $1137 = Parser$Reply$error$(Parser$Error$combine$($1136, $1134));
                                                                                                                                                                            var $1135 = $1137;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                            var $1138 = Parser$Reply$error$($1134);
                                                                                                                                                                            var $1135 = $1138;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $1133 = $1135;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                    var $1139 = self.pst;
                                                                                                                                                                    var $1140 = self.val;
                                                                                                                                                                    var self = $1139;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $1142 = self.err;
                                                                                                                                                                            var $1143 = self.nam;
                                                                                                                                                                            var $1144 = self.ini;
                                                                                                                                                                            var $1145 = self.idx;
                                                                                                                                                                            var $1146 = self.str;
                                                                                                                                                                            var _reply$pst$91 = Parser$State$new$(Parser$Error$maybe_combine$($1132, $1142), $1143, $1144, $1145, $1146);
                                                                                                                                                                            var self = _reply$pst$91;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $1148 = self.err;
                                                                                                                                                                                    var _reply$97 = Kindelia$parse$text$("}", _reply$pst$91);
                                                                                                                                                                                    var self = _reply$97;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                            var $1150 = self.err;
                                                                                                                                                                                            var self = $1148;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                    var $1152 = self.value;
                                                                                                                                                                                                    var $1153 = Parser$Reply$error$(Parser$Error$combine$($1152, $1150));
                                                                                                                                                                                                    var $1151 = $1153;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                    var $1154 = Parser$Reply$error$($1150);
                                                                                                                                                                                                    var $1151 = $1154;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $1149 = $1151;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                            var $1155 = self.pst;
                                                                                                                                                                                            var self = $1155;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                    var $1157 = self.err;
                                                                                                                                                                                                    var $1158 = self.nam;
                                                                                                                                                                                                    var $1159 = self.ini;
                                                                                                                                                                                                    var $1160 = self.idx;
                                                                                                                                                                                                    var $1161 = self.str;
                                                                                                                                                                                                    var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($1148, $1157), $1158, $1159, $1160, $1161);
                                                                                                                                                                                                    var $1162 = Parser$Reply$value$(_reply$pst$105, Kindelia$Term$match$($1073, $1104, $1140));
                                                                                                                                                                                                    var $1156 = $1162;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $1149 = $1156;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $1147 = $1149;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1141 = $1147;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $1133 = $1141;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1131 = $1133;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1125 = $1131;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1118 = $1125;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1116 = $1118;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            return $1116;
                                                                                                                        });
                                                                                                                        var $1113 = $1115;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1111 = $1113;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $1163 = Parser$fail("Type not found.");
                                                                                                                var $1111 = $1163;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1111 = $1111(_reply$pst$58);
                                                                                                        var $1105 = $1111;
                                                                                                        break;
                                                                                                };
                                                                                                var $1097 = $1105;
                                                                                                break;
                                                                                        };
                                                                                        var $1095 = $1097;
                                                                                        break;
                                                                                };
                                                                                var $1089 = $1095;
                                                                                break;
                                                                        };
                                                                        var $1082 = $1089;
                                                                        break;
                                                                };
                                                                var $1080 = $1082;
                                                                break;
                                                        };
                                                        var $1074 = $1080;
                                                        break;
                                                };
                                                var $1066 = $1074;
                                                break;
                                        };
                                        var $1064 = $1066;
                                        break;
                                };
                                var $1058 = $1064;
                                break;
                        };
                        var $1051 = $1058;
                        break;
                };
                var $1049 = $1051;
                break;
        };
        return $1049;
    };
    const Kindelia$parse$term$match = x0 => x1 => Kindelia$parse$term$match$(x0, x1);

    function Parser$many1$(_parser$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $1165 = self.err;
                var _reply$9 = _parser$2(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1167 = self.err;
                        var self = $1165;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1169 = self.value;
                                var $1170 = Parser$Reply$error$(Parser$Error$combine$($1169, $1167));
                                var $1168 = $1170;
                                break;
                            case 'Maybe.none':
                                var $1171 = Parser$Reply$error$($1167);
                                var $1168 = $1171;
                                break;
                        };
                        var $1166 = $1168;
                        break;
                    case 'Parser.Reply.value':
                        var $1172 = self.pst;
                        var $1173 = self.val;
                        var self = $1172;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1175 = self.err;
                                var $1176 = self.nam;
                                var $1177 = self.ini;
                                var $1178 = self.idx;
                                var $1179 = self.str;
                                var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($1165, $1175), $1176, $1177, $1178, $1179);
                                var self = _reply$pst$17;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1181 = self.err;
                                        var _reply$23 = Parser$many$(_parser$2)(_reply$pst$17);
                                        var self = _reply$23;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1183 = self.err;
                                                var self = $1181;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1185 = self.value;
                                                        var $1186 = Parser$Reply$error$(Parser$Error$combine$($1185, $1183));
                                                        var $1184 = $1186;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1187 = Parser$Reply$error$($1183);
                                                        var $1184 = $1187;
                                                        break;
                                                };
                                                var $1182 = $1184;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1188 = self.pst;
                                                var $1189 = self.val;
                                                var self = $1188;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1191 = self.err;
                                                        var $1192 = self.nam;
                                                        var $1193 = self.ini;
                                                        var $1194 = self.idx;
                                                        var $1195 = self.str;
                                                        var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($1181, $1191), $1192, $1193, $1194, $1195);
                                                        var $1196 = Parser$Reply$value$(_reply$pst$31, List$cons$($1173, $1189));
                                                        var $1190 = $1196;
                                                        break;
                                                };
                                                var $1182 = $1190;
                                                break;
                                        };
                                        var $1180 = $1182;
                                        break;
                                };
                                var $1174 = $1180;
                                break;
                        };
                        var $1166 = $1174;
                        break;
                };
                var $1164 = $1166;
                break;
        };
        return $1164;
    };
    const Parser$many1 = x0 => x1 => Parser$many1$(x0, x1);

    function Parser$digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1198 = self.err;
                var $1199 = self.nam;
                var $1200 = self.ini;
                var $1201 = self.idx;
                var $1202 = self.str;
                var self = $1202;
                if (self.length === 0) {
                    var $1204 = Parser$Reply$fail$($1199, $1200, $1201, "Not a digit.");
                    var $1203 = $1204;
                } else {
                    var $1205 = self.charCodeAt(0);
                    var $1206 = self.slice(1);
                    var _pst$9 = Parser$State$new$($1198, $1199, $1200, Nat$succ$($1201), $1206);
                    var self = ($1205 === 48);
                    if (self) {
                        var $1208 = Parser$Reply$value$(_pst$9, 0n);
                        var $1207 = $1208;
                    } else {
                        var self = ($1205 === 49);
                        if (self) {
                            var $1210 = Parser$Reply$value$(_pst$9, 1n);
                            var $1209 = $1210;
                        } else {
                            var self = ($1205 === 50);
                            if (self) {
                                var $1212 = Parser$Reply$value$(_pst$9, 2n);
                                var $1211 = $1212;
                            } else {
                                var self = ($1205 === 51);
                                if (self) {
                                    var $1214 = Parser$Reply$value$(_pst$9, 3n);
                                    var $1213 = $1214;
                                } else {
                                    var self = ($1205 === 52);
                                    if (self) {
                                        var $1216 = Parser$Reply$value$(_pst$9, 4n);
                                        var $1215 = $1216;
                                    } else {
                                        var self = ($1205 === 53);
                                        if (self) {
                                            var $1218 = Parser$Reply$value$(_pst$9, 5n);
                                            var $1217 = $1218;
                                        } else {
                                            var self = ($1205 === 54);
                                            if (self) {
                                                var $1220 = Parser$Reply$value$(_pst$9, 6n);
                                                var $1219 = $1220;
                                            } else {
                                                var self = ($1205 === 55);
                                                if (self) {
                                                    var $1222 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $1221 = $1222;
                                                } else {
                                                    var self = ($1205 === 56);
                                                    if (self) {
                                                        var $1224 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $1223 = $1224;
                                                    } else {
                                                        var self = ($1205 === 57);
                                                        if (self) {
                                                            var $1226 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $1225 = $1226;
                                                        } else {
                                                            var $1227 = Parser$Reply$fail$($1199, $1200, $1201, "Not a digit.");
                                                            var $1225 = $1227;
                                                        };
                                                        var $1223 = $1225;
                                                    };
                                                    var $1221 = $1223;
                                                };
                                                var $1219 = $1221;
                                            };
                                            var $1217 = $1219;
                                        };
                                        var $1215 = $1217;
                                    };
                                    var $1213 = $1215;
                                };
                                var $1211 = $1213;
                            };
                            var $1209 = $1211;
                        };
                        var $1207 = $1209;
                    };
                    var $1203 = $1207;
                };
                var $1197 = $1203;
                break;
        };
        return $1197;
    };
    const Parser$digit = x0 => Parser$digit$(x0);
    const Nat$add = a0 => a1 => (a0 + a1);
    const Nat$mul = a0 => a1 => (a0 * a1);

    function Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4) {
        var Nat$from_base$go$ = (_b$1, _ds$2, _p$3, _res$4) => ({
            ctr: 'TCO',
            arg: [_b$1, _ds$2, _p$3, _res$4]
        });
        var Nat$from_base$go = _b$1 => _ds$2 => _p$3 => _res$4 => Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4);
        var arg = [_b$1, _ds$2, _p$3, _res$4];
        while (true) {
            let [_b$1, _ds$2, _p$3, _res$4] = arg;
            var R = (() => {
                var self = _ds$2;
                switch (self._) {
                    case 'List.cons':
                        var $1228 = self.head;
                        var $1229 = self.tail;
                        var $1230 = Nat$from_base$go$(_b$1, $1229, (_b$1 * _p$3), (($1228 * _p$3) + _res$4));
                        return $1230;
                    case 'List.nil':
                        var $1231 = _res$4;
                        return $1231;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$from_base$go = x0 => x1 => x2 => x3 => Nat$from_base$go$(x0, x1, x2, x3);

    function Nat$from_base$(_base$1, _ds$2) {
        var $1232 = Nat$from_base$go$(_base$1, List$reverse$(_ds$2), 1n, 0n);
        return $1232;
    };
    const Nat$from_base = x0 => x1 => Nat$from_base$(x0, x1);

    function Parser$nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1234 = self.err;
                var _reply$7 = Parser$many1$(Parser$digit, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1236 = self.err;
                        var self = $1234;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1238 = self.value;
                                var $1239 = Parser$Reply$error$(Parser$Error$combine$($1238, $1236));
                                var $1237 = $1239;
                                break;
                            case 'Maybe.none':
                                var $1240 = Parser$Reply$error$($1236);
                                var $1237 = $1240;
                                break;
                        };
                        var $1235 = $1237;
                        break;
                    case 'Parser.Reply.value':
                        var $1241 = self.pst;
                        var $1242 = self.val;
                        var self = $1241;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1244 = self.err;
                                var $1245 = self.nam;
                                var $1246 = self.ini;
                                var $1247 = self.idx;
                                var $1248 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1234, $1244), $1245, $1246, $1247, $1248);
                                var $1249 = Parser$Reply$value$(_reply$pst$15, Nat$from_base$(10n, $1242));
                                var $1243 = $1249;
                                break;
                        };
                        var $1235 = $1243;
                        break;
                };
                var $1233 = $1235;
                break;
        };
        return $1233;
    };
    const Parser$nat = x0 => Parser$nat$(x0);
    const Nat$gte = a0 => a1 => (a0 >= a1);
    const Nat$pow = a0 => a1 => (a0 ** a1);

    function Kindelia$Term$word$(_numb$1) {
        var $1250 = ({
            _: 'Kindelia.Term.word',
            'numb': _numb$1
        });
        return $1250;
    };
    const Kindelia$Term$word = x0 => Kindelia$Term$word$(x0);

    function U64$new$(_value$1) {
        var $1251 = word_to_u64(_value$1);
        return $1251;
    };
    const U64$new = x0 => U64$new$(x0);

    function Nat$apply$(_n$2, _f$3, _x$4) {
        var Nat$apply$ = (_n$2, _f$3, _x$4) => ({
            ctr: 'TCO',
            arg: [_n$2, _f$3, _x$4]
        });
        var Nat$apply = _n$2 => _f$3 => _x$4 => Nat$apply$(_n$2, _f$3, _x$4);
        var arg = [_n$2, _f$3, _x$4];
        while (true) {
            let [_n$2, _f$3, _x$4] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $1252 = _x$4;
                    return $1252;
                } else {
                    var $1253 = (self - 1n);
                    var $1254 = Nat$apply$($1253, _f$3, _f$3(_x$4));
                    return $1254;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$apply = x0 => x1 => x2 => Nat$apply$(x0, x1, x2);

    function Word$(_size$1) {
        var $1255 = null;
        return $1255;
    };
    const Word = x0 => Word$(x0);
    const Word$e = ({
        _: 'Word.e'
    });

    function Word$i$(_pred$2) {
        var $1256 = ({
            _: 'Word.i',
            'pred': _pred$2
        });
        return $1256;
    };
    const Word$i = x0 => Word$i$(x0);

    function Word$o$(_pred$2) {
        var $1257 = ({
            _: 'Word.o',
            'pred': _pred$2
        });
        return $1257;
    };
    const Word$o = x0 => Word$o$(x0);

    function Word$inc$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $1259 = self.pred;
                var $1260 = Word$i$($1259);
                var $1258 = $1260;
                break;
            case 'Word.i':
                var $1261 = self.pred;
                var $1262 = Word$o$(Word$inc$($1261));
                var $1258 = $1262;
                break;
            case 'Word.e':
                var $1263 = Word$e;
                var $1258 = $1263;
                break;
        };
        return $1258;
    };
    const Word$inc = x0 => Word$inc$(x0);

    function Word$zero$(_size$1) {
        var self = _size$1;
        if (self === 0n) {
            var $1265 = Word$e;
            var $1264 = $1265;
        } else {
            var $1266 = (self - 1n);
            var $1267 = Word$o$(Word$zero$($1266));
            var $1264 = $1267;
        };
        return $1264;
    };
    const Word$zero = x0 => Word$zero$(x0);

    function Nat$to_word$(_size$1, _n$2) {
        var $1268 = Nat$apply$(_n$2, Word$inc, Word$zero$(_size$1));
        return $1268;
    };
    const Nat$to_word = x0 => x1 => Nat$to_word$(x0, x1);
    const Nat$to_u64 = a0 => (a0 & 0xFFFFFFFFFFFFFFFFn);

    function Kindelia$parse$term$word$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1270 = self.err;
                var _reply$8 = Kindelia$parse$text$("#", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1272 = self.err;
                        var self = $1270;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1274 = self.value;
                                var $1275 = Parser$Reply$error$(Parser$Error$combine$($1274, $1272));
                                var $1273 = $1275;
                                break;
                            case 'Maybe.none':
                                var $1276 = Parser$Reply$error$($1272);
                                var $1273 = $1276;
                                break;
                        };
                        var $1271 = $1273;
                        break;
                    case 'Parser.Reply.value':
                        var $1277 = self.pst;
                        var self = $1277;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1279 = self.err;
                                var $1280 = self.nam;
                                var $1281 = self.ini;
                                var $1282 = self.idx;
                                var $1283 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1270, $1279), $1280, $1281, $1282, $1283);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1285 = self.err;
                                        var _reply$22 = Parser$nat$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1287 = self.err;
                                                var self = $1285;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1289 = self.value;
                                                        var $1290 = Parser$Reply$error$(Parser$Error$combine$($1289, $1287));
                                                        var $1288 = $1290;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1291 = Parser$Reply$error$($1287);
                                                        var $1288 = $1291;
                                                        break;
                                                };
                                                var $1286 = $1288;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1292 = self.pst;
                                                var $1293 = self.val;
                                                var self = $1292;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1295 = self.err;
                                                        var $1296 = self.nam;
                                                        var $1297 = self.ini;
                                                        var $1298 = self.idx;
                                                        var $1299 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1285, $1295), $1296, $1297, $1298, $1299);
                                                        var self = ($1293 >= (2n ** 64n));
                                                        if (self) {
                                                            var $1301 = Parser$fail("Number out of bound");
                                                            var $1300 = $1301;
                                                        } else {
                                                            var $1302 = (_pst$31 => {
                                                                var $1303 = Parser$Reply$value$(_pst$31, Kindelia$Term$word$(($1293 & 0xFFFFFFFFFFFFFFFFn)));
                                                                return $1303;
                                                            });
                                                            var $1300 = $1302;
                                                        };
                                                        var $1300 = $1300(_reply$pst$30);
                                                        var $1294 = $1300;
                                                        break;
                                                };
                                                var $1286 = $1294;
                                                break;
                                        };
                                        var $1284 = $1286;
                                        break;
                                };
                                var $1278 = $1284;
                                break;
                        };
                        var $1271 = $1278;
                        break;
                };
                var $1269 = $1271;
                break;
        };
        return $1269;
    };
    const Kindelia$parse$term$word = x0 => x1 => Kindelia$parse$term$word$(x0, x1);

    function Kindelia$Term$compare$(_val0$1, _val1$2, _iflt$3, _ifeq$4, _ifgt$5) {
        var $1304 = ({
            _: 'Kindelia.Term.compare',
            'val0': _val0$1,
            'val1': _val1$2,
            'iflt': _iflt$3,
            'ifeq': _ifeq$4,
            'ifgt': _ifgt$5
        });
        return $1304;
    };
    const Kindelia$Term$compare = x0 => x1 => x2 => x3 => x4 => Kindelia$Term$compare$(x0, x1, x2, x3, x4);

    function Kindelia$parse$term$compare$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1306 = self.err;
                var _reply$8 = Kindelia$parse$text$("compare", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1308 = self.err;
                        var self = $1306;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1310 = self.value;
                                var $1311 = Parser$Reply$error$(Parser$Error$combine$($1310, $1308));
                                var $1309 = $1311;
                                break;
                            case 'Maybe.none':
                                var $1312 = Parser$Reply$error$($1308);
                                var $1309 = $1312;
                                break;
                        };
                        var $1307 = $1309;
                        break;
                    case 'Parser.Reply.value':
                        var $1313 = self.pst;
                        var self = $1313;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1315 = self.err;
                                var $1316 = self.nam;
                                var $1317 = self.ini;
                                var $1318 = self.idx;
                                var $1319 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1306, $1315), $1316, $1317, $1318, $1319);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1321 = self.err;
                                        var _reply$22 = Kindelia$parse$term$(_world$1)(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1323 = self.err;
                                                var self = $1321;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1325 = self.value;
                                                        var $1326 = Parser$Reply$error$(Parser$Error$combine$($1325, $1323));
                                                        var $1324 = $1326;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1327 = Parser$Reply$error$($1323);
                                                        var $1324 = $1327;
                                                        break;
                                                };
                                                var $1322 = $1324;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1328 = self.pst;
                                                var $1329 = self.val;
                                                var self = $1328;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1331 = self.err;
                                                        var $1332 = self.nam;
                                                        var $1333 = self.ini;
                                                        var $1334 = self.idx;
                                                        var $1335 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1321, $1331), $1332, $1333, $1334, $1335);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1337 = self.err;
                                                                var _reply$36 = Kindelia$parse$term$(_world$1)(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1339 = self.err;
                                                                        var self = $1337;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1341 = self.value;
                                                                                var $1342 = Parser$Reply$error$(Parser$Error$combine$($1341, $1339));
                                                                                var $1340 = $1342;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1343 = Parser$Reply$error$($1339);
                                                                                var $1340 = $1343;
                                                                                break;
                                                                        };
                                                                        var $1338 = $1340;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1344 = self.pst;
                                                                        var $1345 = self.val;
                                                                        var self = $1344;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1347 = self.err;
                                                                                var $1348 = self.nam;
                                                                                var $1349 = self.ini;
                                                                                var $1350 = self.idx;
                                                                                var $1351 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1337, $1347), $1348, $1349, $1350, $1351);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1353 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$text$("{", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1355 = self.err;
                                                                                                var self = $1353;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1357 = self.value;
                                                                                                        var $1358 = Parser$Reply$error$(Parser$Error$combine$($1357, $1355));
                                                                                                        var $1356 = $1358;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1359 = Parser$Reply$error$($1355);
                                                                                                        var $1356 = $1359;
                                                                                                        break;
                                                                                                };
                                                                                                var $1354 = $1356;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1360 = self.pst;
                                                                                                var self = $1360;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1362 = self.err;
                                                                                                        var $1363 = self.nam;
                                                                                                        var $1364 = self.ini;
                                                                                                        var $1365 = self.idx;
                                                                                                        var $1366 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1353, $1362), $1363, $1364, $1365, $1366);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1368 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$text$("_<_:", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1370 = self.err;
                                                                                                                        var self = $1368;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1372 = self.value;
                                                                                                                                var $1373 = Parser$Reply$error$(Parser$Error$combine$($1372, $1370));
                                                                                                                                var $1371 = $1373;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1374 = Parser$Reply$error$($1370);
                                                                                                                                var $1371 = $1374;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1369 = $1371;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1375 = self.pst;
                                                                                                                        var self = $1375;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1377 = self.err;
                                                                                                                                var $1378 = self.nam;
                                                                                                                                var $1379 = self.ini;
                                                                                                                                var $1380 = self.idx;
                                                                                                                                var $1381 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1368, $1377), $1378, $1379, $1380, $1381);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1383 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1385 = self.err;
                                                                                                                                                var self = $1383;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1387 = self.value;
                                                                                                                                                        var $1388 = Parser$Reply$error$(Parser$Error$combine$($1387, $1385));
                                                                                                                                                        var $1386 = $1388;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1389 = Parser$Reply$error$($1385);
                                                                                                                                                        var $1386 = $1389;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1384 = $1386;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1390 = self.pst;
                                                                                                                                                var $1391 = self.val;
                                                                                                                                                var self = $1390;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1393 = self.err;
                                                                                                                                                        var $1394 = self.nam;
                                                                                                                                                        var $1395 = self.ini;
                                                                                                                                                        var $1396 = self.idx;
                                                                                                                                                        var $1397 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1383, $1393), $1394, $1395, $1396, $1397);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $1399 = self.err;
                                                                                                                                                                var _reply$92 = Kindelia$parse$text$("_=_:", _reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $1401 = self.err;
                                                                                                                                                                        var self = $1399;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $1403 = self.value;
                                                                                                                                                                                var $1404 = Parser$Reply$error$(Parser$Error$combine$($1403, $1401));
                                                                                                                                                                                var $1402 = $1404;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $1405 = Parser$Reply$error$($1401);
                                                                                                                                                                                var $1402 = $1405;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $1400 = $1402;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $1406 = self.pst;
                                                                                                                                                                        var self = $1406;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $1408 = self.err;
                                                                                                                                                                                var $1409 = self.nam;
                                                                                                                                                                                var $1410 = self.ini;
                                                                                                                                                                                var $1411 = self.idx;
                                                                                                                                                                                var $1412 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($1399, $1408), $1409, $1410, $1411, $1412);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $1414 = self.err;
                                                                                                                                                                                        var _reply$106 = Kindelia$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $1416 = self.err;
                                                                                                                                                                                                var self = $1414;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $1418 = self.value;
                                                                                                                                                                                                        var $1419 = Parser$Reply$error$(Parser$Error$combine$($1418, $1416));
                                                                                                                                                                                                        var $1417 = $1419;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $1420 = Parser$Reply$error$($1416);
                                                                                                                                                                                                        var $1417 = $1420;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $1415 = $1417;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $1421 = self.pst;
                                                                                                                                                                                                var $1422 = self.val;
                                                                                                                                                                                                var self = $1421;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $1424 = self.err;
                                                                                                                                                                                                        var $1425 = self.nam;
                                                                                                                                                                                                        var $1426 = self.ini;
                                                                                                                                                                                                        var $1427 = self.idx;
                                                                                                                                                                                                        var $1428 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($1414, $1424), $1425, $1426, $1427, $1428);
                                                                                                                                                                                                        var self = _reply$pst$114;
                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                var $1430 = self.err;
                                                                                                                                                                                                                var _reply$120 = Kindelia$parse$text$("_>_:", _reply$pst$114);
                                                                                                                                                                                                                var self = _reply$120;
                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                        var $1432 = self.err;
                                                                                                                                                                                                                        var self = $1430;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                var $1434 = self.value;
                                                                                                                                                                                                                                var $1435 = Parser$Reply$error$(Parser$Error$combine$($1434, $1432));
                                                                                                                                                                                                                                var $1433 = $1435;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                var $1436 = Parser$Reply$error$($1432);
                                                                                                                                                                                                                                var $1433 = $1436;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $1431 = $1433;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                        var $1437 = self.pst;
                                                                                                                                                                                                                        var self = $1437;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                var $1439 = self.err;
                                                                                                                                                                                                                                var $1440 = self.nam;
                                                                                                                                                                                                                                var $1441 = self.ini;
                                                                                                                                                                                                                                var $1442 = self.idx;
                                                                                                                                                                                                                                var $1443 = self.str;
                                                                                                                                                                                                                                var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($1430, $1439), $1440, $1441, $1442, $1443);
                                                                                                                                                                                                                                var self = _reply$pst$128;
                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                        var $1445 = self.err;
                                                                                                                                                                                                                                        var _reply$134 = Kindelia$parse$term$(_world$1)(_reply$pst$128);
                                                                                                                                                                                                                                        var self = _reply$134;
                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                var $1447 = self.err;
                                                                                                                                                                                                                                                var self = $1445;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                        var $1449 = self.value;
                                                                                                                                                                                                                                                        var $1450 = Parser$Reply$error$(Parser$Error$combine$($1449, $1447));
                                                                                                                                                                                                                                                        var $1448 = $1450;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                        var $1451 = Parser$Reply$error$($1447);
                                                                                                                                                                                                                                                        var $1448 = $1451;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $1446 = $1448;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                var $1452 = self.pst;
                                                                                                                                                                                                                                                var $1453 = self.val;
                                                                                                                                                                                                                                                var self = $1452;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                        var $1455 = self.err;
                                                                                                                                                                                                                                                        var $1456 = self.nam;
                                                                                                                                                                                                                                                        var $1457 = self.ini;
                                                                                                                                                                                                                                                        var $1458 = self.idx;
                                                                                                                                                                                                                                                        var $1459 = self.str;
                                                                                                                                                                                                                                                        var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($1445, $1455), $1456, $1457, $1458, $1459);
                                                                                                                                                                                                                                                        var self = _reply$pst$142;
                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                var $1461 = self.err;
                                                                                                                                                                                                                                                                var _reply$148 = Kindelia$parse$text$("}", _reply$pst$142);
                                                                                                                                                                                                                                                                var self = _reply$148;
                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                        var $1463 = self.err;
                                                                                                                                                                                                                                                                        var self = $1461;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                                                                var $1465 = self.value;
                                                                                                                                                                                                                                                                                var $1466 = Parser$Reply$error$(Parser$Error$combine$($1465, $1463));
                                                                                                                                                                                                                                                                                var $1464 = $1466;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                                                                var $1467 = Parser$Reply$error$($1463);
                                                                                                                                                                                                                                                                                var $1464 = $1467;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $1462 = $1464;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                        var $1468 = self.pst;
                                                                                                                                                                                                                                                                        var self = $1468;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                                var $1470 = self.err;
                                                                                                                                                                                                                                                                                var $1471 = self.nam;
                                                                                                                                                                                                                                                                                var $1472 = self.ini;
                                                                                                                                                                                                                                                                                var $1473 = self.idx;
                                                                                                                                                                                                                                                                                var $1474 = self.str;
                                                                                                                                                                                                                                                                                var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($1461, $1470), $1471, $1472, $1473, $1474);
                                                                                                                                                                                                                                                                                var $1475 = Parser$Reply$value$(_reply$pst$156, Kindelia$Term$compare$($1329, $1345, $1391, $1422, $1453));
                                                                                                                                                                                                                                                                                var $1469 = $1475;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $1462 = $1469;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                var $1460 = $1462;
                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                        var $1454 = $1460;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $1446 = $1454;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                        var $1444 = $1446;
                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                var $1438 = $1444;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $1431 = $1438;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                };
                                                                                                                                                                                                                var $1429 = $1431;
                                                                                                                                                                                                                break;
                                                                                                                                                                                                        };
                                                                                                                                                                                                        var $1423 = $1429;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $1415 = $1423;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $1413 = $1415;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $1407 = $1413;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $1400 = $1407;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $1398 = $1400;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $1392 = $1398;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1384 = $1392;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1382 = $1384;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1376 = $1382;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1369 = $1376;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1367 = $1369;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1361 = $1367;
                                                                                                        break;
                                                                                                };
                                                                                                var $1354 = $1361;
                                                                                                break;
                                                                                        };
                                                                                        var $1352 = $1354;
                                                                                        break;
                                                                                };
                                                                                var $1346 = $1352;
                                                                                break;
                                                                        };
                                                                        var $1338 = $1346;
                                                                        break;
                                                                };
                                                                var $1336 = $1338;
                                                                break;
                                                        };
                                                        var $1330 = $1336;
                                                        break;
                                                };
                                                var $1322 = $1330;
                                                break;
                                        };
                                        var $1320 = $1322;
                                        break;
                                };
                                var $1314 = $1320;
                                break;
                        };
                        var $1307 = $1314;
                        break;
                };
                var $1305 = $1307;
                break;
        };
        return $1305;
    };
    const Kindelia$parse$term$compare = x0 => x1 => Kindelia$parse$term$compare$(x0, x1);
    const Kindelia$Operation$add = ({
        _: 'Kindelia.Operation.add'
    });
    const Kindelia$Operation$sub = ({
        _: 'Kindelia.Operation.sub'
    });
    const Kindelia$Operation$mul = ({
        _: 'Kindelia.Operation.mul'
    });
    const Kindelia$Operation$div = ({
        _: 'Kindelia.Operation.div'
    });
    const Kindelia$Operation$mod = ({
        _: 'Kindelia.Operation.mod'
    });
    const Kindelia$Operation$or = ({
        _: 'Kindelia.Operation.or'
    });
    const Kindelia$Operation$and = ({
        _: 'Kindelia.Operation.and'
    });
    const Kindelia$Operation$xor = ({
        _: 'Kindelia.Operation.xor'
    });
    const Kindelia$parse$term$operation = Parser$choice(List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1477 = self.err;
                var _reply$7 = Kindelia$parse$text$("+", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1479 = self.err;
                        var self = $1477;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1481 = self.value;
                                var $1482 = Parser$Reply$error$(Parser$Error$combine$($1481, $1479));
                                var $1480 = $1482;
                                break;
                            case 'Maybe.none':
                                var $1483 = Parser$Reply$error$($1479);
                                var $1480 = $1483;
                                break;
                        };
                        var $1478 = $1480;
                        break;
                    case 'Parser.Reply.value':
                        var $1484 = self.pst;
                        var self = $1484;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1486 = self.err;
                                var $1487 = self.nam;
                                var $1488 = self.ini;
                                var $1489 = self.idx;
                                var $1490 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1477, $1486), $1487, $1488, $1489, $1490);
                                var $1491 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$add));
                                var $1485 = $1491;
                                break;
                        };
                        var $1478 = $1485;
                        break;
                };
                var $1476 = $1478;
                break;
        };
        return $1476;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1493 = self.err;
                var _reply$7 = Kindelia$parse$text$("-", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1495 = self.err;
                        var self = $1493;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1497 = self.value;
                                var $1498 = Parser$Reply$error$(Parser$Error$combine$($1497, $1495));
                                var $1496 = $1498;
                                break;
                            case 'Maybe.none':
                                var $1499 = Parser$Reply$error$($1495);
                                var $1496 = $1499;
                                break;
                        };
                        var $1494 = $1496;
                        break;
                    case 'Parser.Reply.value':
                        var $1500 = self.pst;
                        var self = $1500;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1502 = self.err;
                                var $1503 = self.nam;
                                var $1504 = self.ini;
                                var $1505 = self.idx;
                                var $1506 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1493, $1502), $1503, $1504, $1505, $1506);
                                var $1507 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$sub));
                                var $1501 = $1507;
                                break;
                        };
                        var $1494 = $1501;
                        break;
                };
                var $1492 = $1494;
                break;
        };
        return $1492;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1509 = self.err;
                var _reply$7 = Kindelia$parse$text$("*", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1511 = self.err;
                        var self = $1509;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1513 = self.value;
                                var $1514 = Parser$Reply$error$(Parser$Error$combine$($1513, $1511));
                                var $1512 = $1514;
                                break;
                            case 'Maybe.none':
                                var $1515 = Parser$Reply$error$($1511);
                                var $1512 = $1515;
                                break;
                        };
                        var $1510 = $1512;
                        break;
                    case 'Parser.Reply.value':
                        var $1516 = self.pst;
                        var self = $1516;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1518 = self.err;
                                var $1519 = self.nam;
                                var $1520 = self.ini;
                                var $1521 = self.idx;
                                var $1522 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1509, $1518), $1519, $1520, $1521, $1522);
                                var $1523 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$mul));
                                var $1517 = $1523;
                                break;
                        };
                        var $1510 = $1517;
                        break;
                };
                var $1508 = $1510;
                break;
        };
        return $1508;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1525 = self.err;
                var _reply$7 = Kindelia$parse$text$("/", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1527 = self.err;
                        var self = $1525;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1529 = self.value;
                                var $1530 = Parser$Reply$error$(Parser$Error$combine$($1529, $1527));
                                var $1528 = $1530;
                                break;
                            case 'Maybe.none':
                                var $1531 = Parser$Reply$error$($1527);
                                var $1528 = $1531;
                                break;
                        };
                        var $1526 = $1528;
                        break;
                    case 'Parser.Reply.value':
                        var $1532 = self.pst;
                        var self = $1532;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1534 = self.err;
                                var $1535 = self.nam;
                                var $1536 = self.ini;
                                var $1537 = self.idx;
                                var $1538 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1525, $1534), $1535, $1536, $1537, $1538);
                                var $1539 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$div));
                                var $1533 = $1539;
                                break;
                        };
                        var $1526 = $1533;
                        break;
                };
                var $1524 = $1526;
                break;
        };
        return $1524;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1541 = self.err;
                var _reply$7 = Kindelia$parse$text$("%", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1543 = self.err;
                        var self = $1541;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1545 = self.value;
                                var $1546 = Parser$Reply$error$(Parser$Error$combine$($1545, $1543));
                                var $1544 = $1546;
                                break;
                            case 'Maybe.none':
                                var $1547 = Parser$Reply$error$($1543);
                                var $1544 = $1547;
                                break;
                        };
                        var $1542 = $1544;
                        break;
                    case 'Parser.Reply.value':
                        var $1548 = self.pst;
                        var self = $1548;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1550 = self.err;
                                var $1551 = self.nam;
                                var $1552 = self.ini;
                                var $1553 = self.idx;
                                var $1554 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1541, $1550), $1551, $1552, $1553, $1554);
                                var $1555 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$mod));
                                var $1549 = $1555;
                                break;
                        };
                        var $1542 = $1549;
                        break;
                };
                var $1540 = $1542;
                break;
        };
        return $1540;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1557 = self.err;
                var _reply$7 = Kindelia$parse$text$("|", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1559 = self.err;
                        var self = $1557;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1561 = self.value;
                                var $1562 = Parser$Reply$error$(Parser$Error$combine$($1561, $1559));
                                var $1560 = $1562;
                                break;
                            case 'Maybe.none':
                                var $1563 = Parser$Reply$error$($1559);
                                var $1560 = $1563;
                                break;
                        };
                        var $1558 = $1560;
                        break;
                    case 'Parser.Reply.value':
                        var $1564 = self.pst;
                        var self = $1564;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1566 = self.err;
                                var $1567 = self.nam;
                                var $1568 = self.ini;
                                var $1569 = self.idx;
                                var $1570 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1557, $1566), $1567, $1568, $1569, $1570);
                                var $1571 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$or));
                                var $1565 = $1571;
                                break;
                        };
                        var $1558 = $1565;
                        break;
                };
                var $1556 = $1558;
                break;
        };
        return $1556;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1573 = self.err;
                var _reply$7 = Kindelia$parse$text$("&", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1575 = self.err;
                        var self = $1573;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1577 = self.value;
                                var $1578 = Parser$Reply$error$(Parser$Error$combine$($1577, $1575));
                                var $1576 = $1578;
                                break;
                            case 'Maybe.none':
                                var $1579 = Parser$Reply$error$($1575);
                                var $1576 = $1579;
                                break;
                        };
                        var $1574 = $1576;
                        break;
                    case 'Parser.Reply.value':
                        var $1580 = self.pst;
                        var self = $1580;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1582 = self.err;
                                var $1583 = self.nam;
                                var $1584 = self.ini;
                                var $1585 = self.idx;
                                var $1586 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1573, $1582), $1583, $1584, $1585, $1586);
                                var $1587 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$and));
                                var $1581 = $1587;
                                break;
                        };
                        var $1574 = $1581;
                        break;
                };
                var $1572 = $1574;
                break;
        };
        return $1572;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1589 = self.err;
                var _reply$7 = Kindelia$parse$text$("^", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1591 = self.err;
                        var self = $1589;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1593 = self.value;
                                var $1594 = Parser$Reply$error$(Parser$Error$combine$($1593, $1591));
                                var $1592 = $1594;
                                break;
                            case 'Maybe.none':
                                var $1595 = Parser$Reply$error$($1591);
                                var $1592 = $1595;
                                break;
                        };
                        var $1590 = $1592;
                        break;
                    case 'Parser.Reply.value':
                        var $1596 = self.pst;
                        var self = $1596;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1598 = self.err;
                                var $1599 = self.nam;
                                var $1600 = self.ini;
                                var $1601 = self.idx;
                                var $1602 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1589, $1598), $1599, $1600, $1601, $1602);
                                var $1603 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Kindelia$Operation$xor));
                                var $1597 = $1603;
                                break;
                        };
                        var $1590 = $1597;
                        break;
                };
                var $1588 = $1590;
                break;
        };
        return $1588;
    }), List$cons$((_pst$1 => {
        var $1604 = Parser$Reply$value$(_pst$1, Maybe$none);
        return $1604;
    }), List$nil))))))))));

    function Kindelia$Term$operate$(_oper$1, _val0$2, _val1$3) {
        var $1605 = ({
            _: 'Kindelia.Term.operate',
            'oper': _oper$1,
            'val0': _val0$2,
            'val1': _val1$3
        });
        return $1605;
    };
    const Kindelia$Term$operate = x0 => x1 => x2 => Kindelia$Term$operate$(x0, x1, x2);

    function Kindelia$parse$term$operate$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1607 = self.err;
                var _reply$8 = Kindelia$parse$term$operation(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1609 = self.err;
                        var self = $1607;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1611 = self.value;
                                var $1612 = Parser$Reply$error$(Parser$Error$combine$($1611, $1609));
                                var $1610 = $1612;
                                break;
                            case 'Maybe.none':
                                var $1613 = Parser$Reply$error$($1609);
                                var $1610 = $1613;
                                break;
                        };
                        var $1608 = $1610;
                        break;
                    case 'Parser.Reply.value':
                        var $1614 = self.pst;
                        var $1615 = self.val;
                        var self = $1614;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1617 = self.err;
                                var $1618 = self.nam;
                                var $1619 = self.ini;
                                var $1620 = self.idx;
                                var $1621 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1607, $1617), $1618, $1619, $1620, $1621);
                                var self = $1615;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $1623 = self.value;
                                        var $1624 = (_pst$18 => {
                                            var self = _pst$18;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $1626 = self.err;
                                                    var _reply$24 = Kindelia$parse$text$("(", _pst$18);
                                                    var self = _reply$24;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $1628 = self.err;
                                                            var self = $1626;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $1630 = self.value;
                                                                    var $1631 = Parser$Reply$error$(Parser$Error$combine$($1630, $1628));
                                                                    var $1629 = $1631;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $1632 = Parser$Reply$error$($1628);
                                                                    var $1629 = $1632;
                                                                    break;
                                                            };
                                                            var $1627 = $1629;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $1633 = self.pst;
                                                            var self = $1633;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1635 = self.err;
                                                                    var $1636 = self.nam;
                                                                    var $1637 = self.ini;
                                                                    var $1638 = self.idx;
                                                                    var $1639 = self.str;
                                                                    var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($1626, $1635), $1636, $1637, $1638, $1639);
                                                                    var self = _reply$pst$32;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $1641 = self.err;
                                                                            var _reply$38 = Kindelia$parse$term$(_world$1)(_reply$pst$32);
                                                                            var self = _reply$38;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $1643 = self.err;
                                                                                    var self = $1641;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $1645 = self.value;
                                                                                            var $1646 = Parser$Reply$error$(Parser$Error$combine$($1645, $1643));
                                                                                            var $1644 = $1646;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $1647 = Parser$Reply$error$($1643);
                                                                                            var $1644 = $1647;
                                                                                            break;
                                                                                    };
                                                                                    var $1642 = $1644;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $1648 = self.pst;
                                                                                    var $1649 = self.val;
                                                                                    var self = $1648;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1651 = self.err;
                                                                                            var $1652 = self.nam;
                                                                                            var $1653 = self.ini;
                                                                                            var $1654 = self.idx;
                                                                                            var $1655 = self.str;
                                                                                            var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($1641, $1651), $1652, $1653, $1654, $1655);
                                                                                            var self = _reply$pst$46;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $1657 = self.err;
                                                                                                    var _reply$52 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$46);
                                                                                                    var self = _reply$52;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $1659 = self.err;
                                                                                                            var self = $1657;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $1661 = self.value;
                                                                                                                    var $1662 = Parser$Reply$error$(Parser$Error$combine$($1661, $1659));
                                                                                                                    var $1660 = $1662;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $1663 = Parser$Reply$error$($1659);
                                                                                                                    var $1660 = $1663;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1658 = $1660;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $1664 = self.pst;
                                                                                                            var self = $1664;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $1666 = self.err;
                                                                                                                    var $1667 = self.nam;
                                                                                                                    var $1668 = self.ini;
                                                                                                                    var $1669 = self.idx;
                                                                                                                    var $1670 = self.str;
                                                                                                                    var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($1657, $1666), $1667, $1668, $1669, $1670);
                                                                                                                    var self = _reply$pst$60;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.State.new':
                                                                                                                            var $1672 = self.err;
                                                                                                                            var _reply$66 = Kindelia$parse$term$(_world$1)(_reply$pst$60);
                                                                                                                            var self = _reply$66;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                    var $1674 = self.err;
                                                                                                                                    var self = $1672;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Maybe.some':
                                                                                                                                            var $1676 = self.value;
                                                                                                                                            var $1677 = Parser$Reply$error$(Parser$Error$combine$($1676, $1674));
                                                                                                                                            var $1675 = $1677;
                                                                                                                                            break;
                                                                                                                                        case 'Maybe.none':
                                                                                                                                            var $1678 = Parser$Reply$error$($1674);
                                                                                                                                            var $1675 = $1678;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1673 = $1675;
                                                                                                                                    break;
                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                    var $1679 = self.pst;
                                                                                                                                    var $1680 = self.val;
                                                                                                                                    var self = $1679;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $1682 = self.err;
                                                                                                                                            var $1683 = self.nam;
                                                                                                                                            var $1684 = self.ini;
                                                                                                                                            var $1685 = self.idx;
                                                                                                                                            var $1686 = self.str;
                                                                                                                                            var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($1672, $1682), $1683, $1684, $1685, $1686);
                                                                                                                                            var self = _reply$pst$74;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $1688 = self.err;
                                                                                                                                                    var _reply$80 = Kindelia$parse$text$(")", _reply$pst$74);
                                                                                                                                                    var self = _reply$80;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $1690 = self.err;
                                                                                                                                                            var self = $1688;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $1692 = self.value;
                                                                                                                                                                    var $1693 = Parser$Reply$error$(Parser$Error$combine$($1692, $1690));
                                                                                                                                                                    var $1691 = $1693;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $1694 = Parser$Reply$error$($1690);
                                                                                                                                                                    var $1691 = $1694;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1689 = $1691;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $1695 = self.pst;
                                                                                                                                                            var self = $1695;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $1697 = self.err;
                                                                                                                                                                    var $1698 = self.nam;
                                                                                                                                                                    var $1699 = self.ini;
                                                                                                                                                                    var $1700 = self.idx;
                                                                                                                                                                    var $1701 = self.str;
                                                                                                                                                                    var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($1688, $1697), $1698, $1699, $1700, $1701);
                                                                                                                                                                    var $1702 = Parser$Reply$value$(_reply$pst$88, Kindelia$Term$operate$($1623, $1649, $1680));
                                                                                                                                                                    var $1696 = $1702;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1689 = $1696;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1687 = $1689;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1681 = $1687;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1673 = $1681;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1671 = $1673;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1665 = $1671;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1658 = $1665;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1656 = $1658;
                                                                                                    break;
                                                                                            };
                                                                                            var $1650 = $1656;
                                                                                            break;
                                                                                    };
                                                                                    var $1642 = $1650;
                                                                                    break;
                                                                            };
                                                                            var $1640 = $1642;
                                                                            break;
                                                                    };
                                                                    var $1634 = $1640;
                                                                    break;
                                                            };
                                                            var $1627 = $1634;
                                                            break;
                                                    };
                                                    var $1625 = $1627;
                                                    break;
                                            };
                                            return $1625;
                                        });
                                        var $1622 = $1624;
                                        break;
                                    case 'Maybe.none':
                                        var $1703 = Parser$fail("Not an operation.");
                                        var $1622 = $1703;
                                        break;
                                };
                                var $1622 = $1622(_reply$pst$16);
                                var $1616 = $1622;
                                break;
                        };
                        var $1608 = $1616;
                        break;
                };
                var $1606 = $1608;
                break;
        };
        return $1606;
    };
    const Kindelia$parse$term$operate = x0 => x1 => Kindelia$parse$term$operate$(x0, x1);

    function Kindelia$Term$set$(_file$1, _expr$2, _body$3) {
        var $1704 = ({
            _: 'Kindelia.Term.set',
            'file': _file$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $1704;
    };
    const Kindelia$Term$set = x0 => x1 => x2 => Kindelia$Term$set$(x0, x1, x2);

    function Kindelia$parse$term$set$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1706 = self.err;
                var _reply$8 = Kindelia$parse$text$("set", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1708 = self.err;
                        var self = $1706;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1710 = self.value;
                                var $1711 = Parser$Reply$error$(Parser$Error$combine$($1710, $1708));
                                var $1709 = $1711;
                                break;
                            case 'Maybe.none':
                                var $1712 = Parser$Reply$error$($1708);
                                var $1709 = $1712;
                                break;
                        };
                        var $1707 = $1709;
                        break;
                    case 'Parser.Reply.value':
                        var $1713 = self.pst;
                        var self = $1713;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1715 = self.err;
                                var $1716 = self.nam;
                                var $1717 = self.ini;
                                var $1718 = self.idx;
                                var $1719 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1706, $1715), $1716, $1717, $1718, $1719);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1721 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1723 = self.err;
                                                var self = $1721;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1725 = self.value;
                                                        var $1726 = Parser$Reply$error$(Parser$Error$combine$($1725, $1723));
                                                        var $1724 = $1726;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1727 = Parser$Reply$error$($1723);
                                                        var $1724 = $1727;
                                                        break;
                                                };
                                                var $1722 = $1724;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1728 = self.pst;
                                                var $1729 = self.val;
                                                var self = $1728;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1731 = self.err;
                                                        var $1732 = self.nam;
                                                        var $1733 = self.ini;
                                                        var $1734 = self.idx;
                                                        var $1735 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1721, $1731), $1732, $1733, $1734, $1735);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1737 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$("=", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1739 = self.err;
                                                                        var self = $1737;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1741 = self.value;
                                                                                var $1742 = Parser$Reply$error$(Parser$Error$combine$($1741, $1739));
                                                                                var $1740 = $1742;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1743 = Parser$Reply$error$($1739);
                                                                                var $1740 = $1743;
                                                                                break;
                                                                        };
                                                                        var $1738 = $1740;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1744 = self.pst;
                                                                        var self = $1744;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1746 = self.err;
                                                                                var $1747 = self.nam;
                                                                                var $1748 = self.ini;
                                                                                var $1749 = self.idx;
                                                                                var $1750 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1737, $1746), $1747, $1748, $1749, $1750);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1752 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$term$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1754 = self.err;
                                                                                                var self = $1752;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1756 = self.value;
                                                                                                        var $1757 = Parser$Reply$error$(Parser$Error$combine$($1756, $1754));
                                                                                                        var $1755 = $1757;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1758 = Parser$Reply$error$($1754);
                                                                                                        var $1755 = $1758;
                                                                                                        break;
                                                                                                };
                                                                                                var $1753 = $1755;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1759 = self.pst;
                                                                                                var $1760 = self.val;
                                                                                                var self = $1759;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1762 = self.err;
                                                                                                        var $1763 = self.nam;
                                                                                                        var $1764 = self.ini;
                                                                                                        var $1765 = self.idx;
                                                                                                        var $1766 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1752, $1762), $1763, $1764, $1765, $1766);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1768 = self.err;
                                                                                                                var _reply$64 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1770 = self.err;
                                                                                                                        var self = $1768;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1772 = self.value;
                                                                                                                                var $1773 = Parser$Reply$error$(Parser$Error$combine$($1772, $1770));
                                                                                                                                var $1771 = $1773;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1774 = Parser$Reply$error$($1770);
                                                                                                                                var $1771 = $1774;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1769 = $1771;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1775 = self.pst;
                                                                                                                        var self = $1775;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1777 = self.err;
                                                                                                                                var $1778 = self.nam;
                                                                                                                                var $1779 = self.ini;
                                                                                                                                var $1780 = self.idx;
                                                                                                                                var $1781 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1768, $1777), $1778, $1779, $1780, $1781);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1783 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1785 = self.err;
                                                                                                                                                var self = $1783;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1787 = self.value;
                                                                                                                                                        var $1788 = Parser$Reply$error$(Parser$Error$combine$($1787, $1785));
                                                                                                                                                        var $1786 = $1788;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1789 = Parser$Reply$error$($1785);
                                                                                                                                                        var $1786 = $1789;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1784 = $1786;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1790 = self.pst;
                                                                                                                                                var $1791 = self.val;
                                                                                                                                                var self = $1790;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1793 = self.err;
                                                                                                                                                        var $1794 = self.nam;
                                                                                                                                                        var $1795 = self.ini;
                                                                                                                                                        var $1796 = self.idx;
                                                                                                                                                        var $1797 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1783, $1793), $1794, $1795, $1796, $1797);
                                                                                                                                                        var $1798 = Parser$Reply$value$(_reply$pst$86, Kindelia$Term$set$($1729, $1760, $1791));
                                                                                                                                                        var $1792 = $1798;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1784 = $1792;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1782 = $1784;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1776 = $1782;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1769 = $1776;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1767 = $1769;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1761 = $1767;
                                                                                                        break;
                                                                                                };
                                                                                                var $1753 = $1761;
                                                                                                break;
                                                                                        };
                                                                                        var $1751 = $1753;
                                                                                        break;
                                                                                };
                                                                                var $1745 = $1751;
                                                                                break;
                                                                        };
                                                                        var $1738 = $1745;
                                                                        break;
                                                                };
                                                                var $1736 = $1738;
                                                                break;
                                                        };
                                                        var $1730 = $1736;
                                                        break;
                                                };
                                                var $1722 = $1730;
                                                break;
                                        };
                                        var $1720 = $1722;
                                        break;
                                };
                                var $1714 = $1720;
                                break;
                        };
                        var $1707 = $1714;
                        break;
                };
                var $1705 = $1707;
                break;
        };
        return $1705;
    };
    const Kindelia$parse$term$set = x0 => x1 => Kindelia$parse$term$set$(x0, x1);

    function Kindelia$Term$get$(_name$1, _file$2, _body$3) {
        var $1799 = ({
            _: 'Kindelia.Term.get',
            'name': _name$1,
            'file': _file$2,
            'body': _body$3
        });
        return $1799;
    };
    const Kindelia$Term$get = x0 => x1 => x2 => Kindelia$Term$get$(x0, x1, x2);

    function Kindelia$parse$term$get$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1801 = self.err;
                var _reply$8 = Kindelia$parse$text$("get", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1803 = self.err;
                        var self = $1801;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1805 = self.value;
                                var $1806 = Parser$Reply$error$(Parser$Error$combine$($1805, $1803));
                                var $1804 = $1806;
                                break;
                            case 'Maybe.none':
                                var $1807 = Parser$Reply$error$($1803);
                                var $1804 = $1807;
                                break;
                        };
                        var $1802 = $1804;
                        break;
                    case 'Parser.Reply.value':
                        var $1808 = self.pst;
                        var self = $1808;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1810 = self.err;
                                var $1811 = self.nam;
                                var $1812 = self.ini;
                                var $1813 = self.idx;
                                var $1814 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1801, $1810), $1811, $1812, $1813, $1814);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1816 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1818 = self.err;
                                                var self = $1816;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1820 = self.value;
                                                        var $1821 = Parser$Reply$error$(Parser$Error$combine$($1820, $1818));
                                                        var $1819 = $1821;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1822 = Parser$Reply$error$($1818);
                                                        var $1819 = $1822;
                                                        break;
                                                };
                                                var $1817 = $1819;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1823 = self.pst;
                                                var $1824 = self.val;
                                                var self = $1823;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1826 = self.err;
                                                        var $1827 = self.nam;
                                                        var $1828 = self.ini;
                                                        var $1829 = self.idx;
                                                        var $1830 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1816, $1826), $1827, $1828, $1829, $1830);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1832 = self.err;
                                                                var _reply$36 = Kindelia$parse$text$("=", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1834 = self.err;
                                                                        var self = $1832;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1836 = self.value;
                                                                                var $1837 = Parser$Reply$error$(Parser$Error$combine$($1836, $1834));
                                                                                var $1835 = $1837;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1838 = Parser$Reply$error$($1834);
                                                                                var $1835 = $1838;
                                                                                break;
                                                                        };
                                                                        var $1833 = $1835;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1839 = self.pst;
                                                                        var self = $1839;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1841 = self.err;
                                                                                var $1842 = self.nam;
                                                                                var $1843 = self.ini;
                                                                                var $1844 = self.idx;
                                                                                var $1845 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1832, $1841), $1842, $1843, $1844, $1845);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1847 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$name$(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1849 = self.err;
                                                                                                var self = $1847;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1851 = self.value;
                                                                                                        var $1852 = Parser$Reply$error$(Parser$Error$combine$($1851, $1849));
                                                                                                        var $1850 = $1852;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1853 = Parser$Reply$error$($1849);
                                                                                                        var $1850 = $1853;
                                                                                                        break;
                                                                                                };
                                                                                                var $1848 = $1850;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1854 = self.pst;
                                                                                                var $1855 = self.val;
                                                                                                var self = $1854;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1857 = self.err;
                                                                                                        var $1858 = self.nam;
                                                                                                        var $1859 = self.ini;
                                                                                                        var $1860 = self.idx;
                                                                                                        var $1861 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1847, $1857), $1858, $1859, $1860, $1861);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1863 = self.err;
                                                                                                                var _reply$64 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1865 = self.err;
                                                                                                                        var self = $1863;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1867 = self.value;
                                                                                                                                var $1868 = Parser$Reply$error$(Parser$Error$combine$($1867, $1865));
                                                                                                                                var $1866 = $1868;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1869 = Parser$Reply$error$($1865);
                                                                                                                                var $1866 = $1869;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1864 = $1866;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1870 = self.pst;
                                                                                                                        var self = $1870;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1872 = self.err;
                                                                                                                                var $1873 = self.nam;
                                                                                                                                var $1874 = self.ini;
                                                                                                                                var $1875 = self.idx;
                                                                                                                                var $1876 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1863, $1872), $1873, $1874, $1875, $1876);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1878 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1880 = self.err;
                                                                                                                                                var self = $1878;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1882 = self.value;
                                                                                                                                                        var $1883 = Parser$Reply$error$(Parser$Error$combine$($1882, $1880));
                                                                                                                                                        var $1881 = $1883;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1884 = Parser$Reply$error$($1880);
                                                                                                                                                        var $1881 = $1884;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1879 = $1881;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1885 = self.pst;
                                                                                                                                                var $1886 = self.val;
                                                                                                                                                var self = $1885;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1888 = self.err;
                                                                                                                                                        var $1889 = self.nam;
                                                                                                                                                        var $1890 = self.ini;
                                                                                                                                                        var $1891 = self.idx;
                                                                                                                                                        var $1892 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1878, $1888), $1889, $1890, $1891, $1892);
                                                                                                                                                        var $1893 = Parser$Reply$value$(_reply$pst$86, Kindelia$Term$get$($1824, $1855, $1886));
                                                                                                                                                        var $1887 = $1893;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1879 = $1887;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1877 = $1879;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1871 = $1877;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1864 = $1871;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1862 = $1864;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1856 = $1862;
                                                                                                        break;
                                                                                                };
                                                                                                var $1848 = $1856;
                                                                                                break;
                                                                                        };
                                                                                        var $1846 = $1848;
                                                                                        break;
                                                                                };
                                                                                var $1840 = $1846;
                                                                                break;
                                                                        };
                                                                        var $1833 = $1840;
                                                                        break;
                                                                };
                                                                var $1831 = $1833;
                                                                break;
                                                        };
                                                        var $1825 = $1831;
                                                        break;
                                                };
                                                var $1817 = $1825;
                                                break;
                                        };
                                        var $1815 = $1817;
                                        break;
                                };
                                var $1809 = $1815;
                                break;
                        };
                        var $1802 = $1809;
                        break;
                };
                var $1800 = $1802;
                break;
        };
        return $1800;
    };
    const Kindelia$parse$term$get = x0 => x1 => Kindelia$parse$term$get$(x0, x1);

    function Kindelia$Term$bind$(_name$1, _type$2, _expr$3, _body$4) {
        var $1894 = ({
            _: 'Kindelia.Term.bind',
            'name': _name$1,
            'type': _type$2,
            'expr': _expr$3,
            'body': _body$4
        });
        return $1894;
    };
    const Kindelia$Term$bind = x0 => x1 => x2 => x3 => Kindelia$Term$bind$(x0, x1, x2, x3);

    function Kindelia$parse$term$bind$(_world$1) {
        var $1895 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1897 = self.err;
                    var _reply$8 = Kindelia$parse$text$("run", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1899 = self.err;
                            var self = $1897;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1901 = self.value;
                                    var $1902 = Parser$Reply$error$(Parser$Error$combine$($1901, $1899));
                                    var $1900 = $1902;
                                    break;
                                case 'Maybe.none':
                                    var $1903 = Parser$Reply$error$($1899);
                                    var $1900 = $1903;
                                    break;
                            };
                            var $1898 = $1900;
                            break;
                        case 'Parser.Reply.value':
                            var $1904 = self.pst;
                            var self = $1904;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1906 = self.err;
                                    var $1907 = self.nam;
                                    var $1908 = self.ini;
                                    var $1909 = self.idx;
                                    var $1910 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1897, $1906), $1907, $1908, $1909, $1910);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1912 = self.err;
                                            var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1914 = self.err;
                                                    var self = $1912;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1916 = self.value;
                                                            var $1917 = Parser$Reply$error$(Parser$Error$combine$($1916, $1914));
                                                            var $1915 = $1917;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1918 = Parser$Reply$error$($1914);
                                                            var $1915 = $1918;
                                                            break;
                                                    };
                                                    var $1913 = $1915;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1919 = self.pst;
                                                    var $1920 = self.val;
                                                    var self = $1919;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1922 = self.err;
                                                            var $1923 = self.nam;
                                                            var $1924 = self.ini;
                                                            var $1925 = self.idx;
                                                            var $1926 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1912, $1922), $1923, $1924, $1925, $1926);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1928 = self.err;
                                                                    var _reply$36 = Kindelia$parse$text$(":", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1930 = self.err;
                                                                            var self = $1928;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1932 = self.value;
                                                                                    var $1933 = Parser$Reply$error$(Parser$Error$combine$($1932, $1930));
                                                                                    var $1931 = $1933;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1934 = Parser$Reply$error$($1930);
                                                                                    var $1931 = $1934;
                                                                                    break;
                                                                            };
                                                                            var $1929 = $1931;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1935 = self.pst;
                                                                            var self = $1935;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1937 = self.err;
                                                                                    var $1938 = self.nam;
                                                                                    var $1939 = self.ini;
                                                                                    var $1940 = self.idx;
                                                                                    var $1941 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1928, $1937), $1938, $1939, $1940, $1941);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1943 = self.err;
                                                                                            var _reply$50 = Kindelia$parse$type$(_world$1)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $1945 = self.err;
                                                                                                    var self = $1943;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $1947 = self.value;
                                                                                                            var $1948 = Parser$Reply$error$(Parser$Error$combine$($1947, $1945));
                                                                                                            var $1946 = $1948;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $1949 = Parser$Reply$error$($1945);
                                                                                                            var $1946 = $1949;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1944 = $1946;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $1950 = self.pst;
                                                                                                    var $1951 = self.val;
                                                                                                    var self = $1950;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $1953 = self.err;
                                                                                                            var $1954 = self.nam;
                                                                                                            var $1955 = self.ini;
                                                                                                            var $1956 = self.idx;
                                                                                                            var $1957 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1943, $1953), $1954, $1955, $1956, $1957);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $1959 = self.err;
                                                                                                                    var _reply$64 = Kindelia$parse$text$("=", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $1961 = self.err;
                                                                                                                            var self = $1959;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $1963 = self.value;
                                                                                                                                    var $1964 = Parser$Reply$error$(Parser$Error$combine$($1963, $1961));
                                                                                                                                    var $1962 = $1964;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $1965 = Parser$Reply$error$($1961);
                                                                                                                                    var $1962 = $1965;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1960 = $1962;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $1966 = self.pst;
                                                                                                                            var self = $1966;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $1968 = self.err;
                                                                                                                                    var $1969 = self.nam;
                                                                                                                                    var $1970 = self.ini;
                                                                                                                                    var $1971 = self.idx;
                                                                                                                                    var $1972 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1959, $1968), $1969, $1970, $1971, $1972);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $1974 = self.err;
                                                                                                                                            var _reply$78 = Kindelia$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $1976 = self.err;
                                                                                                                                                    var self = $1974;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $1978 = self.value;
                                                                                                                                                            var $1979 = Parser$Reply$error$(Parser$Error$combine$($1978, $1976));
                                                                                                                                                            var $1977 = $1979;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $1980 = Parser$Reply$error$($1976);
                                                                                                                                                            var $1977 = $1980;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1975 = $1977;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $1981 = self.pst;
                                                                                                                                                    var $1982 = self.val;
                                                                                                                                                    var self = $1981;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $1984 = self.err;
                                                                                                                                                            var $1985 = self.nam;
                                                                                                                                                            var $1986 = self.ini;
                                                                                                                                                            var $1987 = self.idx;
                                                                                                                                                            var $1988 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1974, $1984), $1985, $1986, $1987, $1988);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $1990 = self.err;
                                                                                                                                                                    var _reply$92 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $1992 = self.err;
                                                                                                                                                                            var self = $1990;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $1994 = self.value;
                                                                                                                                                                                    var $1995 = Parser$Reply$error$(Parser$Error$combine$($1994, $1992));
                                                                                                                                                                                    var $1993 = $1995;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $1996 = Parser$Reply$error$($1992);
                                                                                                                                                                                    var $1993 = $1996;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1991 = $1993;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $1997 = self.pst;
                                                                                                                                                                            var self = $1997;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $1999 = self.err;
                                                                                                                                                                                    var $2000 = self.nam;
                                                                                                                                                                                    var $2001 = self.ini;
                                                                                                                                                                                    var $2002 = self.idx;
                                                                                                                                                                                    var $2003 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($1990, $1999), $2000, $2001, $2002, $2003);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2005 = self.err;
                                                                                                                                                                                            var _reply$106 = Kindelia$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2007 = self.err;
                                                                                                                                                                                                    var self = $2005;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2009 = self.value;
                                                                                                                                                                                                            var $2010 = Parser$Reply$error$(Parser$Error$combine$($2009, $2007));
                                                                                                                                                                                                            var $2008 = $2010;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2011 = Parser$Reply$error$($2007);
                                                                                                                                                                                                            var $2008 = $2011;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2006 = $2008;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2012 = self.pst;
                                                                                                                                                                                                    var $2013 = self.val;
                                                                                                                                                                                                    var self = $2012;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2015 = self.err;
                                                                                                                                                                                                            var $2016 = self.nam;
                                                                                                                                                                                                            var $2017 = self.ini;
                                                                                                                                                                                                            var $2018 = self.idx;
                                                                                                                                                                                                            var $2019 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2005, $2015), $2016, $2017, $2018, $2019);
                                                                                                                                                                                                            var $2020 = Parser$Reply$value$(_reply$pst$114, Kindelia$Term$bind$($1920, $1951, $1982, $2013));
                                                                                                                                                                                                            var $2014 = $2020;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2006 = $2014;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2004 = $2006;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $1998 = $2004;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1991 = $1998;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $1989 = $1991;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1983 = $1989;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1975 = $1983;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1973 = $1975;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1967 = $1973;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1960 = $1967;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1958 = $1960;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1952 = $1958;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1944 = $1952;
                                                                                                    break;
                                                                                            };
                                                                                            var $1942 = $1944;
                                                                                            break;
                                                                                    };
                                                                                    var $1936 = $1942;
                                                                                    break;
                                                                            };
                                                                            var $1929 = $1936;
                                                                            break;
                                                                    };
                                                                    var $1927 = $1929;
                                                                    break;
                                                            };
                                                            var $1921 = $1927;
                                                            break;
                                                    };
                                                    var $1913 = $1921;
                                                    break;
                                            };
                                            var $1911 = $1913;
                                            break;
                                    };
                                    var $1905 = $1911;
                                    break;
                            };
                            var $1898 = $1905;
                            break;
                    };
                    var $1896 = $1898;
                    break;
            };
            return $1896;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2022 = self.err;
                    var _reply$8 = Kindelia$parse$text$("run", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2024 = self.err;
                            var self = $2022;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2026 = self.value;
                                    var $2027 = Parser$Reply$error$(Parser$Error$combine$($2026, $2024));
                                    var $2025 = $2027;
                                    break;
                                case 'Maybe.none':
                                    var $2028 = Parser$Reply$error$($2024);
                                    var $2025 = $2028;
                                    break;
                            };
                            var $2023 = $2025;
                            break;
                        case 'Parser.Reply.value':
                            var $2029 = self.pst;
                            var self = $2029;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2031 = self.err;
                                    var $2032 = self.nam;
                                    var $2033 = self.ini;
                                    var $2034 = self.idx;
                                    var $2035 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2022, $2031), $2032, $2033, $2034, $2035);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2037 = self.err;
                                            var _reply$22 = Kindelia$parse$term$(_world$1)(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2039 = self.err;
                                                    var self = $2037;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2041 = self.value;
                                                            var $2042 = Parser$Reply$error$(Parser$Error$combine$($2041, $2039));
                                                            var $2040 = $2042;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2043 = Parser$Reply$error$($2039);
                                                            var $2040 = $2043;
                                                            break;
                                                    };
                                                    var $2038 = $2040;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2044 = self.pst;
                                                    var $2045 = self.val;
                                                    var self = $2044;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2047 = self.err;
                                                            var $2048 = self.nam;
                                                            var $2049 = self.ini;
                                                            var $2050 = self.idx;
                                                            var $2051 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2037, $2047), $2048, $2049, $2050, $2051);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2053 = self.err;
                                                                    var _reply$36 = Parser$maybe$(Kindelia$parse$text(";"), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2055 = self.err;
                                                                            var self = $2053;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2057 = self.value;
                                                                                    var $2058 = Parser$Reply$error$(Parser$Error$combine$($2057, $2055));
                                                                                    var $2056 = $2058;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2059 = Parser$Reply$error$($2055);
                                                                                    var $2056 = $2059;
                                                                                    break;
                                                                            };
                                                                            var $2054 = $2056;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2060 = self.pst;
                                                                            var self = $2060;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2062 = self.err;
                                                                                    var $2063 = self.nam;
                                                                                    var $2064 = self.ini;
                                                                                    var $2065 = self.idx;
                                                                                    var $2066 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2053, $2062), $2063, $2064, $2065, $2066);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2068 = self.err;
                                                                                            var _reply$50 = Kindelia$parse$term$(_world$1)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2070 = self.err;
                                                                                                    var self = $2068;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2072 = self.value;
                                                                                                            var $2073 = Parser$Reply$error$(Parser$Error$combine$($2072, $2070));
                                                                                                            var $2071 = $2073;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2074 = Parser$Reply$error$($2070);
                                                                                                            var $2071 = $2074;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2069 = $2071;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2075 = self.pst;
                                                                                                    var $2076 = self.val;
                                                                                                    var self = $2075;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2078 = self.err;
                                                                                                            var $2079 = self.nam;
                                                                                                            var $2080 = self.ini;
                                                                                                            var $2081 = self.idx;
                                                                                                            var $2082 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2068, $2078), $2079, $2080, $2081, $2082);
                                                                                                            var $2083 = Parser$Reply$value$(_reply$pst$58, Kindelia$Term$bind$("", Kindelia$Type$word, $2045, $2076));
                                                                                                            var $2077 = $2083;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2069 = $2077;
                                                                                                    break;
                                                                                            };
                                                                                            var $2067 = $2069;
                                                                                            break;
                                                                                    };
                                                                                    var $2061 = $2067;
                                                                                    break;
                                                                            };
                                                                            var $2054 = $2061;
                                                                            break;
                                                                    };
                                                                    var $2052 = $2054;
                                                                    break;
                                                            };
                                                            var $2046 = $2052;
                                                            break;
                                                    };
                                                    var $2038 = $2046;
                                                    break;
                                            };
                                            var $2036 = $2038;
                                            break;
                                    };
                                    var $2030 = $2036;
                                    break;
                            };
                            var $2023 = $2030;
                            break;
                    };
                    var $2021 = $2023;
                    break;
            };
            return $2021;
        }), List$nil)));
        return $1895;
    };
    const Kindelia$parse$term$bind = x0 => Kindelia$parse$term$bind$(x0);

    function Kindelia$Term$return$(_expr$1) {
        var $2084 = ({
            _: 'Kindelia.Term.return',
            'expr': _expr$1
        });
        return $2084;
    };
    const Kindelia$Term$return = x0 => Kindelia$Term$return$(x0);

    function Kindelia$parse$term$return$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2086 = self.err;
                var _reply$8 = Kindelia$parse$text$("return", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2088 = self.err;
                        var self = $2086;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2090 = self.value;
                                var $2091 = Parser$Reply$error$(Parser$Error$combine$($2090, $2088));
                                var $2089 = $2091;
                                break;
                            case 'Maybe.none':
                                var $2092 = Parser$Reply$error$($2088);
                                var $2089 = $2092;
                                break;
                        };
                        var $2087 = $2089;
                        break;
                    case 'Parser.Reply.value':
                        var $2093 = self.pst;
                        var self = $2093;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2095 = self.err;
                                var $2096 = self.nam;
                                var $2097 = self.ini;
                                var $2098 = self.idx;
                                var $2099 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2086, $2095), $2096, $2097, $2098, $2099);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2101 = self.err;
                                        var _reply$22 = Kindelia$parse$term$(_world$1)(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2103 = self.err;
                                                var self = $2101;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2105 = self.value;
                                                        var $2106 = Parser$Reply$error$(Parser$Error$combine$($2105, $2103));
                                                        var $2104 = $2106;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2107 = Parser$Reply$error$($2103);
                                                        var $2104 = $2107;
                                                        break;
                                                };
                                                var $2102 = $2104;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2108 = self.pst;
                                                var $2109 = self.val;
                                                var self = $2108;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2111 = self.err;
                                                        var $2112 = self.nam;
                                                        var $2113 = self.ini;
                                                        var $2114 = self.idx;
                                                        var $2115 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2101, $2111), $2112, $2113, $2114, $2115);
                                                        var $2116 = Parser$Reply$value$(_reply$pst$30, Kindelia$Term$return$($2109));
                                                        var $2110 = $2116;
                                                        break;
                                                };
                                                var $2102 = $2110;
                                                break;
                                        };
                                        var $2100 = $2102;
                                        break;
                                };
                                var $2094 = $2100;
                                break;
                        };
                        var $2087 = $2094;
                        break;
                };
                var $2085 = $2087;
                break;
        };
        return $2085;
    };
    const Kindelia$parse$term$return = x0 => x1 => Kindelia$parse$term$return$(x0, x1);

    function Kindelia$Term$call$(_bond$1, _args$2) {
        var $2117 = ({
            _: 'Kindelia.Term.call',
            'bond': _bond$1,
            'args': _args$2
        });
        return $2117;
    };
    const Kindelia$Term$call = x0 => x1 => Kindelia$Term$call$(x0, x1);

    function Kindelia$parse$term$call$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2119 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2121 = self.err;
                        var self = $2119;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2123 = self.value;
                                var $2124 = Parser$Reply$error$(Parser$Error$combine$($2123, $2121));
                                var $2122 = $2124;
                                break;
                            case 'Maybe.none':
                                var $2125 = Parser$Reply$error$($2121);
                                var $2122 = $2125;
                                break;
                        };
                        var $2120 = $2122;
                        break;
                    case 'Parser.Reply.value':
                        var $2126 = self.pst;
                        var $2127 = self.val;
                        var self = $2126;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2129 = self.err;
                                var $2130 = self.nam;
                                var $2131 = self.ini;
                                var $2132 = self.idx;
                                var $2133 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2119, $2129), $2130, $2131, $2132, $2133);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2135 = self.err;
                                        var _reply$22 = Parser$wrap$(Kindelia$parse$text("("), (_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $2138 = self.err;
                                                    var _reply$28 = Kindelia$parse$term$(_world$1)(_pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $2140 = self.err;
                                                            var self = $2138;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $2142 = self.value;
                                                                    var $2143 = Parser$Reply$error$(Parser$Error$combine$($2142, $2140));
                                                                    var $2141 = $2143;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $2144 = Parser$Reply$error$($2140);
                                                                    var $2141 = $2144;
                                                                    break;
                                                            };
                                                            var $2139 = $2141;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $2145 = self.pst;
                                                            var $2146 = self.val;
                                                            var self = $2145;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2148 = self.err;
                                                                    var $2149 = self.nam;
                                                                    var $2150 = self.ini;
                                                                    var $2151 = self.idx;
                                                                    var $2152 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($2138, $2148), $2149, $2150, $2151, $2152);
                                                                    var self = _reply$pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $2154 = self.err;
                                                                            var _reply$42 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $2156 = self.err;
                                                                                    var self = $2154;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $2158 = self.value;
                                                                                            var $2159 = Parser$Reply$error$(Parser$Error$combine$($2158, $2156));
                                                                                            var $2157 = $2159;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $2160 = Parser$Reply$error$($2156);
                                                                                            var $2157 = $2160;
                                                                                            break;
                                                                                    };
                                                                                    var $2155 = $2157;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $2161 = self.pst;
                                                                                    var self = $2161;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2163 = self.err;
                                                                                            var $2164 = self.nam;
                                                                                            var $2165 = self.ini;
                                                                                            var $2166 = self.idx;
                                                                                            var $2167 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($2154, $2163), $2164, $2165, $2166, $2167);
                                                                                            var $2168 = Parser$Reply$value$(_reply$pst$50, $2146);
                                                                                            var $2162 = $2168;
                                                                                            break;
                                                                                    };
                                                                                    var $2155 = $2162;
                                                                                    break;
                                                                            };
                                                                            var $2153 = $2155;
                                                                            break;
                                                                    };
                                                                    var $2147 = $2153;
                                                                    break;
                                                            };
                                                            var $2139 = $2147;
                                                            break;
                                                    };
                                                    var $2137 = $2139;
                                                    break;
                                            };
                                            return $2137;
                                        }), Kindelia$parse$text(")"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2169 = self.err;
                                                var self = $2135;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2171 = self.value;
                                                        var $2172 = Parser$Reply$error$(Parser$Error$combine$($2171, $2169));
                                                        var $2170 = $2172;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2173 = Parser$Reply$error$($2169);
                                                        var $2170 = $2173;
                                                        break;
                                                };
                                                var $2136 = $2170;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2174 = self.pst;
                                                var $2175 = self.val;
                                                var self = $2174;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2177 = self.err;
                                                        var $2178 = self.nam;
                                                        var $2179 = self.ini;
                                                        var $2180 = self.idx;
                                                        var $2181 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2135, $2177), $2178, $2179, $2180, $2181);
                                                        var $2182 = Parser$Reply$value$(_reply$pst$30, Kindelia$Term$call$($2127, $2175));
                                                        var $2176 = $2182;
                                                        break;
                                                };
                                                var $2136 = $2176;
                                                break;
                                        };
                                        var $2134 = $2136;
                                        break;
                                };
                                var $2128 = $2134;
                                break;
                        };
                        var $2120 = $2128;
                        break;
                };
                var $2118 = $2120;
                break;
        };
        return $2118;
    };
    const Kindelia$parse$term$call = x0 => x1 => Kindelia$parse$term$call$(x0, x1);

    function Kindelia$Term$var$(_name$1) {
        var $2183 = ({
            _: 'Kindelia.Term.var',
            'name': _name$1
        });
        return $2183;
    };
    const Kindelia$Term$var = x0 => Kindelia$Term$var$(x0);

    function Kindelia$parse$term$var$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2185 = self.err;
                var _reply$8 = Kindelia$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2187 = self.err;
                        var self = $2185;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2189 = self.value;
                                var $2190 = Parser$Reply$error$(Parser$Error$combine$($2189, $2187));
                                var $2188 = $2190;
                                break;
                            case 'Maybe.none':
                                var $2191 = Parser$Reply$error$($2187);
                                var $2188 = $2191;
                                break;
                        };
                        var $2186 = $2188;
                        break;
                    case 'Parser.Reply.value':
                        var $2192 = self.pst;
                        var $2193 = self.val;
                        var self = $2192;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2195 = self.err;
                                var $2196 = self.nam;
                                var $2197 = self.ini;
                                var $2198 = self.idx;
                                var $2199 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2185, $2195), $2196, $2197, $2198, $2199);
                                var $2200 = Parser$Reply$value$(_reply$pst$16, Kindelia$Term$var$($2193));
                                var $2194 = $2200;
                                break;
                        };
                        var $2186 = $2194;
                        break;
                };
                var $2184 = $2186;
                break;
        };
        return $2184;
    };
    const Kindelia$parse$term$var = x0 => x1 => Kindelia$parse$term$var$(x0, x1);

    function Kindelia$parse$term$(_world$1) {
        var $2201 = Parser$choice(List$cons$(Kindelia$parse$term$let(_world$1), List$cons$(Kindelia$parse$term$create(_world$1), List$cons$(Kindelia$parse$term$match(_world$1), List$cons$(Kindelia$parse$term$word(_world$1), List$cons$(Kindelia$parse$term$compare(_world$1), List$cons$(Kindelia$parse$term$operate(_world$1), List$cons$(Kindelia$parse$term$set(_world$1), List$cons$(Kindelia$parse$term$get(_world$1), List$cons$(Kindelia$parse$term$bind$(_world$1), List$cons$(Kindelia$parse$term$return(_world$1), List$cons$(Kindelia$parse$term$call(_world$1), List$cons$(Kindelia$parse$term$var(_world$1), List$nil)))))))))))));
        return $2201;
    };
    const Kindelia$parse$term = x0 => Kindelia$parse$term$(x0);

    function Kindelia$Bond$new$(_name$1, _args$2, _otyp$3, _main$4) {
        var $2202 = ({
            _: 'Kindelia.Bond.new',
            'name': _name$1,
            'args': _args$2,
            'otyp': _otyp$3,
            'main': _main$4
        });
        return $2202;
    };
    const Kindelia$Bond$new = x0 => x1 => x2 => x3 => Kindelia$Bond$new$(x0, x1, x2, x3);

    function Kindelia$parse$bond$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2204 = self.err;
                var _reply$8 = Kindelia$parse$text$("bond", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2206 = self.err;
                        var self = $2204;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2208 = self.value;
                                var $2209 = Parser$Reply$error$(Parser$Error$combine$($2208, $2206));
                                var $2207 = $2209;
                                break;
                            case 'Maybe.none':
                                var $2210 = Parser$Reply$error$($2206);
                                var $2207 = $2210;
                                break;
                        };
                        var $2205 = $2207;
                        break;
                    case 'Parser.Reply.value':
                        var $2211 = self.pst;
                        var self = $2211;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2213 = self.err;
                                var $2214 = self.nam;
                                var $2215 = self.ini;
                                var $2216 = self.idx;
                                var $2217 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2204, $2213), $2214, $2215, $2216, $2217);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2219 = self.err;
                                        var _reply$22 = Kindelia$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2221 = self.err;
                                                var self = $2219;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2223 = self.value;
                                                        var $2224 = Parser$Reply$error$(Parser$Error$combine$($2223, $2221));
                                                        var $2222 = $2224;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2225 = Parser$Reply$error$($2221);
                                                        var $2222 = $2225;
                                                        break;
                                                };
                                                var $2220 = $2222;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2226 = self.pst;
                                                var $2227 = self.val;
                                                var self = $2226;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2229 = self.err;
                                                        var $2230 = self.nam;
                                                        var $2231 = self.ini;
                                                        var $2232 = self.idx;
                                                        var $2233 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2219, $2229), $2230, $2231, $2232, $2233);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2235 = self.err;
                                                                var _reply$36 = Parser$wrap$(Kindelia$parse$text("("), Kindelia$parse$ann(_world$1), Kindelia$parse$text(")"), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2237 = self.err;
                                                                        var self = $2235;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2239 = self.value;
                                                                                var $2240 = Parser$Reply$error$(Parser$Error$combine$($2239, $2237));
                                                                                var $2238 = $2240;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2241 = Parser$Reply$error$($2237);
                                                                                var $2238 = $2241;
                                                                                break;
                                                                        };
                                                                        var $2236 = $2238;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2242 = self.pst;
                                                                        var $2243 = self.val;
                                                                        var self = $2242;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2245 = self.err;
                                                                                var $2246 = self.nam;
                                                                                var $2247 = self.ini;
                                                                                var $2248 = self.idx;
                                                                                var $2249 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2235, $2245), $2246, $2247, $2248, $2249);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2251 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$text$(":", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2253 = self.err;
                                                                                                var self = $2251;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2255 = self.value;
                                                                                                        var $2256 = Parser$Reply$error$(Parser$Error$combine$($2255, $2253));
                                                                                                        var $2254 = $2256;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2257 = Parser$Reply$error$($2253);
                                                                                                        var $2254 = $2257;
                                                                                                        break;
                                                                                                };
                                                                                                var $2252 = $2254;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2258 = self.pst;
                                                                                                var self = $2258;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2260 = self.err;
                                                                                                        var $2261 = self.nam;
                                                                                                        var $2262 = self.ini;
                                                                                                        var $2263 = self.idx;
                                                                                                        var $2264 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2251, $2260), $2261, $2262, $2263, $2264);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2266 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$type$(_world$1)(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2268 = self.err;
                                                                                                                        var self = $2266;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2270 = self.value;
                                                                                                                                var $2271 = Parser$Reply$error$(Parser$Error$combine$($2270, $2268));
                                                                                                                                var $2269 = $2271;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2272 = Parser$Reply$error$($2268);
                                                                                                                                var $2269 = $2272;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2267 = $2269;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2273 = self.pst;
                                                                                                                        var $2274 = self.val;
                                                                                                                        var self = $2273;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2276 = self.err;
                                                                                                                                var $2277 = self.nam;
                                                                                                                                var $2278 = self.ini;
                                                                                                                                var $2279 = self.idx;
                                                                                                                                var $2280 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2266, $2276), $2277, $2278, $2279, $2280);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2282 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$text$("{", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2284 = self.err;
                                                                                                                                                var self = $2282;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2286 = self.value;
                                                                                                                                                        var $2287 = Parser$Reply$error$(Parser$Error$combine$($2286, $2284));
                                                                                                                                                        var $2285 = $2287;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2288 = Parser$Reply$error$($2284);
                                                                                                                                                        var $2285 = $2288;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2283 = $2285;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2289 = self.pst;
                                                                                                                                                var self = $2289;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2291 = self.err;
                                                                                                                                                        var $2292 = self.nam;
                                                                                                                                                        var $2293 = self.ini;
                                                                                                                                                        var $2294 = self.idx;
                                                                                                                                                        var $2295 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2282, $2291), $2292, $2293, $2294, $2295);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $2297 = self.err;
                                                                                                                                                                var _reply$92 = Kindelia$parse$term$(_world$1)(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $2299 = self.err;
                                                                                                                                                                        var self = $2297;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $2301 = self.value;
                                                                                                                                                                                var $2302 = Parser$Reply$error$(Parser$Error$combine$($2301, $2299));
                                                                                                                                                                                var $2300 = $2302;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $2303 = Parser$Reply$error$($2299);
                                                                                                                                                                                var $2300 = $2303;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2298 = $2300;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $2304 = self.pst;
                                                                                                                                                                        var $2305 = self.val;
                                                                                                                                                                        var self = $2304;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $2307 = self.err;
                                                                                                                                                                                var $2308 = self.nam;
                                                                                                                                                                                var $2309 = self.ini;
                                                                                                                                                                                var $2310 = self.idx;
                                                                                                                                                                                var $2311 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2297, $2307), $2308, $2309, $2310, $2311);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $2313 = self.err;
                                                                                                                                                                                        var _reply$106 = Kindelia$parse$text$("}", _reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $2315 = self.err;
                                                                                                                                                                                                var self = $2313;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $2317 = self.value;
                                                                                                                                                                                                        var $2318 = Parser$Reply$error$(Parser$Error$combine$($2317, $2315));
                                                                                                                                                                                                        var $2316 = $2318;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $2319 = Parser$Reply$error$($2315);
                                                                                                                                                                                                        var $2316 = $2319;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $2314 = $2316;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $2320 = self.pst;
                                                                                                                                                                                                var self = $2320;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $2322 = self.err;
                                                                                                                                                                                                        var $2323 = self.nam;
                                                                                                                                                                                                        var $2324 = self.ini;
                                                                                                                                                                                                        var $2325 = self.idx;
                                                                                                                                                                                                        var $2326 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2313, $2322), $2323, $2324, $2325, $2326);
                                                                                                                                                                                                        var $2327 = Parser$Reply$value$(_reply$pst$114, Kindelia$Bond$new$($2227, $2243, $2274, $2305));
                                                                                                                                                                                                        var $2321 = $2327;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $2314 = $2321;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $2312 = $2314;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $2306 = $2312;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2298 = $2306;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $2296 = $2298;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $2290 = $2296;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2283 = $2290;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2281 = $2283;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2275 = $2281;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2267 = $2275;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2265 = $2267;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2259 = $2265;
                                                                                                        break;
                                                                                                };
                                                                                                var $2252 = $2259;
                                                                                                break;
                                                                                        };
                                                                                        var $2250 = $2252;
                                                                                        break;
                                                                                };
                                                                                var $2244 = $2250;
                                                                                break;
                                                                        };
                                                                        var $2236 = $2244;
                                                                        break;
                                                                };
                                                                var $2234 = $2236;
                                                                break;
                                                        };
                                                        var $2228 = $2234;
                                                        break;
                                                };
                                                var $2220 = $2228;
                                                break;
                                        };
                                        var $2218 = $2220;
                                        break;
                                };
                                var $2212 = $2218;
                                break;
                        };
                        var $2205 = $2212;
                        break;
                };
                var $2203 = $2205;
                break;
        };
        return $2203;
    };
    const Kindelia$parse$bond = x0 => x1 => Kindelia$parse$bond$(x0, x1);

    function Kindelia$Transaction$new_bond$(_bond$1) {
        var $2328 = ({
            _: 'Kindelia.Transaction.new_bond',
            'bond': _bond$1
        });
        return $2328;
    };
    const Kindelia$Transaction$new_bond = x0 => Kindelia$Transaction$new_bond$(x0);

    function Kindelia$File$new$(_name$1, _ownr$2, _type$3, _expr$4) {
        var $2329 = ({
            _: 'Kindelia.File.new',
            'name': _name$1,
            'ownr': _ownr$2,
            'type': _type$3,
            'expr': _expr$4
        });
        return $2329;
    };
    const Kindelia$File$new = x0 => x1 => x2 => x3 => Kindelia$File$new$(x0, x1, x2, x3);

    function Kindelia$parse$file$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2331 = self.err;
                var _reply$8 = Kindelia$parse$text$("file", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2333 = self.err;
                        var self = $2331;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2335 = self.value;
                                var $2336 = Parser$Reply$error$(Parser$Error$combine$($2335, $2333));
                                var $2334 = $2336;
                                break;
                            case 'Maybe.none':
                                var $2337 = Parser$Reply$error$($2333);
                                var $2334 = $2337;
                                break;
                        };
                        var $2332 = $2334;
                        break;
                    case 'Parser.Reply.value':
                        var $2338 = self.pst;
                        var self = $2338;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2340 = self.err;
                                var $2341 = self.nam;
                                var $2342 = self.ini;
                                var $2343 = self.idx;
                                var $2344 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2331, $2340), $2341, $2342, $2343, $2344);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2346 = self.err;
                                        var _reply$22 = Parser$maybe$((_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $2349 = self.err;
                                                    var _reply$28 = Parser$many$((_pst$28 => {
                                                        var self = _pst$28;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2352 = self.err;
                                                                var _reply$34 = Kindelia$parse$name$(_pst$28);
                                                                var self = _reply$34;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2354 = self.err;
                                                                        var self = $2352;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2356 = self.value;
                                                                                var $2357 = Parser$Reply$error$(Parser$Error$combine$($2356, $2354));
                                                                                var $2355 = $2357;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2358 = Parser$Reply$error$($2354);
                                                                                var $2355 = $2358;
                                                                                break;
                                                                        };
                                                                        var $2353 = $2355;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2359 = self.pst;
                                                                        var $2360 = self.val;
                                                                        var self = $2359;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2362 = self.err;
                                                                                var $2363 = self.nam;
                                                                                var $2364 = self.ini;
                                                                                var $2365 = self.idx;
                                                                                var $2366 = self.str;
                                                                                var _reply$pst$42 = Parser$State$new$(Parser$Error$maybe_combine$($2352, $2362), $2363, $2364, $2365, $2366);
                                                                                var self = _reply$pst$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2368 = self.err;
                                                                                        var _reply$48 = Parser$maybe$(Kindelia$parse$text(","), _reply$pst$42);
                                                                                        var self = _reply$48;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2370 = self.err;
                                                                                                var self = $2368;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2372 = self.value;
                                                                                                        var $2373 = Parser$Reply$error$(Parser$Error$combine$($2372, $2370));
                                                                                                        var $2371 = $2373;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2374 = Parser$Reply$error$($2370);
                                                                                                        var $2371 = $2374;
                                                                                                        break;
                                                                                                };
                                                                                                var $2369 = $2371;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2375 = self.pst;
                                                                                                var self = $2375;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2377 = self.err;
                                                                                                        var $2378 = self.nam;
                                                                                                        var $2379 = self.ini;
                                                                                                        var $2380 = self.idx;
                                                                                                        var $2381 = self.str;
                                                                                                        var _reply$pst$56 = Parser$State$new$(Parser$Error$maybe_combine$($2368, $2377), $2378, $2379, $2380, $2381);
                                                                                                        var $2382 = Parser$Reply$value$(_reply$pst$56, $2360);
                                                                                                        var $2376 = $2382;
                                                                                                        break;
                                                                                                };
                                                                                                var $2369 = $2376;
                                                                                                break;
                                                                                        };
                                                                                        var $2367 = $2369;
                                                                                        break;
                                                                                };
                                                                                var $2361 = $2367;
                                                                                break;
                                                                        };
                                                                        var $2353 = $2361;
                                                                        break;
                                                                };
                                                                var $2351 = $2353;
                                                                break;
                                                        };
                                                        return $2351;
                                                    }))(_pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $2383 = self.err;
                                                            var self = $2349;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $2385 = self.value;
                                                                    var $2386 = Parser$Reply$error$(Parser$Error$combine$($2385, $2383));
                                                                    var $2384 = $2386;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $2387 = Parser$Reply$error$($2383);
                                                                    var $2384 = $2387;
                                                                    break;
                                                            };
                                                            var $2350 = $2384;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $2388 = self.pst;
                                                            var $2389 = self.val;
                                                            var self = $2388;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2391 = self.err;
                                                                    var $2392 = self.nam;
                                                                    var $2393 = self.ini;
                                                                    var $2394 = self.idx;
                                                                    var $2395 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($2349, $2391), $2392, $2393, $2394, $2395);
                                                                    var self = $2389;
                                                                    switch (self._) {
                                                                        case 'List.nil':
                                                                            var $2397 = (_pst$37 => {
                                                                                var $2398 = Parser$Reply$value$(_pst$37, List$nil);
                                                                                return $2398;
                                                                            });
                                                                            var $2396 = $2397;
                                                                            break;
                                                                        case 'List.cons':
                                                                            var $2399 = (_pst$39 => {
                                                                                var self = _pst$39;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2401 = self.err;
                                                                                        var _reply$45 = Kindelia$parse$text$("@", _pst$39);
                                                                                        var self = _reply$45;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2403 = self.err;
                                                                                                var self = $2401;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2405 = self.value;
                                                                                                        var $2406 = Parser$Reply$error$(Parser$Error$combine$($2405, $2403));
                                                                                                        var $2404 = $2406;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2407 = Parser$Reply$error$($2403);
                                                                                                        var $2404 = $2407;
                                                                                                        break;
                                                                                                };
                                                                                                var $2402 = $2404;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2408 = self.pst;
                                                                                                var self = $2408;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2410 = self.err;
                                                                                                        var $2411 = self.nam;
                                                                                                        var $2412 = self.ini;
                                                                                                        var $2413 = self.idx;
                                                                                                        var $2414 = self.str;
                                                                                                        var _reply$pst$53 = Parser$State$new$(Parser$Error$maybe_combine$($2401, $2410), $2411, $2412, $2413, $2414);
                                                                                                        var $2415 = Parser$Reply$value$(_reply$pst$53, $2389);
                                                                                                        var $2409 = $2415;
                                                                                                        break;
                                                                                                };
                                                                                                var $2402 = $2409;
                                                                                                break;
                                                                                        };
                                                                                        var $2400 = $2402;
                                                                                        break;
                                                                                };
                                                                                return $2400;
                                                                            });
                                                                            var $2396 = $2399;
                                                                            break;
                                                                    };
                                                                    var $2396 = $2396(_reply$pst$36);
                                                                    var $2390 = $2396;
                                                                    break;
                                                            };
                                                            var $2350 = $2390;
                                                            break;
                                                    };
                                                    var $2348 = $2350;
                                                    break;
                                            };
                                            return $2348;
                                        }), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2416 = self.err;
                                                var self = $2346;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2418 = self.value;
                                                        var $2419 = Parser$Reply$error$(Parser$Error$combine$($2418, $2416));
                                                        var $2417 = $2419;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2420 = Parser$Reply$error$($2416);
                                                        var $2417 = $2420;
                                                        break;
                                                };
                                                var $2347 = $2417;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2421 = self.pst;
                                                var $2422 = self.val;
                                                var self = $2421;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2424 = self.err;
                                                        var $2425 = self.nam;
                                                        var $2426 = self.ini;
                                                        var $2427 = self.idx;
                                                        var $2428 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2346, $2424), $2425, $2426, $2427, $2428);
                                                        var _ownr$31 = Maybe$default$($2422, List$nil);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2430 = self.err;
                                                                var _reply$37 = Kindelia$parse$name$(_reply$pst$30);
                                                                var self = _reply$37;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2432 = self.err;
                                                                        var self = $2430;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2434 = self.value;
                                                                                var $2435 = Parser$Reply$error$(Parser$Error$combine$($2434, $2432));
                                                                                var $2433 = $2435;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2436 = Parser$Reply$error$($2432);
                                                                                var $2433 = $2436;
                                                                                break;
                                                                        };
                                                                        var $2431 = $2433;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2437 = self.pst;
                                                                        var $2438 = self.val;
                                                                        var self = $2437;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2440 = self.err;
                                                                                var $2441 = self.nam;
                                                                                var $2442 = self.ini;
                                                                                var $2443 = self.idx;
                                                                                var $2444 = self.str;
                                                                                var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($2430, $2440), $2441, $2442, $2443, $2444);
                                                                                var self = _reply$pst$45;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2446 = self.err;
                                                                                        var _reply$51 = Kindelia$parse$text$(":", _reply$pst$45);
                                                                                        var self = _reply$51;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2448 = self.err;
                                                                                                var self = $2446;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2450 = self.value;
                                                                                                        var $2451 = Parser$Reply$error$(Parser$Error$combine$($2450, $2448));
                                                                                                        var $2449 = $2451;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2452 = Parser$Reply$error$($2448);
                                                                                                        var $2449 = $2452;
                                                                                                        break;
                                                                                                };
                                                                                                var $2447 = $2449;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2453 = self.pst;
                                                                                                var self = $2453;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2455 = self.err;
                                                                                                        var $2456 = self.nam;
                                                                                                        var $2457 = self.ini;
                                                                                                        var $2458 = self.idx;
                                                                                                        var $2459 = self.str;
                                                                                                        var _reply$pst$59 = Parser$State$new$(Parser$Error$maybe_combine$($2446, $2455), $2456, $2457, $2458, $2459);
                                                                                                        var self = _reply$pst$59;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2461 = self.err;
                                                                                                                var _reply$65 = Kindelia$parse$type$(_world$1)(_reply$pst$59);
                                                                                                                var self = _reply$65;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2463 = self.err;
                                                                                                                        var self = $2461;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2465 = self.value;
                                                                                                                                var $2466 = Parser$Reply$error$(Parser$Error$combine$($2465, $2463));
                                                                                                                                var $2464 = $2466;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2467 = Parser$Reply$error$($2463);
                                                                                                                                var $2464 = $2467;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2462 = $2464;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2468 = self.pst;
                                                                                                                        var $2469 = self.val;
                                                                                                                        var self = $2468;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2471 = self.err;
                                                                                                                                var $2472 = self.nam;
                                                                                                                                var $2473 = self.ini;
                                                                                                                                var $2474 = self.idx;
                                                                                                                                var $2475 = self.str;
                                                                                                                                var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($2461, $2471), $2472, $2473, $2474, $2475);
                                                                                                                                var self = _reply$pst$73;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2477 = self.err;
                                                                                                                                        var _reply$79 = Kindelia$parse$text$("=", _reply$pst$73);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2479 = self.err;
                                                                                                                                                var self = $2477;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2481 = self.value;
                                                                                                                                                        var $2482 = Parser$Reply$error$(Parser$Error$combine$($2481, $2479));
                                                                                                                                                        var $2480 = $2482;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2483 = Parser$Reply$error$($2479);
                                                                                                                                                        var $2480 = $2483;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2478 = $2480;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2484 = self.pst;
                                                                                                                                                var self = $2484;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2486 = self.err;
                                                                                                                                                        var $2487 = self.nam;
                                                                                                                                                        var $2488 = self.ini;
                                                                                                                                                        var $2489 = self.idx;
                                                                                                                                                        var $2490 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($2477, $2486), $2487, $2488, $2489, $2490);
                                                                                                                                                        var self = _reply$pst$87;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $2492 = self.err;
                                                                                                                                                                var _reply$93 = Kindelia$parse$term$(_world$1)(_reply$pst$87);
                                                                                                                                                                var self = _reply$93;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $2494 = self.err;
                                                                                                                                                                        var self = $2492;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $2496 = self.value;
                                                                                                                                                                                var $2497 = Parser$Reply$error$(Parser$Error$combine$($2496, $2494));
                                                                                                                                                                                var $2495 = $2497;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $2498 = Parser$Reply$error$($2494);
                                                                                                                                                                                var $2495 = $2498;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2493 = $2495;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $2499 = self.pst;
                                                                                                                                                                        var $2500 = self.val;
                                                                                                                                                                        var self = $2499;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $2502 = self.err;
                                                                                                                                                                                var $2503 = self.nam;
                                                                                                                                                                                var $2504 = self.ini;
                                                                                                                                                                                var $2505 = self.idx;
                                                                                                                                                                                var $2506 = self.str;
                                                                                                                                                                                var _reply$pst$101 = Parser$State$new$(Parser$Error$maybe_combine$($2492, $2502), $2503, $2504, $2505, $2506);
                                                                                                                                                                                var $2507 = Parser$Reply$value$(_reply$pst$101, Kindelia$File$new$($2438, _ownr$31, $2469, $2500));
                                                                                                                                                                                var $2501 = $2507;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2493 = $2501;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $2491 = $2493;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $2485 = $2491;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2478 = $2485;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2476 = $2478;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2470 = $2476;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2462 = $2470;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2460 = $2462;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2454 = $2460;
                                                                                                        break;
                                                                                                };
                                                                                                var $2447 = $2454;
                                                                                                break;
                                                                                        };
                                                                                        var $2445 = $2447;
                                                                                        break;
                                                                                };
                                                                                var $2439 = $2445;
                                                                                break;
                                                                        };
                                                                        var $2431 = $2439;
                                                                        break;
                                                                };
                                                                var $2429 = $2431;
                                                                break;
                                                        };
                                                        var $2423 = $2429;
                                                        break;
                                                };
                                                var $2347 = $2423;
                                                break;
                                        };
                                        var $2345 = $2347;
                                        break;
                                };
                                var $2339 = $2345;
                                break;
                        };
                        var $2332 = $2339;
                        break;
                };
                var $2330 = $2332;
                break;
        };
        return $2330;
    };
    const Kindelia$parse$file = x0 => x1 => Kindelia$parse$file$(x0, x1);

    function Kindelia$Transaction$new_file$(_file$1) {
        var $2508 = ({
            _: 'Kindelia.Transaction.new_file',
            'file': _file$1
        });
        return $2508;
    };
    const Kindelia$Transaction$new_file = x0 => Kindelia$Transaction$new_file$(x0);

    function Kindelia$Eval$new$(_term$1, _type$2) {
        var $2509 = ({
            _: 'Kindelia.Eval.new',
            'term': _term$1,
            'type': _type$2
        });
        return $2509;
    };
    const Kindelia$Eval$new = x0 => x1 => Kindelia$Eval$new$(x0, x1);

    function Kindelia$parse$eval$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2511 = self.err;
                var _reply$8 = Kindelia$parse$text$("eval", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2513 = self.err;
                        var self = $2511;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2515 = self.value;
                                var $2516 = Parser$Reply$error$(Parser$Error$combine$($2515, $2513));
                                var $2514 = $2516;
                                break;
                            case 'Maybe.none':
                                var $2517 = Parser$Reply$error$($2513);
                                var $2514 = $2517;
                                break;
                        };
                        var $2512 = $2514;
                        break;
                    case 'Parser.Reply.value':
                        var $2518 = self.pst;
                        var self = $2518;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2520 = self.err;
                                var $2521 = self.nam;
                                var $2522 = self.ini;
                                var $2523 = self.idx;
                                var $2524 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2511, $2520), $2521, $2522, $2523, $2524);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2526 = self.err;
                                        var _reply$22 = Kindelia$parse$text$("{", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2528 = self.err;
                                                var self = $2526;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2530 = self.value;
                                                        var $2531 = Parser$Reply$error$(Parser$Error$combine$($2530, $2528));
                                                        var $2529 = $2531;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2532 = Parser$Reply$error$($2528);
                                                        var $2529 = $2532;
                                                        break;
                                                };
                                                var $2527 = $2529;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2533 = self.pst;
                                                var self = $2533;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2535 = self.err;
                                                        var $2536 = self.nam;
                                                        var $2537 = self.ini;
                                                        var $2538 = self.idx;
                                                        var $2539 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2526, $2535), $2536, $2537, $2538, $2539);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2541 = self.err;
                                                                var _reply$36 = Kindelia$parse$term$(_world$1)(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2543 = self.err;
                                                                        var self = $2541;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2545 = self.value;
                                                                                var $2546 = Parser$Reply$error$(Parser$Error$combine$($2545, $2543));
                                                                                var $2544 = $2546;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2547 = Parser$Reply$error$($2543);
                                                                                var $2544 = $2547;
                                                                                break;
                                                                        };
                                                                        var $2542 = $2544;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2548 = self.pst;
                                                                        var $2549 = self.val;
                                                                        var self = $2548;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2551 = self.err;
                                                                                var $2552 = self.nam;
                                                                                var $2553 = self.ini;
                                                                                var $2554 = self.idx;
                                                                                var $2555 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2541, $2551), $2552, $2553, $2554, $2555);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2557 = self.err;
                                                                                        var _reply$50 = Kindelia$parse$text$("}", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2559 = self.err;
                                                                                                var self = $2557;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2561 = self.value;
                                                                                                        var $2562 = Parser$Reply$error$(Parser$Error$combine$($2561, $2559));
                                                                                                        var $2560 = $2562;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2563 = Parser$Reply$error$($2559);
                                                                                                        var $2560 = $2563;
                                                                                                        break;
                                                                                                };
                                                                                                var $2558 = $2560;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2564 = self.pst;
                                                                                                var self = $2564;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2566 = self.err;
                                                                                                        var $2567 = self.nam;
                                                                                                        var $2568 = self.ini;
                                                                                                        var $2569 = self.idx;
                                                                                                        var $2570 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2557, $2566), $2567, $2568, $2569, $2570);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2572 = self.err;
                                                                                                                var _reply$64 = Kindelia$parse$text$(":", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2574 = self.err;
                                                                                                                        var self = $2572;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2576 = self.value;
                                                                                                                                var $2577 = Parser$Reply$error$(Parser$Error$combine$($2576, $2574));
                                                                                                                                var $2575 = $2577;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2578 = Parser$Reply$error$($2574);
                                                                                                                                var $2575 = $2578;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2573 = $2575;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2579 = self.pst;
                                                                                                                        var self = $2579;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2581 = self.err;
                                                                                                                                var $2582 = self.nam;
                                                                                                                                var $2583 = self.ini;
                                                                                                                                var $2584 = self.idx;
                                                                                                                                var $2585 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2572, $2581), $2582, $2583, $2584, $2585);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2587 = self.err;
                                                                                                                                        var _reply$78 = Kindelia$parse$type$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2589 = self.err;
                                                                                                                                                var self = $2587;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2591 = self.value;
                                                                                                                                                        var $2592 = Parser$Reply$error$(Parser$Error$combine$($2591, $2589));
                                                                                                                                                        var $2590 = $2592;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2593 = Parser$Reply$error$($2589);
                                                                                                                                                        var $2590 = $2593;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2588 = $2590;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2594 = self.pst;
                                                                                                                                                var $2595 = self.val;
                                                                                                                                                var self = $2594;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2597 = self.err;
                                                                                                                                                        var $2598 = self.nam;
                                                                                                                                                        var $2599 = self.ini;
                                                                                                                                                        var $2600 = self.idx;
                                                                                                                                                        var $2601 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2587, $2597), $2598, $2599, $2600, $2601);
                                                                                                                                                        var $2602 = Parser$Reply$value$(_reply$pst$86, Kindelia$Eval$new$($2549, $2595));
                                                                                                                                                        var $2596 = $2602;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2588 = $2596;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2586 = $2588;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2580 = $2586;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2573 = $2580;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2571 = $2573;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2565 = $2571;
                                                                                                        break;
                                                                                                };
                                                                                                var $2558 = $2565;
                                                                                                break;
                                                                                        };
                                                                                        var $2556 = $2558;
                                                                                        break;
                                                                                };
                                                                                var $2550 = $2556;
                                                                                break;
                                                                        };
                                                                        var $2542 = $2550;
                                                                        break;
                                                                };
                                                                var $2540 = $2542;
                                                                break;
                                                        };
                                                        var $2534 = $2540;
                                                        break;
                                                };
                                                var $2527 = $2534;
                                                break;
                                        };
                                        var $2525 = $2527;
                                        break;
                                };
                                var $2519 = $2525;
                                break;
                        };
                        var $2512 = $2519;
                        break;
                };
                var $2510 = $2512;
                break;
        };
        return $2510;
    };
    const Kindelia$parse$eval = x0 => x1 => Kindelia$parse$eval$(x0, x1);

    function Kindelia$Transaction$new_eval$(_eval$1) {
        var $2603 = ({
            _: 'Kindelia.Transaction.new_eval',
            'eval': _eval$1
        });
        return $2603;
    };
    const Kindelia$Transaction$new_eval = x0 => Kindelia$Transaction$new_eval$(x0);

    function Kindelia$parse$transaction$(_world$1) {
        var $2604 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2606 = self.err;
                    var _reply$8 = Kindelia$parse$data$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2608 = self.err;
                            var self = $2606;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2610 = self.value;
                                    var $2611 = Parser$Reply$error$(Parser$Error$combine$($2610, $2608));
                                    var $2609 = $2611;
                                    break;
                                case 'Maybe.none':
                                    var $2612 = Parser$Reply$error$($2608);
                                    var $2609 = $2612;
                                    break;
                            };
                            var $2607 = $2609;
                            break;
                        case 'Parser.Reply.value':
                            var $2613 = self.pst;
                            var $2614 = self.val;
                            var self = $2613;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2616 = self.err;
                                    var $2617 = self.nam;
                                    var $2618 = self.ini;
                                    var $2619 = self.idx;
                                    var $2620 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2606, $2616), $2617, $2618, $2619, $2620);
                                    var $2621 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_data$($2614));
                                    var $2615 = $2621;
                                    break;
                            };
                            var $2607 = $2615;
                            break;
                    };
                    var $2605 = $2607;
                    break;
            };
            return $2605;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2623 = self.err;
                    var _reply$8 = Kindelia$parse$bond$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2625 = self.err;
                            var self = $2623;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2627 = self.value;
                                    var $2628 = Parser$Reply$error$(Parser$Error$combine$($2627, $2625));
                                    var $2626 = $2628;
                                    break;
                                case 'Maybe.none':
                                    var $2629 = Parser$Reply$error$($2625);
                                    var $2626 = $2629;
                                    break;
                            };
                            var $2624 = $2626;
                            break;
                        case 'Parser.Reply.value':
                            var $2630 = self.pst;
                            var $2631 = self.val;
                            var self = $2630;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2633 = self.err;
                                    var $2634 = self.nam;
                                    var $2635 = self.ini;
                                    var $2636 = self.idx;
                                    var $2637 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2623, $2633), $2634, $2635, $2636, $2637);
                                    var $2638 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_bond$($2631));
                                    var $2632 = $2638;
                                    break;
                            };
                            var $2624 = $2632;
                            break;
                    };
                    var $2622 = $2624;
                    break;
            };
            return $2622;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2640 = self.err;
                    var _reply$8 = Kindelia$parse$file$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2642 = self.err;
                            var self = $2640;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2644 = self.value;
                                    var $2645 = Parser$Reply$error$(Parser$Error$combine$($2644, $2642));
                                    var $2643 = $2645;
                                    break;
                                case 'Maybe.none':
                                    var $2646 = Parser$Reply$error$($2642);
                                    var $2643 = $2646;
                                    break;
                            };
                            var $2641 = $2643;
                            break;
                        case 'Parser.Reply.value':
                            var $2647 = self.pst;
                            var $2648 = self.val;
                            var self = $2647;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2650 = self.err;
                                    var $2651 = self.nam;
                                    var $2652 = self.ini;
                                    var $2653 = self.idx;
                                    var $2654 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2640, $2650), $2651, $2652, $2653, $2654);
                                    var $2655 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_file$($2648));
                                    var $2649 = $2655;
                                    break;
                            };
                            var $2641 = $2649;
                            break;
                    };
                    var $2639 = $2641;
                    break;
            };
            return $2639;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2657 = self.err;
                    var _reply$8 = Kindelia$parse$eval$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2659 = self.err;
                            var self = $2657;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2661 = self.value;
                                    var $2662 = Parser$Reply$error$(Parser$Error$combine$($2661, $2659));
                                    var $2660 = $2662;
                                    break;
                                case 'Maybe.none':
                                    var $2663 = Parser$Reply$error$($2659);
                                    var $2660 = $2663;
                                    break;
                            };
                            var $2658 = $2660;
                            break;
                        case 'Parser.Reply.value':
                            var $2664 = self.pst;
                            var $2665 = self.val;
                            var self = $2664;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2667 = self.err;
                                    var $2668 = self.nam;
                                    var $2669 = self.ini;
                                    var $2670 = self.idx;
                                    var $2671 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2657, $2667), $2668, $2669, $2670, $2671);
                                    var $2672 = Parser$Reply$value$(_reply$pst$16, Kindelia$Transaction$new_eval$($2665));
                                    var $2666 = $2672;
                                    break;
                            };
                            var $2658 = $2666;
                            break;
                    };
                    var $2656 = $2658;
                    break;
            };
            return $2656;
        }), List$nil)))));
        return $2604;
    };
    const Kindelia$parse$transaction = x0 => Kindelia$parse$transaction$(x0);

    function Kindelia$parse$block$(_world$1) {
        var $2673 = Parser$until$(Kindelia$parse$text("save"), Kindelia$parse$transaction$(_world$1));
        return $2673;
    };
    const Kindelia$parse$block = x0 => Kindelia$parse$block$(x0);

    function IO$(_A$1) {
        var $2674 = null;
        return $2674;
    };
    const IO = x0 => IO$(x0);
    const Nat$ltn = a0 => a1 => (a0 < a1);

    function String$length$go$(_xs$1, _n$2) {
        var String$length$go$ = (_xs$1, _n$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _n$2]
        });
        var String$length$go = _xs$1 => _n$2 => String$length$go$(_xs$1, _n$2);
        var arg = [_xs$1, _n$2];
        while (true) {
            let [_xs$1, _n$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $2675 = _n$2;
                    return $2675;
                } else {
                    var $2676 = self.charCodeAt(0);
                    var $2677 = self.slice(1);
                    var $2678 = String$length$go$($2677, Nat$succ$(_n$2));
                    return $2678;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$length$go = x0 => x1 => String$length$go$(x0, x1);

    function String$length$(_xs$1) {
        var $2679 = String$length$go$(_xs$1, 0n);
        return $2679;
    };
    const String$length = x0 => String$length$(x0);

    function String$flatten$go$(_xs$1, _res$2) {
        var String$flatten$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$flatten$go = _xs$1 => _res$2 => String$flatten$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                switch (self._) {
                    case 'List.cons':
                        var $2680 = self.head;
                        var $2681 = self.tail;
                        var $2682 = String$flatten$go$($2681, (_res$2 + $2680));
                        return $2682;
                    case 'List.nil':
                        var $2683 = _res$2;
                        return $2683;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$flatten$go = x0 => x1 => String$flatten$go$(x0, x1);

    function String$flatten$(_xs$1) {
        var $2684 = String$flatten$go$(_xs$1, "");
        return $2684;
    };
    const String$flatten = x0 => String$flatten$(x0);

    function String$join$go$(_sep$1, _list$2, _fst$3) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $2686 = self.head;
                var $2687 = self.tail;
                var $2688 = String$flatten$(List$cons$((() => {
                    var self = _fst$3;
                    if (self) {
                        var $2689 = "";
                        return $2689;
                    } else {
                        var $2690 = _sep$1;
                        return $2690;
                    };
                })(), List$cons$($2686, List$cons$(String$join$go$(_sep$1, $2687, Bool$false), List$nil))));
                var $2685 = $2688;
                break;
            case 'List.nil':
                var $2691 = "";
                var $2685 = $2691;
                break;
        };
        return $2685;
    };
    const String$join$go = x0 => x1 => x2 => String$join$go$(x0, x1, x2);

    function String$join$(_sep$1, _list$2) {
        var $2692 = String$join$go$(_sep$1, _list$2, Bool$true);
        return $2692;
    };
    const String$join = x0 => x1 => String$join$(x0, x1);

    function Kind$Code$highlight$end$(_col$1, _row$2, _res$3) {
        var $2693 = String$join$("\u{a}", _res$3);
        return $2693;
    };
    const Kind$Code$highlight$end = x0 => x1 => x2 => Kind$Code$highlight$end$(x0, x1, x2);

    function Maybe$extract$(_m$2, _a$4, _f$5) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $2695 = self.value;
                var $2696 = _f$5($2695);
                var $2694 = $2696;
                break;
            case 'Maybe.none':
                var $2697 = _a$4;
                var $2694 = $2697;
                break;
        };
        return $2694;
    };
    const Maybe$extract = x0 => x1 => x2 => Maybe$extract$(x0, x1, x2);

    function Nat$is_zero$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2699 = Bool$true;
            var $2698 = $2699;
        } else {
            var $2700 = (self - 1n);
            var $2701 = Bool$false;
            var $2698 = $2701;
        };
        return $2698;
    };
    const Nat$is_zero = x0 => Nat$is_zero$(x0);

    function Nat$double$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2703 = Nat$zero;
            var $2702 = $2703;
        } else {
            var $2704 = (self - 1n);
            var $2705 = Nat$succ$(Nat$succ$(Nat$double$($2704)));
            var $2702 = $2705;
        };
        return $2702;
    };
    const Nat$double = x0 => Nat$double$(x0);

    function Nat$pred$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2707 = Nat$zero;
            var $2706 = $2707;
        } else {
            var $2708 = (self - 1n);
            var $2709 = $2708;
            var $2706 = $2709;
        };
        return $2706;
    };
    const Nat$pred = x0 => Nat$pred$(x0);

    function String$reverse$go$(_xs$1, _res$2) {
        var String$reverse$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$reverse$go = _xs$1 => _res$2 => String$reverse$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $2710 = _res$2;
                    return $2710;
                } else {
                    var $2711 = self.charCodeAt(0);
                    var $2712 = self.slice(1);
                    var $2713 = String$reverse$go$($2712, String$cons$($2711, _res$2));
                    return $2713;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$reverse$go = x0 => x1 => String$reverse$go$(x0, x1);

    function String$reverse$(_xs$1) {
        var $2714 = String$reverse$go$(_xs$1, String$nil);
        return $2714;
    };
    const String$reverse = x0 => String$reverse$(x0);

    function String$pad_right$(_size$1, _chr$2, _str$3) {
        var self = _size$1;
        if (self === 0n) {
            var $2716 = _str$3;
            var $2715 = $2716;
        } else {
            var $2717 = (self - 1n);
            var self = _str$3;
            if (self.length === 0) {
                var $2719 = String$cons$(_chr$2, String$pad_right$($2717, _chr$2, ""));
                var $2718 = $2719;
            } else {
                var $2720 = self.charCodeAt(0);
                var $2721 = self.slice(1);
                var $2722 = String$cons$($2720, String$pad_right$($2717, _chr$2, $2721));
                var $2718 = $2722;
            };
            var $2715 = $2718;
        };
        return $2715;
    };
    const String$pad_right = x0 => x1 => x2 => String$pad_right$(x0, x1, x2);

    function String$pad_left$(_size$1, _chr$2, _str$3) {
        var $2723 = String$reverse$(String$pad_right$(_size$1, _chr$2, String$reverse$(_str$3)));
        return $2723;
    };
    const String$pad_left = x0 => x1 => x2 => String$pad_left$(x0, x1, x2);
    const Nat$lte = a0 => a1 => (a0 <= a1);
    const Nat$sub = a0 => a1 => (a0 - a1 <= 0n ? 0n : a0 - a1);

    function Nat$div_mod$go$(_n$1, _d$2, _r$3) {
        var Nat$div_mod$go$ = (_n$1, _d$2, _r$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _d$2, _r$3]
        });
        var Nat$div_mod$go = _n$1 => _d$2 => _r$3 => Nat$div_mod$go$(_n$1, _d$2, _r$3);
        var arg = [_n$1, _d$2, _r$3];
        while (true) {
            let [_n$1, _d$2, _r$3] = arg;
            var R = (() => {
                var self = (_n$1 <= _r$3);
                if (self) {
                    var $2724 = Nat$div_mod$go$(_n$1, Nat$succ$(_d$2), (_r$3 - _n$1 <= 0n ? 0n : _r$3 - _n$1));
                    return $2724;
                } else {
                    var $2725 = Pair$new$(_d$2, _r$3);
                    return $2725;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$div_mod$go = x0 => x1 => x2 => Nat$div_mod$go$(x0, x1, x2);
    const Nat$div_mod = a0 => a1 => (({
        _: 'Pair.new',
        'fst': a0 / a1,
        'snd': a0 % a1
    }));

    function Nat$to_base$go$(_base$1, _nat$2, _res$3) {
        var Nat$to_base$go$ = (_base$1, _nat$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_base$1, _nat$2, _res$3]
        });
        var Nat$to_base$go = _base$1 => _nat$2 => _res$3 => Nat$to_base$go$(_base$1, _nat$2, _res$3);
        var arg = [_base$1, _nat$2, _res$3];
        while (true) {
            let [_base$1, _nat$2, _res$3] = arg;
            var R = (() => {
                var self = (({
                    _: 'Pair.new',
                    'fst': _nat$2 / _base$1,
                    'snd': _nat$2 % _base$1
                }));
                switch (self._) {
                    case 'Pair.new':
                        var $2726 = self.fst;
                        var $2727 = self.snd;
                        var self = $2726;
                        if (self === 0n) {
                            var $2729 = List$cons$($2727, _res$3);
                            var $2728 = $2729;
                        } else {
                            var $2730 = (self - 1n);
                            var $2731 = Nat$to_base$go$(_base$1, $2726, List$cons$($2727, _res$3));
                            var $2728 = $2731;
                        };
                        return $2728;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$to_base$go = x0 => x1 => x2 => Nat$to_base$go$(x0, x1, x2);

    function Nat$to_base$(_base$1, _nat$2) {
        var $2732 = Nat$to_base$go$(_base$1, _nat$2, List$nil);
        return $2732;
    };
    const Nat$to_base = x0 => x1 => Nat$to_base$(x0, x1);

    function Pair$snd$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $2734 = self.snd;
                var $2735 = $2734;
                var $2733 = $2735;
                break;
        };
        return $2733;
    };
    const Pair$snd = x0 => Pair$snd$(x0);
    const Nat$mod = a0 => a1 => (a0 % a1);

    function List$at$(_index$2, _list$3) {
        var List$at$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$at = _index$2 => _list$3 => List$at$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $2736 = self.head;
                        var $2737 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $2739 = Maybe$some$($2736);
                            var $2738 = $2739;
                        } else {
                            var $2740 = (self - 1n);
                            var $2741 = List$at$($2740, $2737);
                            var $2738 = $2741;
                        };
                        return $2738;
                    case 'List.nil':
                        var $2742 = Maybe$none;
                        return $2742;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$at = x0 => x1 => List$at$(x0, x1);

    function Nat$show_digit$(_base$1, _n$2) {
        var _m$3 = (_n$2 % _base$1);
        var _base64$4 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$cons$(97, List$cons$(98, List$cons$(99, List$cons$(100, List$cons$(101, List$cons$(102, List$cons$(103, List$cons$(104, List$cons$(105, List$cons$(106, List$cons$(107, List$cons$(108, List$cons$(109, List$cons$(110, List$cons$(111, List$cons$(112, List$cons$(113, List$cons$(114, List$cons$(115, List$cons$(116, List$cons$(117, List$cons$(118, List$cons$(119, List$cons$(120, List$cons$(121, List$cons$(122, List$cons$(65, List$cons$(66, List$cons$(67, List$cons$(68, List$cons$(69, List$cons$(70, List$cons$(71, List$cons$(72, List$cons$(73, List$cons$(74, List$cons$(75, List$cons$(76, List$cons$(77, List$cons$(78, List$cons$(79, List$cons$(80, List$cons$(81, List$cons$(82, List$cons$(83, List$cons$(84, List$cons$(85, List$cons$(86, List$cons$(87, List$cons$(88, List$cons$(89, List$cons$(90, List$cons$(43, List$cons$(47, List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
        var self = ((_base$1 > 0n) && (_base$1 <= 64n));
        if (self) {
            var self = List$at$(_m$3, _base64$4);
            switch (self._) {
                case 'Maybe.some':
                    var $2745 = self.value;
                    var $2746 = $2745;
                    var $2744 = $2746;
                    break;
                case 'Maybe.none':
                    var $2747 = 35;
                    var $2744 = $2747;
                    break;
            };
            var $2743 = $2744;
        } else {
            var $2748 = 35;
            var $2743 = $2748;
        };
        return $2743;
    };
    const Nat$show_digit = x0 => x1 => Nat$show_digit$(x0, x1);

    function Nat$to_string_base$(_base$1, _nat$2) {
        var $2749 = List$fold$(Nat$to_base$(_base$1, _nat$2), String$nil, (_n$3 => _str$4 => {
            var $2750 = String$cons$(Nat$show_digit$(_base$1, _n$3), _str$4);
            return $2750;
        }));
        return $2749;
    };
    const Nat$to_string_base = x0 => x1 => Nat$to_string_base$(x0, x1);

    function Nat$show$(_n$1) {
        var $2751 = Nat$to_string_base$(10n, _n$1);
        return $2751;
    };
    const Nat$show = x0 => Nat$show$(x0);
    const Bool$not = a0 => (!a0);

    function U16$new$(_value$1) {
        var $2752 = word_to_u16(_value$1);
        return $2752;
    };
    const U16$new = x0 => U16$new$(x0);
    const Nat$to_u16 = a0 => (Number(a0) & 0xFFFF);

    function Kind$Code$color$(_col$1, _str$2) {
        var $2753 = String$cons$(27, ("[" + (_col$1 + ("m" + (_str$2 + String$cons$(27, "[0m"))))));
        return $2753;
    };
    const Kind$Code$color = x0 => x1 => Kind$Code$color$(x0, x1);
    const Nat$eql = a0 => a1 => (a0 === a1);

    function List$take$(_n$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $2755 = self.head;
                var $2756 = self.tail;
                var self = _n$2;
                if (self === 0n) {
                    var $2758 = List$nil;
                    var $2757 = $2758;
                } else {
                    var $2759 = (self - 1n);
                    var $2760 = List$cons$($2755, List$take$($2759, $2756));
                    var $2757 = $2760;
                };
                var $2754 = $2757;
                break;
            case 'List.nil':
                var $2761 = List$nil;
                var $2754 = $2761;
                break;
        };
        return $2754;
    };
    const List$take = x0 => x1 => List$take$(x0, x1);

    function Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) {
        var Kind$Code$highlight$go$ = (_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) => ({
            ctr: 'TCO',
            arg: [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9]
        });
        var Kind$Code$highlight$go = _code$1 => _ixi$2 => _ix0$3 => _ix1$4 => _col$5 => _row$6 => _lft$7 => _lin$8 => _res$9 => Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9);
        var arg = [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9];
        while (true) {
            let [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9] = arg;
            var R = (() => {
                var _spa$10 = 3n;
                var self = _code$1;
                if (self.length === 0) {
                    var $2763 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                    var $2762 = $2763;
                } else {
                    var $2764 = self.charCodeAt(0);
                    var $2765 = self.slice(1);
                    var self = ($2764 === 10);
                    if (self) {
                        var _stp$13 = Maybe$extract$(_lft$7, Bool$false, Nat$is_zero);
                        var self = _stp$13;
                        if (self) {
                            var $2768 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                            var $2767 = $2768;
                        } else {
                            var _siz$14 = Nat$succ$(Nat$double$(_spa$10));
                            var self = _ix1$4;
                            if (self === 0n) {
                                var self = _lft$7;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $2771 = self.value;
                                        var $2772 = Maybe$some$(Nat$pred$($2771));
                                        var $2770 = $2772;
                                        break;
                                    case 'Maybe.none':
                                        var $2773 = Maybe$some$(_spa$10);
                                        var $2770 = $2773;
                                        break;
                                };
                                var _lft$15 = $2770;
                            } else {
                                var $2774 = (self - 1n);
                                var $2775 = _lft$7;
                                var _lft$15 = $2775;
                            };
                            var _ixi$16 = Nat$pred$(_ixi$2);
                            var _ix0$17 = Nat$pred$(_ix0$3);
                            var _ix1$18 = Nat$pred$(_ix1$4);
                            var _col$19 = 0n;
                            var _row$20 = Nat$succ$(_row$6);
                            var _res$21 = List$cons$(String$reverse$(_lin$8), _res$9);
                            var _lin$22 = String$reverse$(String$flatten$(List$cons$(String$pad_left$(4n, 32, Nat$show$(_row$20)), List$cons$(" | ", List$nil))));
                            var $2769 = Kind$Code$highlight$go$($2765, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$20, _lft$15, _lin$22, _res$21);
                            var $2767 = $2769;
                        };
                        var $2766 = $2767;
                    } else {
                        var _chr$13 = String$cons$($2764, String$nil);
                        var self = (Nat$is_zero$(_ix0$3) && (!Nat$is_zero$(_ix1$4)));
                        if (self) {
                            var $2777 = String$reverse$(Kind$Code$color$("41", Kind$Code$color$("37", _chr$13)));
                            var _chr$14 = $2777;
                        } else {
                            var self = (Nat$is_zero$(_ixi$2) && (!Nat$is_zero$(_ix1$4)));
                            if (self) {
                                var $2779 = String$reverse$(Kind$Code$color$("31", Kind$Code$color$("4", _chr$13)));
                                var $2778 = $2779;
                            } else {
                                var $2780 = _chr$13;
                                var $2778 = $2780;
                            };
                            var _chr$14 = $2778;
                        };
                        var self = (_ix0$3 === 1n);
                        if (self) {
                            var $2781 = List$take$(_spa$10, _res$9);
                            var _res$15 = $2781;
                        } else {
                            var $2782 = _res$9;
                            var _res$15 = $2782;
                        };
                        var _ixi$16 = Nat$pred$(_ixi$2);
                        var _ix0$17 = Nat$pred$(_ix0$3);
                        var _ix1$18 = Nat$pred$(_ix1$4);
                        var _col$19 = Nat$succ$(_col$5);
                        var _lin$20 = String$flatten$(List$cons$(_chr$14, List$cons$(_lin$8, List$nil)));
                        var $2776 = Kind$Code$highlight$go$($2765, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$6, _lft$7, _lin$20, _res$15);
                        var $2766 = $2776;
                    };
                    var $2762 = $2766;
                };
                return $2762;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$highlight$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Code$highlight$go$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Code$highlight$(_code$1, _init$2, _idx0$3, _idx1$4) {
        var $2783 = Kind$Code$highlight$go$((_code$1 + " \u{a}"), _init$2, _idx0$3, _idx1$4, 0n, 1n, Maybe$none, String$reverse$("   1 | "), List$nil);
        return $2783;
    };
    const Kind$Code$highlight = x0 => x1 => x2 => x3 => Kind$Code$highlight$(x0, x1, x2, x3);

    function IO$ask$(_query$2, _param$3, _then$4) {
        var $2784 = ({
            _: 'IO.ask',
            'query': _query$2,
            'param': _param$3,
            'then': _then$4
        });
        return $2784;
    };
    const IO$ask = x0 => x1 => x2 => IO$ask$(x0, x1, x2);

    function IO$bind$(_a$3, _f$4) {
        var self = _a$3;
        switch (self._) {
            case 'IO.end':
                var $2786 = self.value;
                var $2787 = _f$4($2786);
                var $2785 = $2787;
                break;
            case 'IO.ask':
                var $2788 = self.query;
                var $2789 = self.param;
                var $2790 = self.then;
                var $2791 = IO$ask$($2788, $2789, (_x$8 => {
                    var $2792 = IO$bind$($2790(_x$8), _f$4);
                    return $2792;
                }));
                var $2785 = $2791;
                break;
        };
        return $2785;
    };
    const IO$bind = x0 => x1 => IO$bind$(x0, x1);

    function IO$end$(_value$2) {
        var $2793 = ({
            _: 'IO.end',
            'value': _value$2
        });
        return $2793;
    };
    const IO$end = x0 => IO$end$(x0);

    function IO$monad$(_new$2) {
        var $2794 = _new$2(IO$bind)(IO$end);
        return $2794;
    };
    const IO$monad = x0 => IO$monad$(x0);

    function IO$put_string$(_text$1) {
        var $2795 = IO$ask$("put_string", _text$1, (_skip$2 => {
            var $2796 = IO$end$(Unit$new);
            return $2796;
        }));
        return $2795;
    };
    const IO$put_string = x0 => IO$put_string$(x0);

    function IO$print$(_text$1) {
        var $2797 = IO$put_string$((_text$1 + "\u{a}"));
        return $2797;
    };
    const IO$print = x0 => IO$print$(x0);
    const Bits$e = '';
    const Bits$o = a0 => (a0 + '0');

    function Word$subber$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $2799 = self.pred;
                var $2800 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2802 = self.pred;
                            var $2803 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2805 = Word$i$(Word$subber$(_a$pred$10, $2802, Bool$true));
                                    var $2804 = $2805;
                                } else {
                                    var $2806 = Word$o$(Word$subber$(_a$pred$10, $2802, Bool$false));
                                    var $2804 = $2806;
                                };
                                return $2804;
                            });
                            var $2801 = $2803;
                            break;
                        case 'Word.i':
                            var $2807 = self.pred;
                            var $2808 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2810 = Word$o$(Word$subber$(_a$pred$10, $2807, Bool$true));
                                    var $2809 = $2810;
                                } else {
                                    var $2811 = Word$i$(Word$subber$(_a$pred$10, $2807, Bool$true));
                                    var $2809 = $2811;
                                };
                                return $2809;
                            });
                            var $2801 = $2808;
                            break;
                        case 'Word.e':
                            var $2812 = (_a$pred$8 => {
                                var $2813 = Word$e;
                                return $2813;
                            });
                            var $2801 = $2812;
                            break;
                    };
                    var $2801 = $2801($2799);
                    return $2801;
                });
                var $2798 = $2800;
                break;
            case 'Word.i':
                var $2814 = self.pred;
                var $2815 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2817 = self.pred;
                            var $2818 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2820 = Word$o$(Word$subber$(_a$pred$10, $2817, Bool$false));
                                    var $2819 = $2820;
                                } else {
                                    var $2821 = Word$i$(Word$subber$(_a$pred$10, $2817, Bool$false));
                                    var $2819 = $2821;
                                };
                                return $2819;
                            });
                            var $2816 = $2818;
                            break;
                        case 'Word.i':
                            var $2822 = self.pred;
                            var $2823 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2825 = Word$i$(Word$subber$(_a$pred$10, $2822, Bool$true));
                                    var $2824 = $2825;
                                } else {
                                    var $2826 = Word$o$(Word$subber$(_a$pred$10, $2822, Bool$false));
                                    var $2824 = $2826;
                                };
                                return $2824;
                            });
                            var $2816 = $2823;
                            break;
                        case 'Word.e':
                            var $2827 = (_a$pred$8 => {
                                var $2828 = Word$e;
                                return $2828;
                            });
                            var $2816 = $2827;
                            break;
                    };
                    var $2816 = $2816($2814);
                    return $2816;
                });
                var $2798 = $2815;
                break;
            case 'Word.e':
                var $2829 = (_b$5 => {
                    var $2830 = Word$e;
                    return $2830;
                });
                var $2798 = $2829;
                break;
        };
        var $2798 = $2798(_b$3);
        return $2798;
    };
    const Word$subber = x0 => x1 => x2 => Word$subber$(x0, x1, x2);

    function Word$sub$(_a$2, _b$3) {
        var $2831 = Word$subber$(_a$2, _b$3, Bool$false);
        return $2831;
    };
    const Word$sub = x0 => x1 => Word$sub$(x0, x1);
    const U16$sub = a0 => a1 => ((a0 - a1) & 0xFFFF);

    function Word$adder$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $2833 = self.pred;
                var $2834 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2836 = self.pred;
                            var $2837 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2839 = Word$i$(Word$adder$(_a$pred$10, $2836, Bool$false));
                                    var $2838 = $2839;
                                } else {
                                    var $2840 = Word$o$(Word$adder$(_a$pred$10, $2836, Bool$false));
                                    var $2838 = $2840;
                                };
                                return $2838;
                            });
                            var $2835 = $2837;
                            break;
                        case 'Word.i':
                            var $2841 = self.pred;
                            var $2842 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2844 = Word$o$(Word$adder$(_a$pred$10, $2841, Bool$true));
                                    var $2843 = $2844;
                                } else {
                                    var $2845 = Word$i$(Word$adder$(_a$pred$10, $2841, Bool$false));
                                    var $2843 = $2845;
                                };
                                return $2843;
                            });
                            var $2835 = $2842;
                            break;
                        case 'Word.e':
                            var $2846 = (_a$pred$8 => {
                                var $2847 = Word$e;
                                return $2847;
                            });
                            var $2835 = $2846;
                            break;
                    };
                    var $2835 = $2835($2833);
                    return $2835;
                });
                var $2832 = $2834;
                break;
            case 'Word.i':
                var $2848 = self.pred;
                var $2849 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2851 = self.pred;
                            var $2852 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2854 = Word$o$(Word$adder$(_a$pred$10, $2851, Bool$true));
                                    var $2853 = $2854;
                                } else {
                                    var $2855 = Word$i$(Word$adder$(_a$pred$10, $2851, Bool$false));
                                    var $2853 = $2855;
                                };
                                return $2853;
                            });
                            var $2850 = $2852;
                            break;
                        case 'Word.i':
                            var $2856 = self.pred;
                            var $2857 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2859 = Word$i$(Word$adder$(_a$pred$10, $2856, Bool$true));
                                    var $2858 = $2859;
                                } else {
                                    var $2860 = Word$o$(Word$adder$(_a$pred$10, $2856, Bool$true));
                                    var $2858 = $2860;
                                };
                                return $2858;
                            });
                            var $2850 = $2857;
                            break;
                        case 'Word.e':
                            var $2861 = (_a$pred$8 => {
                                var $2862 = Word$e;
                                return $2862;
                            });
                            var $2850 = $2861;
                            break;
                    };
                    var $2850 = $2850($2848);
                    return $2850;
                });
                var $2832 = $2849;
                break;
            case 'Word.e':
                var $2863 = (_b$5 => {
                    var $2864 = Word$e;
                    return $2864;
                });
                var $2832 = $2863;
                break;
        };
        var $2832 = $2832(_b$3);
        return $2832;
    };
    const Word$adder = x0 => x1 => x2 => Word$adder$(x0, x1, x2);

    function Word$add$(_a$2, _b$3) {
        var $2865 = Word$adder$(_a$2, _b$3, Bool$false);
        return $2865;
    };
    const Word$add = x0 => x1 => Word$add$(x0, x1);
    const U16$add = a0 => a1 => ((a0 + a1) & 0xFFFF);
    const Nat$div = a0 => a1 => (a0 / a1);
    const Bits$i = a0 => (a0 + '1');

    function Kindelia$serialize$fixlen$(_size$1, _value$2) {
        var self = _size$1;
        if (self === 0n) {
            var $2867 = Bits$e;
            var $2866 = $2867;
        } else {
            var $2868 = (self - 1n);
            var self = ((_value$2 % 2n) === 0n);
            if (self) {
                var $2870 = (Kindelia$serialize$fixlen$($2868, (_value$2 / 2n)) + '0');
                var $2869 = $2870;
            } else {
                var $2871 = (Kindelia$serialize$fixlen$($2868, (_value$2 / 2n)) + '1');
                var $2869 = $2871;
            };
            var $2866 = $2869;
        };
        return $2866;
    };
    const Kindelia$serialize$fixlen = x0 => x1 => Kindelia$serialize$fixlen$(x0, x1);

    function Word$fold$(_nil$3, _w0$4, _w1$5, _word$6) {
        var self = _word$6;
        switch (self._) {
            case 'Word.o':
                var $2873 = self.pred;
                var $2874 = _w0$4(Word$fold$(_nil$3, _w0$4, _w1$5, $2873));
                var $2872 = $2874;
                break;
            case 'Word.i':
                var $2875 = self.pred;
                var $2876 = _w1$5(Word$fold$(_nil$3, _w0$4, _w1$5, $2875));
                var $2872 = $2876;
                break;
            case 'Word.e':
                var $2877 = _nil$3;
                var $2872 = $2877;
                break;
        };
        return $2872;
    };
    const Word$fold = x0 => x1 => x2 => x3 => Word$fold$(x0, x1, x2, x3);

    function Word$to_nat$(_word$2) {
        var $2878 = Word$fold$(0n, a1 => (2n * a1), (_x$4 => {
            var $2879 = Nat$succ$((2n * _x$4));
            return $2879;
        }), _word$2);
        return $2878;
    };
    const Word$to_nat = x0 => Word$to_nat$(x0);
    const U16$to_nat = a0 => (BigInt(a0));
    const Bits$concat = a0 => a1 => (a1 + a0);

    function Kindelia$serialize$name$(_name$1) {
        var self = _name$1;
        if (self.length === 0) {
            var $2881 = (Bits$e + '0');
            var $2880 = $2881;
        } else {
            var $2882 = self.charCodeAt(0);
            var $2883 = self.slice(1);
            var self = U16$btw$(48, $2882, 57);
            if (self) {
                var $2885 = (($2882 - 48) & 0xFFFF);
                var _numb$4 = $2885;
            } else {
                var self = U16$btw$(65, $2882, 90);
                if (self) {
                    var $2887 = (((($2882 - 65) & 0xFFFF) + 10) & 0xFFFF);
                    var $2886 = $2887;
                } else {
                    var self = U16$btw$(97, $2882, 122);
                    if (self) {
                        var $2889 = (((($2882 - 97) & 0xFFFF) + 36) & 0xFFFF);
                        var $2888 = $2889;
                    } else {
                        var self = U16$btw$(95, $2882, 95);
                        if (self) {
                            var $2891 = 62;
                            var $2890 = $2891;
                        } else {
                            var $2892 = 63;
                            var $2890 = $2892;
                        };
                        var $2888 = $2890;
                    };
                    var $2886 = $2888;
                };
                var _numb$4 = $2886;
            };
            var _head$5 = Kindelia$serialize$fixlen$(6n, (BigInt(_numb$4)));
            var _tail$6 = Kindelia$serialize$name$($2883);
            var $2884 = ((_tail$6 + _head$5) + '1');
            var $2880 = $2884;
        };
        return $2880;
    };
    const Kindelia$serialize$name = x0 => Kindelia$serialize$name$(x0);

    function Kindelia$serialize$list$(_item$2, _list$3) {
        var self = _list$3;
        switch (self._) {
            case 'List.cons':
                var $2894 = self.head;
                var $2895 = self.tail;
                var $2896 = ((Kindelia$serialize$list$(_item$2, $2895) + _item$2($2894)) + '1');
                var $2893 = $2896;
                break;
            case 'List.nil':
                var $2897 = (Bits$e + '0');
                var $2893 = $2897;
                break;
        };
        return $2893;
    };
    const Kindelia$serialize$list = x0 => x1 => Kindelia$serialize$list$(x0, x1);

    function Kindelia$serialize$pair$(_first$3, _second$4, _pair$5) {
        var self = _pair$5;
        switch (self._) {
            case 'Pair.new':
                var $2899 = self.fst;
                var $2900 = self.snd;
                var _fst$8 = _first$3($2899);
                var _snd$9 = _second$4($2900);
                var $2901 = (_snd$9 + _fst$8);
                var $2898 = $2901;
                break;
        };
        return $2898;
    };
    const Kindelia$serialize$pair = x0 => x1 => x2 => Kindelia$serialize$pair$(x0, x1, x2);

    function Kindelia$serialize$type$(_world$1, _typ$2) {
        var self = _typ$2;
        switch (self._) {
            case 'Kindelia.Type.data':
                var $2903 = self.name;
                var $2904 = ((Kindelia$serialize$name$($2903) + '0') + '1');
                var $2902 = $2904;
                break;
            case 'Kindelia.Type.effe':
                var $2905 = self.rety;
                var $2906 = ((Kindelia$serialize$type$(_world$1, $2905) + '1') + '0');
                var $2902 = $2906;
                break;
            case 'Kindelia.Type.word':
                var $2907 = ((Bits$e + '0') + '0');
                var $2902 = $2907;
                break;
        };
        return $2902;
    };
    const Kindelia$serialize$type = x0 => x1 => Kindelia$serialize$type$(x0, x1);

    function Kindelia$serialize$constructor$(_world$1, _ctor$2) {
        var self = _ctor$2;
        switch (self._) {
            case 'Kindelia.Constructor.new':
                var $2909 = self.name;
                var $2910 = self.args;
                var _name$5 = Kindelia$serialize$name$($2909);
                var _args$6 = Kindelia$serialize$list$(Kindelia$serialize$pair(Kindelia$serialize$name)(Kindelia$serialize$type(_world$1)), $2910);
                var $2911 = (_args$6 + _name$5);
                var $2908 = $2911;
                break;
        };
        return $2908;
    };
    const Kindelia$serialize$constructor = x0 => x1 => Kindelia$serialize$constructor$(x0, x1);

    function Kindelia$serialize$data$(_world$1, _data$2) {
        var self = _data$2;
        switch (self._) {
            case 'Kindelia.Data.new':
                var $2913 = self.name;
                var $2914 = self.constructors;
                var _name$5 = Kindelia$serialize$name$($2913);
                var _ctrs$6 = Kindelia$serialize$list$(Kindelia$serialize$constructor(_world$1), $2914);
                var $2915 = (_ctrs$6 + _name$5);
                var $2912 = $2915;
                break;
        };
        return $2912;
    };
    const Kindelia$serialize$data = x0 => x1 => Kindelia$serialize$data$(x0, x1);

    function Kindelia$serialize$varlen$go$(_value$1) {
        var self = _value$1;
        if (self === 0n) {
            var $2917 = Bits$e;
            var $2916 = $2917;
        } else {
            var $2918 = (self - 1n);
            var self = (_value$1 === 1n);
            if (self) {
                var $2920 = (Bits$e + '0');
                var $2919 = $2920;
            } else {
                var self = ((_value$1 % 2n) === 0n);
                if (self) {
                    var $2922 = ((Kindelia$serialize$varlen$go$((_value$1 / 2n)) + '0') + '1');
                    var $2921 = $2922;
                } else {
                    var $2923 = ((Kindelia$serialize$varlen$go$((_value$1 / 2n)) + '1') + '1');
                    var $2921 = $2923;
                };
                var $2919 = $2921;
            };
            var $2916 = $2919;
        };
        return $2916;
    };
    const Kindelia$serialize$varlen$go = x0 => Kindelia$serialize$varlen$go$(x0);

    function Kindelia$serialize$varlen$(_value$1) {
        var $2924 = Kindelia$serialize$varlen$go$((_value$1 + 1n));
        return $2924;
    };
    const Kindelia$serialize$varlen = x0 => Kindelia$serialize$varlen$(x0);

    function Kindelia$serialize$name$local$(_world$1, _vars$2, _name$3) {
        var self = List$find_index$(_vars$2, a1 => (_name$3 === a1));
        switch (self._) {
            case 'Maybe.some':
                var $2926 = self.value;
                var $2927 = Kindelia$serialize$varlen$($2926);
                var $2925 = $2927;
                break;
            case 'Maybe.none':
                var $2928 = Bits$e;
                var $2925 = $2928;
                break;
        };
        return $2925;
    };
    const Kindelia$serialize$name$local = x0 => x1 => x2 => Kindelia$serialize$name$local$(x0, x1, x2);

    function List$map$(_f$3, _as$4) {
        var self = _as$4;
        switch (self._) {
            case 'List.cons':
                var $2930 = self.head;
                var $2931 = self.tail;
                var $2932 = List$cons$(_f$3($2930), List$map$(_f$3, $2931));
                var $2929 = $2932;
                break;
            case 'List.nil':
                var $2933 = List$nil;
                var $2929 = $2933;
                break;
        };
        return $2929;
    };
    const List$map = x0 => x1 => List$map$(x0, x1);

    function List$concat$(_as$2, _bs$3) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $2935 = self.head;
                var $2936 = self.tail;
                var $2937 = List$cons$($2935, List$concat$($2936, _bs$3));
                var $2934 = $2937;
                break;
            case 'List.nil':
                var $2938 = _bs$3;
                var $2934 = $2938;
                break;
        };
        return $2934;
    };
    const List$concat = x0 => x1 => List$concat$(x0, x1);

    function Kindelia$serialize$cases$(_world$1, _vars$2, _name$3, _ctors$4, _cases$5) {
        var self = _ctors$4;
        switch (self._) {
            case 'List.cons':
                var $2940 = self.head;
                var $2941 = self.tail;
                var self = _cases$5;
                switch (self._) {
                    case 'List.cons':
                        var $2943 = self.head;
                        var $2944 = self.tail;
                        var _flds$10 = List$map$((_args$10 => {
                            var $2946 = (_name$3 + ("." + (() => {
                                var self = _args$10;
                                switch (self._) {
                                    case 'Pair.new':
                                        var $2947 = self.fst;
                                        var $2948 = $2947;
                                        return $2948;
                                };
                            })()));
                            return $2946;
                        }), (() => {
                            var self = $2940;
                            switch (self._) {
                                case 'Kindelia.Constructor.new':
                                    var $2949 = self.args;
                                    var $2950 = $2949;
                                    return $2950;
                            };
                        })());
                        var _head$11 = Kindelia$serialize$term$(_world$1, List$concat$(List$reverse$(_flds$10), _vars$2), $2943);
                        var _tail$12 = Kindelia$serialize$cases$(_world$1, _vars$2, _name$3, $2941, $2944);
                        var $2945 = (_tail$12 + _head$11);
                        var $2942 = $2945;
                        break;
                    case 'List.nil':
                        var $2951 = Bits$e;
                        var $2942 = $2951;
                        break;
                };
                var $2939 = $2942;
                break;
            case 'List.nil':
                var self = _cases$5;
                switch (self._) {
                    case 'List.nil':
                    case 'List.cons':
                        var $2953 = Bits$e;
                        var $2952 = $2953;
                        break;
                };
                var $2939 = $2952;
                break;
        };
        return $2939;
    };
    const Kindelia$serialize$cases = x0 => x1 => x2 => x3 => x4 => Kindelia$serialize$cases$(x0, x1, x2, x3, x4);

    function Kindelia$get_constructors$(_world$1, _name$2) {
        var self = Kindelia$get_data$(_world$1, _name$2);
        switch (self._) {
            case 'Maybe.some':
                var $2955 = self.value;
                var $2956 = Maybe$some$((() => {
                    var self = $2955;
                    switch (self._) {
                        case 'Kindelia.Data.new':
                            var $2957 = self.constructors;
                            var $2958 = $2957;
                            return $2958;
                    };
                })());
                var $2954 = $2956;
                break;
            case 'Maybe.none':
                var $2959 = Maybe$none;
                var $2954 = $2959;
                break;
        };
        return $2954;
    };
    const Kindelia$get_constructors = x0 => x1 => Kindelia$get_constructors$(x0, x1);
    const U64$to_nat = a0 => (a0);

    function Kindelia$serialize$term$(_world$1, _vars$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kindelia.Term.var':
                var $2961 = self.name;
                var $2962 = (Kindelia$serialize$name$local$(_world$1, _vars$2, $2961) + '0');
                var $2960 = $2962;
                break;
            case 'Kindelia.Term.call':
                var $2963 = self.bond;
                var $2964 = self.args;
                var _bond$6 = Kindelia$serialize$name$($2963);
                var _args$7 = Kindelia$serialize$list$(Kindelia$serialize$term(_world$1)(_vars$2), $2964);
                var $2965 = (((((_args$7 + _bond$6) + '0') + '0') + '1') + '1');
                var $2960 = $2965;
                break;
            case 'Kindelia.Term.let':
                var $2966 = self.name;
                var $2967 = self.type;
                var $2968 = self.expr;
                var $2969 = self.body;
                var _name$8 = Kindelia$serialize$name$($2966);
                var _type$9 = Kindelia$serialize$type$(_world$1, $2967);
                var _expr$10 = Kindelia$serialize$term$(_world$1, _vars$2, $2968);
                var _body$11 = Kindelia$serialize$term$(_world$1, List$cons$($2966, _vars$2), $2969);
                var $2970 = (((((((_body$11 + _expr$10) + _type$9) + _name$8) + '0') + '0') + '0') + '1');
                var $2960 = $2970;
                break;
            case 'Kindelia.Term.create':
                var $2971 = self.ctor;
                var $2972 = self.vals;
                var _ctor$6 = Kindelia$serialize$varlen$($2971);
                var _vals$7 = Kindelia$serialize$list$(Kindelia$serialize$term(_world$1)(_vars$2), $2972);
                var $2973 = (((((_vals$7 + _ctor$6) + '0') + '1') + '0') + '1');
                var $2960 = $2973;
                break;
            case 'Kindelia.Term.match':
                var $2974 = self.name;
                var $2975 = self.data;
                var $2976 = self.cses;
                var _name$7 = Kindelia$serialize$name$local$(_world$1, _vars$2, $2974);
                var _data$8 = Kindelia$serialize$name$($2975);
                var _cses$9 = Kindelia$serialize$cases$(_world$1, _vars$2, $2974, Maybe$default$(Kindelia$get_constructors$(_world$1, $2975), List$nil), $2976);
                var $2977 = ((((((_cses$9 + _data$8) + _name$7) + '0') + '1') + '1') + '1');
                var $2960 = $2977;
                break;
            case 'Kindelia.Term.word':
                var $2978 = self.numb;
                var _numb$5 = Kindelia$serialize$fixlen$(64n, ($2978));
                var $2979 = ((((_numb$5 + '1') + '0') + '0') + '1');
                var $2960 = $2979;
                break;
            case 'Kindelia.Term.compare':
                var $2980 = self.val0;
                var $2981 = self.val1;
                var $2982 = self.iflt;
                var $2983 = self.ifeq;
                var $2984 = self.ifgt;
                var _val0$9 = Kindelia$serialize$term$(_world$1, _vars$2, $2980);
                var _val1$10 = Kindelia$serialize$term$(_world$1, _vars$2, $2981);
                var _iflt$11 = Kindelia$serialize$term$(_world$1, _vars$2, $2982);
                var _ifeq$12 = Kindelia$serialize$term$(_world$1, _vars$2, $2983);
                var _ifgt$13 = Kindelia$serialize$term$(_world$1, _vars$2, $2984);
                var $2985 = ((((((((_ifgt$13 + _ifeq$12) + _iflt$11) + _val1$10) + _val0$9) + '1') + '0') + '1') + '1');
                var $2960 = $2985;
                break;
            case 'Kindelia.Term.operate':
                var $2986 = self.oper;
                var $2987 = self.val0;
                var $2988 = self.val1;
                var _oper$7 = Kindelia$serialize$fixlen$(3n, (() => {
                    var self = $2986;
                    switch (self._) {
                        case 'Kindelia.Operation.add':
                            var $2990 = 0n;
                            return $2990;
                        case 'Kindelia.Operation.sub':
                            var $2991 = 1n;
                            return $2991;
                        case 'Kindelia.Operation.mul':
                            var $2992 = 2n;
                            return $2992;
                        case 'Kindelia.Operation.div':
                            var $2993 = 3n;
                            return $2993;
                        case 'Kindelia.Operation.mod':
                            var $2994 = 4n;
                            return $2994;
                        case 'Kindelia.Operation.or':
                            var $2995 = 5n;
                            return $2995;
                        case 'Kindelia.Operation.and':
                            var $2996 = 6n;
                            return $2996;
                        case 'Kindelia.Operation.xor':
                            var $2997 = 7n;
                            return $2997;
                    };
                })());
                var _val0$8 = Kindelia$serialize$term$(_world$1, _vars$2, $2987);
                var _val1$9 = Kindelia$serialize$term$(_world$1, _vars$2, $2988);
                var $2989 = ((((((_val1$9 + _val0$8) + _oper$7) + '1') + '1') + '0') + '1');
                var $2960 = $2989;
                break;
            case 'Kindelia.Term.set':
                var $2998 = self.file;
                var $2999 = self.expr;
                var $3000 = self.body;
                var _slit$7 = Kindelia$serialize$name$($2998);
                var _expr$8 = Kindelia$serialize$term$(_world$1, _vars$2, $2999);
                var _body$9 = Kindelia$serialize$term$(_world$1, _vars$2, $3000);
                var $3001 = ((((((((_body$9 + _expr$8) + _slit$7) + '0') + '0') + '1') + '1') + '1') + '1');
                var $2960 = $3001;
                break;
            case 'Kindelia.Term.get':
                var $3002 = self.name;
                var $3003 = self.file;
                var $3004 = self.body;
                var _slit$7 = Kindelia$serialize$name$($3003);
                var _name$8 = Kindelia$serialize$name$($3002);
                var _body$9 = Kindelia$serialize$term$(_world$1, List$cons$($3002, _vars$2), $3004);
                var $3005 = ((((((((_body$9 + _name$8) + _slit$7) + '0') + '1') + '1') + '1') + '1') + '1');
                var $2960 = $3005;
                break;
            case 'Kindelia.Term.bind':
                var $3006 = self.name;
                var $3007 = self.type;
                var $3008 = self.expr;
                var $3009 = self.body;
                var _name$8 = Kindelia$serialize$name$($3006);
                var _type$9 = Kindelia$serialize$type$(_world$1, $3007);
                var _expr$10 = Kindelia$serialize$term$(_world$1, _vars$2, $3008);
                var _body$11 = Kindelia$serialize$term$(_world$1, List$cons$($3006, _vars$2), $3009);
                var $3010 = (((((((((_body$11 + _expr$10) + _type$9) + _name$8) + '1') + '0') + '1') + '1') + '1') + '1');
                var $2960 = $3010;
                break;
            case 'Kindelia.Term.return':
                var $3011 = self.expr;
                var _expr$5 = Kindelia$serialize$term$(_world$1, _vars$2, $3011);
                var $3012 = ((((((_expr$5 + '1') + '1') + '1') + '1') + '1') + '1');
                var $2960 = $3012;
                break;
        };
        return $2960;
    };
    const Kindelia$serialize$term = x0 => x1 => x2 => Kindelia$serialize$term$(x0, x1, x2);

    function Kindelia$serialize$bond$(_world$1, _bond$2) {
        var self = _bond$2;
        switch (self._) {
            case 'Kindelia.Bond.new':
                var $3014 = self.name;
                var $3015 = self.args;
                var $3016 = self.otyp;
                var $3017 = self.main;
                var _name$7 = Kindelia$serialize$name$($3014);
                var _args$8 = Kindelia$serialize$list$(Kindelia$serialize$pair(Kindelia$serialize$name)(Kindelia$serialize$type(_world$1)), $3015);
                var _otyp$9 = Kindelia$serialize$type$(_world$1, $3016);
                var _inam$10 = List$reverse$(List$mapped$($3015, Pair$fst));
                var _main$11 = Kindelia$serialize$term$(_world$1, _inam$10, $3017);
                var $3018 = (((_main$11 + _otyp$9) + _args$8) + _name$7);
                var $3013 = $3018;
                break;
        };
        return $3013;
    };
    const Kindelia$serialize$bond = x0 => x1 => Kindelia$serialize$bond$(x0, x1);

    function Kindelia$serialize$file$(_world$1, _file$2) {
        var self = _file$2;
        switch (self._) {
            case 'Kindelia.File.new':
                var $3020 = self.name;
                var $3021 = self.ownr;
                var $3022 = self.type;
                var $3023 = self.expr;
                var _name$7 = Kindelia$serialize$name$($3020);
                var _ownr$8 = Kindelia$serialize$list$(Kindelia$serialize$name, $3021);
                var _type$9 = Kindelia$serialize$type$(_world$1, $3022);
                var _expr$10 = Kindelia$serialize$term$(_world$1, List$nil, $3023);
                var $3024 = (((_expr$10 + _type$9) + _ownr$8) + _name$7);
                var $3019 = $3024;
                break;
        };
        return $3019;
    };
    const Kindelia$serialize$file = x0 => x1 => Kindelia$serialize$file$(x0, x1);

    function Kindelia$serialize$eval$(_world$1, _eval$2) {
        var self = _eval$2;
        switch (self._) {
            case 'Kindelia.Eval.new':
                var $3026 = self.term;
                var $3027 = self.type;
                var _term$5 = Kindelia$serialize$term$(_world$1, List$nil, $3026);
                var _type$6 = Kindelia$serialize$type$(_world$1, $3027);
                var $3028 = (_type$6 + _term$5);
                var $3025 = $3028;
                break;
        };
        return $3025;
    };
    const Kindelia$serialize$eval = x0 => x1 => Kindelia$serialize$eval$(x0, x1);

    function Kindelia$serialize$transaction$(_world$1, _transaction$2) {
        var self = _transaction$2;
        switch (self._) {
            case 'Kindelia.Transaction.new_data':
                var $3030 = self.data;
                var _data$4 = Kindelia$serialize$data$(_world$1, $3030);
                var $3031 = ((_data$4 + '0') + '0');
                var $3029 = $3031;
                break;
            case 'Kindelia.Transaction.new_bond':
                var $3032 = self.bond;
                var _bond$4 = Kindelia$serialize$bond$(_world$1, $3032);
                var $3033 = ((_bond$4 + '0') + '1');
                var $3029 = $3033;
                break;
            case 'Kindelia.Transaction.new_file':
                var $3034 = self.file;
                var _file$4 = Kindelia$serialize$file$(_world$1, $3034);
                var $3035 = ((_file$4 + '1') + '0');
                var $3029 = $3035;
                break;
            case 'Kindelia.Transaction.new_eval':
                var $3036 = self.eval;
                var _term$4 = Kindelia$serialize$eval$(_world$1, $3036);
                var $3037 = ((_term$4 + '1') + '1');
                var $3029 = $3037;
                break;
        };
        return $3029;
    };
    const Kindelia$serialize$transaction = x0 => x1 => Kindelia$serialize$transaction$(x0, x1);

    function Kindelia$serialize$block$(_world$1, _block$2) {
        var self = _block$2;
        switch (self._) {
            case 'List.cons':
                var $3039 = self.head;
                var $3040 = self.tail;
                var _head$5 = Kindelia$serialize$transaction$(_world$1, $3039);
                var _tail$6 = Kindelia$serialize$block$(_world$1, $3040);
                var $3041 = (_tail$6 + _head$5);
                var $3038 = $3041;
                break;
            case 'List.nil':
                var $3042 = Bits$e;
                var $3038 = $3042;
                break;
        };
        return $3038;
    };
    const Kindelia$serialize$block = x0 => x1 => Kindelia$serialize$block$(x0, x1);

    function Bits$is_empty$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'e':
                var $3044 = Bool$true;
                var $3043 = $3044;
                break;
            case 'o':
            case 'i':
                var $3045 = Bool$false;
                var $3043 = $3045;
                break;
        };
        return $3043;
    };
    const Bits$is_empty = x0 => Bits$is_empty$(x0);

    function Kindelia$deserialize$fixlen$(_size$1, _bits$2) {
        var self = _size$1;
        if (self === 0n) {
            var $3047 = Pair$new$(_bits$2, 0n);
            var $3046 = $3047;
        } else {
            var $3048 = (self - 1n);
            var self = _bits$2;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $3050 = self.slice(0, -1);
                    var self = Kindelia$deserialize$fixlen$($3048, $3050);
                    switch (self._) {
                        case 'Pair.new':
                            var $3052 = self.fst;
                            var $3053 = self.snd;
                            var $3054 = Pair$new$($3052, ($3053 * 2n));
                            var $3051 = $3054;
                            break;
                    };
                    var $3049 = $3051;
                    break;
                case 'i':
                    var $3055 = self.slice(0, -1);
                    var self = Kindelia$deserialize$fixlen$($3048, $3055);
                    switch (self._) {
                        case 'Pair.new':
                            var $3057 = self.fst;
                            var $3058 = self.snd;
                            var $3059 = Pair$new$($3057, (($3058 * 2n) + 1n));
                            var $3056 = $3059;
                            break;
                    };
                    var $3049 = $3056;
                    break;
                case 'e':
                    var $3060 = Pair$new$(Bits$e, 0n);
                    var $3049 = $3060;
                    break;
            };
            var $3046 = $3049;
        };
        return $3046;
    };
    const Kindelia$deserialize$fixlen = x0 => x1 => Kindelia$deserialize$fixlen$(x0, x1);
    const U16$from_nat = a0 => (Number(a0) & 0xFFFF);

    function Kindelia$deserialize$name$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3062 = self.slice(0, -1);
                var $3063 = Pair$new$($3062, "");
                var $3061 = $3063;
                break;
            case 'i':
                var $3064 = self.slice(0, -1);
                var self = Kindelia$deserialize$fixlen$(6n, $3064);
                switch (self._) {
                    case 'Pair.new':
                        var $3066 = self.fst;
                        var $3067 = self.snd;
                        var self = Kindelia$deserialize$name$($3066);
                        switch (self._) {
                            case 'Pair.new':
                                var $3069 = self.fst;
                                var $3070 = self.snd;
                                var _numb$7 = (Number($3067) & 0xFFFF);
                                var self = U16$btw$(0, _numb$7, 9);
                                if (self) {
                                    var $3072 = ((_numb$7 + 48) & 0xFFFF);
                                    var _head$8 = $3072;
                                } else {
                                    var self = U16$btw$(10, _numb$7, 35);
                                    if (self) {
                                        var $3074 = ((((_numb$7 - 10) & 0xFFFF) + 65) & 0xFFFF);
                                        var $3073 = $3074;
                                    } else {
                                        var self = U16$btw$(36, _numb$7, 61);
                                        if (self) {
                                            var $3076 = ((((_numb$7 - 36) & 0xFFFF) + 97) & 0xFFFF);
                                            var $3075 = $3076;
                                        } else {
                                            var self = U16$btw$(62, _numb$7, 62);
                                            if (self) {
                                                var $3078 = 95;
                                                var $3077 = $3078;
                                            } else {
                                                var $3079 = 46;
                                                var $3077 = $3079;
                                            };
                                            var $3075 = $3077;
                                        };
                                        var $3073 = $3075;
                                    };
                                    var _head$8 = $3073;
                                };
                                var $3071 = Pair$new$($3069, String$cons$(_head$8, $3070));
                                var $3068 = $3071;
                                break;
                        };
                        var $3065 = $3068;
                        break;
                };
                var $3061 = $3065;
                break;
            case 'e':
                var $3080 = Pair$new$(Bits$e, "");
                var $3061 = $3080;
                break;
        };
        return $3061;
    };
    const Kindelia$deserialize$name = x0 => Kindelia$deserialize$name$(x0);

    function Kindelia$deserialize$list$(_item$2, _bits$3) {
        var self = _bits$3;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3082 = self.slice(0, -1);
                var $3083 = Pair$new$($3082, List$nil);
                var $3081 = $3083;
                break;
            case 'i':
                var $3084 = self.slice(0, -1);
                var self = _item$2($3084);
                switch (self._) {
                    case 'Pair.new':
                        var $3086 = self.fst;
                        var $3087 = self.snd;
                        var self = Kindelia$deserialize$list$(_item$2, $3086);
                        switch (self._) {
                            case 'Pair.new':
                                var $3089 = self.fst;
                                var $3090 = self.snd;
                                var $3091 = Pair$new$($3089, List$cons$($3087, $3090));
                                var $3088 = $3091;
                                break;
                        };
                        var $3085 = $3088;
                        break;
                };
                var $3081 = $3085;
                break;
            case 'e':
                var $3092 = Pair$new$(Bits$e, List$nil);
                var $3081 = $3092;
                break;
        };
        return $3081;
    };
    const Kindelia$deserialize$list = x0 => x1 => Kindelia$deserialize$list$(x0, x1);

    function Kindelia$deserialize$pair$(_first$3, _second$4, _bits$5) {
        var self = _first$3(_bits$5);
        switch (self._) {
            case 'Pair.new':
                var $3094 = self.fst;
                var $3095 = self.snd;
                var self = _second$4($3094);
                switch (self._) {
                    case 'Pair.new':
                        var $3097 = self.fst;
                        var $3098 = self.snd;
                        var $3099 = Pair$new$($3097, Pair$new$($3095, $3098));
                        var $3096 = $3099;
                        break;
                };
                var $3093 = $3096;
                break;
        };
        return $3093;
    };
    const Kindelia$deserialize$pair = x0 => x1 => x2 => Kindelia$deserialize$pair$(x0, x1, x2);

    function Kindelia$deserialize$type$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$fixlen$(2n, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3101 = self.fst;
                var $3102 = self.snd;
                var self = ($3102 === 0n);
                if (self) {
                    var $3104 = Pair$new$($3101, Kindelia$Type$word);
                    var $3103 = $3104;
                } else {
                    var self = ($3102 === 1n);
                    if (self) {
                        var self = Kindelia$deserialize$name$($3101);
                        switch (self._) {
                            case 'Pair.new':
                                var $3107 = self.fst;
                                var $3108 = self.snd;
                                var $3109 = Pair$new$($3107, Kindelia$Type$data$($3108));
                                var $3106 = $3109;
                                break;
                        };
                        var $3105 = $3106;
                    } else {
                        var self = ($3102 === 2n);
                        if (self) {
                            var self = Kindelia$deserialize$type$(_world$1, $3101);
                            switch (self._) {
                                case 'Pair.new':
                                    var $3112 = self.fst;
                                    var $3113 = self.snd;
                                    var $3114 = Pair$new$($3112, Kindelia$Type$effe$($3113));
                                    var $3111 = $3114;
                                    break;
                            };
                            var $3110 = $3111;
                        } else {
                            var $3115 = Pair$new$($3101, Kindelia$Type$word);
                            var $3110 = $3115;
                        };
                        var $3105 = $3110;
                    };
                    var $3103 = $3105;
                };
                var $3100 = $3103;
                break;
        };
        return $3100;
    };
    const Kindelia$deserialize$type = x0 => x1 => Kindelia$deserialize$type$(x0, x1);

    function Kindelia$deserialize$constructor$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3117 = self.fst;
                var $3118 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$pair(Kindelia$deserialize$name)(Kindelia$deserialize$type(_world$1)), $3117);
                switch (self._) {
                    case 'Pair.new':
                        var $3120 = self.fst;
                        var $3121 = self.snd;
                        var $3122 = Pair$new$($3120, Kindelia$Constructor$new$($3118, $3121));
                        var $3119 = $3122;
                        break;
                };
                var $3116 = $3119;
                break;
        };
        return $3116;
    };
    const Kindelia$deserialize$constructor = x0 => x1 => Kindelia$deserialize$constructor$(x0, x1);

    function Kindelia$deserialize$data$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3124 = self.fst;
                var $3125 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$constructor(_world$1), $3124);
                switch (self._) {
                    case 'Pair.new':
                        var $3127 = self.fst;
                        var $3128 = self.snd;
                        var $3129 = Pair$new$($3127, Kindelia$Data$new$($3125, $3128));
                        var $3126 = $3129;
                        break;
                };
                var $3123 = $3126;
                break;
        };
        return $3123;
    };
    const Kindelia$deserialize$data = x0 => x1 => Kindelia$deserialize$data$(x0, x1);
    const U64$from_nat = a0 => (a0 & 0xFFFFFFFFFFFFFFFFn);

    function Kindelia$deserialize$varlen$go$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3131 = self.slice(0, -1);
                var $3132 = Pair$new$($3131, 1n);
                var $3130 = $3132;
                break;
            case 'i':
                var $3133 = self.slice(0, -1);
                var self = $3133;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3135 = self.slice(0, -1);
                        var self = Kindelia$deserialize$varlen$go$($3135);
                        switch (self._) {
                            case 'Pair.new':
                                var $3137 = self.fst;
                                var $3138 = self.snd;
                                var $3139 = Pair$new$($3137, ($3138 * 2n));
                                var $3136 = $3139;
                                break;
                        };
                        var $3134 = $3136;
                        break;
                    case 'i':
                        var $3140 = self.slice(0, -1);
                        var self = Kindelia$deserialize$varlen$go$($3140);
                        switch (self._) {
                            case 'Pair.new':
                                var $3142 = self.fst;
                                var $3143 = self.snd;
                                var $3144 = Pair$new$($3142, (($3143 * 2n) + 1n));
                                var $3141 = $3144;
                                break;
                        };
                        var $3134 = $3141;
                        break;
                    case 'e':
                        var $3145 = Pair$new$($3133, 0n);
                        var $3134 = $3145;
                        break;
                };
                var $3130 = $3134;
                break;
            case 'e':
                var $3146 = Pair$new$(Bits$e, 0n);
                var $3130 = $3146;
                break;
        };
        return $3130;
    };
    const Kindelia$deserialize$varlen$go = x0 => Kindelia$deserialize$varlen$go$(x0);

    function Kindelia$deserialize$varlen$(_bits$1) {
        var self = Kindelia$deserialize$varlen$go$(_bits$1);
        switch (self._) {
            case 'Pair.new':
                var $3148 = self.fst;
                var $3149 = self.snd;
                var $3150 = Pair$new$($3148, ($3149 - 1n <= 0n ? 0n : $3149 - 1n));
                var $3147 = $3150;
                break;
        };
        return $3147;
    };
    const Kindelia$deserialize$varlen = x0 => Kindelia$deserialize$varlen$(x0);

    function List$get$(_index$2, _list$3) {
        var List$get$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$get = _index$2 => _list$3 => List$get$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $3151 = self.head;
                        var $3152 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $3154 = Maybe$some$($3151);
                            var $3153 = $3154;
                        } else {
                            var $3155 = (self - 1n);
                            var $3156 = List$get$($3155, $3152);
                            var $3153 = $3156;
                        };
                        return $3153;
                    case 'List.nil':
                        var $3157 = Maybe$none;
                        return $3157;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$get = x0 => x1 => List$get$(x0, x1);

    function Kindelia$deserialize$name$local$(_world$1, _vars$2, _bits$3) {
        var self = Kindelia$deserialize$varlen$(_bits$3);
        switch (self._) {
            case 'Pair.new':
                var $3159 = self.fst;
                var $3160 = self.snd;
                var $3161 = Pair$new$($3159, Maybe$default$(List$get$($3160, _vars$2), ""));
                var $3158 = $3161;
                break;
        };
        return $3158;
    };
    const Kindelia$deserialize$name$local = x0 => x1 => x2 => Kindelia$deserialize$name$local$(x0, x1, x2);

    function Kindelia$deserialize$cases$(_world$1, _vars$2, _name$3, _ctors$4, _bits$5) {
        var self = _ctors$4;
        switch (self._) {
            case 'List.cons':
                var $3163 = self.head;
                var $3164 = self.tail;
                var _flds$8 = List$map$((_args$8 => {
                    var $3166 = (_name$3 + ("." + (() => {
                        var self = _args$8;
                        switch (self._) {
                            case 'Pair.new':
                                var $3167 = self.fst;
                                var $3168 = $3167;
                                return $3168;
                        };
                    })()));
                    return $3166;
                }), (() => {
                    var self = $3163;
                    switch (self._) {
                        case 'Kindelia.Constructor.new':
                            var $3169 = self.args;
                            var $3170 = $3169;
                            return $3170;
                    };
                })());
                var self = Kindelia$deserialize$term$(_world$1, List$concat$(List$reverse$(_flds$8), _vars$2), _bits$5);
                switch (self._) {
                    case 'Pair.new':
                        var $3171 = self.fst;
                        var $3172 = self.snd;
                        var self = Kindelia$deserialize$cases$(_world$1, _vars$2, _name$3, $3164, $3171);
                        switch (self._) {
                            case 'Pair.new':
                                var $3174 = self.fst;
                                var $3175 = self.snd;
                                var $3176 = Pair$new$($3174, List$cons$($3172, $3175));
                                var $3173 = $3176;
                                break;
                        };
                        var $3165 = $3173;
                        break;
                };
                var $3162 = $3165;
                break;
            case 'List.nil':
                var $3177 = Pair$new$(_bits$5, List$nil);
                var $3162 = $3177;
                break;
        };
        return $3162;
    };
    const Kindelia$deserialize$cases = x0 => x1 => x2 => x3 => x4 => Kindelia$deserialize$cases$(x0, x1, x2, x3, x4);

    function Kindelia$deserialize$term$(_world$1, _vars$2, _bits$3) {
        var self = _bits$3;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3179 = self.slice(0, -1);
                var self = Kindelia$deserialize$name$local$(_world$1, _vars$2, $3179);
                switch (self._) {
                    case 'Pair.new':
                        var $3181 = self.fst;
                        var $3182 = self.snd;
                        var $3183 = Pair$new$($3181, Kindelia$Term$var$($3182));
                        var $3180 = $3183;
                        break;
                };
                var $3178 = $3180;
                break;
            case 'i':
                var $3184 = self.slice(0, -1);
                var self = Kindelia$deserialize$fixlen$(3n, $3184);
                switch (self._) {
                    case 'Pair.new':
                        var $3186 = self.fst;
                        var $3187 = self.snd;
                        var self = ($3187 === 0n);
                        if (self) {
                            var self = Kindelia$deserialize$name$($3186);
                            switch (self._) {
                                case 'Pair.new':
                                    var $3190 = self.fst;
                                    var $3191 = self.snd;
                                    var self = Kindelia$deserialize$type$(_world$1, $3190);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3193 = self.fst;
                                            var $3194 = self.snd;
                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3193);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3196 = self.fst;
                                                    var $3197 = self.snd;
                                                    var self = Kindelia$deserialize$term$(_world$1, List$cons$($3191, _vars$2), $3196);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3199 = self.fst;
                                                            var $3200 = self.snd;
                                                            var $3201 = Pair$new$($3199, Kindelia$Term$let$($3191, $3194, $3197, $3200));
                                                            var $3198 = $3201;
                                                            break;
                                                    };
                                                    var $3195 = $3198;
                                                    break;
                                            };
                                            var $3192 = $3195;
                                            break;
                                    };
                                    var $3189 = $3192;
                                    break;
                            };
                            var $3188 = $3189;
                        } else {
                            var self = ($3187 === 1n);
                            if (self) {
                                var self = Kindelia$deserialize$name$($3186);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3204 = self.fst;
                                        var $3205 = self.snd;
                                        var self = Kindelia$deserialize$list$(Kindelia$deserialize$term(_world$1)(_vars$2), $3204);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3207 = self.fst;
                                                var $3208 = self.snd;
                                                var $3209 = Pair$new$($3207, Kindelia$Term$call$($3205, $3208));
                                                var $3206 = $3209;
                                                break;
                                        };
                                        var $3203 = $3206;
                                        break;
                                };
                                var $3202 = $3203;
                            } else {
                                var self = ($3187 === 2n);
                                if (self) {
                                    var self = Kindelia$deserialize$varlen$($3186);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3212 = self.fst;
                                            var $3213 = self.snd;
                                            var self = Kindelia$deserialize$list$(Kindelia$deserialize$term(_world$1)(_vars$2), $3212);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3215 = self.fst;
                                                    var $3216 = self.snd;
                                                    var $3217 = Pair$new$($3215, Kindelia$Term$create$($3213, $3216));
                                                    var $3214 = $3217;
                                                    break;
                                            };
                                            var $3211 = $3214;
                                            break;
                                    };
                                    var $3210 = $3211;
                                } else {
                                    var self = ($3187 === 3n);
                                    if (self) {
                                        var self = Kindelia$deserialize$name$local$(_world$1, _vars$2, $3186);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3220 = self.fst;
                                                var $3221 = self.snd;
                                                var self = Kindelia$deserialize$name$($3220);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3223 = self.fst;
                                                        var $3224 = self.snd;
                                                        var self = Kindelia$deserialize$cases$(_world$1, _vars$2, $3221, Maybe$default$(Kindelia$get_constructors$(_world$1, $3224), List$nil), $3223);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3226 = self.fst;
                                                                var $3227 = self.snd;
                                                                var $3228 = Pair$new$($3226, Kindelia$Term$match$($3221, $3224, $3227));
                                                                var $3225 = $3228;
                                                                break;
                                                        };
                                                        var $3222 = $3225;
                                                        break;
                                                };
                                                var $3219 = $3222;
                                                break;
                                        };
                                        var $3218 = $3219;
                                    } else {
                                        var self = ($3187 === 4n);
                                        if (self) {
                                            var self = Kindelia$deserialize$fixlen$(64n, $3186);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3231 = self.fst;
                                                    var $3232 = self.snd;
                                                    var $3233 = Pair$new$($3231, Kindelia$Term$word$(($3232 & 0xFFFFFFFFFFFFFFFFn)));
                                                    var $3230 = $3233;
                                                    break;
                                            };
                                            var $3229 = $3230;
                                        } else {
                                            var self = ($3187 === 5n);
                                            if (self) {
                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3186);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3236 = self.fst;
                                                        var $3237 = self.snd;
                                                        var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3236);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3239 = self.fst;
                                                                var $3240 = self.snd;
                                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3239);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $3242 = self.fst;
                                                                        var $3243 = self.snd;
                                                                        var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3242);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3245 = self.fst;
                                                                                var $3246 = self.snd;
                                                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3245);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3248 = self.fst;
                                                                                        var $3249 = self.snd;
                                                                                        var $3250 = Pair$new$($3248, Kindelia$Term$compare$($3237, $3240, $3243, $3246, $3249));
                                                                                        var $3247 = $3250;
                                                                                        break;
                                                                                };
                                                                                var $3244 = $3247;
                                                                                break;
                                                                        };
                                                                        var $3241 = $3244;
                                                                        break;
                                                                };
                                                                var $3238 = $3241;
                                                                break;
                                                        };
                                                        var $3235 = $3238;
                                                        break;
                                                };
                                                var $3234 = $3235;
                                            } else {
                                                var self = ($3187 === 6n);
                                                if (self) {
                                                    var self = Kindelia$deserialize$fixlen$(3n, $3186);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3253 = self.fst;
                                                            var $3254 = self.snd;
                                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3253);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $3256 = self.fst;
                                                                    var $3257 = self.snd;
                                                                    var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3256);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $3259 = self.fst;
                                                                            var $3260 = self.snd;
                                                                            var self = ($3254 === 0n);
                                                                            if (self) {
                                                                                var $3262 = Kindelia$Operation$add;
                                                                                var _oper$13 = $3262;
                                                                            } else {
                                                                                var self = ($3254 === 1n);
                                                                                if (self) {
                                                                                    var $3264 = Kindelia$Operation$sub;
                                                                                    var $3263 = $3264;
                                                                                } else {
                                                                                    var self = ($3254 === 2n);
                                                                                    if (self) {
                                                                                        var $3266 = Kindelia$Operation$mul;
                                                                                        var $3265 = $3266;
                                                                                    } else {
                                                                                        var self = ($3254 === 3n);
                                                                                        if (self) {
                                                                                            var $3268 = Kindelia$Operation$div;
                                                                                            var $3267 = $3268;
                                                                                        } else {
                                                                                            var self = ($3254 === 4n);
                                                                                            if (self) {
                                                                                                var $3270 = Kindelia$Operation$mod;
                                                                                                var $3269 = $3270;
                                                                                            } else {
                                                                                                var self = ($3254 === 5n);
                                                                                                if (self) {
                                                                                                    var $3272 = Kindelia$Operation$or;
                                                                                                    var $3271 = $3272;
                                                                                                } else {
                                                                                                    var self = ($3254 === 6n);
                                                                                                    if (self) {
                                                                                                        var $3274 = Kindelia$Operation$and;
                                                                                                        var $3273 = $3274;
                                                                                                    } else {
                                                                                                        var self = ($3254 === 7n);
                                                                                                        if (self) {
                                                                                                            var $3276 = Kindelia$Operation$xor;
                                                                                                            var $3275 = $3276;
                                                                                                        } else {
                                                                                                            var $3277 = Kindelia$Operation$add;
                                                                                                            var $3275 = $3277;
                                                                                                        };
                                                                                                        var $3273 = $3275;
                                                                                                    };
                                                                                                    var $3271 = $3273;
                                                                                                };
                                                                                                var $3269 = $3271;
                                                                                            };
                                                                                            var $3267 = $3269;
                                                                                        };
                                                                                        var $3265 = $3267;
                                                                                    };
                                                                                    var $3263 = $3265;
                                                                                };
                                                                                var _oper$13 = $3263;
                                                                            };
                                                                            var $3261 = Pair$new$($3259, Kindelia$Term$operate$(_oper$13, $3257, $3260));
                                                                            var $3258 = $3261;
                                                                            break;
                                                                    };
                                                                    var $3255 = $3258;
                                                                    break;
                                                            };
                                                            var $3252 = $3255;
                                                            break;
                                                    };
                                                    var $3251 = $3252;
                                                } else {
                                                    var self = ($3187 === 7n);
                                                    if (self) {
                                                        var self = Kindelia$deserialize$fixlen$(2n, $3186);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3280 = self.fst;
                                                                var $3281 = self.snd;
                                                                var self = ($3281 === 0n);
                                                                if (self) {
                                                                    var self = Kindelia$deserialize$name$($3280);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $3284 = self.fst;
                                                                            var $3285 = self.snd;
                                                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3284);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $3287 = self.fst;
                                                                                    var $3288 = self.snd;
                                                                                    var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3287);
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $3290 = self.fst;
                                                                                            var $3291 = self.snd;
                                                                                            var $3292 = Pair$new$($3290, Kindelia$Term$set$($3285, $3288, $3291));
                                                                                            var $3289 = $3292;
                                                                                            break;
                                                                                    };
                                                                                    var $3286 = $3289;
                                                                                    break;
                                                                            };
                                                                            var $3283 = $3286;
                                                                            break;
                                                                    };
                                                                    var $3282 = $3283;
                                                                } else {
                                                                    var self = ($3281 === 1n);
                                                                    if (self) {
                                                                        var self = Kindelia$deserialize$name$($3280);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3295 = self.fst;
                                                                                var $3296 = self.snd;
                                                                                var self = Kindelia$deserialize$name$($3295);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3298 = self.fst;
                                                                                        var $3299 = self.snd;
                                                                                        var self = Kindelia$deserialize$term$(_world$1, List$cons$($3299, _vars$2), $3298);
                                                                                        switch (self._) {
                                                                                            case 'Pair.new':
                                                                                                var $3301 = self.fst;
                                                                                                var $3302 = self.snd;
                                                                                                var $3303 = Pair$new$($3301, Kindelia$Term$get$($3299, $3296, $3302));
                                                                                                var $3300 = $3303;
                                                                                                break;
                                                                                        };
                                                                                        var $3297 = $3300;
                                                                                        break;
                                                                                };
                                                                                var $3294 = $3297;
                                                                                break;
                                                                        };
                                                                        var $3293 = $3294;
                                                                    } else {
                                                                        var self = ($3281 === 2n);
                                                                        if (self) {
                                                                            var self = Kindelia$deserialize$name$($3280);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $3306 = self.fst;
                                                                                    var $3307 = self.snd;
                                                                                    var self = Kindelia$deserialize$type$(_world$1, $3306);
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $3309 = self.fst;
                                                                                            var $3310 = self.snd;
                                                                                            var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3309);
                                                                                            switch (self._) {
                                                                                                case 'Pair.new':
                                                                                                    var $3312 = self.fst;
                                                                                                    var $3313 = self.snd;
                                                                                                    var self = Kindelia$deserialize$term$(_world$1, List$cons$($3307, _vars$2), $3312);
                                                                                                    switch (self._) {
                                                                                                        case 'Pair.new':
                                                                                                            var $3315 = self.fst;
                                                                                                            var $3316 = self.snd;
                                                                                                            var $3317 = Pair$new$($3315, Kindelia$Term$bind$($3307, $3310, $3313, $3316));
                                                                                                            var $3314 = $3317;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3311 = $3314;
                                                                                                    break;
                                                                                            };
                                                                                            var $3308 = $3311;
                                                                                            break;
                                                                                    };
                                                                                    var $3305 = $3308;
                                                                                    break;
                                                                            };
                                                                            var $3304 = $3305;
                                                                        } else {
                                                                            var self = ($3281 === 3n);
                                                                            if (self) {
                                                                                var self = Kindelia$deserialize$term$(_world$1, _vars$2, $3280);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3320 = self.fst;
                                                                                        var $3321 = self.snd;
                                                                                        var $3322 = Pair$new$($3320, Kindelia$Term$return$($3321));
                                                                                        var $3319 = $3322;
                                                                                        break;
                                                                                };
                                                                                var $3318 = $3319;
                                                                            } else {
                                                                                var $3323 = Pair$new$($3280, Kindelia$Term$word$(0n));
                                                                                var $3318 = $3323;
                                                                            };
                                                                            var $3304 = $3318;
                                                                        };
                                                                        var $3293 = $3304;
                                                                    };
                                                                    var $3282 = $3293;
                                                                };
                                                                var $3279 = $3282;
                                                                break;
                                                        };
                                                        var $3278 = $3279;
                                                    } else {
                                                        var $3324 = Pair$new$($3186, Kindelia$Term$word$(0n));
                                                        var $3278 = $3324;
                                                    };
                                                    var $3251 = $3278;
                                                };
                                                var $3234 = $3251;
                                            };
                                            var $3229 = $3234;
                                        };
                                        var $3218 = $3229;
                                    };
                                    var $3210 = $3218;
                                };
                                var $3202 = $3210;
                            };
                            var $3188 = $3202;
                        };
                        var $3185 = $3188;
                        break;
                };
                var $3178 = $3185;
                break;
            case 'e':
                var $3325 = Pair$new$(_bits$3, Kindelia$Term$word$(0n));
                var $3178 = $3325;
                break;
        };
        return $3178;
    };
    const Kindelia$deserialize$term = x0 => x1 => x2 => Kindelia$deserialize$term$(x0, x1, x2);

    function Kindelia$deserialize$bond$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3327 = self.fst;
                var $3328 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$pair(Kindelia$deserialize$name)(Kindelia$deserialize$type(_world$1)), $3327);
                switch (self._) {
                    case 'Pair.new':
                        var $3330 = self.fst;
                        var $3331 = self.snd;
                        var self = Kindelia$deserialize$type$(_world$1, $3330);
                        switch (self._) {
                            case 'Pair.new':
                                var $3333 = self.fst;
                                var $3334 = self.snd;
                                var _inam$9 = List$reverse$(List$mapped$($3331, Pair$fst));
                                var self = Kindelia$deserialize$term$(_world$1, _inam$9, $3333);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3336 = self.fst;
                                        var $3337 = self.snd;
                                        var $3338 = Pair$new$($3336, Kindelia$Bond$new$($3328, $3331, $3334, $3337));
                                        var $3335 = $3338;
                                        break;
                                };
                                var $3332 = $3335;
                                break;
                        };
                        var $3329 = $3332;
                        break;
                };
                var $3326 = $3329;
                break;
        };
        return $3326;
    };
    const Kindelia$deserialize$bond = x0 => x1 => Kindelia$deserialize$bond$(x0, x1);

    function Kindelia$deserialize$file$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3340 = self.fst;
                var $3341 = self.snd;
                var self = Kindelia$deserialize$list$(Kindelia$deserialize$name, $3340);
                switch (self._) {
                    case 'Pair.new':
                        var $3343 = self.fst;
                        var $3344 = self.snd;
                        var self = Kindelia$deserialize$type$(_world$1, $3343);
                        switch (self._) {
                            case 'Pair.new':
                                var $3346 = self.fst;
                                var $3347 = self.snd;
                                var self = Kindelia$deserialize$term$(_world$1, List$nil, $3346);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3349 = self.fst;
                                        var $3350 = self.snd;
                                        var $3351 = Pair$new$($3349, Kindelia$File$new$($3341, $3344, $3347, $3350));
                                        var $3348 = $3351;
                                        break;
                                };
                                var $3345 = $3348;
                                break;
                        };
                        var $3342 = $3345;
                        break;
                };
                var $3339 = $3342;
                break;
        };
        return $3339;
    };
    const Kindelia$deserialize$file = x0 => x1 => Kindelia$deserialize$file$(x0, x1);

    function Kindelia$deserialize$eval$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$term$(_world$1, List$nil, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3353 = self.fst;
                var $3354 = self.snd;
                var self = Kindelia$deserialize$type$(_world$1, $3353);
                switch (self._) {
                    case 'Pair.new':
                        var $3356 = self.fst;
                        var $3357 = self.snd;
                        var $3358 = Pair$new$($3356, Kindelia$Eval$new$($3354, $3357));
                        var $3355 = $3358;
                        break;
                };
                var $3352 = $3355;
                break;
        };
        return $3352;
    };
    const Kindelia$deserialize$eval = x0 => x1 => Kindelia$deserialize$eval$(x0, x1);

    function Kindelia$deserialize$transaction$(_world$1, _bits$2) {
        var self = Kindelia$deserialize$fixlen$(2n, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3360 = self.fst;
                var $3361 = self.snd;
                var self = ($3361 === 0n);
                if (self) {
                    var self = Kindelia$deserialize$data$(_world$1, $3360);
                    switch (self._) {
                        case 'Pair.new':
                            var $3364 = self.fst;
                            var $3365 = self.snd;
                            var $3366 = Pair$new$($3364, Kindelia$Transaction$new_data$($3365));
                            var $3363 = $3366;
                            break;
                    };
                    var $3362 = $3363;
                } else {
                    var self = ($3361 === 1n);
                    if (self) {
                        var self = Kindelia$deserialize$bond$(_world$1, $3360);
                        switch (self._) {
                            case 'Pair.new':
                                var $3369 = self.fst;
                                var $3370 = self.snd;
                                var $3371 = Pair$new$($3369, Kindelia$Transaction$new_bond$($3370));
                                var $3368 = $3371;
                                break;
                        };
                        var $3367 = $3368;
                    } else {
                        var self = ($3361 === 2n);
                        if (self) {
                            var self = Kindelia$deserialize$file$(_world$1, $3360);
                            switch (self._) {
                                case 'Pair.new':
                                    var $3374 = self.fst;
                                    var $3375 = self.snd;
                                    var $3376 = Pair$new$($3374, Kindelia$Transaction$new_file$($3375));
                                    var $3373 = $3376;
                                    break;
                            };
                            var $3372 = $3373;
                        } else {
                            var self = ($3361 === 3n);
                            if (self) {
                                var self = Kindelia$deserialize$eval$(_world$1, $3360);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3379 = self.fst;
                                        var $3380 = self.snd;
                                        var $3381 = Pair$new$($3379, Kindelia$Transaction$new_eval$($3380));
                                        var $3378 = $3381;
                                        break;
                                };
                                var $3377 = $3378;
                            } else {
                                var $3382 = Pair$new$($3360, Kindelia$Transaction$new_data$(Kindelia$Data$new$("", List$nil)));
                                var $3377 = $3382;
                            };
                            var $3372 = $3377;
                        };
                        var $3367 = $3372;
                    };
                    var $3362 = $3367;
                };
                var $3359 = $3362;
                break;
        };
        return $3359;
    };
    const Kindelia$deserialize$transaction = x0 => x1 => Kindelia$deserialize$transaction$(x0, x1);

    function Kindelia$deserialize$block$(_world$1, _bits$2) {
        var self = Bits$is_empty$(_bits$2);
        if (self) {
            var $3384 = Pair$new$(Bits$e, List$nil);
            var $3383 = $3384;
        } else {
            var self = Kindelia$deserialize$transaction$(_world$1, _bits$2);
            switch (self._) {
                case 'Pair.new':
                    var $3386 = self.fst;
                    var $3387 = self.snd;
                    var self = Kindelia$deserialize$block$(_world$1, $3386);
                    switch (self._) {
                        case 'Pair.new':
                            var $3389 = self.fst;
                            var $3390 = self.snd;
                            var $3391 = Pair$new$($3389, List$cons$($3387, $3390));
                            var $3388 = $3391;
                            break;
                    };
                    var $3385 = $3388;
                    break;
            };
            var $3383 = $3385;
        };
        return $3383;
    };
    const Kindelia$deserialize$block = x0 => x1 => Kindelia$deserialize$block$(x0, x1);

    function Bits$hex$encode$(_x$1) {
        var self = _x$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3393 = self.slice(0, -1);
                var self = $3393;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3395 = self.slice(0, -1);
                        var self = $3395;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3397 = self.slice(0, -1);
                                var self = $3397;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3399 = self.slice(0, -1);
                                        var $3400 = ("0" + Bits$hex$encode$($3399));
                                        var $3398 = $3400;
                                        break;
                                    case 'i':
                                        var $3401 = self.slice(0, -1);
                                        var $3402 = ("8" + Bits$hex$encode$($3401));
                                        var $3398 = $3402;
                                        break;
                                    case 'e':
                                        var $3403 = "0";
                                        var $3398 = $3403;
                                        break;
                                };
                                var $3396 = $3398;
                                break;
                            case 'i':
                                var $3404 = self.slice(0, -1);
                                var self = $3404;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3406 = self.slice(0, -1);
                                        var $3407 = ("4" + Bits$hex$encode$($3406));
                                        var $3405 = $3407;
                                        break;
                                    case 'i':
                                        var $3408 = self.slice(0, -1);
                                        var $3409 = ("c" + Bits$hex$encode$($3408));
                                        var $3405 = $3409;
                                        break;
                                    case 'e':
                                        var $3410 = "4";
                                        var $3405 = $3410;
                                        break;
                                };
                                var $3396 = $3405;
                                break;
                            case 'e':
                                var $3411 = "0";
                                var $3396 = $3411;
                                break;
                        };
                        var $3394 = $3396;
                        break;
                    case 'i':
                        var $3412 = self.slice(0, -1);
                        var self = $3412;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3414 = self.slice(0, -1);
                                var self = $3414;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3416 = self.slice(0, -1);
                                        var $3417 = ("2" + Bits$hex$encode$($3416));
                                        var $3415 = $3417;
                                        break;
                                    case 'i':
                                        var $3418 = self.slice(0, -1);
                                        var $3419 = ("a" + Bits$hex$encode$($3418));
                                        var $3415 = $3419;
                                        break;
                                    case 'e':
                                        var $3420 = "2";
                                        var $3415 = $3420;
                                        break;
                                };
                                var $3413 = $3415;
                                break;
                            case 'i':
                                var $3421 = self.slice(0, -1);
                                var self = $3421;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3423 = self.slice(0, -1);
                                        var $3424 = ("6" + Bits$hex$encode$($3423));
                                        var $3422 = $3424;
                                        break;
                                    case 'i':
                                        var $3425 = self.slice(0, -1);
                                        var $3426 = ("e" + Bits$hex$encode$($3425));
                                        var $3422 = $3426;
                                        break;
                                    case 'e':
                                        var $3427 = "6";
                                        var $3422 = $3427;
                                        break;
                                };
                                var $3413 = $3422;
                                break;
                            case 'e':
                                var $3428 = "2";
                                var $3413 = $3428;
                                break;
                        };
                        var $3394 = $3413;
                        break;
                    case 'e':
                        var $3429 = "0";
                        var $3394 = $3429;
                        break;
                };
                var $3392 = $3394;
                break;
            case 'i':
                var $3430 = self.slice(0, -1);
                var self = $3430;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3432 = self.slice(0, -1);
                        var self = $3432;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3434 = self.slice(0, -1);
                                var self = $3434;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3436 = self.slice(0, -1);
                                        var $3437 = ("1" + Bits$hex$encode$($3436));
                                        var $3435 = $3437;
                                        break;
                                    case 'i':
                                        var $3438 = self.slice(0, -1);
                                        var $3439 = ("9" + Bits$hex$encode$($3438));
                                        var $3435 = $3439;
                                        break;
                                    case 'e':
                                        var $3440 = "1";
                                        var $3435 = $3440;
                                        break;
                                };
                                var $3433 = $3435;
                                break;
                            case 'i':
                                var $3441 = self.slice(0, -1);
                                var self = $3441;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3443 = self.slice(0, -1);
                                        var $3444 = ("5" + Bits$hex$encode$($3443));
                                        var $3442 = $3444;
                                        break;
                                    case 'i':
                                        var $3445 = self.slice(0, -1);
                                        var $3446 = ("d" + Bits$hex$encode$($3445));
                                        var $3442 = $3446;
                                        break;
                                    case 'e':
                                        var $3447 = "5";
                                        var $3442 = $3447;
                                        break;
                                };
                                var $3433 = $3442;
                                break;
                            case 'e':
                                var $3448 = "1";
                                var $3433 = $3448;
                                break;
                        };
                        var $3431 = $3433;
                        break;
                    case 'i':
                        var $3449 = self.slice(0, -1);
                        var self = $3449;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3451 = self.slice(0, -1);
                                var self = $3451;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3453 = self.slice(0, -1);
                                        var $3454 = ("3" + Bits$hex$encode$($3453));
                                        var $3452 = $3454;
                                        break;
                                    case 'i':
                                        var $3455 = self.slice(0, -1);
                                        var $3456 = ("b" + Bits$hex$encode$($3455));
                                        var $3452 = $3456;
                                        break;
                                    case 'e':
                                        var $3457 = "3";
                                        var $3452 = $3457;
                                        break;
                                };
                                var $3450 = $3452;
                                break;
                            case 'i':
                                var $3458 = self.slice(0, -1);
                                var self = $3458;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3460 = self.slice(0, -1);
                                        var $3461 = ("7" + Bits$hex$encode$($3460));
                                        var $3459 = $3461;
                                        break;
                                    case 'i':
                                        var $3462 = self.slice(0, -1);
                                        var $3463 = ("f" + Bits$hex$encode$($3462));
                                        var $3459 = $3463;
                                        break;
                                    case 'e':
                                        var $3464 = "7";
                                        var $3459 = $3464;
                                        break;
                                };
                                var $3450 = $3459;
                                break;
                            case 'e':
                                var $3465 = "3";
                                var $3450 = $3465;
                                break;
                        };
                        var $3431 = $3450;
                        break;
                    case 'e':
                        var $3466 = "1";
                        var $3431 = $3466;
                        break;
                };
                var $3392 = $3431;
                break;
            case 'e':
                var $3467 = "";
                var $3392 = $3467;
                break;
        };
        return $3392;
    };
    const Bits$hex$encode = x0 => Bits$hex$encode$(x0);
    const Bits$eql = a0 => a1 => (a1 === a0);

    function BBT$(_K$1, _V$2) {
        var $3468 = null;
        return $3468;
    };
    const BBT = x0 => x1 => BBT$(x0, x1);

    function Map$(_V$1) {
        var $3469 = null;
        return $3469;
    };
    const Map = x0 => Map$(x0);

    function BBT$bin$(_size$3, _key$4, _val$5, _left$6, _right$7) {
        var $3470 = ({
            _: 'BBT.bin',
            'size': _size$3,
            'key': _key$4,
            'val': _val$5,
            'left': _left$6,
            'right': _right$7
        });
        return $3470;
    };
    const BBT$bin = x0 => x1 => x2 => x3 => x4 => BBT$bin$(x0, x1, x2, x3, x4);

    function U32$new$(_value$1) {
        var $3471 = word_to_u32(_value$1);
        return $3471;
    };
    const U32$new = x0 => U32$new$(x0);
    const Nat$to_u32 = a0 => (Number(a0) >>> 0);
    const BBT$tip = ({
        _: 'BBT.tip'
    });

    function BBT$singleton$(_key$3, _val$4) {
        var $3472 = BBT$bin$(1, _key$3, _val$4, BBT$tip, BBT$tip);
        return $3472;
    };
    const BBT$singleton = x0 => x1 => BBT$singleton$(x0, x1);

    function BBT$size$(_map$3) {
        var self = _map$3;
        switch (self._) {
            case 'BBT.bin':
                var $3474 = self.size;
                var $3475 = $3474;
                var $3473 = $3475;
                break;
            case 'BBT.tip':
                var $3476 = 0;
                var $3473 = $3476;
                break;
        };
        return $3473;
    };
    const BBT$size = x0 => BBT$size$(x0);
    const U32$add = a0 => a1 => ((a0 + a1) >>> 0);

    function Word$shift_left$one$go$(_word$2, _prev$3) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3478 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $3480 = Word$i$(Word$shift_left$one$go$($3478, Bool$false));
                    var $3479 = $3480;
                } else {
                    var $3481 = Word$o$(Word$shift_left$one$go$($3478, Bool$false));
                    var $3479 = $3481;
                };
                var $3477 = $3479;
                break;
            case 'Word.i':
                var $3482 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $3484 = Word$i$(Word$shift_left$one$go$($3482, Bool$true));
                    var $3483 = $3484;
                } else {
                    var $3485 = Word$o$(Word$shift_left$one$go$($3482, Bool$true));
                    var $3483 = $3485;
                };
                var $3477 = $3483;
                break;
            case 'Word.e':
                var $3486 = Word$e;
                var $3477 = $3486;
                break;
        };
        return $3477;
    };
    const Word$shift_left$one$go = x0 => x1 => Word$shift_left$one$go$(x0, x1);

    function Word$shift_left$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3488 = self.pred;
                var $3489 = Word$o$(Word$shift_left$one$go$($3488, Bool$false));
                var $3487 = $3489;
                break;
            case 'Word.i':
                var $3490 = self.pred;
                var $3491 = Word$o$(Word$shift_left$one$go$($3490, Bool$true));
                var $3487 = $3491;
                break;
            case 'Word.e':
                var $3492 = Word$e;
                var $3487 = $3492;
                break;
        };
        return $3487;
    };
    const Word$shift_left$one = x0 => Word$shift_left$one$(x0);

    function Word$shift_left$(_value$2, _n$3) {
        var Word$shift_left$ = (_value$2, _n$3) => ({
            ctr: 'TCO',
            arg: [_value$2, _n$3]
        });
        var Word$shift_left = _value$2 => _n$3 => Word$shift_left$(_value$2, _n$3);
        var arg = [_value$2, _n$3];
        while (true) {
            let [_value$2, _n$3] = arg;
            var R = (() => {
                var self = _n$3;
                if (self === 0n) {
                    var $3493 = _value$2;
                    return $3493;
                } else {
                    var $3494 = (self - 1n);
                    var $3495 = Word$shift_left$(Word$shift_left$one$(_value$2), $3494);
                    return $3495;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_left = x0 => x1 => Word$shift_left$(x0, x1);

    function Word$mul$go$(_a$3, _b$4, _acc$5) {
        var Word$mul$go$ = (_a$3, _b$4, _acc$5) => ({
            ctr: 'TCO',
            arg: [_a$3, _b$4, _acc$5]
        });
        var Word$mul$go = _a$3 => _b$4 => _acc$5 => Word$mul$go$(_a$3, _b$4, _acc$5);
        var arg = [_a$3, _b$4, _acc$5];
        while (true) {
            let [_a$3, _b$4, _acc$5] = arg;
            var R = (() => {
                var self = _a$3;
                switch (self._) {
                    case 'Word.o':
                        var $3496 = self.pred;
                        var $3497 = Word$mul$go$($3496, Word$shift_left$(_b$4, 1n), _acc$5);
                        return $3497;
                    case 'Word.i':
                        var $3498 = self.pred;
                        var $3499 = Word$mul$go$($3498, Word$shift_left$(_b$4, 1n), Word$add$(_b$4, _acc$5));
                        return $3499;
                    case 'Word.e':
                        var $3500 = _acc$5;
                        return $3500;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$mul$go = x0 => x1 => x2 => Word$mul$go$(x0, x1, x2);

    function Word$to_zero$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3502 = self.pred;
                var $3503 = Word$o$(Word$to_zero$($3502));
                var $3501 = $3503;
                break;
            case 'Word.i':
                var $3504 = self.pred;
                var $3505 = Word$o$(Word$to_zero$($3504));
                var $3501 = $3505;
                break;
            case 'Word.e':
                var $3506 = Word$e;
                var $3501 = $3506;
                break;
        };
        return $3501;
    };
    const Word$to_zero = x0 => Word$to_zero$(x0);

    function Word$mul$(_a$2, _b$3) {
        var $3507 = Word$mul$go$(_a$2, _b$3, Word$to_zero$(_a$2));
        return $3507;
    };
    const Word$mul = x0 => x1 => Word$mul$(x0, x1);
    const U32$mul = a0 => a1 => ((a0 * a1) >>> 0);
    const BBT$w = 3;
    const U32$ltn = a0 => a1 => (a0 < a1);
    const U32$from_nat = a0 => (Number(a0) >>> 0);

    function BBT$node$(_key$3, _val$4, _left$5, _right$6) {
        var _size_left$7 = BBT$size$(_left$5);
        var _size_right$8 = BBT$size$(_right$6);
        var _new_size$9 = ((1 + ((_size_left$7 + _size_right$8) >>> 0)) >>> 0);
        var $3508 = BBT$bin$(_new_size$9, _key$3, _val$4, _left$5, _right$6);
        return $3508;
    };
    const BBT$node = x0 => x1 => x2 => x3 => BBT$node$(x0, x1, x2, x3);

    function Cmp$as_gtn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $3510 = Bool$false;
                var $3509 = $3510;
                break;
            case 'Cmp.gtn':
                var $3511 = Bool$true;
                var $3509 = $3511;
                break;
        };
        return $3509;
    };
    const Cmp$as_gtn = x0 => Cmp$as_gtn$(x0);

    function Word$gtn$(_a$2, _b$3) {
        var $3512 = Cmp$as_gtn$(Word$cmp$(_a$2, _b$3));
        return $3512;
    };
    const Word$gtn = x0 => x1 => Word$gtn$(x0, x1);
    const U32$gtn = a0 => a1 => (a0 > a1);

    function BBT$balance$(_k$3, _v$4, _l$5, _r$6) {
        var _size_l$7 = BBT$size$(_l$5);
        var _size_r$8 = BBT$size$(_r$6);
        var _size_l_plus_size_r$9 = ((_size_l$7 + _size_r$8) >>> 0);
        var _w_x_size_l$10 = ((BBT$w * _size_l$7) >>> 0);
        var _w_x_size_r$11 = ((BBT$w * _size_r$8) >>> 0);
        var self = (_size_l_plus_size_r$9 < 2);
        if (self) {
            var $3514 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
            var $3513 = $3514;
        } else {
            var self = (_size_r$8 > _w_x_size_l$10);
            if (self) {
                var self = _r$6;
                switch (self._) {
                    case 'BBT.bin':
                        var $3517 = self.key;
                        var $3518 = self.val;
                        var $3519 = self.left;
                        var $3520 = self.right;
                        var _size_rl$17 = BBT$size$($3519);
                        var _size_rr$18 = BBT$size$($3520);
                        var self = (_size_rl$17 < _size_rr$18);
                        if (self) {
                            var _new_key$19 = $3517;
                            var _new_val$20 = $3518;
                            var _new_left$21 = BBT$node$(_k$3, _v$4, _l$5, $3519);
                            var _new_right$22 = $3520;
                            var $3522 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                            var $3521 = $3522;
                        } else {
                            var self = $3519;
                            switch (self._) {
                                case 'BBT.bin':
                                    var $3524 = self.key;
                                    var $3525 = self.val;
                                    var $3526 = self.left;
                                    var $3527 = self.right;
                                    var _new_key$24 = $3524;
                                    var _new_val$25 = $3525;
                                    var _new_left$26 = BBT$node$(_k$3, _v$4, _l$5, $3526);
                                    var _new_right$27 = BBT$node$($3517, $3518, $3527, $3520);
                                    var $3528 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                    var $3523 = $3528;
                                    break;
                                case 'BBT.tip':
                                    var $3529 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                    var $3523 = $3529;
                                    break;
                            };
                            var $3521 = $3523;
                        };
                        var $3516 = $3521;
                        break;
                    case 'BBT.tip':
                        var $3530 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                        var $3516 = $3530;
                        break;
                };
                var $3515 = $3516;
            } else {
                var self = (_size_l$7 > _w_x_size_r$11);
                if (self) {
                    var self = _l$5;
                    switch (self._) {
                        case 'BBT.bin':
                            var $3533 = self.key;
                            var $3534 = self.val;
                            var $3535 = self.left;
                            var $3536 = self.right;
                            var _size_ll$17 = BBT$size$($3535);
                            var _size_lr$18 = BBT$size$($3536);
                            var self = (_size_lr$18 < _size_ll$17);
                            if (self) {
                                var _new_key$19 = $3533;
                                var _new_val$20 = $3534;
                                var _new_left$21 = $3535;
                                var _new_right$22 = BBT$node$(_k$3, _v$4, $3536, _r$6);
                                var $3538 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                                var $3537 = $3538;
                            } else {
                                var self = $3536;
                                switch (self._) {
                                    case 'BBT.bin':
                                        var $3540 = self.key;
                                        var $3541 = self.val;
                                        var $3542 = self.left;
                                        var $3543 = self.right;
                                        var _new_key$24 = $3540;
                                        var _new_val$25 = $3541;
                                        var _new_left$26 = BBT$node$($3533, $3534, $3535, $3542);
                                        var _new_right$27 = BBT$node$(_k$3, _v$4, $3543, _r$6);
                                        var $3544 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                        var $3539 = $3544;
                                        break;
                                    case 'BBT.tip':
                                        var $3545 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                        var $3539 = $3545;
                                        break;
                                };
                                var $3537 = $3539;
                            };
                            var $3532 = $3537;
                            break;
                        case 'BBT.tip':
                            var $3546 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                            var $3532 = $3546;
                            break;
                    };
                    var $3531 = $3532;
                } else {
                    var $3547 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                    var $3531 = $3547;
                };
                var $3515 = $3531;
            };
            var $3513 = $3515;
        };
        return $3513;
    };
    const BBT$balance = x0 => x1 => x2 => x3 => BBT$balance$(x0, x1, x2, x3);

    function BBT$insert$(_cmp$3, _key$4, _val$5, _map$6) {
        var self = _map$6;
        switch (self._) {
            case 'BBT.bin':
                var $3549 = self.key;
                var $3550 = self.val;
                var $3551 = self.left;
                var $3552 = self.right;
                var self = _cmp$3(_key$4)($3549);
                switch (self._) {
                    case 'Cmp.ltn':
                        var _new_key$12 = $3549;
                        var _new_val$13 = $3550;
                        var _new_left$14 = BBT$insert$(_cmp$3, _key$4, _val$5, $3551);
                        var _new_right$15 = $3552;
                        var $3554 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $3553 = $3554;
                        break;
                    case 'Cmp.eql':
                        var $3555 = BBT$node$(_key$4, _val$5, $3551, $3552);
                        var $3553 = $3555;
                        break;
                    case 'Cmp.gtn':
                        var _new_key$12 = $3549;
                        var _new_val$13 = $3550;
                        var _new_left$14 = $3551;
                        var _new_right$15 = BBT$insert$(_cmp$3, _key$4, _val$5, $3552);
                        var $3556 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $3553 = $3556;
                        break;
                };
                var $3548 = $3553;
                break;
            case 'BBT.tip':
                var $3557 = BBT$singleton$(_key$4, _val$5);
                var $3548 = $3557;
                break;
        };
        return $3548;
    };
    const BBT$insert = x0 => x1 => x2 => x3 => BBT$insert$(x0, x1, x2, x3);

    function Map$set$(_key$2, _val$3, _map$4) {
        var $3558 = BBT$insert$(String$cmp, _key$2, _val$3, _map$4);
        return $3558;
    };
    const Map$set = x0 => x1 => x2 => Map$set$(x0, x1, x2);

    function Kindelia$Entry$data$(_value$1) {
        var $3559 = ({
            _: 'Kindelia.Entry.data',
            'value': _value$1
        });
        return $3559;
    };
    const Kindelia$Entry$data = x0 => Kindelia$Entry$data$(x0);

    function Kindelia$Entry$bond$(_value$1) {
        var $3560 = ({
            _: 'Kindelia.Entry.bond',
            'value': _value$1
        });
        return $3560;
    };
    const Kindelia$Entry$bond = x0 => Kindelia$Entry$bond$(x0);

    function List$unzip$(_xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $3562 = self.head;
                var $3563 = self.tail;
                var _rec$6 = List$unzip$($3563);
                var self = $3562;
                switch (self._) {
                    case 'Pair.new':
                        var $3565 = self.fst;
                        var $3566 = self.snd;
                        var self = _rec$6;
                        switch (self._) {
                            case 'Pair.new':
                                var $3568 = self.fst;
                                var $3569 = self.snd;
                                var $3570 = Pair$new$(List$cons$($3565, $3568), List$cons$($3566, $3569));
                                var $3567 = $3570;
                                break;
                        };
                        var $3564 = $3567;
                        break;
                };
                var $3561 = $3564;
                break;
            case 'List.nil':
                var $3571 = Pair$new$(List$nil, List$nil);
                var $3561 = $3571;
                break;
        };
        return $3561;
    };
    const List$unzip = x0 => List$unzip$(x0);

    function Kindelia$extend$(_map$2, _keys$3, _vals$4) {
        var Kindelia$extend$ = (_map$2, _keys$3, _vals$4) => ({
            ctr: 'TCO',
            arg: [_map$2, _keys$3, _vals$4]
        });
        var Kindelia$extend = _map$2 => _keys$3 => _vals$4 => Kindelia$extend$(_map$2, _keys$3, _vals$4);
        var arg = [_map$2, _keys$3, _vals$4];
        while (true) {
            let [_map$2, _keys$3, _vals$4] = arg;
            var R = (() => {
                var self = _keys$3;
                switch (self._) {
                    case 'List.cons':
                        var $3572 = self.head;
                        var $3573 = self.tail;
                        var self = _vals$4;
                        switch (self._) {
                            case 'List.cons':
                                var $3575 = self.head;
                                var $3576 = self.tail;
                                var $3577 = Kindelia$extend$(Map$set$($3572, $3575, _map$2), $3573, $3576);
                                var $3574 = $3577;
                                break;
                            case 'List.nil':
                                var $3578 = _map$2;
                                var $3574 = $3578;
                                break;
                        };
                        return $3574;
                    case 'List.nil':
                        var self = _vals$4;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $3580 = _map$2;
                                var $3579 = $3580;
                                break;
                        };
                        return $3579;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kindelia$extend = x0 => x1 => x2 => Kindelia$extend$(x0, x1, x2);

    function BBT$from_list$go$(_cmp$3, _acc$4, _xs$5) {
        var BBT$from_list$go$ = (_cmp$3, _acc$4, _xs$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _acc$4, _xs$5]
        });
        var BBT$from_list$go = _cmp$3 => _acc$4 => _xs$5 => BBT$from_list$go$(_cmp$3, _acc$4, _xs$5);
        var arg = [_cmp$3, _acc$4, _xs$5];
        while (true) {
            let [_cmp$3, _acc$4, _xs$5] = arg;
            var R = (() => {
                var self = _xs$5;
                switch (self._) {
                    case 'List.cons':
                        var $3581 = self.head;
                        var $3582 = self.tail;
                        var _key$8 = Pair$fst$($3581);
                        var _val$9 = Pair$snd$($3581);
                        var _new_acc$10 = BBT$insert$(_cmp$3, _key$8, _val$9, _acc$4);
                        var $3583 = BBT$from_list$go$(_cmp$3, _new_acc$10, $3582);
                        return $3583;
                    case 'List.nil':
                        var $3584 = _acc$4;
                        return $3584;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$from_list$go = x0 => x1 => x2 => BBT$from_list$go$(x0, x1, x2);

    function BBT$from_list$(_cmp$3, _xs$4) {
        var $3585 = BBT$from_list$go$(_cmp$3, BBT$tip, _xs$4);
        return $3585;
    };
    const BBT$from_list = x0 => x1 => BBT$from_list$(x0, x1);

    function Map$from_list$(_xs$2) {
        var $3586 = BBT$from_list$(String$cmp, _xs$2);
        return $3586;
    };
    const Map$from_list = x0 => Map$from_list$(x0);

    function Kindelia$equal$(_a$1, _b$2) {
        var Kindelia$equal$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var Kindelia$equal = _a$1 => _b$2 => Kindelia$equal$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                switch (self._) {
                    case 'Kindelia.Type.data':
                        var $3587 = self.name;
                        var self = _b$2;
                        switch (self._) {
                            case 'Kindelia.Type.data':
                                var $3589 = self.name;
                                var $3590 = ($3587 === $3589);
                                var $3588 = $3590;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.effe':
                                var $3591 = Bool$false;
                                var $3588 = $3591;
                                break;
                        };
                        return $3588;
                    case 'Kindelia.Type.effe':
                        var $3592 = self.rety;
                        var self = _b$2;
                        switch (self._) {
                            case 'Kindelia.Type.effe':
                                var $3594 = self.rety;
                                var $3595 = Kindelia$equal$($3592, $3594);
                                var $3593 = $3595;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3596 = Bool$false;
                                var $3593 = $3596;
                                break;
                        };
                        return $3593;
                    case 'Kindelia.Type.word':
                        var self = _b$2;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                                var $3598 = Bool$true;
                                var $3597 = $3598;
                                break;
                            case 'Kindelia.Type.data':
                            case 'Kindelia.Type.effe':
                                var $3599 = Bool$false;
                                var $3597 = $3599;
                                break;
                        };
                        return $3597;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kindelia$equal = x0 => x1 => Kindelia$equal$(x0, x1);

    function Kindelia$get_bond$(_world$1, _name$2) {
        var $3600 = Maybe$monad$((_m$bind$3 => _m$pure$4 => {
            var $3601 = _m$bind$3;
            return $3601;
        }))(Map$get$(_name$2, _world$1))((_entry$3 => {
            var self = _entry$3;
            switch (self._) {
                case 'Kindelia.Entry.bond':
                    var $3603 = self.value;
                    var $3604 = Maybe$some$($3603);
                    var $3602 = $3604;
                    break;
                case 'Kindelia.Entry.data':
                case 'Kindelia.Entry.file':
                    var $3605 = Maybe$none;
                    var $3602 = $3605;
                    break;
            };
            return $3602;
        }));
        return $3600;
    };
    const Kindelia$get_bond = x0 => x1 => Kindelia$get_bond$(x0, x1);

    function List$zip$(_as$3, _bs$4) {
        var self = _as$3;
        switch (self._) {
            case 'List.cons':
                var $3607 = self.head;
                var $3608 = self.tail;
                var self = _bs$4;
                switch (self._) {
                    case 'List.cons':
                        var $3610 = self.head;
                        var $3611 = self.tail;
                        var $3612 = List$cons$(Pair$new$($3607, $3610), List$zip$($3608, $3611));
                        var $3609 = $3612;
                        break;
                    case 'List.nil':
                        var $3613 = List$nil;
                        var $3609 = $3613;
                        break;
                };
                var $3606 = $3609;
                break;
            case 'List.nil':
                var $3614 = List$nil;
                var $3606 = $3614;
                break;
        };
        return $3606;
    };
    const List$zip = x0 => x1 => List$zip$(x0, x1);

    function List$all$(_cond$2, _list$3) {
        var List$all$ = (_cond$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _list$3]
        });
        var List$all = _cond$2 => _list$3 => List$all$(_cond$2, _list$3);
        var arg = [_cond$2, _list$3];
        while (true) {
            let [_cond$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $3615 = self.head;
                        var $3616 = self.tail;
                        var self = _cond$2($3615);
                        if (self) {
                            var $3618 = List$all$(_cond$2, $3616);
                            var $3617 = $3618;
                        } else {
                            var $3619 = Bool$false;
                            var $3617 = $3619;
                        };
                        return $3617;
                    case 'List.nil':
                        var $3620 = Bool$true;
                        return $3620;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$all = x0 => x1 => List$all$(x0, x1);
    const List$length = a0 => (list_length(a0));

    function List$zip_with$(_f$4, _as$5, _bs$6) {
        var self = _as$5;
        switch (self._) {
            case 'List.cons':
                var $3622 = self.head;
                var $3623 = self.tail;
                var self = _bs$6;
                switch (self._) {
                    case 'List.cons':
                        var $3625 = self.head;
                        var $3626 = self.tail;
                        var $3627 = List$cons$(_f$4($3622)($3625), List$zip_with$(_f$4, $3623, $3626));
                        var $3624 = $3627;
                        break;
                    case 'List.nil':
                        var $3628 = List$nil;
                        var $3624 = $3628;
                        break;
                };
                var $3621 = $3624;
                break;
            case 'List.nil':
                var $3629 = List$nil;
                var $3621 = $3629;
                break;
        };
        return $3621;
    };
    const List$zip_with = x0 => x1 => x2 => List$zip_with$(x0, x1, x2);

    function List$zipped_with$(_as$3, _bs$4, _f$6) {
        var $3630 = List$zip_with$(_f$6, _as$3, _bs$4);
        return $3630;
    };
    const List$zipped_with = x0 => x1 => x2 => List$zipped_with$(x0, x1, x2);

    function List$and$(_list$1) {
        var $3631 = List$all$((_x$2 => {
            var $3632 = _x$2;
            return $3632;
        }), _list$1);
        return $3631;
    };
    const List$and = x0 => List$and$(x0);

    function Kindelia$get_file$(_world$1, _name$2) {
        var $3633 = Maybe$monad$((_m$bind$3 => _m$pure$4 => {
            var $3634 = _m$bind$3;
            return $3634;
        }))(Map$get$(_name$2, _world$1))((_entry$3 => {
            var self = _entry$3;
            switch (self._) {
                case 'Kindelia.Entry.file':
                    var $3636 = self.value;
                    var $3637 = Maybe$some$($3636);
                    var $3635 = $3637;
                    break;
                case 'Kindelia.Entry.data':
                case 'Kindelia.Entry.bond':
                    var $3638 = Maybe$none;
                    var $3635 = $3638;
                    break;
            };
            return $3635;
        }));
        return $3633;
    };
    const Kindelia$get_file = x0 => x1 => Kindelia$get_file$(x0, x1);

    function List$is_empty$(_list$2) {
        var self = _list$2;
        switch (self._) {
            case 'List.nil':
                var $3640 = Bool$true;
                var $3639 = $3640;
                break;
            case 'List.cons':
                var $3641 = Bool$false;
                var $3639 = $3641;
                break;
        };
        return $3639;
    };
    const List$is_empty = x0 => List$is_empty$(x0);

    function Maybe$if$(_cond$2, _x$3) {
        var self = _x$3;
        switch (self._) {
            case 'Maybe.some':
                var $3643 = self.value;
                var $3644 = _cond$2($3643);
                var $3642 = $3644;
                break;
            case 'Maybe.none':
                var $3645 = Bool$false;
                var $3642 = $3645;
                break;
        };
        return $3642;
    };
    const Maybe$if = x0 => x1 => Maybe$if$(x0, x1);

    function List$in$(_cond$2, _list$3) {
        var self = List$find$(_cond$2, _list$3);
        switch (self._) {
            case 'Maybe.none':
                var $3647 = Bool$false;
                var $3646 = $3647;
                break;
            case 'Maybe.some':
                var $3648 = Bool$true;
                var $3646 = $3648;
                break;
        };
        return $3646;
    };
    const List$in = x0 => x1 => List$in$(x0, x1);
    const Bool$or = a0 => a1 => (a0 || a1);

    function Kindelia$check$(_context$1, _world$2, _term$3, _type$4, _caller$5) {
        var self = _context$1;
        switch (self._) {
            case 'BBT.tip':
                var self = _term$3;
                switch (self._) {
                    case 'Kindelia.Term.var':
                        var $3651 = self.name;
                        var self = Map$get$($3651, _context$1);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3653 = self.value;
                                var $3654 = Kindelia$equal$($3653, _type$4);
                                var $3652 = $3654;
                                break;
                            case 'Maybe.none':
                                var $3655 = Bool$false;
                                var $3652 = $3655;
                                break;
                        };
                        var $3650 = $3652;
                        break;
                    case 'Kindelia.Term.call':
                        var $3656 = self.bond;
                        var $3657 = self.args;
                        var self = Kindelia$get_bond$(_world$2, $3656);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3659 = self.value;
                                var _bond$9 = $3659;
                                var self = _bond$9;
                                switch (self._) {
                                    case 'Kindelia.Bond.new':
                                        var $3661 = self.args;
                                        var $3662 = self.otyp;
                                        var _otyp$14 = Kindelia$equal$($3662, _type$4);
                                        var _ityp$15 = List$mapped$($3661, Pair$snd);
                                        var _args$16 = List$zip$($3657, _ityp$15);
                                        var _args$17 = List$all$((_x$17 => {
                                            var $3664 = Kindelia$check$(_context$1, _world$2, (() => {
                                                var self = _x$17;
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3665 = self.fst;
                                                        var $3666 = $3665;
                                                        return $3666;
                                                };
                                            })(), (() => {
                                                var self = _x$17;
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3667 = self.snd;
                                                        var $3668 = $3667;
                                                        return $3668;
                                                };
                                            })(), _caller$5);
                                            return $3664;
                                        }), _args$16);
                                        var $3663 = (_otyp$14 && _args$17);
                                        var $3660 = $3663;
                                        break;
                                };
                                var $3658 = $3660;
                                break;
                            case 'Maybe.none':
                                var $3669 = Bool$false;
                                var $3658 = $3669;
                                break;
                        };
                        var $3650 = $3658;
                        break;
                    case 'Kindelia.Term.let':
                        var $3670 = self.name;
                        var $3671 = self.type;
                        var $3672 = self.expr;
                        var $3673 = self.body;
                        var _expr$10 = Kindelia$check$(_context$1, _world$2, $3672, $3671, _caller$5);
                        var _ctx2$11 = Map$set$($3670, $3671, _context$1);
                        var _body$12 = Kindelia$check$(_ctx2$11, _world$2, $3673, _type$4, _caller$5);
                        var $3674 = (_expr$10 && _body$12);
                        var $3650 = $3674;
                        break;
                    case 'Kindelia.Term.create':
                        var $3675 = self.ctor;
                        var $3676 = self.vals;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.data':
                                var $3678 = self.name;
                                var self = Kindelia$get_data$(_world$2, $3678);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3680 = self.value;
                                        var _data$10 = $3680;
                                        var self = _data$10;
                                        switch (self._) {
                                            case 'Kindelia.Data.new':
                                                var $3682 = self.constructors;
                                                var self = List$get$($3675, $3682);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $3684 = self.value;
                                                        var _ctor$14 = $3684;
                                                        var self = _ctor$14;
                                                        switch (self._) {
                                                            case 'Kindelia.Constructor.new':
                                                                var $3686 = self.args;
                                                                var _size$17 = ((list_length($3676)) === (list_length($3686)));
                                                                var _ftyp$18 = List$mapped$($3686, Pair$snd);
                                                                var _vals$19 = List$zip$($3676, _ftyp$18);
                                                                var _vals$20 = List$all$((_x$20 => {
                                                                    var $3688 = Kindelia$check$(_context$1, _world$2, (() => {
                                                                        var self = _x$20;
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3689 = self.fst;
                                                                                var $3690 = $3689;
                                                                                return $3690;
                                                                        };
                                                                    })(), (() => {
                                                                        var self = _x$20;
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3691 = self.snd;
                                                                                var $3692 = $3691;
                                                                                return $3692;
                                                                        };
                                                                    })(), _caller$5);
                                                                    return $3688;
                                                                }), _vals$19);
                                                                var $3687 = (_size$17 && _vals$20);
                                                                var $3685 = $3687;
                                                                break;
                                                        };
                                                        var $3683 = $3685;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $3693 = Bool$false;
                                                        var $3683 = $3693;
                                                        break;
                                                };
                                                var $3681 = $3683;
                                                break;
                                        };
                                        var $3679 = $3681;
                                        break;
                                    case 'Maybe.none':
                                        var $3694 = Bool$false;
                                        var $3679 = $3694;
                                        break;
                                };
                                var $3677 = $3679;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.effe':
                                var $3695 = Bool$false;
                                var $3677 = $3695;
                                break;
                        };
                        var $3650 = $3677;
                        break;
                    case 'Kindelia.Term.match':
                        var $3696 = self.name;
                        var $3697 = self.data;
                        var $3698 = self.cses;
                        var self = Kindelia$get_data$(_world$2, $3697);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3700 = self.value;
                                var _data$10 = $3700;
                                var self = _data$10;
                                switch (self._) {
                                    case 'Kindelia.Data.new':
                                        var $3702 = self.constructors;
                                        var _size$13 = ((list_length($3698)) === (list_length($3702)));
                                        var _expr$14 = Kindelia$check$(_context$1, _world$2, Kindelia$Term$var$($3696), Kindelia$Type$data$($3697), _caller$5);
                                        var _cses$15 = List$zipped_with$($3698, $3702, (_case_body$15 => _case_ctor$16 => {
                                            var _nams$17 = List$map$((_args$17 => {
                                                var $3705 = ($3696 + ("." + (() => {
                                                    var self = _args$17;
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3706 = self.fst;
                                                            var $3707 = $3706;
                                                            return $3707;
                                                    };
                                                })()));
                                                return $3705;
                                            }), (() => {
                                                var self = _case_ctor$16;
                                                switch (self._) {
                                                    case 'Kindelia.Constructor.new':
                                                        var $3708 = self.args;
                                                        var $3709 = $3708;
                                                        return $3709;
                                                };
                                            })());
                                            var _typs$18 = List$mapped$((() => {
                                                var self = _case_ctor$16;
                                                switch (self._) {
                                                    case 'Kindelia.Constructor.new':
                                                        var $3710 = self.args;
                                                        var $3711 = $3710;
                                                        return $3711;
                                                };
                                            })(), Pair$snd);
                                            var _ctx2$19 = Kindelia$extend$(_context$1, _nams$17, _typs$18);
                                            var $3704 = Kindelia$check$(_ctx2$19, _world$2, _case_body$15, _type$4, _caller$5);
                                            return $3704;
                                        }));
                                        var $3703 = (_size$13 && List$and$(_cses$15));
                                        var $3701 = $3703;
                                        break;
                                };
                                var $3699 = $3701;
                                break;
                            case 'Maybe.none':
                                var $3712 = Bool$false;
                                var $3699 = $3712;
                                break;
                        };
                        var $3650 = $3699;
                        break;
                    case 'Kindelia.Term.compare':
                        var $3713 = self.val0;
                        var $3714 = self.val1;
                        var $3715 = self.iflt;
                        var $3716 = self.ifeq;
                        var $3717 = self.ifgt;
                        var _val0$11 = Kindelia$check$(_context$1, _world$2, $3713, Kindelia$Type$word, _caller$5);
                        var _val1$12 = Kindelia$check$(_context$1, _world$2, $3714, Kindelia$Type$word, _caller$5);
                        var _iflt$13 = Kindelia$check$(_context$1, _world$2, $3715, _type$4, _caller$5);
                        var _ifeq$14 = Kindelia$check$(_context$1, _world$2, $3716, _type$4, _caller$5);
                        var _ifgt$15 = Kindelia$check$(_context$1, _world$2, $3717, _type$4, _caller$5);
                        var $3718 = (_val0$11 && (_val1$12 && (_iflt$13 && (_ifeq$14 && _ifgt$15))));
                        var $3650 = $3718;
                        break;
                    case 'Kindelia.Term.operate':
                        var $3719 = self.val0;
                        var $3720 = self.val1;
                        var _val0$9 = Kindelia$check$(_context$1, _world$2, $3719, Kindelia$Type$word, _caller$5);
                        var _val1$10 = Kindelia$check$(_context$1, _world$2, $3720, Kindelia$Type$word, _caller$5);
                        var $3721 = (_val0$9 && _val1$10);
                        var $3650 = $3721;
                        break;
                    case 'Kindelia.Term.set':
                        var $3722 = self.file;
                        var $3723 = self.expr;
                        var $3724 = self.body;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3726 = Bool$false;
                                var $3725 = $3726;
                                break;
                            case 'Kindelia.Type.effe':
                                var self = Kindelia$get_file$(_world$2, $3722);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3728 = self.value;
                                        var _file$11 = $3728;
                                        var self = _file$11;
                                        switch (self._) {
                                            case 'Kindelia.File.new':
                                                var $3730 = self.ownr;
                                                var $3731 = self.type;
                                                var _empty$16 = List$is_empty$($3730);
                                                var _valid$17 = Maybe$if$((_x$17 => {
                                                    var $3733 = List$in$(a1 => (_x$17 === a1), $3730);
                                                    return $3733;
                                                }), _caller$5);
                                                var _ownr$18 = (_empty$16 || _valid$17);
                                                var _expr$19 = Kindelia$check$(_context$1, _world$2, $3723, $3731, _caller$5);
                                                var _body$20 = Kindelia$check$(_context$1, _world$2, $3724, _type$4, _caller$5);
                                                var $3732 = (_ownr$18 && (_expr$19 && _body$20));
                                                var $3729 = $3732;
                                                break;
                                        };
                                        var $3727 = $3729;
                                        break;
                                    case 'Maybe.none':
                                        var $3734 = Bool$false;
                                        var $3727 = $3734;
                                        break;
                                };
                                var $3725 = $3727;
                                break;
                        };
                        var $3650 = $3725;
                        break;
                    case 'Kindelia.Term.get':
                        var $3735 = self.name;
                        var $3736 = self.file;
                        var $3737 = self.body;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3739 = Bool$false;
                                var $3738 = $3739;
                                break;
                            case 'Kindelia.Type.effe':
                                var self = Kindelia$get_file$(_world$2, $3736);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3741 = self.value;
                                        var _file$11 = $3741;
                                        var self = _file$11;
                                        switch (self._) {
                                            case 'Kindelia.File.new':
                                                var $3743 = self.type;
                                                var _ctx2$16 = Kindelia$extend$(_context$1, List$cons$($3735, List$nil), List$cons$($3743, List$nil));
                                                var _body$17 = Kindelia$check$(_ctx2$16, _world$2, $3737, _type$4, _caller$5);
                                                var $3744 = _body$17;
                                                var $3742 = $3744;
                                                break;
                                        };
                                        var $3740 = $3742;
                                        break;
                                    case 'Maybe.none':
                                        var $3745 = Bool$false;
                                        var $3740 = $3745;
                                        break;
                                };
                                var $3738 = $3740;
                                break;
                        };
                        var $3650 = $3738;
                        break;
                    case 'Kindelia.Term.bind':
                        var $3746 = self.name;
                        var $3747 = self.type;
                        var $3748 = self.expr;
                        var $3749 = self.body;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3751 = Bool$false;
                                var $3750 = $3751;
                                break;
                            case 'Kindelia.Type.effe':
                                var _expr$11 = Kindelia$check$(_context$1, _world$2, $3748, Kindelia$Type$effe$($3747), _caller$5);
                                var _ctx2$12 = Map$set$($3746, $3747, _context$1);
                                var _body$13 = Kindelia$check$(_ctx2$12, _world$2, $3749, _type$4, _caller$5);
                                var $3752 = (_expr$11 && _body$13);
                                var $3750 = $3752;
                                break;
                        };
                        var $3650 = $3750;
                        break;
                    case 'Kindelia.Term.return':
                        var $3753 = self.expr;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.effe':
                                var $3755 = self.rety;
                                var $3756 = Kindelia$check$(_context$1, _world$2, $3753, $3755, _caller$5);
                                var $3754 = $3756;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3757 = Bool$false;
                                var $3754 = $3757;
                                break;
                        };
                        var $3650 = $3754;
                        break;
                    case 'Kindelia.Term.word':
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                                var $3759 = Bool$true;
                                var $3758 = $3759;
                                break;
                            case 'Kindelia.Type.data':
                            case 'Kindelia.Type.effe':
                                var $3760 = Bool$false;
                                var $3758 = $3760;
                                break;
                        };
                        var $3650 = $3758;
                        break;
                };
                var $3649 = $3650;
                break;
            case 'BBT.bin':
                var self = _term$3;
                switch (self._) {
                    case 'Kindelia.Term.var':
                        var $3762 = self.name;
                        var self = Map$get$($3762, _context$1);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3764 = self.value;
                                var $3765 = Kindelia$equal$($3764, _type$4);
                                var $3763 = $3765;
                                break;
                            case 'Maybe.none':
                                var $3766 = Bool$false;
                                var $3763 = $3766;
                                break;
                        };
                        var $3761 = $3763;
                        break;
                    case 'Kindelia.Term.call':
                        var $3767 = self.bond;
                        var $3768 = self.args;
                        var self = Kindelia$get_bond$(_world$2, $3767);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3770 = self.value;
                                var _bond$14 = $3770;
                                var self = _bond$14;
                                switch (self._) {
                                    case 'Kindelia.Bond.new':
                                        var $3772 = self.args;
                                        var $3773 = self.otyp;
                                        var _otyp$19 = Kindelia$equal$($3773, _type$4);
                                        var _ityp$20 = List$mapped$($3772, Pair$snd);
                                        var _args$21 = List$zip$($3768, _ityp$20);
                                        var _args$22 = List$all$((_x$22 => {
                                            var $3775 = Kindelia$check$(_context$1, _world$2, (() => {
                                                var self = _x$22;
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3776 = self.fst;
                                                        var $3777 = $3776;
                                                        return $3777;
                                                };
                                            })(), (() => {
                                                var self = _x$22;
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3778 = self.snd;
                                                        var $3779 = $3778;
                                                        return $3779;
                                                };
                                            })(), _caller$5);
                                            return $3775;
                                        }), _args$21);
                                        var $3774 = (_otyp$19 && _args$22);
                                        var $3771 = $3774;
                                        break;
                                };
                                var $3769 = $3771;
                                break;
                            case 'Maybe.none':
                                var $3780 = Bool$false;
                                var $3769 = $3780;
                                break;
                        };
                        var $3761 = $3769;
                        break;
                    case 'Kindelia.Term.let':
                        var $3781 = self.name;
                        var $3782 = self.type;
                        var $3783 = self.expr;
                        var $3784 = self.body;
                        var _expr$15 = Kindelia$check$(_context$1, _world$2, $3783, $3782, _caller$5);
                        var _ctx2$16 = Map$set$($3781, $3782, _context$1);
                        var _body$17 = Kindelia$check$(_ctx2$16, _world$2, $3784, _type$4, _caller$5);
                        var $3785 = (_expr$15 && _body$17);
                        var $3761 = $3785;
                        break;
                    case 'Kindelia.Term.create':
                        var $3786 = self.ctor;
                        var $3787 = self.vals;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.data':
                                var $3789 = self.name;
                                var self = Kindelia$get_data$(_world$2, $3789);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3791 = self.value;
                                        var _data$15 = $3791;
                                        var self = _data$15;
                                        switch (self._) {
                                            case 'Kindelia.Data.new':
                                                var $3793 = self.constructors;
                                                var self = List$get$($3786, $3793);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $3795 = self.value;
                                                        var _ctor$19 = $3795;
                                                        var self = _ctor$19;
                                                        switch (self._) {
                                                            case 'Kindelia.Constructor.new':
                                                                var $3797 = self.args;
                                                                var _size$22 = ((list_length($3787)) === (list_length($3797)));
                                                                var _ftyp$23 = List$mapped$($3797, Pair$snd);
                                                                var _vals$24 = List$zip$($3787, _ftyp$23);
                                                                var _vals$25 = List$all$((_x$25 => {
                                                                    var $3799 = Kindelia$check$(_context$1, _world$2, (() => {
                                                                        var self = _x$25;
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3800 = self.fst;
                                                                                var $3801 = $3800;
                                                                                return $3801;
                                                                        };
                                                                    })(), (() => {
                                                                        var self = _x$25;
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3802 = self.snd;
                                                                                var $3803 = $3802;
                                                                                return $3803;
                                                                        };
                                                                    })(), _caller$5);
                                                                    return $3799;
                                                                }), _vals$24);
                                                                var $3798 = (_size$22 && _vals$25);
                                                                var $3796 = $3798;
                                                                break;
                                                        };
                                                        var $3794 = $3796;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $3804 = Bool$false;
                                                        var $3794 = $3804;
                                                        break;
                                                };
                                                var $3792 = $3794;
                                                break;
                                        };
                                        var $3790 = $3792;
                                        break;
                                    case 'Maybe.none':
                                        var $3805 = Bool$false;
                                        var $3790 = $3805;
                                        break;
                                };
                                var $3788 = $3790;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.effe':
                                var $3806 = Bool$false;
                                var $3788 = $3806;
                                break;
                        };
                        var $3761 = $3788;
                        break;
                    case 'Kindelia.Term.match':
                        var $3807 = self.name;
                        var $3808 = self.data;
                        var $3809 = self.cses;
                        var self = Kindelia$get_data$(_world$2, $3808);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3811 = self.value;
                                var _data$15 = $3811;
                                var self = _data$15;
                                switch (self._) {
                                    case 'Kindelia.Data.new':
                                        var $3813 = self.constructors;
                                        var _size$18 = ((list_length($3809)) === (list_length($3813)));
                                        var _expr$19 = Kindelia$check$(_context$1, _world$2, Kindelia$Term$var$($3807), Kindelia$Type$data$($3808), _caller$5);
                                        var _cses$20 = List$zipped_with$($3809, $3813, (_case_body$20 => _case_ctor$21 => {
                                            var _nams$22 = List$map$((_args$22 => {
                                                var $3816 = ($3807 + ("." + (() => {
                                                    var self = _args$22;
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3817 = self.fst;
                                                            var $3818 = $3817;
                                                            return $3818;
                                                    };
                                                })()));
                                                return $3816;
                                            }), (() => {
                                                var self = _case_ctor$21;
                                                switch (self._) {
                                                    case 'Kindelia.Constructor.new':
                                                        var $3819 = self.args;
                                                        var $3820 = $3819;
                                                        return $3820;
                                                };
                                            })());
                                            var _typs$23 = List$mapped$((() => {
                                                var self = _case_ctor$21;
                                                switch (self._) {
                                                    case 'Kindelia.Constructor.new':
                                                        var $3821 = self.args;
                                                        var $3822 = $3821;
                                                        return $3822;
                                                };
                                            })(), Pair$snd);
                                            var _ctx2$24 = Kindelia$extend$(_context$1, _nams$22, _typs$23);
                                            var $3815 = Kindelia$check$(_ctx2$24, _world$2, _case_body$20, _type$4, _caller$5);
                                            return $3815;
                                        }));
                                        var $3814 = (_size$18 && List$and$(_cses$20));
                                        var $3812 = $3814;
                                        break;
                                };
                                var $3810 = $3812;
                                break;
                            case 'Maybe.none':
                                var $3823 = Bool$false;
                                var $3810 = $3823;
                                break;
                        };
                        var $3761 = $3810;
                        break;
                    case 'Kindelia.Term.compare':
                        var $3824 = self.val0;
                        var $3825 = self.val1;
                        var $3826 = self.iflt;
                        var $3827 = self.ifeq;
                        var $3828 = self.ifgt;
                        var _val0$16 = Kindelia$check$(_context$1, _world$2, $3824, Kindelia$Type$word, _caller$5);
                        var _val1$17 = Kindelia$check$(_context$1, _world$2, $3825, Kindelia$Type$word, _caller$5);
                        var _iflt$18 = Kindelia$check$(_context$1, _world$2, $3826, _type$4, _caller$5);
                        var _ifeq$19 = Kindelia$check$(_context$1, _world$2, $3827, _type$4, _caller$5);
                        var _ifgt$20 = Kindelia$check$(_context$1, _world$2, $3828, _type$4, _caller$5);
                        var $3829 = (_val0$16 && (_val1$17 && (_iflt$18 && (_ifeq$19 && _ifgt$20))));
                        var $3761 = $3829;
                        break;
                    case 'Kindelia.Term.operate':
                        var $3830 = self.val0;
                        var $3831 = self.val1;
                        var _val0$14 = Kindelia$check$(_context$1, _world$2, $3830, Kindelia$Type$word, _caller$5);
                        var _val1$15 = Kindelia$check$(_context$1, _world$2, $3831, Kindelia$Type$word, _caller$5);
                        var $3832 = (_val0$14 && _val1$15);
                        var $3761 = $3832;
                        break;
                    case 'Kindelia.Term.set':
                        var $3833 = self.file;
                        var $3834 = self.expr;
                        var $3835 = self.body;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3837 = Bool$false;
                                var $3836 = $3837;
                                break;
                            case 'Kindelia.Type.effe':
                                var self = Kindelia$get_file$(_world$2, $3833);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3839 = self.value;
                                        var _file$16 = $3839;
                                        var self = _file$16;
                                        switch (self._) {
                                            case 'Kindelia.File.new':
                                                var $3841 = self.ownr;
                                                var $3842 = self.type;
                                                var _empty$21 = List$is_empty$($3841);
                                                var _valid$22 = Maybe$if$((_x$22 => {
                                                    var $3844 = List$in$(a1 => (_x$22 === a1), $3841);
                                                    return $3844;
                                                }), _caller$5);
                                                var _ownr$23 = (_empty$21 || _valid$22);
                                                var _expr$24 = Kindelia$check$(_context$1, _world$2, $3834, $3842, _caller$5);
                                                var _body$25 = Kindelia$check$(_context$1, _world$2, $3835, _type$4, _caller$5);
                                                var $3843 = (_ownr$23 && (_expr$24 && _body$25));
                                                var $3840 = $3843;
                                                break;
                                        };
                                        var $3838 = $3840;
                                        break;
                                    case 'Maybe.none':
                                        var $3845 = Bool$false;
                                        var $3838 = $3845;
                                        break;
                                };
                                var $3836 = $3838;
                                break;
                        };
                        var $3761 = $3836;
                        break;
                    case 'Kindelia.Term.get':
                        var $3846 = self.name;
                        var $3847 = self.file;
                        var $3848 = self.body;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3850 = Bool$false;
                                var $3849 = $3850;
                                break;
                            case 'Kindelia.Type.effe':
                                var self = Kindelia$get_file$(_world$2, $3847);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3852 = self.value;
                                        var _file$16 = $3852;
                                        var self = _file$16;
                                        switch (self._) {
                                            case 'Kindelia.File.new':
                                                var $3854 = self.type;
                                                var _ctx2$21 = Kindelia$extend$(_context$1, List$cons$($3846, List$nil), List$cons$($3854, List$nil));
                                                var _body$22 = Kindelia$check$(_ctx2$21, _world$2, $3848, _type$4, _caller$5);
                                                var $3855 = _body$22;
                                                var $3853 = $3855;
                                                break;
                                        };
                                        var $3851 = $3853;
                                        break;
                                    case 'Maybe.none':
                                        var $3856 = Bool$false;
                                        var $3851 = $3856;
                                        break;
                                };
                                var $3849 = $3851;
                                break;
                        };
                        var $3761 = $3849;
                        break;
                    case 'Kindelia.Term.bind':
                        var $3857 = self.name;
                        var $3858 = self.type;
                        var $3859 = self.expr;
                        var $3860 = self.body;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3862 = Bool$false;
                                var $3861 = $3862;
                                break;
                            case 'Kindelia.Type.effe':
                                var _expr$16 = Kindelia$check$(_context$1, _world$2, $3859, Kindelia$Type$effe$($3858), _caller$5);
                                var _ctx2$17 = Map$set$($3857, $3858, _context$1);
                                var _body$18 = Kindelia$check$(_ctx2$17, _world$2, $3860, _type$4, _caller$5);
                                var $3863 = (_expr$16 && _body$18);
                                var $3861 = $3863;
                                break;
                        };
                        var $3761 = $3861;
                        break;
                    case 'Kindelia.Term.return':
                        var $3864 = self.expr;
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.effe':
                                var $3866 = self.rety;
                                var $3867 = Kindelia$check$(_context$1, _world$2, $3864, $3866, _caller$5);
                                var $3865 = $3867;
                                break;
                            case 'Kindelia.Type.word':
                            case 'Kindelia.Type.data':
                                var $3868 = Bool$false;
                                var $3865 = $3868;
                                break;
                        };
                        var $3761 = $3865;
                        break;
                    case 'Kindelia.Term.word':
                        var self = _type$4;
                        switch (self._) {
                            case 'Kindelia.Type.word':
                                var $3870 = Bool$true;
                                var $3869 = $3870;
                                break;
                            case 'Kindelia.Type.data':
                            case 'Kindelia.Type.effe':
                                var $3871 = Bool$false;
                                var $3869 = $3871;
                                break;
                        };
                        var $3761 = $3869;
                        break;
                };
                var $3649 = $3761;
                break;
        };
        return $3649;
    };
    const Kindelia$check = x0 => x1 => x2 => x3 => x4 => Kindelia$check$(x0, x1, x2, x3, x4);

    function Kindelia$Entry$file$(_value$1) {
        var $3872 = ({
            _: 'Kindelia.Entry.file',
            'value': _value$1
        });
        return $3872;
    };
    const Kindelia$Entry$file = x0 => Kindelia$Entry$file$(x0);

    function Kindelia$sanitize$many$(_world$1, _table$2, _fresh$3, _terms$4) {
        var self = _terms$4;
        switch (self._) {
            case 'List.cons':
                var $3874 = self.head;
                var $3875 = self.tail;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3874);
                switch (self._) {
                    case 'Pair.new':
                        var $3877 = self.fst;
                        var $3878 = self.snd;
                        var self = Kindelia$sanitize$many$(_world$1, _table$2, $3877, $3875);
                        switch (self._) {
                            case 'Pair.new':
                                var $3880 = self.fst;
                                var $3881 = self.snd;
                                var $3882 = Pair$new$($3880, List$cons$($3878, $3881));
                                var $3879 = $3882;
                                break;
                        };
                        var $3876 = $3879;
                        break;
                };
                var $3873 = $3876;
                break;
            case 'List.nil':
                var $3883 = Pair$new$(_fresh$3, List$nil);
                var $3873 = $3883;
                break;
        };
        return $3873;
    };
    const Kindelia$sanitize$many = x0 => x1 => x2 => x3 => Kindelia$sanitize$many$(x0, x1, x2, x3);

    function Triple$new$(_fst$4, _snd$5, _trd$6) {
        var $3884 = ({
            _: 'Triple.new',
            'fst': _fst$4,
            'snd': _snd$5,
            'trd': _trd$6
        });
        return $3884;
    };
    const Triple$new = x0 => x1 => x2 => Triple$new$(x0, x1, x2);

    function Kindelia$rename$(_table$1, _fresh$2, _old_name$3) {
        var _new_name$4 = ("$" + Nat$show$(_fresh$2));
        var _table$5 = Map$set$(_old_name$3, _new_name$4, _table$1);
        var _fresh$6 = Nat$succ$(_fresh$2);
        var $3885 = Triple$new$(_table$5, _fresh$6, _new_name$4);
        return $3885;
    };
    const Kindelia$rename = x0 => x1 => x2 => Kindelia$rename$(x0, x1, x2);
    const List$for = a0 => a1 => a2 => (list_for(a0)(a1)(a2));

    function Kindelia$sanitize$cases$(_world$1, _table$2, _fresh$3, _old_name$4, _new_name$5, _ctrs$6, _cses$7) {
        var self = _ctrs$6;
        switch (self._) {
            case 'List.cons':
                var $3887 = self.head;
                var $3888 = self.tail;
                var self = _cses$7;
                switch (self._) {
                    case 'List.cons':
                        var $3890 = self.head;
                        var $3891 = self.tail;
                        var _new_table$12 = _table$2;
                        var _new_table$13 = (() => {
                            var $3894 = _new_table$12;
                            var self = $3887;
                            switch (self._) {
                                case 'Kindelia.Constructor.new':
                                    var $3896 = self.args;
                                    var $3897 = $3896;
                                    var $3895 = $3897;
                                    break;
                            };
                            let _new_table$14 = $3894;
                            let _field$13;
                            while ($3895._ === 'List.cons') {
                                _field$13 = $3895.head;
                                var $3894 = Map$set$((_old_name$4 + ("." + (() => {
                                    var self = _field$13;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3898 = self.fst;
                                            var $3899 = $3898;
                                            return $3899;
                                    };
                                })())), (_new_name$5 + ("." + (() => {
                                    var self = _field$13;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3900 = self.fst;
                                            var $3901 = $3900;
                                            return $3901;
                                    };
                                })())), _new_table$14);
                                _new_table$14 = $3894;
                                $3895 = $3895.tail;
                            }
                            return _new_table$14;
                        })();
                        var self = Kindelia$sanitize$(_world$1, _new_table$13, _fresh$3, $3890);
                        switch (self._) {
                            case 'Pair.new':
                                var $3902 = self.fst;
                                var $3903 = self.snd;
                                var self = Kindelia$sanitize$cases$(_world$1, _table$2, $3902, _old_name$4, _new_name$5, $3888, $3891);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3905 = self.fst;
                                        var $3906 = self.snd;
                                        var $3907 = Pair$new$($3905, List$cons$($3903, $3906));
                                        var $3904 = $3907;
                                        break;
                                };
                                var $3892 = $3904;
                                break;
                        };
                        var $3889 = $3892;
                        break;
                    case 'List.nil':
                        var $3908 = Pair$new$(_fresh$3, List$nil);
                        var $3889 = $3908;
                        break;
                };
                var $3886 = $3889;
                break;
            case 'List.nil':
                var self = _cses$7;
                switch (self._) {
                    case 'List.nil':
                    case 'List.cons':
                        var $3910 = Pair$new$(_fresh$3, List$nil);
                        var $3909 = $3910;
                        break;
                };
                var $3886 = $3909;
                break;
        };
        return $3886;
    };
    const Kindelia$sanitize$cases = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kindelia$sanitize$cases$(x0, x1, x2, x3, x4, x5, x6);

    function Kindelia$sanitize$(_world$1, _table$2, _fresh$3, _term$4) {
        var self = _term$4;
        switch (self._) {
            case 'Kindelia.Term.var':
                var $3912 = self.name;
                var _term$6 = Kindelia$Term$var$(Maybe$default$(Map$get$($3912, _table$2), $3912));
                var $3913 = Pair$new$(_fresh$3, _term$6);
                var $3911 = $3913;
                break;
            case 'Kindelia.Term.call':
                var $3914 = self.bond;
                var $3915 = self.args;
                var self = Kindelia$sanitize$many$(_world$1, _table$2, _fresh$3, $3915);
                switch (self._) {
                    case 'Pair.new':
                        var $3917 = self.fst;
                        var $3918 = self.snd;
                        var $3919 = Pair$new$($3917, Kindelia$Term$call$($3914, $3918));
                        var $3916 = $3919;
                        break;
                };
                var $3911 = $3916;
                break;
            case 'Kindelia.Term.let':
                var $3920 = self.name;
                var $3921 = self.type;
                var $3922 = self.expr;
                var $3923 = self.body;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3922);
                switch (self._) {
                    case 'Pair.new':
                        var $3925 = self.fst;
                        var $3926 = self.snd;
                        var self = Kindelia$rename$(_table$2, $3925, $3920);
                        switch (self._) {
                            case 'Triple.new':
                                var $3928 = self.fst;
                                var $3929 = self.snd;
                                var $3930 = self.trd;
                                var self = Kindelia$sanitize$(_world$1, $3928, $3929, $3923);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3932 = self.fst;
                                        var $3933 = self.snd;
                                        var $3934 = Pair$new$($3932, Kindelia$Term$let$($3930, $3921, $3926, $3933));
                                        var $3931 = $3934;
                                        break;
                                };
                                var $3927 = $3931;
                                break;
                        };
                        var $3924 = $3927;
                        break;
                };
                var $3911 = $3924;
                break;
            case 'Kindelia.Term.create':
                var $3935 = self.ctor;
                var $3936 = self.vals;
                var self = Kindelia$sanitize$many$(_world$1, _table$2, _fresh$3, $3936);
                switch (self._) {
                    case 'Pair.new':
                        var $3938 = self.fst;
                        var $3939 = self.snd;
                        var $3940 = Pair$new$($3938, Kindelia$Term$create$($3935, $3939));
                        var $3937 = $3940;
                        break;
                };
                var $3911 = $3937;
                break;
            case 'Kindelia.Term.match':
                var $3941 = self.name;
                var $3942 = self.data;
                var $3943 = self.cses;
                var _ctrs$8 = Maybe$default$(Kindelia$get_constructors$(_world$1, $3942), List$nil);
                var _old_name$9 = $3941;
                var _new_name$10 = Maybe$default$(Map$get$($3941, _table$2), $3941);
                var self = Kindelia$sanitize$cases$(_world$1, _table$2, _fresh$3, _old_name$9, _new_name$10, _ctrs$8, $3943);
                switch (self._) {
                    case 'Pair.new':
                        var $3945 = self.fst;
                        var $3946 = self.snd;
                        var $3947 = Pair$new$($3945, Kindelia$Term$match$(_new_name$10, $3942, $3946));
                        var $3944 = $3947;
                        break;
                };
                var $3911 = $3944;
                break;
            case 'Kindelia.Term.word':
                var $3948 = self.numb;
                var $3949 = Pair$new$(_fresh$3, Kindelia$Term$word$($3948));
                var $3911 = $3949;
                break;
            case 'Kindelia.Term.compare':
                var $3950 = self.val0;
                var $3951 = self.val1;
                var $3952 = self.iflt;
                var $3953 = self.ifeq;
                var $3954 = self.ifgt;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3950);
                switch (self._) {
                    case 'Pair.new':
                        var $3956 = self.fst;
                        var $3957 = self.snd;
                        var self = Kindelia$sanitize$(_world$1, _table$2, $3956, $3951);
                        switch (self._) {
                            case 'Pair.new':
                                var $3959 = self.fst;
                                var $3960 = self.snd;
                                var self = Kindelia$sanitize$(_world$1, _table$2, $3959, $3952);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3962 = self.fst;
                                        var $3963 = self.snd;
                                        var self = Kindelia$sanitize$(_world$1, _table$2, $3962, $3953);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3965 = self.fst;
                                                var $3966 = self.snd;
                                                var self = Kindelia$sanitize$(_world$1, _table$2, $3965, $3954);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3968 = self.fst;
                                                        var $3969 = self.snd;
                                                        var $3970 = Pair$new$($3968, Kindelia$Term$compare$($3957, $3960, $3963, $3966, $3969));
                                                        var $3967 = $3970;
                                                        break;
                                                };
                                                var $3964 = $3967;
                                                break;
                                        };
                                        var $3961 = $3964;
                                        break;
                                };
                                var $3958 = $3961;
                                break;
                        };
                        var $3955 = $3958;
                        break;
                };
                var $3911 = $3955;
                break;
            case 'Kindelia.Term.operate':
                var $3971 = self.oper;
                var $3972 = self.val0;
                var $3973 = self.val1;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3972);
                switch (self._) {
                    case 'Pair.new':
                        var $3975 = self.fst;
                        var $3976 = self.snd;
                        var self = Kindelia$sanitize$(_world$1, _table$2, $3975, $3973);
                        switch (self._) {
                            case 'Pair.new':
                                var $3978 = self.fst;
                                var $3979 = self.snd;
                                var $3980 = Pair$new$($3978, Kindelia$Term$operate$($3971, $3976, $3979));
                                var $3977 = $3980;
                                break;
                        };
                        var $3974 = $3977;
                        break;
                };
                var $3911 = $3974;
                break;
            case 'Kindelia.Term.set':
                var $3981 = self.file;
                var $3982 = self.expr;
                var $3983 = self.body;
                var self = Kindelia$get_file$(_world$1, $3981);
                switch (self._) {
                    case 'Maybe.some':
                        var $3985 = self.value;
                        var _file$9 = $3985;
                        var self = _file$9;
                        switch (self._) {
                            case 'Kindelia.File.new':
                                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $3982);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3988 = self.fst;
                                        var $3989 = self.snd;
                                        var self = Kindelia$sanitize$(_world$1, _table$2, $3988, $3983);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3991 = self.fst;
                                                var $3992 = self.snd;
                                                var $3993 = Pair$new$($3991, Kindelia$Term$set$($3981, $3989, $3992));
                                                var $3990 = $3993;
                                                break;
                                        };
                                        var $3987 = $3990;
                                        break;
                                };
                                var $3986 = $3987;
                                break;
                        };
                        var $3984 = $3986;
                        break;
                    case 'Maybe.none':
                        var $3994 = Pair$new$(_fresh$3, _term$4);
                        var $3984 = $3994;
                        break;
                };
                var $3911 = $3984;
                break;
            case 'Kindelia.Term.get':
                var $3995 = self.name;
                var $3996 = self.file;
                var $3997 = self.body;
                var self = Kindelia$get_file$(_world$1, $3996);
                switch (self._) {
                    case 'Maybe.some':
                        var $3999 = self.value;
                        var _file$9 = $3999;
                        var self = _file$9;
                        switch (self._) {
                            case 'Kindelia.File.new':
                                var self = Kindelia$rename$(_table$2, _fresh$3, $3995);
                                switch (self._) {
                                    case 'Triple.new':
                                        var $4002 = self.fst;
                                        var $4003 = self.snd;
                                        var $4004 = self.trd;
                                        var self = Kindelia$sanitize$(_world$1, $4002, $4003, $3997);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $4006 = self.fst;
                                                var $4007 = self.snd;
                                                var $4008 = Pair$new$($4006, Kindelia$Term$get$($4004, $3996, $4007));
                                                var $4005 = $4008;
                                                break;
                                        };
                                        var $4001 = $4005;
                                        break;
                                };
                                var $4000 = $4001;
                                break;
                        };
                        var $3998 = $4000;
                        break;
                    case 'Maybe.none':
                        var $4009 = Pair$new$(_fresh$3, _term$4);
                        var $3998 = $4009;
                        break;
                };
                var $3911 = $3998;
                break;
            case 'Kindelia.Term.bind':
                var $4010 = self.name;
                var $4011 = self.type;
                var $4012 = self.expr;
                var $4013 = self.body;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $4012);
                switch (self._) {
                    case 'Pair.new':
                        var $4015 = self.fst;
                        var $4016 = self.snd;
                        var self = Kindelia$rename$(_table$2, $4015, $4010);
                        switch (self._) {
                            case 'Triple.new':
                                var $4018 = self.fst;
                                var $4019 = self.snd;
                                var $4020 = self.trd;
                                var self = Kindelia$sanitize$(_world$1, $4018, $4019, $4013);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $4022 = self.fst;
                                        var $4023 = self.snd;
                                        var $4024 = Pair$new$($4022, Kindelia$Term$bind$($4020, $4011, $4016, $4023));
                                        var $4021 = $4024;
                                        break;
                                };
                                var $4017 = $4021;
                                break;
                        };
                        var $4014 = $4017;
                        break;
                };
                var $3911 = $4014;
                break;
            case 'Kindelia.Term.return':
                var $4025 = self.expr;
                var self = Kindelia$sanitize$(_world$1, _table$2, _fresh$3, $4025);
                switch (self._) {
                    case 'Pair.new':
                        var $4027 = self.fst;
                        var $4028 = self.snd;
                        var $4029 = Pair$new$($4027, Kindelia$Term$return$($4028));
                        var $4026 = $4029;
                        break;
                };
                var $3911 = $4026;
                break;
        };
        return $3911;
    };
    const Kindelia$sanitize = x0 => x1 => x2 => x3 => Kindelia$sanitize$(x0, x1, x2, x3);

    function Kindelia$Runtime$(_A$1) {
        var $4030 = null;
        return $4030;
    };
    const Kindelia$Runtime = x0 => Kindelia$Runtime$(x0);

    function Kindelia$Runtime$new$(_world$2, _subst$3, _fresh$4, _gas$5, _term$6) {
        var $4031 = ({
            _: 'Kindelia.Runtime.new',
            'world': _world$2,
            'subst': _subst$3,
            'fresh': _fresh$4,
            'gas': _gas$5,
            'term': _term$6
        });
        return $4031;
    };
    const Kindelia$Runtime$new = x0 => x1 => x2 => x3 => x4 => Kindelia$Runtime$new$(x0, x1, x2, x3, x4);

    function Triple$(_A$1, _B$2, _C$3) {
        var $4032 = null;
        return $4032;
    };
    const Triple = x0 => x1 => x2 => Triple$(x0, x1, x2);

    function Kindelia$rename$many$(_table$1, _fresh$2, _names$3) {
        var self = _names$3;
        switch (self._) {
            case 'List.cons':
                var $4034 = self.head;
                var $4035 = self.tail;
                var self = Kindelia$rename$(_table$1, _fresh$2, $4034);
                switch (self._) {
                    case 'Triple.new':
                        var $4037 = self.fst;
                        var $4038 = self.snd;
                        var $4039 = self.trd;
                        var self = Kindelia$rename$many$($4037, $4038, $4035);
                        switch (self._) {
                            case 'Triple.new':
                                var $4041 = self.fst;
                                var $4042 = self.snd;
                                var $4043 = self.trd;
                                var $4044 = Triple$new$($4041, $4042, List$cons$($4039, $4043));
                                var $4040 = $4044;
                                break;
                        };
                        var $4036 = $4040;
                        break;
                };
                var $4033 = $4036;
                break;
            case 'List.nil':
                var $4045 = Triple$new$(_table$1, _fresh$2, List$nil);
                var $4033 = $4045;
                break;
        };
        return $4033;
    };
    const Kindelia$rename$many = x0 => x1 => x2 => Kindelia$rename$many$(x0, x1, x2);
    const U64$ltn = a0 => a1 => (a0 < a1);
    const U64$eql = a0 => a1 => (a0 === a1);

    function U64$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $4047 = Cmp$ltn;
            var $4046 = $4047;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $4049 = Cmp$eql;
                var $4048 = $4049;
            } else {
                var $4050 = Cmp$gtn;
                var $4048 = $4050;
            };
            var $4046 = $4048;
        };
        return $4046;
    };
    const U64$cmp = x0 => x1 => U64$cmp$(x0, x1);
    const U64$add = a0 => a1 => ((a0 + a1) & 0xFFFFFFFFFFFFFFFFn);
    const U64$sub = a0 => a1 => ((a0 - a1) & 0xFFFFFFFFFFFFFFFFn);
    const U64$mul = a0 => a1 => ((a0 * a1) & 0xFFFFFFFFFFFFFFFFn);

    function Word$bit_length$go$(_word$2, _c$3, _n$4) {
        var Word$bit_length$go$ = (_word$2, _c$3, _n$4) => ({
            ctr: 'TCO',
            arg: [_word$2, _c$3, _n$4]
        });
        var Word$bit_length$go = _word$2 => _c$3 => _n$4 => Word$bit_length$go$(_word$2, _c$3, _n$4);
        var arg = [_word$2, _c$3, _n$4];
        while (true) {
            let [_word$2, _c$3, _n$4] = arg;
            var R = (() => {
                var self = _word$2;
                switch (self._) {
                    case 'Word.o':
                        var $4051 = self.pred;
                        var $4052 = Word$bit_length$go$($4051, Nat$succ$(_c$3), _n$4);
                        return $4052;
                    case 'Word.i':
                        var $4053 = self.pred;
                        var $4054 = Word$bit_length$go$($4053, Nat$succ$(_c$3), Nat$succ$(_c$3));
                        return $4054;
                    case 'Word.e':
                        var $4055 = _n$4;
                        return $4055;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$bit_length$go = x0 => x1 => x2 => Word$bit_length$go$(x0, x1, x2);

    function Word$bit_length$(_word$2) {
        var $4056 = Word$bit_length$go$(_word$2, 0n, 0n);
        return $4056;
    };
    const Word$bit_length = x0 => Word$bit_length$(x0);

    function Cmp$as_gte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $4058 = Bool$false;
                var $4057 = $4058;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $4059 = Bool$true;
                var $4057 = $4059;
                break;
        };
        return $4057;
    };
    const Cmp$as_gte = x0 => Cmp$as_gte$(x0);

    function Word$gte$(_a$2, _b$3) {
        var $4060 = Cmp$as_gte$(Word$cmp$(_a$2, _b$3));
        return $4060;
    };
    const Word$gte = x0 => x1 => Word$gte$(x0, x1);

    function Word$or$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $4062 = self.pred;
                var $4063 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4065 = self.pred;
                            var $4066 = (_a$pred$9 => {
                                var $4067 = Word$o$(Word$or$(_a$pred$9, $4065));
                                return $4067;
                            });
                            var $4064 = $4066;
                            break;
                        case 'Word.i':
                            var $4068 = self.pred;
                            var $4069 = (_a$pred$9 => {
                                var $4070 = Word$i$(Word$or$(_a$pred$9, $4068));
                                return $4070;
                            });
                            var $4064 = $4069;
                            break;
                        case 'Word.e':
                            var $4071 = (_a$pred$7 => {
                                var $4072 = Word$e;
                                return $4072;
                            });
                            var $4064 = $4071;
                            break;
                    };
                    var $4064 = $4064($4062);
                    return $4064;
                });
                var $4061 = $4063;
                break;
            case 'Word.i':
                var $4073 = self.pred;
                var $4074 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4076 = self.pred;
                            var $4077 = (_a$pred$9 => {
                                var $4078 = Word$i$(Word$or$(_a$pred$9, $4076));
                                return $4078;
                            });
                            var $4075 = $4077;
                            break;
                        case 'Word.i':
                            var $4079 = self.pred;
                            var $4080 = (_a$pred$9 => {
                                var $4081 = Word$i$(Word$or$(_a$pred$9, $4079));
                                return $4081;
                            });
                            var $4075 = $4080;
                            break;
                        case 'Word.e':
                            var $4082 = (_a$pred$7 => {
                                var $4083 = Word$e;
                                return $4083;
                            });
                            var $4075 = $4082;
                            break;
                    };
                    var $4075 = $4075($4073);
                    return $4075;
                });
                var $4061 = $4074;
                break;
            case 'Word.e':
                var $4084 = (_b$4 => {
                    var $4085 = Word$e;
                    return $4085;
                });
                var $4061 = $4084;
                break;
        };
        var $4061 = $4061(_b$3);
        return $4061;
    };
    const Word$or = x0 => x1 => Word$or$(x0, x1);

    function Word$shift_right$one$go$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $4087 = self.pred;
                var $4088 = Word$o$(Word$shift_right$one$go$($4087));
                var $4086 = $4088;
                break;
            case 'Word.i':
                var $4089 = self.pred;
                var $4090 = Word$i$(Word$shift_right$one$go$($4089));
                var $4086 = $4090;
                break;
            case 'Word.e':
                var $4091 = Word$o$(Word$e);
                var $4086 = $4091;
                break;
        };
        return $4086;
    };
    const Word$shift_right$one$go = x0 => Word$shift_right$one$go$(x0);

    function Word$shift_right$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $4093 = self.pred;
                var $4094 = Word$shift_right$one$go$($4093);
                var $4092 = $4094;
                break;
            case 'Word.i':
                var $4095 = self.pred;
                var $4096 = Word$shift_right$one$go$($4095);
                var $4092 = $4096;
                break;
            case 'Word.e':
                var $4097 = Word$e;
                var $4092 = $4097;
                break;
        };
        return $4092;
    };
    const Word$shift_right$one = x0 => Word$shift_right$one$(x0);

    function Word$shift_right$(_value$2, _n$3) {
        var Word$shift_right$ = (_value$2, _n$3) => ({
            ctr: 'TCO',
            arg: [_value$2, _n$3]
        });
        var Word$shift_right = _value$2 => _n$3 => Word$shift_right$(_value$2, _n$3);
        var arg = [_value$2, _n$3];
        while (true) {
            let [_value$2, _n$3] = arg;
            var R = (() => {
                var self = _n$3;
                if (self === 0n) {
                    var $4098 = _value$2;
                    return $4098;
                } else {
                    var $4099 = (self - 1n);
                    var $4100 = Word$shift_right$(Word$shift_right$one$(_value$2), $4099);
                    return $4100;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_right = x0 => x1 => Word$shift_right$(x0, x1);

    function Word$div$go$(_shift$2, _sub_copy$3, _shift_copy$4, _value$5) {
        var Word$div$go$ = (_shift$2, _sub_copy$3, _shift_copy$4, _value$5) => ({
            ctr: 'TCO',
            arg: [_shift$2, _sub_copy$3, _shift_copy$4, _value$5]
        });
        var Word$div$go = _shift$2 => _sub_copy$3 => _shift_copy$4 => _value$5 => Word$div$go$(_shift$2, _sub_copy$3, _shift_copy$4, _value$5);
        var arg = [_shift$2, _sub_copy$3, _shift_copy$4, _value$5];
        while (true) {
            let [_shift$2, _sub_copy$3, _shift_copy$4, _value$5] = arg;
            var R = (() => {
                var self = Word$gte$(_sub_copy$3, _shift_copy$4);
                if (self) {
                    var _mask$6 = Word$shift_left$(Word$inc$(Word$to_zero$(_sub_copy$3)), _shift$2);
                    var $4101 = Pair$new$(Bool$true, Word$or$(_value$5, _mask$6));
                    var self = $4101;
                } else {
                    var $4102 = Pair$new$(Bool$false, _value$5);
                    var self = $4102;
                };
                switch (self._) {
                    case 'Pair.new':
                        var $4103 = self.fst;
                        var $4104 = self.snd;
                        var self = _shift$2;
                        if (self === 0n) {
                            var $4106 = $4104;
                            var $4105 = $4106;
                        } else {
                            var $4107 = (self - 1n);
                            var _new_shift_copy$9 = Word$shift_right$(_shift_copy$4, 1n);
                            var self = $4103;
                            if (self) {
                                var $4109 = Word$div$go$($4107, Word$sub$(_sub_copy$3, _shift_copy$4), _new_shift_copy$9, $4104);
                                var $4108 = $4109;
                            } else {
                                var $4110 = Word$div$go$($4107, _sub_copy$3, _new_shift_copy$9, $4104);
                                var $4108 = $4110;
                            };
                            var $4105 = $4108;
                        };
                        return $4105;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$div$go = x0 => x1 => x2 => x3 => Word$div$go$(x0, x1, x2, x3);

    function Word$div$(_a$2, _b$3) {
        var _a_bits$4 = Word$bit_length$(_a$2);
        var _b_bits$5 = Word$bit_length$(_b$3);
        var self = (_a_bits$4 < _b_bits$5);
        if (self) {
            var $4112 = Word$to_zero$(_a$2);
            var $4111 = $4112;
        } else {
            var _shift$6 = (_a_bits$4 - _b_bits$5 <= 0n ? 0n : _a_bits$4 - _b_bits$5);
            var _shift_copy$7 = Word$shift_left$(_b$3, _shift$6);
            var $4113 = Word$div$go$(_shift$6, _a$2, _shift_copy$7, Word$to_zero$(_a$2));
            var $4111 = $4113;
        };
        return $4111;
    };
    const Word$div = x0 => x1 => Word$div$(x0, x1);
    const U64$div = a0 => a1 => ((a0 / a1) & 0xFFFFFFFFFFFFFFFFn);

    function Word$mod$(_a$2, _b$3) {
        var _q$4 = Word$div$(_a$2, _b$3);
        var $4114 = Word$sub$(_a$2, Word$mul$(_b$3, _q$4));
        return $4114;
    };
    const Word$mod = x0 => x1 => Word$mod$(x0, x1);
    const U64$mod = a0 => a1 => (a0 % a1);
    const U64$or = a0 => a1 => (a0 | a1);

    function Word$and$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $4116 = self.pred;
                var $4117 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4119 = self.pred;
                            var $4120 = (_a$pred$9 => {
                                var $4121 = Word$o$(Word$and$(_a$pred$9, $4119));
                                return $4121;
                            });
                            var $4118 = $4120;
                            break;
                        case 'Word.i':
                            var $4122 = self.pred;
                            var $4123 = (_a$pred$9 => {
                                var $4124 = Word$o$(Word$and$(_a$pred$9, $4122));
                                return $4124;
                            });
                            var $4118 = $4123;
                            break;
                        case 'Word.e':
                            var $4125 = (_a$pred$7 => {
                                var $4126 = Word$e;
                                return $4126;
                            });
                            var $4118 = $4125;
                            break;
                    };
                    var $4118 = $4118($4116);
                    return $4118;
                });
                var $4115 = $4117;
                break;
            case 'Word.i':
                var $4127 = self.pred;
                var $4128 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4130 = self.pred;
                            var $4131 = (_a$pred$9 => {
                                var $4132 = Word$o$(Word$and$(_a$pred$9, $4130));
                                return $4132;
                            });
                            var $4129 = $4131;
                            break;
                        case 'Word.i':
                            var $4133 = self.pred;
                            var $4134 = (_a$pred$9 => {
                                var $4135 = Word$i$(Word$and$(_a$pred$9, $4133));
                                return $4135;
                            });
                            var $4129 = $4134;
                            break;
                        case 'Word.e':
                            var $4136 = (_a$pred$7 => {
                                var $4137 = Word$e;
                                return $4137;
                            });
                            var $4129 = $4136;
                            break;
                    };
                    var $4129 = $4129($4127);
                    return $4129;
                });
                var $4115 = $4128;
                break;
            case 'Word.e':
                var $4138 = (_b$4 => {
                    var $4139 = Word$e;
                    return $4139;
                });
                var $4115 = $4138;
                break;
        };
        var $4115 = $4115(_b$3);
        return $4115;
    };
    const Word$and = x0 => x1 => Word$and$(x0, x1);
    const U64$and = a0 => a1 => (a0 & a1);

    function Word$xor$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $4141 = self.pred;
                var $4142 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4144 = self.pred;
                            var $4145 = (_a$pred$9 => {
                                var $4146 = Word$o$(Word$xor$(_a$pred$9, $4144));
                                return $4146;
                            });
                            var $4143 = $4145;
                            break;
                        case 'Word.i':
                            var $4147 = self.pred;
                            var $4148 = (_a$pred$9 => {
                                var $4149 = Word$i$(Word$xor$(_a$pred$9, $4147));
                                return $4149;
                            });
                            var $4143 = $4148;
                            break;
                        case 'Word.e':
                            var $4150 = (_a$pred$7 => {
                                var $4151 = Word$e;
                                return $4151;
                            });
                            var $4143 = $4150;
                            break;
                    };
                    var $4143 = $4143($4141);
                    return $4143;
                });
                var $4140 = $4142;
                break;
            case 'Word.i':
                var $4152 = self.pred;
                var $4153 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $4155 = self.pred;
                            var $4156 = (_a$pred$9 => {
                                var $4157 = Word$i$(Word$xor$(_a$pred$9, $4155));
                                return $4157;
                            });
                            var $4154 = $4156;
                            break;
                        case 'Word.i':
                            var $4158 = self.pred;
                            var $4159 = (_a$pred$9 => {
                                var $4160 = Word$o$(Word$xor$(_a$pred$9, $4158));
                                return $4160;
                            });
                            var $4154 = $4159;
                            break;
                        case 'Word.e':
                            var $4161 = (_a$pred$7 => {
                                var $4162 = Word$e;
                                return $4162;
                            });
                            var $4154 = $4161;
                            break;
                    };
                    var $4154 = $4154($4152);
                    return $4154;
                });
                var $4140 = $4153;
                break;
            case 'Word.e':
                var $4163 = (_b$4 => {
                    var $4164 = Word$e;
                    return $4164;
                });
                var $4140 = $4163;
                break;
        };
        var $4140 = $4140(_b$3);
        return $4140;
    };
    const Word$xor = x0 => x1 => Word$xor$(x0, x1);
    const U64$xor = a0 => a1 => (a0 ^ a1);

    function Kindelia$reduce$(_state$1) {
        var self = _state$1;
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4166 = self.world;
                var $4167 = self.subst;
                var $4168 = self.fresh;
                var $4169 = self.gas;
                var $4170 = self.term;
                var self = $4170;
                switch (self._) {
                    case 'Kindelia.Term.var':
                        var $4172 = self.name;
                        var _term$8 = Maybe$default$(Map$get$($4172, $4167), $4170);
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4166, $4167, $4168, $4169, _term$8));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4174 = self.world;
                                var $4175 = self.subst;
                                var $4176 = self.fresh;
                                var $4177 = self.gas;
                                var $4178 = self.term;
                                var $4179 = Kindelia$Runtime$new$($4174, Map$set$($4172, $4178, $4175), $4176, $4177, $4178);
                                var $4173 = $4179;
                                break;
                        };
                        var $4171 = $4173;
                        break;
                    case 'Kindelia.Term.call':
                        var $4180 = self.bond;
                        var $4181 = self.args;
                        var self = Kindelia$get_bond$($4166, $4180);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4183 = self.value;
                                var _bond$10 = $4183;
                                var self = _bond$10;
                                switch (self._) {
                                    case 'Kindelia.Bond.new':
                                        var $4185 = self.args;
                                        var $4186 = self.main;
                                        var _inam$15 = List$mapped$($4185, Pair$fst);
                                        var self = Kindelia$rename$many$(Map$from_list$(List$nil), $4168, _inam$15);
                                        switch (self._) {
                                            case 'Triple.new':
                                                var $4188 = self.fst;
                                                var $4189 = self.snd;
                                                var $4190 = self.trd;
                                                var self = Kindelia$sanitize$($4166, $4188, $4189, $4186);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $4192 = self.fst;
                                                        var $4193 = self.snd;
                                                        var _subst$21 = Kindelia$extend$($4167, $4190, $4181);
                                                        var $4194 = Kindelia$reduce$(Kindelia$Runtime$new$($4166, _subst$21, $4192, $4169, $4193));
                                                        var $4191 = $4194;
                                                        break;
                                                };
                                                var $4187 = $4191;
                                                break;
                                        };
                                        var $4184 = $4187;
                                        break;
                                };
                                var $4182 = $4184;
                                break;
                            case 'Maybe.none':
                                var $4195 = _state$1;
                                var $4182 = $4195;
                                break;
                        };
                        var $4171 = $4182;
                        break;
                    case 'Kindelia.Term.let':
                        var $4196 = self.name;
                        var $4197 = self.expr;
                        var $4198 = self.body;
                        var $4199 = Kindelia$reduce$(Kindelia$Runtime$new$($4166, Map$set$($4196, $4197, $4167), $4168, $4169, $4198));
                        var $4171 = $4199;
                        break;
                    case 'Kindelia.Term.match':
                        var $4200 = self.name;
                        var $4201 = self.data;
                        var $4202 = self.cses;
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4166, $4167, $4168, $4169, Maybe$default$(Map$get$($4200, $4167), Kindelia$Term$word$(0n))));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4204 = self.world;
                                var $4205 = self.subst;
                                var $4206 = self.fresh;
                                var $4207 = self.gas;
                                var $4208 = self.term;
                                var self = $4208;
                                switch (self._) {
                                    case 'Kindelia.Term.create':
                                        var $4210 = self.ctor;
                                        var $4211 = self.vals;
                                        var self = Kindelia$get_data$($4204, $4201);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $4213 = self.value;
                                                var _data$18 = $4213;
                                                var self = _data$18;
                                                switch (self._) {
                                                    case 'Kindelia.Data.new':
                                                        var $4215 = self.constructors;
                                                        var self = List$get$($4210, $4215);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $4217 = self.value;
                                                                var _ctor$22 = $4217;
                                                                var self = _ctor$22;
                                                                switch (self._) {
                                                                    case 'Kindelia.Constructor.new':
                                                                        var self = List$get$($4210, $4202);
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4220 = self.value;
                                                                                var _nams$26 = List$map$((_args$26 => {
                                                                                    var $4222 = ($4200 + ("." + (() => {
                                                                                        var self = _args$26;
                                                                                        switch (self._) {
                                                                                            case 'Pair.new':
                                                                                                var $4223 = self.fst;
                                                                                                var $4224 = $4223;
                                                                                                return $4224;
                                                                                        };
                                                                                    })()));
                                                                                    return $4222;
                                                                                }), (() => {
                                                                                    var self = _ctor$22;
                                                                                    switch (self._) {
                                                                                        case 'Kindelia.Constructor.new':
                                                                                            var $4225 = self.args;
                                                                                            var $4226 = $4225;
                                                                                            return $4226;
                                                                                    };
                                                                                })());
                                                                                var _subst$27 = Kindelia$extend$($4205, _nams$26, $4211);
                                                                                var $4221 = Kindelia$reduce$(Kindelia$Runtime$new$($4204, _subst$27, $4206, $4207, $4220));
                                                                                var $4219 = $4221;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4227 = _state$1;
                                                                                var $4219 = $4227;
                                                                                break;
                                                                        };
                                                                        var $4218 = $4219;
                                                                        break;
                                                                };
                                                                var $4216 = $4218;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $4228 = _state$1;
                                                                var $4216 = $4228;
                                                                break;
                                                        };
                                                        var $4214 = $4216;
                                                        break;
                                                };
                                                var $4212 = $4214;
                                                break;
                                            case 'Maybe.none':
                                                var $4229 = _state$1;
                                                var $4212 = $4229;
                                                break;
                                        };
                                        var $4209 = $4212;
                                        break;
                                    case 'Kindelia.Term.var':
                                    case 'Kindelia.Term.call':
                                    case 'Kindelia.Term.let':
                                    case 'Kindelia.Term.match':
                                    case 'Kindelia.Term.word':
                                    case 'Kindelia.Term.compare':
                                    case 'Kindelia.Term.operate':
                                    case 'Kindelia.Term.set':
                                    case 'Kindelia.Term.get':
                                    case 'Kindelia.Term.bind':
                                    case 'Kindelia.Term.return':
                                        var $4230 = _state$1;
                                        var $4209 = $4230;
                                        break;
                                };
                                var $4203 = $4209;
                                break;
                        };
                        var $4171 = $4203;
                        break;
                    case 'Kindelia.Term.compare':
                        var $4231 = self.val0;
                        var $4232 = self.val1;
                        var $4233 = self.iflt;
                        var $4234 = self.ifeq;
                        var $4235 = self.ifgt;
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4166, $4167, $4168, $4169, $4231));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4237 = self.world;
                                var $4238 = self.subst;
                                var $4239 = self.fresh;
                                var $4240 = self.gas;
                                var $4241 = self.term;
                                var self = Kindelia$reduce$(Kindelia$Runtime$new$($4237, $4238, $4239, $4240, $4232));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4243 = self.world;
                                        var $4244 = self.subst;
                                        var $4245 = self.fresh;
                                        var $4246 = self.gas;
                                        var $4247 = self.term;
                                        var self = $4241;
                                        switch (self._) {
                                            case 'Kindelia.Term.word':
                                                var $4249 = self.numb;
                                                var self = $4247;
                                                switch (self._) {
                                                    case 'Kindelia.Term.word':
                                                        var $4251 = self.numb;
                                                        var self = U64$cmp$($4249, $4251);
                                                        switch (self._) {
                                                            case 'Cmp.ltn':
                                                                var $4253 = Kindelia$reduce$(Kindelia$Runtime$new$($4243, $4244, $4245, $4246, $4233));
                                                                var $4252 = $4253;
                                                                break;
                                                            case 'Cmp.eql':
                                                                var $4254 = Kindelia$reduce$(Kindelia$Runtime$new$($4243, $4244, $4245, $4246, $4234));
                                                                var $4252 = $4254;
                                                                break;
                                                            case 'Cmp.gtn':
                                                                var $4255 = Kindelia$reduce$(Kindelia$Runtime$new$($4243, $4244, $4245, $4246, $4235));
                                                                var $4252 = $4255;
                                                                break;
                                                        };
                                                        var $4250 = $4252;
                                                        break;
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4256 = _state$1;
                                                        var $4250 = $4256;
                                                        break;
                                                };
                                                var $4248 = $4250;
                                                break;
                                            case 'Kindelia.Term.var':
                                            case 'Kindelia.Term.return':
                                                var self = $4247;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4258 = _state$1;
                                                        var $4257 = $4258;
                                                        break;
                                                };
                                                var $4248 = $4257;
                                                break;
                                            case 'Kindelia.Term.call':
                                            case 'Kindelia.Term.create':
                                                var self = $4247;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4260 = _state$1;
                                                        var $4259 = $4260;
                                                        break;
                                                };
                                                var $4248 = $4259;
                                                break;
                                            case 'Kindelia.Term.let':
                                            case 'Kindelia.Term.bind':
                                                var self = $4247;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4262 = _state$1;
                                                        var $4261 = $4262;
                                                        break;
                                                };
                                                var $4248 = $4261;
                                                break;
                                            case 'Kindelia.Term.match':
                                            case 'Kindelia.Term.operate':
                                            case 'Kindelia.Term.set':
                                            case 'Kindelia.Term.get':
                                                var self = $4247;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4264 = _state$1;
                                                        var $4263 = $4264;
                                                        break;
                                                };
                                                var $4248 = $4263;
                                                break;
                                            case 'Kindelia.Term.compare':
                                                var self = $4247;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4266 = _state$1;
                                                        var $4265 = $4266;
                                                        break;
                                                };
                                                var $4248 = $4265;
                                                break;
                                        };
                                        var $4242 = $4248;
                                        break;
                                };
                                var $4236 = $4242;
                                break;
                        };
                        var $4171 = $4236;
                        break;
                    case 'Kindelia.Term.operate':
                        var $4267 = self.oper;
                        var $4268 = self.val0;
                        var $4269 = self.val1;
                        var self = Kindelia$reduce$(Kindelia$Runtime$new$($4166, $4167, $4168, $4169, $4268));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4271 = self.world;
                                var $4272 = self.subst;
                                var $4273 = self.fresh;
                                var $4274 = self.gas;
                                var $4275 = self.term;
                                var self = Kindelia$reduce$(Kindelia$Runtime$new$($4271, $4272, $4273, $4274, $4269));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4277 = self.world;
                                        var $4278 = self.subst;
                                        var $4279 = self.fresh;
                                        var $4280 = self.gas;
                                        var $4281 = self.term;
                                        var self = $4275;
                                        switch (self._) {
                                            case 'Kindelia.Term.word':
                                                var $4283 = self.numb;
                                                var self = $4281;
                                                switch (self._) {
                                                    case 'Kindelia.Term.word':
                                                        var $4285 = self.numb;
                                                        var self = $4267;
                                                        switch (self._) {
                                                            case 'Kindelia.Operation.add':
                                                                var $4287 = Kindelia$Runtime$new$($4277, $4278, $4279, $4280, Kindelia$Term$word$((($4283 + $4285) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4286 = $4287;
                                                                break;
                                                            case 'Kindelia.Operation.sub':
                                                                var $4288 = Kindelia$Runtime$new$($4277, $4278, $4279, $4280, Kindelia$Term$word$((($4283 - $4285) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4286 = $4288;
                                                                break;
                                                            case 'Kindelia.Operation.mul':
                                                                var $4289 = Kindelia$Runtime$new$($4277, $4278, $4279, $4280, Kindelia$Term$word$((($4283 * $4285) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4286 = $4289;
                                                                break;
                                                            case 'Kindelia.Operation.div':
                                                                var $4290 = Kindelia$Runtime$new$($4277, $4278, $4279, $4280, Kindelia$Term$word$((($4283 / $4285) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4286 = $4290;
                                                                break;
                                                            case 'Kindelia.Operation.mod':
                                                                var $4291 = Kindelia$Runtime$new$($4277, $4278, $4279, $4280, Kindelia$Term$word$(($4283 % $4285)));
                                                                var $4286 = $4291;
                                                                break;
                                                            case 'Kindelia.Operation.or':
                                                                var $4292 = Kindelia$Runtime$new$($4277, $4278, $4279, $4280, Kindelia$Term$word$(($4283 | $4285)));
                                                                var $4286 = $4292;
                                                                break;
                                                            case 'Kindelia.Operation.and':
                                                                var $4293 = Kindelia$Runtime$new$($4277, $4278, $4279, $4280, Kindelia$Term$word$(($4283 & $4285)));
                                                                var $4286 = $4293;
                                                                break;
                                                            case 'Kindelia.Operation.xor':
                                                                var $4294 = Kindelia$Runtime$new$($4277, $4278, $4279, $4280, Kindelia$Term$word$(($4283 ^ $4285)));
                                                                var $4286 = $4294;
                                                                break;
                                                        };
                                                        var $4284 = $4286;
                                                        break;
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4295 = _state$1;
                                                        var $4284 = $4295;
                                                        break;
                                                };
                                                var $4282 = $4284;
                                                break;
                                            case 'Kindelia.Term.var':
                                            case 'Kindelia.Term.return':
                                                var self = $4281;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4297 = _state$1;
                                                        var $4296 = $4297;
                                                        break;
                                                };
                                                var $4282 = $4296;
                                                break;
                                            case 'Kindelia.Term.call':
                                            case 'Kindelia.Term.create':
                                                var self = $4281;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4299 = _state$1;
                                                        var $4298 = $4299;
                                                        break;
                                                };
                                                var $4282 = $4298;
                                                break;
                                            case 'Kindelia.Term.let':
                                            case 'Kindelia.Term.bind':
                                                var self = $4281;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4301 = _state$1;
                                                        var $4300 = $4301;
                                                        break;
                                                };
                                                var $4282 = $4300;
                                                break;
                                            case 'Kindelia.Term.match':
                                            case 'Kindelia.Term.operate':
                                            case 'Kindelia.Term.set':
                                            case 'Kindelia.Term.get':
                                                var self = $4281;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4303 = _state$1;
                                                        var $4302 = $4303;
                                                        break;
                                                };
                                                var $4282 = $4302;
                                                break;
                                            case 'Kindelia.Term.compare':
                                                var self = $4281;
                                                switch (self._) {
                                                    case 'Kindelia.Term.var':
                                                    case 'Kindelia.Term.call':
                                                    case 'Kindelia.Term.let':
                                                    case 'Kindelia.Term.create':
                                                    case 'Kindelia.Term.match':
                                                    case 'Kindelia.Term.word':
                                                    case 'Kindelia.Term.compare':
                                                    case 'Kindelia.Term.operate':
                                                    case 'Kindelia.Term.set':
                                                    case 'Kindelia.Term.get':
                                                    case 'Kindelia.Term.bind':
                                                    case 'Kindelia.Term.return':
                                                        var $4305 = _state$1;
                                                        var $4304 = $4305;
                                                        break;
                                                };
                                                var $4282 = $4304;
                                                break;
                                        };
                                        var $4276 = $4282;
                                        break;
                                };
                                var $4270 = $4276;
                                break;
                        };
                        var $4171 = $4270;
                        break;
                    case 'Kindelia.Term.create':
                    case 'Kindelia.Term.word':
                    case 'Kindelia.Term.set':
                    case 'Kindelia.Term.get':
                    case 'Kindelia.Term.bind':
                    case 'Kindelia.Term.return':
                        var $4306 = _state$1;
                        var $4171 = $4306;
                        break;
                };
                var $4165 = $4171;
                break;
        };
        return $4165;
    };
    const Kindelia$reduce = x0 => Kindelia$reduce$(x0);

    function Kindelia$normalize$many$(_state$1) {
        var self = _state$1;
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4308 = self.world;
                var $4309 = self.subst;
                var $4310 = self.fresh;
                var $4311 = self.gas;
                var $4312 = self.term;
                var self = $4312;
                switch (self._) {
                    case 'List.cons':
                        var $4314 = self.head;
                        var $4315 = self.tail;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4308, $4309, $4310, $4311, $4314));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4317 = self.world;
                                var $4318 = self.subst;
                                var $4319 = self.fresh;
                                var $4320 = self.gas;
                                var $4321 = self.term;
                                var self = Kindelia$normalize$many$(Kindelia$Runtime$new$($4317, $4318, $4319, $4320, $4315));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4323 = self.world;
                                        var $4324 = self.subst;
                                        var $4325 = self.fresh;
                                        var $4326 = self.gas;
                                        var $4327 = self.term;
                                        var $4328 = Kindelia$Runtime$new$($4323, $4324, $4325, $4326, List$cons$($4321, $4327));
                                        var $4322 = $4328;
                                        break;
                                };
                                var $4316 = $4322;
                                break;
                        };
                        var $4313 = $4316;
                        break;
                    case 'List.nil':
                        var $4329 = _state$1;
                        var $4313 = $4329;
                        break;
                };
                var $4307 = $4313;
                break;
        };
        return $4307;
    };
    const Kindelia$normalize$many = x0 => Kindelia$normalize$many$(x0);

    function Kindelia$normalize$cases$(_ctrs$1, _name$2, _state$3) {
        var self = _state$3;
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4331 = self.world;
                var $4332 = self.subst;
                var $4333 = self.fresh;
                var $4334 = self.gas;
                var $4335 = self.term;
                var self = _ctrs$1;
                switch (self._) {
                    case 'List.cons':
                        var $4337 = self.head;
                        var $4338 = self.tail;
                        var self = $4335;
                        switch (self._) {
                            case 'List.cons':
                                var $4340 = self.head;
                                var $4341 = self.tail;
                                var _nams$13 = List$map$((_args$13 => {
                                    var $4343 = (_name$2 + ("." + (() => {
                                        var self = _args$13;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $4344 = self.fst;
                                                var $4345 = $4344;
                                                return $4345;
                                        };
                                    })()));
                                    return $4343;
                                }), (() => {
                                    var self = $4337;
                                    switch (self._) {
                                        case 'Kindelia.Constructor.new':
                                            var $4346 = self.args;
                                            var $4347 = $4346;
                                            return $4347;
                                    };
                                })());
                                var _vals$14 = List$map$(Kindelia$Term$var, _nams$13);
                                var _subst$15 = Kindelia$extend$($4332, _nams$13, _vals$14);
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4331, _subst$15, $4333, $4334, $4340));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4348 = self.world;
                                        var $4349 = self.subst;
                                        var $4350 = self.fresh;
                                        var $4351 = self.gas;
                                        var $4352 = self.term;
                                        var self = Kindelia$normalize$cases$($4338, _name$2, Kindelia$Runtime$new$($4348, $4349, $4350, $4351, $4341));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4354 = self.world;
                                                var $4355 = self.subst;
                                                var $4356 = self.fresh;
                                                var $4357 = self.gas;
                                                var $4358 = self.term;
                                                var $4359 = Kindelia$Runtime$new$($4354, $4355, $4356, $4357, List$cons$($4352, $4358));
                                                var $4353 = $4359;
                                                break;
                                        };
                                        var $4342 = $4353;
                                        break;
                                };
                                var $4339 = $4342;
                                break;
                            case 'List.nil':
                                var $4360 = _state$3;
                                var $4339 = $4360;
                                break;
                        };
                        var $4336 = $4339;
                        break;
                    case 'List.nil':
                        var self = $4335;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $4362 = _state$3;
                                var $4361 = $4362;
                                break;
                        };
                        var $4336 = $4361;
                        break;
                };
                var $4330 = $4336;
                break;
        };
        return $4330;
    };
    const Kindelia$normalize$cases = x0 => x1 => x2 => Kindelia$normalize$cases$(x0, x1, x2);

    function Kindelia$normalize$(_state$1) {
        var self = Kindelia$reduce$(_state$1);
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4364 = self.world;
                var $4365 = self.subst;
                var $4366 = self.fresh;
                var $4367 = self.gas;
                var $4368 = self.term;
                var self = $4368;
                switch (self._) {
                    case 'Kindelia.Term.create':
                        var $4370 = self.ctor;
                        var $4371 = self.vals;
                        var self = Kindelia$normalize$many$(Kindelia$Runtime$new$($4364, $4365, $4366, $4367, $4371));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4373 = self.world;
                                var $4374 = self.subst;
                                var $4375 = self.fresh;
                                var $4376 = self.gas;
                                var $4377 = self.term;
                                var $4378 = Kindelia$Runtime$new$($4373, $4374, $4375, $4376, Kindelia$Term$create$($4370, $4377));
                                var $4372 = $4378;
                                break;
                        };
                        var $4369 = $4372;
                        break;
                    case 'Kindelia.Term.match':
                        var $4379 = self.name;
                        var $4380 = self.data;
                        var $4381 = self.cses;
                        var self = Kindelia$get_constructors$($4364, $4380);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4383 = self.value;
                                var _ctrs$11 = $4383;
                                var self = _ctrs$11;
                                switch (self._) {
                                    case 'List.nil':
                                        var self = Kindelia$normalize$cases$(_ctrs$11, $4379, Kindelia$Runtime$new$($4364, $4365, $4366, $4367, $4381));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4386 = self.world;
                                                var $4387 = self.subst;
                                                var $4388 = self.fresh;
                                                var $4389 = self.gas;
                                                var $4390 = self.term;
                                                var $4391 = Kindelia$Runtime$new$($4386, $4387, $4388, $4389, Kindelia$Term$match$($4379, $4380, $4390));
                                                var $4385 = $4391;
                                                break;
                                        };
                                        var $4384 = $4385;
                                        break;
                                    case 'List.cons':
                                        var self = Kindelia$normalize$cases$(_ctrs$11, $4379, Kindelia$Runtime$new$($4364, $4365, $4366, $4367, $4381));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4393 = self.world;
                                                var $4394 = self.subst;
                                                var $4395 = self.fresh;
                                                var $4396 = self.gas;
                                                var $4397 = self.term;
                                                var $4398 = Kindelia$Runtime$new$($4393, $4394, $4395, $4396, Kindelia$Term$match$($4379, $4380, $4397));
                                                var $4392 = $4398;
                                                break;
                                        };
                                        var $4384 = $4392;
                                        break;
                                };
                                var $4382 = $4384;
                                break;
                            case 'Maybe.none':
                                var $4399 = Kindelia$Runtime$new$($4364, $4365, $4366, $4367, $4368);
                                var $4382 = $4399;
                                break;
                        };
                        var $4369 = $4382;
                        break;
                    case 'Kindelia.Term.compare':
                        var $4400 = self.val0;
                        var $4401 = self.val1;
                        var $4402 = self.iflt;
                        var $4403 = self.ifeq;
                        var $4404 = self.ifgt;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4364, $4365, $4366, $4367, $4400));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4406 = self.world;
                                var $4407 = self.subst;
                                var $4408 = self.fresh;
                                var $4409 = self.gas;
                                var $4410 = self.term;
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4406, $4407, $4408, $4409, $4401));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4412 = self.world;
                                        var $4413 = self.subst;
                                        var $4414 = self.fresh;
                                        var $4415 = self.gas;
                                        var $4416 = self.term;
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4412, $4413, $4414, $4415, $4402));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4418 = self.world;
                                                var $4419 = self.subst;
                                                var $4420 = self.fresh;
                                                var $4421 = self.gas;
                                                var $4422 = self.term;
                                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4418, $4419, $4420, $4421, $4403));
                                                switch (self._) {
                                                    case 'Kindelia.Runtime.new':
                                                        var $4424 = self.world;
                                                        var $4425 = self.subst;
                                                        var $4426 = self.fresh;
                                                        var $4427 = self.gas;
                                                        var $4428 = self.term;
                                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4424, $4425, $4426, $4427, $4404));
                                                        switch (self._) {
                                                            case 'Kindelia.Runtime.new':
                                                                var $4430 = self.world;
                                                                var $4431 = self.subst;
                                                                var $4432 = self.fresh;
                                                                var $4433 = self.gas;
                                                                var $4434 = self.term;
                                                                var $4435 = Kindelia$Runtime$new$($4430, $4431, $4432, $4433, Kindelia$Term$compare$($4410, $4416, $4422, $4428, $4434));
                                                                var $4429 = $4435;
                                                                break;
                                                        };
                                                        var $4423 = $4429;
                                                        break;
                                                };
                                                var $4417 = $4423;
                                                break;
                                        };
                                        var $4411 = $4417;
                                        break;
                                };
                                var $4405 = $4411;
                                break;
                        };
                        var $4369 = $4405;
                        break;
                    case 'Kindelia.Term.operate':
                        var $4436 = self.oper;
                        var $4437 = self.val0;
                        var $4438 = self.val1;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4364, $4365, $4366, $4367, $4437));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4440 = self.world;
                                var $4441 = self.subst;
                                var $4442 = self.fresh;
                                var $4443 = self.gas;
                                var $4444 = self.term;
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4440, $4441, $4442, $4443, $4438));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4446 = self.world;
                                        var $4447 = self.subst;
                                        var $4448 = self.fresh;
                                        var $4449 = self.gas;
                                        var $4450 = self.term;
                                        var $4451 = Kindelia$Runtime$new$($4446, $4447, $4448, $4449, Kindelia$Term$operate$($4436, $4444, $4450));
                                        var $4445 = $4451;
                                        break;
                                };
                                var $4439 = $4445;
                                break;
                        };
                        var $4369 = $4439;
                        break;
                    case 'Kindelia.Term.set':
                        var $4452 = self.file;
                        var $4453 = self.expr;
                        var $4454 = self.body;
                        var self = Kindelia$get_file$($4364, $4452);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4456 = self.value;
                                var _file$11 = $4456;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4364, $4365, $4366, $4367, $4453));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4459 = self.world;
                                                var $4460 = self.subst;
                                                var $4461 = self.fresh;
                                                var $4462 = self.gas;
                                                var $4463 = self.term;
                                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4459, $4460, $4461, $4462, $4454));
                                                switch (self._) {
                                                    case 'Kindelia.Runtime.new':
                                                        var $4465 = self.world;
                                                        var $4466 = self.subst;
                                                        var $4467 = self.fresh;
                                                        var $4468 = self.gas;
                                                        var $4469 = self.term;
                                                        var $4470 = Kindelia$Runtime$new$($4465, $4466, $4467, $4468, Kindelia$Term$set$($4452, $4463, $4469));
                                                        var $4464 = $4470;
                                                        break;
                                                };
                                                var $4458 = $4464;
                                                break;
                                        };
                                        var $4457 = $4458;
                                        break;
                                };
                                var $4455 = $4457;
                                break;
                            case 'Maybe.none':
                                var $4471 = _state$1;
                                var $4455 = $4471;
                                break;
                        };
                        var $4369 = $4455;
                        break;
                    case 'Kindelia.Term.get':
                        var $4472 = self.name;
                        var $4473 = self.file;
                        var $4474 = self.body;
                        var self = Kindelia$get_file$($4364, $4473);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4476 = self.value;
                                var _file$11 = $4476;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4364, Map$set$($4472, Kindelia$Term$var$($4472), $4365), $4366, $4367, $4474));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4479 = self.world;
                                                var $4480 = self.subst;
                                                var $4481 = self.fresh;
                                                var $4482 = self.gas;
                                                var $4483 = self.term;
                                                var $4484 = Kindelia$Runtime$new$($4479, $4480, $4481, $4482, Kindelia$Term$get$($4472, $4473, $4483));
                                                var $4478 = $4484;
                                                break;
                                        };
                                        var $4477 = $4478;
                                        break;
                                };
                                var $4475 = $4477;
                                break;
                            case 'Maybe.none':
                                var $4485 = _state$1;
                                var $4475 = $4485;
                                break;
                        };
                        var $4369 = $4475;
                        break;
                    case 'Kindelia.Term.bind':
                        var $4486 = self.name;
                        var $4487 = self.type;
                        var $4488 = self.expr;
                        var $4489 = self.body;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4364, $4365, $4366, $4367, $4488));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4491 = self.world;
                                var $4492 = self.subst;
                                var $4493 = self.fresh;
                                var $4494 = self.gas;
                                var $4495 = self.term;
                                var self = Kindelia$normalize$(Kindelia$Runtime$new$($4491, Map$set$($4486, Kindelia$Term$var$($4486), $4492), $4493, $4494, $4489));
                                switch (self._) {
                                    case 'Kindelia.Runtime.new':
                                        var $4497 = self.world;
                                        var $4498 = self.subst;
                                        var $4499 = self.fresh;
                                        var $4500 = self.gas;
                                        var $4501 = self.term;
                                        var $4502 = Kindelia$Runtime$new$($4497, $4498, $4499, $4500, Kindelia$Term$bind$($4486, $4487, $4495, $4501));
                                        var $4496 = $4502;
                                        break;
                                };
                                var $4490 = $4496;
                                break;
                        };
                        var $4369 = $4490;
                        break;
                    case 'Kindelia.Term.return':
                        var $4503 = self.expr;
                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4364, $4365, $4366, $4367, $4503));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4505 = self.world;
                                var $4506 = self.subst;
                                var $4507 = self.fresh;
                                var $4508 = self.gas;
                                var $4509 = self.term;
                                var $4510 = Kindelia$Runtime$new$($4505, $4506, $4507, $4508, Kindelia$Term$return$($4509));
                                var $4504 = $4510;
                                break;
                        };
                        var $4369 = $4504;
                        break;
                    case 'Kindelia.Term.var':
                    case 'Kindelia.Term.call':
                    case 'Kindelia.Term.let':
                    case 'Kindelia.Term.word':
                        var $4511 = Kindelia$Runtime$new$($4364, $4365, $4366, $4367, $4368);
                        var $4369 = $4511;
                        break;
                };
                var $4363 = $4369;
                break;
        };
        return $4363;
    };
    const Kindelia$normalize = x0 => Kindelia$normalize$(x0);

    function Kindelia$run$(_state$1) {
        var self = Kindelia$reduce$(_state$1);
        switch (self._) {
            case 'Kindelia.Runtime.new':
                var $4513 = self.world;
                var $4514 = self.subst;
                var $4515 = self.fresh;
                var $4516 = self.gas;
                var $4517 = self.term;
                var self = $4517;
                switch (self._) {
                    case 'Kindelia.Term.set':
                        var $4519 = self.file;
                        var $4520 = self.expr;
                        var $4521 = self.body;
                        var self = Kindelia$get_file$($4513, $4519);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4523 = self.value;
                                var _file$11 = $4523;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var self = Kindelia$normalize$(Kindelia$Runtime$new$($4513, $4514, $4515, $4516, $4520));
                                        switch (self._) {
                                            case 'Kindelia.Runtime.new':
                                                var $4526 = self.world;
                                                var $4527 = self.subst;
                                                var $4528 = self.fresh;
                                                var $4529 = self.gas;
                                                var $4530 = self.term;
                                                var _new_entry$21 = Kindelia$Entry$file$((() => {
                                                    var self = _file$11;
                                                    switch (self._) {
                                                        case 'Kindelia.File.new':
                                                            var $4532 = self.name;
                                                            var $4533 = self.ownr;
                                                            var $4534 = self.type;
                                                            var $4535 = Kindelia$File$new$($4532, $4533, $4534, $4530);
                                                            return $4535;
                                                    };
                                                })());
                                                var _new_world$22 = Map$set$($4519, _new_entry$21, $4526);
                                                var $4531 = Kindelia$run$(Kindelia$Runtime$new$(_new_world$22, $4527, $4528, $4529, $4521));
                                                var $4525 = $4531;
                                                break;
                                        };
                                        var $4524 = $4525;
                                        break;
                                };
                                var $4522 = $4524;
                                break;
                            case 'Maybe.none':
                                var $4536 = _state$1;
                                var $4522 = $4536;
                                break;
                        };
                        var $4518 = $4522;
                        break;
                    case 'Kindelia.Term.get':
                        var $4537 = self.name;
                        var $4538 = self.file;
                        var $4539 = self.body;
                        var self = Kindelia$get_file$($4513, $4538);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4541 = self.value;
                                var _file$11 = $4541;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Kindelia.File.new':
                                        var $4543 = self.expr;
                                        var $4544 = Kindelia$run$(Kindelia$Runtime$new$($4513, Map$set$($4537, $4543, $4514), $4515, $4516, $4539));
                                        var $4542 = $4544;
                                        break;
                                };
                                var $4540 = $4542;
                                break;
                            case 'Maybe.none':
                                var $4545 = _state$1;
                                var $4540 = $4545;
                                break;
                        };
                        var $4518 = $4540;
                        break;
                    case 'Kindelia.Term.bind':
                        var $4546 = self.name;
                        var $4547 = self.type;
                        var $4548 = self.expr;
                        var $4549 = self.body;
                        var self = Kindelia$run$(Kindelia$Runtime$new$($4513, $4514, $4515, $4516, $4548));
                        switch (self._) {
                            case 'Kindelia.Runtime.new':
                                var $4551 = self.world;
                                var $4552 = self.subst;
                                var $4553 = self.fresh;
                                var $4554 = self.gas;
                                var $4555 = self.term;
                                var self = $4555;
                                switch (self._) {
                                    case 'Kindelia.Term.return':
                                        var $4557 = self.expr;
                                        var $4558 = Kindelia$run$(Kindelia$Runtime$new$($4551, Map$set$($4546, $4557, $4552), $4553, $4554, $4549));
                                        var $4556 = $4558;
                                        break;
                                    case 'Kindelia.Term.var':
                                    case 'Kindelia.Term.call':
                                    case 'Kindelia.Term.let':
                                    case 'Kindelia.Term.create':
                                    case 'Kindelia.Term.match':
                                    case 'Kindelia.Term.word':
                                    case 'Kindelia.Term.compare':
                                    case 'Kindelia.Term.operate':
                                    case 'Kindelia.Term.set':
                                    case 'Kindelia.Term.get':
                                    case 'Kindelia.Term.bind':
                                        var $4559 = Kindelia$Runtime$new$($4551, $4552, $4553, $4554, Kindelia$Term$bind$($4546, $4547, $4555, $4549));
                                        var $4556 = $4559;
                                        break;
                                };
                                var $4550 = $4556;
                                break;
                        };
                        var $4518 = $4550;
                        break;
                    case 'Kindelia.Term.var':
                    case 'Kindelia.Term.call':
                    case 'Kindelia.Term.let':
                    case 'Kindelia.Term.create':
                    case 'Kindelia.Term.match':
                    case 'Kindelia.Term.word':
                    case 'Kindelia.Term.compare':
                    case 'Kindelia.Term.operate':
                    case 'Kindelia.Term.return':
                        var $4560 = Kindelia$Runtime$new$($4513, $4514, $4515, $4516, $4517);
                        var $4518 = $4560;
                        break;
                };
                var $4512 = $4518;
                break;
        };
        return $4512;
    };
    const Kindelia$run = x0 => Kindelia$run$(x0);

    function Kindelia$show$type$(_world$1, _type$2) {
        var self = _type$2;
        switch (self._) {
            case 'Kindelia.Type.data':
                var $4562 = self.name;
                var $4563 = $4562;
                var $4561 = $4563;
                break;
            case 'Kindelia.Type.effe':
                var $4564 = self.rety;
                var $4565 = ("& " + Kindelia$show$type$(_world$1, $4564));
                var $4561 = $4565;
                break;
            case 'Kindelia.Type.word':
                var $4566 = "#word";
                var $4561 = $4566;
                break;
        };
        return $4561;
    };
    const Kindelia$show$type = x0 => x1 => Kindelia$show$type$(x0, x1);

    function Word$show$(_size$1, _a$2) {
        var $4567 = Nat$show$(Word$to_nat$(_a$2));
        return $4567;
    };
    const Word$show = x0 => x1 => Word$show$(x0, x1);
    const U64$show = a0 => (String(a0));

    function String$is_empty$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $4569 = Bool$true;
            var $4568 = $4569;
        } else {
            var $4570 = self.charCodeAt(0);
            var $4571 = self.slice(1);
            var $4572 = Bool$false;
            var $4568 = $4572;
        };
        return $4568;
    };
    const String$is_empty = x0 => String$is_empty$(x0);

    function Kindelia$show$term$(_world$1, _type$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kindelia.Term.var':
                var $4574 = self.name;
                var $4575 = $4574;
                var $4573 = $4575;
                break;
            case 'Kindelia.Term.call':
                var $4576 = self.bond;
                var $4577 = self.args;
                var self = Kindelia$get_bond$(_world$1, $4576);
                switch (self._) {
                    case 'Maybe.some':
                        var $4579 = self.value;
                        var _bond$7 = $4579;
                        var self = _bond$7;
                        switch (self._) {
                            case 'Kindelia.Bond.new':
                                var $4581 = self.args;
                                var _args$12 = List$zipped_with$($4581, $4577, (_inp$12 => _arg$13 => {
                                    var $4583 = Kindelia$show$term$(_world$1, (() => {
                                        var self = _inp$12;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $4584 = self.snd;
                                                var $4585 = $4584;
                                                return $4585;
                                        };
                                    })(), _arg$13);
                                    return $4583;
                                }));
                                var $4582 = ($4576 + ("(" + (String$join$(",", _args$12) + ")")));
                                var $4580 = $4582;
                                break;
                        };
                        var $4578 = $4580;
                        break;
                    case 'Maybe.none':
                        var $4586 = "[call?]";
                        var $4578 = $4586;
                        break;
                };
                var $4573 = $4578;
                break;
            case 'Kindelia.Term.let':
                var $4587 = self.name;
                var $4588 = self.type;
                var $4589 = self.expr;
                var $4590 = self.body;
                var _name$8 = $4587;
                var _etyp$9 = Kindelia$show$type$(_world$1, $4588);
                var _expr$10 = Kindelia$show$term$(_world$1, $4588, $4589);
                var _body$11 = Kindelia$show$term$(_world$1, _type$2, $4590);
                var $4591 = ("let " + (_name$8 + (" : " + (_etyp$9 + (" = " + (_expr$10 + (" " + _body$11)))))));
                var $4573 = $4591;
                break;
            case 'Kindelia.Term.create':
                var $4592 = self.ctor;
                var $4593 = self.vals;
                var self = _type$2;
                switch (self._) {
                    case 'Kindelia.Type.data':
                        var $4595 = self.name;
                        var self = Kindelia$get_data$(_world$1, $4595);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4597 = self.value;
                                var _data$8 = $4597;
                                var self = _data$8;
                                switch (self._) {
                                    case 'Kindelia.Data.new':
                                        var $4599 = self.name;
                                        var $4600 = self.constructors;
                                        var self = List$get$($4592, $4600);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $4602 = self.value;
                                                var _ctor$12 = $4602;
                                                var self = _ctor$12;
                                                switch (self._) {
                                                    case 'Kindelia.Constructor.new':
                                                        var $4604 = self.name;
                                                        var $4605 = self.args;
                                                        var _atyp$15 = List$mapped$($4605, (_x$15 => {
                                                            var self = _x$15;
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $4608 = self.snd;
                                                                    var $4609 = $4608;
                                                                    var $4607 = $4609;
                                                                    break;
                                                            };
                                                            return $4607;
                                                        }));
                                                        var _vals$16 = List$zipped_with$($4593, (() => {
                                                            var self = _ctor$12;
                                                            switch (self._) {
                                                                case 'Kindelia.Constructor.new':
                                                                    var $4610 = self.args;
                                                                    var $4611 = $4610;
                                                                    return $4611;
                                                            };
                                                        })(), (_val$16 => _arg$17 => {
                                                            var $4612 = ((() => {
                                                                var self = _arg$17;
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $4613 = self.fst;
                                                                        var $4614 = $4613;
                                                                        return $4614;
                                                                };
                                                            })() + (":" + Kindelia$show$term$(_world$1, (() => {
                                                                var self = _arg$17;
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $4615 = self.snd;
                                                                        var $4616 = $4615;
                                                                        return $4616;
                                                                };
                                                            })(), _val$16)));
                                                            return $4612;
                                                        }));
                                                        var $4606 = ($4599 + ("@" + ($4604 + ("{" + (String$join$(",", _vals$16) + "}")))));
                                                        var $4603 = $4606;
                                                        break;
                                                };
                                                var $4601 = $4603;
                                                break;
                                            case 'Maybe.none':
                                                var $4617 = "[create?]";
                                                var $4601 = $4617;
                                                break;
                                        };
                                        var $4598 = $4601;
                                        break;
                                };
                                var $4596 = $4598;
                                break;
                            case 'Maybe.none':
                                var $4618 = "[create?]";
                                var $4596 = $4618;
                                break;
                        };
                        var $4594 = $4596;
                        break;
                    case 'Kindelia.Type.word':
                    case 'Kindelia.Type.effe':
                        var $4619 = (Nat$show$($4592) + ("{" + (String$join$(",", List$mapped$($4593, Kindelia$show$term(_world$1)(Kindelia$Type$word))) + "}")));
                        var $4594 = $4619;
                        break;
                };
                var $4573 = $4594;
                break;
            case 'Kindelia.Term.match':
                var $4620 = self.name;
                var $4621 = self.data;
                var $4622 = self.cses;
                var self = Kindelia$get_data$(_world$1, $4621);
                switch (self._) {
                    case 'Maybe.some':
                        var $4624 = self.value;
                        var _data$8 = $4624;
                        var self = _data$8;
                        switch (self._) {
                            case 'Kindelia.Data.new':
                                var $4626 = self.constructors;
                                var _name$11 = $4620;
                                var _cses$12 = List$zipped_with$($4626, $4622, (_case_ctor$12 => _case_body$13 => {
                                    var $4628 = ((() => {
                                        var self = _case_ctor$12;
                                        switch (self._) {
                                            case 'Kindelia.Constructor.new':
                                                var $4629 = self.name;
                                                var $4630 = $4629;
                                                return $4630;
                                        };
                                    })() + (": " + Kindelia$show$term$(_world$1, _type$2, _case_body$13)));
                                    return $4628;
                                }));
                                var $4627 = ("case " + (_name$11 + (" : " + ($4621 + (" { " + (String$join$(", ", _cses$12) + " }"))))));
                                var $4625 = $4627;
                                break;
                        };
                        var $4623 = $4625;
                        break;
                    case 'Maybe.none':
                        var $4631 = "?";
                        var $4623 = $4631;
                        break;
                };
                var $4573 = $4623;
                break;
            case 'Kindelia.Term.word':
                var $4632 = self.numb;
                var $4633 = ("#" + (String($4632)));
                var $4573 = $4633;
                break;
            case 'Kindelia.Term.compare':
                var $4634 = self.val0;
                var $4635 = self.val1;
                var $4636 = self.iflt;
                var $4637 = self.ifeq;
                var $4638 = self.ifgt;
                var _val0$9 = Kindelia$show$term$(_world$1, Kindelia$Type$word, $4634);
                var _val1$10 = Kindelia$show$term$(_world$1, Kindelia$Type$word, $4635);
                var _iflt$11 = Kindelia$show$term$(_world$1, _type$2, $4636);
                var _ifeq$12 = Kindelia$show$term$(_world$1, _type$2, $4637);
                var _ifgt$13 = Kindelia$show$term$(_world$1, _type$2, $4638);
                var $4639 = ("compare " + (_val0$9 + (" " + (_val1$10 + (" { _<_: " + (_iflt$11 + (" _=_: " + (_ifeq$12 + (" _>_: " + (_ifgt$13 + " }"))))))))));
                var $4573 = $4639;
                break;
            case 'Kindelia.Term.operate':
                var $4640 = self.oper;
                var $4641 = self.val0;
                var $4642 = self.val1;
                var self = $4640;
                switch (self._) {
                    case 'Kindelia.Operation.add':
                        var $4644 = "+";
                        var _oper$7 = $4644;
                        break;
                    case 'Kindelia.Operation.sub':
                        var $4645 = "-";
                        var _oper$7 = $4645;
                        break;
                    case 'Kindelia.Operation.mul':
                        var $4646 = "*";
                        var _oper$7 = $4646;
                        break;
                    case 'Kindelia.Operation.div':
                        var $4647 = "/";
                        var _oper$7 = $4647;
                        break;
                    case 'Kindelia.Operation.mod':
                        var $4648 = "%";
                        var _oper$7 = $4648;
                        break;
                    case 'Kindelia.Operation.or':
                        var $4649 = "|";
                        var _oper$7 = $4649;
                        break;
                    case 'Kindelia.Operation.and':
                        var $4650 = "&";
                        var _oper$7 = $4650;
                        break;
                    case 'Kindelia.Operation.xor':
                        var $4651 = "^";
                        var _oper$7 = $4651;
                        break;
                };
                var _val0$8 = Kindelia$show$term$(_world$1, Kindelia$Type$word, $4641);
                var _val1$9 = Kindelia$show$term$(_world$1, Kindelia$Type$word, $4642);
                var $4643 = (_oper$7 + ("(" + (_val0$8 + ("," + (_val1$9 + ")")))));
                var $4573 = $4643;
                break;
            case 'Kindelia.Term.set':
                var $4652 = self.file;
                var $4653 = self.expr;
                var $4654 = self.body;
                var self = Kindelia$get_file$(_world$1, $4652);
                switch (self._) {
                    case 'Maybe.some':
                        var $4656 = self.value;
                        var _file$8 = $4656;
                        var self = _file$8;
                        switch (self._) {
                            case 'Kindelia.File.new':
                                var $4658 = self.type;
                                var _expr$13 = Kindelia$show$term$(_world$1, $4658, $4653);
                                var _body$14 = Kindelia$show$term$(_world$1, _type$2, $4654);
                                var $4659 = ("set " + ($4652 + (" = " + (_expr$13 + ("; " + _body$14)))));
                                var $4657 = $4659;
                                break;
                        };
                        var $4655 = $4657;
                        break;
                    case 'Maybe.none':
                        var $4660 = "[set?]";
                        var $4655 = $4660;
                        break;
                };
                var $4573 = $4655;
                break;
            case 'Kindelia.Term.get':
                var $4661 = self.name;
                var $4662 = self.file;
                var $4663 = self.body;
                var _name$7 = $4661;
                var _body$8 = Kindelia$show$term$(_world$1, _type$2, $4663);
                var $4664 = ("get " + (_name$7 + (" = " + ($4662 + ("; " + _body$8)))));
                var $4573 = $4664;
                break;
            case 'Kindelia.Term.bind':
                var $4665 = self.name;
                var $4666 = self.type;
                var $4667 = self.expr;
                var $4668 = self.body;
                var _name$8 = $4665;
                var _etyp$9 = Kindelia$show$type$(_world$1, $4666);
                var _expr$10 = Kindelia$show$term$(_world$1, $4666, $4667);
                var _body$11 = Kindelia$show$term$(_world$1, _type$2, $4668);
                var self = String$is_empty$(_name$8);
                if (self) {
                    var $4670 = ("run " + (_expr$10 + ("; " + _body$11)));
                    var $4669 = $4670;
                } else {
                    var $4671 = ("run " + (_name$8 + (" : " + (_etyp$9 + (" = " + (_expr$10 + ("; " + _body$11)))))));
                    var $4669 = $4671;
                };
                var $4573 = $4669;
                break;
            case 'Kindelia.Term.return':
                var $4672 = self.expr;
                var self = _type$2;
                switch (self._) {
                    case 'Kindelia.Type.effe':
                        var $4674 = self.rety;
                        var _expr$6 = Kindelia$show$term$(_world$1, $4674, $4672);
                        var $4675 = ("return " + _expr$6);
                        var $4673 = $4675;
                        break;
                    case 'Kindelia.Type.word':
                    case 'Kindelia.Type.data':
                        var $4676 = "[return?]";
                        var $4673 = $4676;
                        break;
                };
                var $4573 = $4673;
                break;
        };
        return $4573;
    };
    const Kindelia$show$term = x0 => x1 => x2 => Kindelia$show$term$(x0, x1, x2);

    function Kindelia$transact$(_world$1, _transaction$2) {
        var self = _transaction$2;
        switch (self._) {
            case 'Kindelia.Transaction.new_data':
                var $4678 = self.data;
                var _data$4 = $4678;
                var self = _data$4;
                switch (self._) {
                    case 'Kindelia.Data.new':
                        var $4680 = self.name;
                        var self = Map$get$($4680, _world$1);
                        switch (self._) {
                            case 'Maybe.none':
                                var _world$7 = Map$set$($4680, Kindelia$Entry$data$(_data$4), _world$1);
                                var $4682 = Maybe$some$(Pair$new$(_world$7, ("[data] " + $4680)));
                                var $4681 = $4682;
                                break;
                            case 'Maybe.some':
                                var $4683 = Maybe$none;
                                var $4681 = $4683;
                                break;
                        };
                        var $4679 = $4681;
                        break;
                };
                var $4677 = $4679;
                break;
            case 'Kindelia.Transaction.new_bond':
                var $4684 = self.bond;
                var _bond$4 = $4684;
                var self = _bond$4;
                switch (self._) {
                    case 'Kindelia.Bond.new':
                        var $4686 = self.name;
                        var $4687 = self.args;
                        var $4688 = self.otyp;
                        var $4689 = self.main;
                        var self = Map$get$($4686, _world$1);
                        switch (self._) {
                            case 'Maybe.none':
                                var _world$9 = Map$set$($4686, Kindelia$Entry$bond$(_bond$4), _world$1);
                                var self = List$unzip$($4687);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $4692 = self.fst;
                                        var $4693 = self.snd;
                                        var _context$12 = Kindelia$extend$(Map$from_list$(List$nil), $4692, $4693);
                                        var self = Kindelia$check$(_context$12, _world$9, $4689, $4688, Maybe$some$($4686));
                                        if (self) {
                                            var $4695 = Maybe$some$(Pair$new$(_world$9, ("[bond] " + $4686)));
                                            var $4694 = $4695;
                                        } else {
                                            var $4696 = Maybe$none;
                                            var $4694 = $4696;
                                        };
                                        var $4691 = $4694;
                                        break;
                                };
                                var $4690 = $4691;
                                break;
                            case 'Maybe.some':
                                var $4697 = Maybe$none;
                                var $4690 = $4697;
                                break;
                        };
                        var $4685 = $4690;
                        break;
                };
                var $4677 = $4685;
                break;
            case 'Kindelia.Transaction.new_file':
                var $4698 = self.file;
                var _file$4 = $4698;
                var self = _file$4;
                switch (self._) {
                    case 'Kindelia.File.new':
                        var $4700 = self.name;
                        var $4701 = self.type;
                        var $4702 = self.expr;
                        var self = Map$get$($4700, _world$1);
                        switch (self._) {
                            case 'Maybe.none':
                                var _world$9 = Map$set$($4700, Kindelia$Entry$file$(_file$4), _world$1);
                                var self = Kindelia$check$(Map$from_list$(List$nil), _world$9, $4702, $4701, Maybe$none);
                                if (self) {
                                    var $4705 = Maybe$some$(Pair$new$(_world$9, ("[file] " + $4700)));
                                    var $4704 = $4705;
                                } else {
                                    var $4706 = Maybe$none;
                                    var $4704 = $4706;
                                };
                                var $4703 = $4704;
                                break;
                            case 'Maybe.some':
                                var $4707 = Maybe$none;
                                var $4703 = $4707;
                                break;
                        };
                        var $4699 = $4703;
                        break;
                };
                var $4677 = $4699;
                break;
            case 'Kindelia.Transaction.new_eval':
                var $4708 = self.eval;
                var _eval$4 = $4708;
                var self = _eval$4;
                switch (self._) {
                    case 'Kindelia.Eval.new':
                        var $4710 = self.term;
                        var $4711 = self.type;
                        var self = Kindelia$check$(Map$from_list$(List$nil), _world$1, $4710, $4711, Maybe$none);
                        if (self) {
                            var _fresh$7 = 0n;
                            var self = Kindelia$sanitize$(_world$1, Map$from_list$(List$nil), _fresh$7, $4710);
                            switch (self._) {
                                case 'Pair.new':
                                    var $4714 = self.fst;
                                    var $4715 = self.snd;
                                    var self = $4711;
                                    switch (self._) {
                                        case 'Kindelia.Type.word':
                                        case 'Kindelia.Type.data':
                                            var $4717 = Kindelia$normalize$(Kindelia$Runtime$new$(_world$1, Map$from_list$(List$nil), $4714, 0n, $4715));
                                            var self = $4717;
                                            break;
                                        case 'Kindelia.Type.effe':
                                            var $4718 = Kindelia$normalize$(Kindelia$run$(Kindelia$Runtime$new$(_world$1, Map$from_list$(List$nil), $4714, 0n, $4715)));
                                            var self = $4718;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kindelia.Runtime.new':
                                            var $4719 = self.world;
                                            var $4720 = self.term;
                                            var $4721 = Maybe$some$(Pair$new$($4719, ("[eval] " + Kindelia$show$term$($4719, $4711, $4720))));
                                            var $4716 = $4721;
                                            break;
                                    };
                                    var $4713 = $4716;
                                    break;
                            };
                            var $4712 = $4713;
                        } else {
                            var $4722 = Maybe$none;
                            var $4712 = $4722;
                        };
                        var $4709 = $4712;
                        break;
                };
                var $4677 = $4709;
                break;
        };
        return $4677;
    };
    const Kindelia$transact = x0 => x1 => Kindelia$transact$(x0, x1);

    function Kindelia$api$run$go$transactions$(_world$1, _block_number$2, _code$3, _transactions$4) {
        var self = _transactions$4;
        switch (self._) {
            case 'List.cons':
                var $4724 = self.head;
                var $4725 = self.tail;
                var self = Kindelia$transact$(_world$1, $4724);
                switch (self._) {
                    case 'Maybe.some':
                        var $4727 = self.value;
                        var self = $4727;
                        switch (self._) {
                            case 'Pair.new':
                                var $4729 = self.fst;
                                var $4730 = self.snd;
                                var $4731 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                                    var $4732 = _m$bind$10;
                                    return $4732;
                                }))(IO$print$(("- " + $4730)))((_$10 => {
                                    var $4733 = Kindelia$api$run$go$transactions$($4729, _block_number$2, _code$3, $4725);
                                    return $4733;
                                }));
                                var $4728 = $4731;
                                break;
                        };
                        var $4726 = $4728;
                        break;
                    case 'Maybe.none':
                        var $4734 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                            var $4735 = _m$bind$7;
                            return $4735;
                        }))(IO$print$("- [fail]"))((_$7 => {
                            var $4736 = Kindelia$api$run$go$transactions$(_world$1, _block_number$2, _code$3, $4725);
                            return $4736;
                        }));
                        var $4726 = $4734;
                        break;
                };
                var $4723 = $4726;
                break;
            case 'List.nil':
                var $4737 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $4738 = _m$bind$5;
                    return $4738;
                }))(IO$print$(""))((_$5 => {
                    var $4739 = Kindelia$api$run$go$(_world$1, Nat$succ$(_block_number$2), _code$3);
                    return $4739;
                }));
                var $4723 = $4737;
                break;
        };
        return $4723;
    };
    const Kindelia$api$run$go$transactions = x0 => x1 => x2 => x3 => Kindelia$api$run$go$transactions$(x0, x1, x2, x3);

    function Kindelia$api$run$go$(_world$1, _block_number$2, _code$3) {
        var _parsed$4 = Kindelia$parse$block$(_world$1)(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$3));
        var self = _parsed$4;
        switch (self._) {
            case 'Parser.Reply.error':
                var $4741 = self.err;
                var self = $4741;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $4743 = self.nam;
                        var $4744 = self.ini;
                        var $4745 = self.idx;
                        var $4746 = self.msg;
                        var self = ($4745 < String$length$(_code$3));
                        if (self) {
                            var _err$10 = ($4746 + (() => {
                                var self = $4743;
                                if (self.length === 0) {
                                    var $4749 = "";
                                    return $4749;
                                } else {
                                    var $4750 = self.charCodeAt(0);
                                    var $4751 = self.slice(1);
                                    var $4752 = (" Inside " + ($4743 + ":"));
                                    return $4752;
                                };
                            })());
                            var _hig$11 = Kind$Code$highlight$(_code$3, $4744, $4745, Nat$succ$($4745));
                            var _str$12 = String$flatten$(List$cons$(_err$10, List$cons$("\u{a}", List$cons$(_hig$11, List$nil))));
                            var $4748 = IO$monad$((_m$bind$13 => _m$pure$14 => {
                                var $4753 = _m$bind$13;
                                return $4753;
                            }))(IO$print$(("Error parsing block #" + Nat$show$(_block_number$2))))((_$13 => {
                                var $4754 = IO$print$(_str$12);
                                return $4754;
                            }));
                            var $4747 = $4748;
                        } else {
                            var $4755 = IO$print$("Done.");
                            var $4747 = $4755;
                        };
                        var $4742 = $4747;
                        break;
                };
                var $4740 = $4742;
                break;
            case 'Parser.Reply.value':
                var $4756 = self.pst;
                var $4757 = self.val;
                var _block$7 = $4757;
                var $4758 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                    var $4759 = _m$bind$8;
                    return $4759;
                }))(IO$print$(("Block #" + Nat$show$(_block_number$2))))((_$8 => {
                    var _bits_0$9 = Kindelia$serialize$block$(_world$1, _block$7);
                    var _bits_1$10 = Kindelia$serialize$block$(_world$1, (() => {
                        var self = Kindelia$deserialize$block$(_world$1, _bits_0$9);
                        switch (self._) {
                            case 'Pair.new':
                                var $4761 = self.snd;
                                var $4762 = $4761;
                                return $4762;
                        };
                    })());
                    var $4760 = IO$monad$((_m$bind$11 => _m$pure$12 => {
                        var $4763 = _m$bind$11;
                        return $4763;
                    }))(IO$print$(("$ " + (Bits$hex$encode$(_bits_0$9) + (" " + (() => {
                        var self = (_bits_1$10 === _bits_0$9);
                        if (self) {
                            var $4764 = "ok";
                            return $4764;
                        } else {
                            var $4765 = "bad_serialization";
                            return $4765;
                        };
                    })())))))((_$11 => {
                        var $4766 = Kindelia$api$run$go$transactions$(_world$1, _block_number$2, (() => {
                            var self = $4756;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4767 = self.str;
                                    var $4768 = $4767;
                                    return $4768;
                            };
                        })(), _block$7);
                        return $4766;
                    }));
                    return $4760;
                }));
                var $4740 = $4758;
                break;
        };
        return $4740;
    };
    const Kindelia$api$run$go = x0 => x1 => x2 => Kindelia$api$run$go$(x0, x1, x2);
    const Kindelia$genesis = Map$from_list$(List$nil);

    function Kindelia$api$run$(_code$1) {
        var $4769 = Kindelia$api$run$go$(Kindelia$genesis, 0n, _code$1);
        return $4769;
    };
    const Kindelia$api$run = x0 => Kindelia$api$run$(x0);
    const Kindelia = (() => {
        var _x$1 = Kindelia$api$run;
        var $4770 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $4771 = _m$pure$3;
            return $4771;
        }))(Unit$new);
        return $4770;
    })();
    return {
        '$main$': () => run(Kindelia),
        'run': run,
        'Parser.Reply': Parser$Reply,
        'List': List,
        'Parser.Reply.error': Parser$Reply$error,
        'Bool.false': Bool$false,
        'Bool.true': Bool$true,
        'Nat.gtn': Nat$gtn,
        'Parser.Error.combine': Parser$Error$combine,
        'List.cons': List$cons,
        'Parser.Reply.value': Parser$Reply$value,
        'List.reverse.go': List$reverse$go,
        'List.nil': List$nil,
        'List.reverse': List$reverse,
        'Parser.until.go': Parser$until$go,
        'Parser.until': Parser$until,
        'Parser.many.go': Parser$many$go,
        'Parser.many': Parser$many,
        'Parser.Error.new': Parser$Error$new,
        'Parser.Reply.fail': Parser$Reply$fail,
        'Maybe.some': Maybe$some,
        'Maybe': Maybe,
        'Maybe.none': Maybe$none,
        'Parser.Error.maybe_combine': Parser$Error$maybe_combine,
        'Parser.State.new': Parser$State$new,
        'Parser.choice': Parser$choice,
        'Parser': Parser,
        'Unit.new': Unit$new,
        'String.cons': String$cons,
        'String.concat': String$concat,
        'Cmp.as_eql': Cmp$as_eql,
        'Cmp.ltn': Cmp$ltn,
        'Cmp.gtn': Cmp$gtn,
        'Word.cmp.go': Word$cmp$go,
        'Cmp.eql': Cmp$eql,
        'Word.cmp': Word$cmp,
        'Word.eql': Word$eql,
        'Nat.succ': Nat$succ,
        'Nat.zero': Nat$zero,
        'U16.eql': U16$eql,
        'String.nil': String$nil,
        'Parser.text.go': Parser$text$go,
        'Parser.text': Parser$text,
        'Parser.eof': Parser$eof,
        'Parser.one': Parser$one,
        'Kindelia.parse.ignore': Kindelia$parse$ignore,
        'Kindelia.parse.text': Kindelia$parse$text,
        'Parser.letter': Parser$letter,
        'Bool.and': Bool$and,
        'Cmp.as_lte': Cmp$as_lte,
        'Word.lte': Word$lte,
        'U16.lte': U16$lte,
        'U16.btw': U16$btw,
        'Kindelia.parse.letter': Kindelia$parse$letter,
        'List.fold': List$fold,
        'Kindelia.parse.name': Kindelia$parse$name,
        'Parser.wrap': Parser$wrap,
        'Pair': Pair,
        'Parser.maybe': Parser$maybe,
        'Kindelia.Type.effe': Kindelia$Type$effe,
        'Kindelia.Type.word': Kindelia$Type$word,
        'Kindelia.Type.data': Kindelia$Type$data,
        'Kindelia.parse.type': Kindelia$parse$type,
        'Pair.new': Pair$new,
        'Kindelia.parse.ann': Kindelia$parse$ann,
        'Kindelia.Constructor.new': Kindelia$Constructor$new,
        'Kindelia.parse.constructor': Kindelia$parse$constructor,
        'Kindelia.Data.new': Kindelia$Data$new,
        'Kindelia.parse.data': Kindelia$parse$data,
        'Kindelia.Transaction.new_data': Kindelia$Transaction$new_data,
        'Kindelia.Term.let': Kindelia$Term$let,
        'Kindelia.parse.term.let': Kindelia$parse$term$let,
        'Maybe.bind': Maybe$bind,
        'Maybe.monad': Maybe$monad,
        'BBT.lookup': BBT$lookup,
        'Cmp.as_ltn': Cmp$as_ltn,
        'Word.ltn': Word$ltn,
        'U16.ltn': U16$ltn,
        'U16.cmp': U16$cmp,
        'String.cmp': String$cmp,
        'Map.get': Map$get,
        'Kindelia.get_data': Kindelia$get_data,
        'Parser.fail': Parser$fail,
        'List.find': List$find,
        'String.eql': String$eql,
        'Kindelia.parse.term.create.fields': Kindelia$parse$term$create$fields,
        'List.mapped': List$mapped,
        'Pair.fst': Pair$fst,
        'Maybe.default': Maybe$default,
        'List.find_index.go': List$find_index$go,
        'List.find_index': List$find_index,
        'Kindelia.Term.create': Kindelia$Term$create,
        'Kindelia.parse.term.create': Kindelia$parse$term$create,
        'Kindelia.parse.term.match.cases': Kindelia$parse$term$match$cases,
        'Kindelia.Term.match': Kindelia$Term$match,
        'Kindelia.parse.term.match': Kindelia$parse$term$match,
        'Parser.many1': Parser$many1,
        'Parser.digit': Parser$digit,
        'Nat.add': Nat$add,
        'Nat.mul': Nat$mul,
        'Nat.from_base.go': Nat$from_base$go,
        'Nat.from_base': Nat$from_base,
        'Parser.nat': Parser$nat,
        'Nat.gte': Nat$gte,
        'Nat.pow': Nat$pow,
        'Kindelia.Term.word': Kindelia$Term$word,
        'U64.new': U64$new,
        'Nat.apply': Nat$apply,
        'Word': Word,
        'Word.e': Word$e,
        'Word.i': Word$i,
        'Word.o': Word$o,
        'Word.inc': Word$inc,
        'Word.zero': Word$zero,
        'Nat.to_word': Nat$to_word,
        'Nat.to_u64': Nat$to_u64,
        'Kindelia.parse.term.word': Kindelia$parse$term$word,
        'Kindelia.Term.compare': Kindelia$Term$compare,
        'Kindelia.parse.term.compare': Kindelia$parse$term$compare,
        'Kindelia.Operation.add': Kindelia$Operation$add,
        'Kindelia.Operation.sub': Kindelia$Operation$sub,
        'Kindelia.Operation.mul': Kindelia$Operation$mul,
        'Kindelia.Operation.div': Kindelia$Operation$div,
        'Kindelia.Operation.mod': Kindelia$Operation$mod,
        'Kindelia.Operation.or': Kindelia$Operation$or,
        'Kindelia.Operation.and': Kindelia$Operation$and,
        'Kindelia.Operation.xor': Kindelia$Operation$xor,
        'Kindelia.parse.term.operation': Kindelia$parse$term$operation,
        'Kindelia.Term.operate': Kindelia$Term$operate,
        'Kindelia.parse.term.operate': Kindelia$parse$term$operate,
        'Kindelia.Term.set': Kindelia$Term$set,
        'Kindelia.parse.term.set': Kindelia$parse$term$set,
        'Kindelia.Term.get': Kindelia$Term$get,
        'Kindelia.parse.term.get': Kindelia$parse$term$get,
        'Kindelia.Term.bind': Kindelia$Term$bind,
        'Kindelia.parse.term.bind': Kindelia$parse$term$bind,
        'Kindelia.Term.return': Kindelia$Term$return,
        'Kindelia.parse.term.return': Kindelia$parse$term$return,
        'Kindelia.Term.call': Kindelia$Term$call,
        'Kindelia.parse.term.call': Kindelia$parse$term$call,
        'Kindelia.Term.var': Kindelia$Term$var,
        'Kindelia.parse.term.var': Kindelia$parse$term$var,
        'Kindelia.parse.term': Kindelia$parse$term,
        'Kindelia.Bond.new': Kindelia$Bond$new,
        'Kindelia.parse.bond': Kindelia$parse$bond,
        'Kindelia.Transaction.new_bond': Kindelia$Transaction$new_bond,
        'Kindelia.File.new': Kindelia$File$new,
        'Kindelia.parse.file': Kindelia$parse$file,
        'Kindelia.Transaction.new_file': Kindelia$Transaction$new_file,
        'Kindelia.Eval.new': Kindelia$Eval$new,
        'Kindelia.parse.eval': Kindelia$parse$eval,
        'Kindelia.Transaction.new_eval': Kindelia$Transaction$new_eval,
        'Kindelia.parse.transaction': Kindelia$parse$transaction,
        'Kindelia.parse.block': Kindelia$parse$block,
        'IO': IO,
        'Nat.ltn': Nat$ltn,
        'String.length.go': String$length$go,
        'String.length': String$length,
        'String.flatten.go': String$flatten$go,
        'String.flatten': String$flatten,
        'String.join.go': String$join$go,
        'String.join': String$join,
        'Kind.Code.highlight.end': Kind$Code$highlight$end,
        'Maybe.extract': Maybe$extract,
        'Nat.is_zero': Nat$is_zero,
        'Nat.double': Nat$double,
        'Nat.pred': Nat$pred,
        'String.reverse.go': String$reverse$go,
        'String.reverse': String$reverse,
        'String.pad_right': String$pad_right,
        'String.pad_left': String$pad_left,
        'Nat.lte': Nat$lte,
        'Nat.sub': Nat$sub,
        'Nat.div_mod.go': Nat$div_mod$go,
        'Nat.div_mod': Nat$div_mod,
        'Nat.to_base.go': Nat$to_base$go,
        'Nat.to_base': Nat$to_base,
        'Pair.snd': Pair$snd,
        'Nat.mod': Nat$mod,
        'List.at': List$at,
        'Nat.show_digit': Nat$show_digit,
        'Nat.to_string_base': Nat$to_string_base,
        'Nat.show': Nat$show,
        'Bool.not': Bool$not,
        'U16.new': U16$new,
        'Nat.to_u16': Nat$to_u16,
        'Kind.Code.color': Kind$Code$color,
        'Nat.eql': Nat$eql,
        'List.take': List$take,
        'Kind.Code.highlight.go': Kind$Code$highlight$go,
        'Kind.Code.highlight': Kind$Code$highlight,
        'IO.ask': IO$ask,
        'IO.bind': IO$bind,
        'IO.end': IO$end,
        'IO.monad': IO$monad,
        'IO.put_string': IO$put_string,
        'IO.print': IO$print,
        'Bits.e': Bits$e,
        'Bits.o': Bits$o,
        'Word.subber': Word$subber,
        'Word.sub': Word$sub,
        'U16.sub': U16$sub,
        'Word.adder': Word$adder,
        'Word.add': Word$add,
        'U16.add': U16$add,
        'Nat.div': Nat$div,
        'Bits.i': Bits$i,
        'Kindelia.serialize.fixlen': Kindelia$serialize$fixlen,
        'Word.fold': Word$fold,
        'Word.to_nat': Word$to_nat,
        'U16.to_nat': U16$to_nat,
        'Bits.concat': Bits$concat,
        'Kindelia.serialize.name': Kindelia$serialize$name,
        'Kindelia.serialize.list': Kindelia$serialize$list,
        'Kindelia.serialize.pair': Kindelia$serialize$pair,
        'Kindelia.serialize.type': Kindelia$serialize$type,
        'Kindelia.serialize.constructor': Kindelia$serialize$constructor,
        'Kindelia.serialize.data': Kindelia$serialize$data,
        'Kindelia.serialize.varlen.go': Kindelia$serialize$varlen$go,
        'Kindelia.serialize.varlen': Kindelia$serialize$varlen,
        'Kindelia.serialize.name.local': Kindelia$serialize$name$local,
        'List.map': List$map,
        'List.concat': List$concat,
        'Kindelia.serialize.cases': Kindelia$serialize$cases,
        'Kindelia.get_constructors': Kindelia$get_constructors,
        'U64.to_nat': U64$to_nat,
        'Kindelia.serialize.term': Kindelia$serialize$term,
        'Kindelia.serialize.bond': Kindelia$serialize$bond,
        'Kindelia.serialize.file': Kindelia$serialize$file,
        'Kindelia.serialize.eval': Kindelia$serialize$eval,
        'Kindelia.serialize.transaction': Kindelia$serialize$transaction,
        'Kindelia.serialize.block': Kindelia$serialize$block,
        'Bits.is_empty': Bits$is_empty,
        'Kindelia.deserialize.fixlen': Kindelia$deserialize$fixlen,
        'U16.from_nat': U16$from_nat,
        'Kindelia.deserialize.name': Kindelia$deserialize$name,
        'Kindelia.deserialize.list': Kindelia$deserialize$list,
        'Kindelia.deserialize.pair': Kindelia$deserialize$pair,
        'Kindelia.deserialize.type': Kindelia$deserialize$type,
        'Kindelia.deserialize.constructor': Kindelia$deserialize$constructor,
        'Kindelia.deserialize.data': Kindelia$deserialize$data,
        'U64.from_nat': U64$from_nat,
        'Kindelia.deserialize.varlen.go': Kindelia$deserialize$varlen$go,
        'Kindelia.deserialize.varlen': Kindelia$deserialize$varlen,
        'List.get': List$get,
        'Kindelia.deserialize.name.local': Kindelia$deserialize$name$local,
        'Kindelia.deserialize.cases': Kindelia$deserialize$cases,
        'Kindelia.deserialize.term': Kindelia$deserialize$term,
        'Kindelia.deserialize.bond': Kindelia$deserialize$bond,
        'Kindelia.deserialize.file': Kindelia$deserialize$file,
        'Kindelia.deserialize.eval': Kindelia$deserialize$eval,
        'Kindelia.deserialize.transaction': Kindelia$deserialize$transaction,
        'Kindelia.deserialize.block': Kindelia$deserialize$block,
        'Bits.hex.encode': Bits$hex$encode,
        'Bits.eql': Bits$eql,
        'BBT': BBT,
        'Map': Map,
        'BBT.bin': BBT$bin,
        'U32.new': U32$new,
        'Nat.to_u32': Nat$to_u32,
        'BBT.tip': BBT$tip,
        'BBT.singleton': BBT$singleton,
        'BBT.size': BBT$size,
        'U32.add': U32$add,
        'Word.shift_left.one.go': Word$shift_left$one$go,
        'Word.shift_left.one': Word$shift_left$one,
        'Word.shift_left': Word$shift_left,
        'Word.mul.go': Word$mul$go,
        'Word.to_zero': Word$to_zero,
        'Word.mul': Word$mul,
        'U32.mul': U32$mul,
        'BBT.w': BBT$w,
        'U32.ltn': U32$ltn,
        'U32.from_nat': U32$from_nat,
        'BBT.node': BBT$node,
        'Cmp.as_gtn': Cmp$as_gtn,
        'Word.gtn': Word$gtn,
        'U32.gtn': U32$gtn,
        'BBT.balance': BBT$balance,
        'BBT.insert': BBT$insert,
        'Map.set': Map$set,
        'Kindelia.Entry.data': Kindelia$Entry$data,
        'Kindelia.Entry.bond': Kindelia$Entry$bond,
        'List.unzip': List$unzip,
        'Kindelia.extend': Kindelia$extend,
        'BBT.from_list.go': BBT$from_list$go,
        'BBT.from_list': BBT$from_list,
        'Map.from_list': Map$from_list,
        'Kindelia.equal': Kindelia$equal,
        'Kindelia.get_bond': Kindelia$get_bond,
        'List.zip': List$zip,
        'List.all': List$all,
        'List.length': List$length,
        'List.zip_with': List$zip_with,
        'List.zipped_with': List$zipped_with,
        'List.and': List$and,
        'Kindelia.get_file': Kindelia$get_file,
        'List.is_empty': List$is_empty,
        'Maybe.if': Maybe$if,
        'List.in': List$in,
        'Bool.or': Bool$or,
        'Kindelia.check': Kindelia$check,
        'Kindelia.Entry.file': Kindelia$Entry$file,
        'Kindelia.sanitize.many': Kindelia$sanitize$many,
        'Triple.new': Triple$new,
        'Kindelia.rename': Kindelia$rename,
        'List.for': List$for,
        'Kindelia.sanitize.cases': Kindelia$sanitize$cases,
        'Kindelia.sanitize': Kindelia$sanitize,
        'Kindelia.Runtime': Kindelia$Runtime,
        'Kindelia.Runtime.new': Kindelia$Runtime$new,
        'Triple': Triple,
        'Kindelia.rename.many': Kindelia$rename$many,
        'U64.ltn': U64$ltn,
        'U64.eql': U64$eql,
        'U64.cmp': U64$cmp,
        'U64.add': U64$add,
        'U64.sub': U64$sub,
        'U64.mul': U64$mul,
        'Word.bit_length.go': Word$bit_length$go,
        'Word.bit_length': Word$bit_length,
        'Cmp.as_gte': Cmp$as_gte,
        'Word.gte': Word$gte,
        'Word.or': Word$or,
        'Word.shift_right.one.go': Word$shift_right$one$go,
        'Word.shift_right.one': Word$shift_right$one,
        'Word.shift_right': Word$shift_right,
        'Word.div.go': Word$div$go,
        'Word.div': Word$div,
        'U64.div': U64$div,
        'Word.mod': Word$mod,
        'U64.mod': U64$mod,
        'U64.or': U64$or,
        'Word.and': Word$and,
        'U64.and': U64$and,
        'Word.xor': Word$xor,
        'U64.xor': U64$xor,
        'Kindelia.reduce': Kindelia$reduce,
        'Kindelia.normalize.many': Kindelia$normalize$many,
        'Kindelia.normalize.cases': Kindelia$normalize$cases,
        'Kindelia.normalize': Kindelia$normalize,
        'Kindelia.run': Kindelia$run,
        'Kindelia.show.type': Kindelia$show$type,
        'Word.show': Word$show,
        'U64.show': U64$show,
        'String.is_empty': String$is_empty,
        'Kindelia.show.term': Kindelia$show$term,
        'Kindelia.transact': Kindelia$transact,
        'Kindelia.api.run.go.transactions': Kindelia$api$run$go$transactions,
        'Kindelia.api.run.go': Kindelia$api$run$go,
        'Kindelia.genesis': Kindelia$genesis,
        'Kindelia.api.run': Kindelia$api$run,
        'Kindelia': Kindelia,
    };
})();
module.exports['$main$']();