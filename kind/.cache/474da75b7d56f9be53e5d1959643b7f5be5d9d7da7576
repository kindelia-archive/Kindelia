#world #vars #bits ((((bits #bits ((Pair Bits) Litereum.Term)) ((((Pair.new Bits) Litereum.Term) bits) (Litereum.Term.word (U64.from_nat +0)))) #bits.pred (((((Litereum.deserialize.name.local world) vars) bits.pred) # ((Pair Bits) Litereum.Term)) #bits #name ((((Pair.new Bits) Litereum.Term) bits) (Litereum.Term.var name)))) #bits.pred ((((Litereum.deserialize.fixlen +3) bits.pred) # ((Pair Bits) Litereum.Term)) #bits #ctor (((((Nat.eql ctor) +0) # ((Pair Bits) Litereum.Term)) ((((Litereum.deserialize.name.old world) bits) # ((Pair Bits) Litereum.Term)) #bits #name ((((Litereum.deserialize.type world) bits) # ((Pair Bits) Litereum.Term)) #bits #type (((((Litereum.deserialize.term world) vars) bits) # ((Pair Bits) Litereum.Term)) #bits #expr (((((Litereum.deserialize.term world) (((List.cons String) name) vars)) bits) # ((Pair Bits) Litereum.Term)) #bits #body ((((Pair.new Bits) Litereum.Term) bits) ((((Litereum.Term.let name) type) expr) body))))))) (((((Nat.eql ctor) +1) # ((Pair Bits) Litereum.Term)) ((((Litereum.deserialize.name.old world) bits) # ((Pair Bits) Litereum.Term)) #bits #bond (((((Litereum.deserialize.list Litereum.Term) ((Litereum.deserialize.term world) vars)) bits) # ((Pair Bits) Litereum.Term)) #bits #args ((((Pair.new Bits) Litereum.Term) bits) ((Litereum.Term.call bond) args))))) (((((Nat.eql ctor) +2) # ((Pair Bits) Litereum.Term)) ((((Litereum.deserialize.name.old world) bits) # ((Pair Bits) Litereum.Term)) #bits #ctor (((((Litereum.deserialize.list Litereum.Term) ((Litereum.deserialize.term world) vars)) bits) # ((Pair Bits) Litereum.Term)) #bits #vals ((((Pair.new Bits) Litereum.Term) bits) ((Litereum.Term.create ctor) vals))))) (((((Nat.eql ctor) +3) # ((Pair Bits) Litereum.Term)) (((((Litereum.deserialize.name.local world) vars) bits) # ((Pair Bits) Litereum.Term)) #bits #name ((((Litereum.deserialize.name.old world) bits) # ((Pair Bits) Litereum.Term)) #bits #data (((((((Litereum.deserialize.cases world) vars) name) (((Maybe.default (List Litereum.Constructor)) ((Litereum.get_constructors world) data)) (List.nil Litereum.Constructor))) bits) # ((Pair Bits) Litereum.Term)) #bits #cses ((((Pair.new Bits) Litereum.Term) bits) (((Litereum.Term.match name) data) cses)))))) (((((Nat.eql ctor) +4) # ((Pair Bits) Litereum.Term)) ((((Litereum.deserialize.fixlen +64) bits) # ((Pair Bits) Litereum.Term)) #bits #numb ((((Pair.new Bits) Litereum.Term) bits) (Litereum.Term.word (Nat.to_u64 numb))))) (((((Nat.eql ctor) +5) # ((Pair Bits) Litereum.Term)) (((((Litereum.deserialize.term world) vars) bits) # ((Pair Bits) Litereum.Term)) #bits #val0 (((((Litereum.deserialize.term world) vars) bits) # ((Pair Bits) Litereum.Term)) #bits #val1 (((((Litereum.deserialize.term world) vars) bits) # ((Pair Bits) Litereum.Term)) #bits #iflt (((((Litereum.deserialize.term world) vars) bits) # ((Pair Bits) Litereum.Term)) #bits #ifeq (((((Litereum.deserialize.term world) vars) bits) # ((Pair Bits) Litereum.Term)) #bits #ifgt ((((Pair.new Bits) Litereum.Term) bits) (((((Litereum.Term.compare val0) val1) iflt) ifeq) ifgt)))))))) (((((Nat.eql ctor) +6) # ((Pair Bits) Litereum.Term)) ((((Litereum.deserialize.fixlen +3) bits) # ((Pair Bits) Litereum.Term)) #bits #oper (((((Litereum.deserialize.term world) vars) bits) # ((Pair Bits) Litereum.Term)) #bits #val0 (((((Litereum.deserialize.term world) vars) bits) # ((Pair Bits) Litereum.Term)) #bits #val1 !oper = (((((Nat.eql oper) +0) # Litereum.Operation) Litereum.Operation.add) (((((Nat.eql oper) +1) # Litereum.Operation) Litereum.Operation.sub) (((((Nat.eql oper) +2) # Litereum.Operation) Litereum.Operation.mul) (((((Nat.eql oper) +3) # Litereum.Operation) Litereum.Operation.div) (((((Nat.eql oper) +4) # Litereum.Operation) Litereum.Operation.mod) (((((Nat.eql oper) +5) # Litereum.Operation) Litereum.Operation.or) (((((Nat.eql oper) +6) # Litereum.Operation) Litereum.Operation.and) (((((Nat.eql oper) +7) # Litereum.Operation) Litereum.Operation.xor) Litereum.Operation.add)))))))); ((((Pair.new Bits) Litereum.Term) bits) (((Litereum.Term.operate oper) val0) val1)))))) (((((Nat.eql ctor) +7) # ((Pair Bits) Litereum.Term)) ((((Litereum.deserialize.name.old world) bits) # ((Pair Bits) Litereum.Term)) #bits #name (((((Litereum.get_bond world) name) # ((Pair Bits) Litereum.Term)) ((((Pair.new Bits) Litereum.Term) bits) (Litereum.Term.word (U64.from_nat +0)))) #bond !bond = bond; ((bond #bond ((Pair Bits) Litereum.Term)) #bond.name #bond.owners #bond.input_names #bond.input_types #bond.output_type #bond.main !vrs2 = (((List.concat String) ((List.reverse String) bond.input_names)) vars); (((((Litereum.deserialize.term world) vrs2) bits) # ((Pair Bits) Litereum.Term)) #bits #main (((((Litereum.deserialize.term world) vars) bits) # ((Pair Bits) Litereum.Term)) #bits #body ((((Pair.new Bits) Litereum.Term) bits) (((Litereum.Term.bind name) main) body)))))))) ((((Pair.new Bits) Litereum.Term) bits) (Litereum.Term.word (U64.from_nat +0)))))))))))))