#world ((((((Monad.bind Parser) Parser.monad) Unit) Litereum.Term) (Litereum.parse.text "case ")) # ((((((Monad.bind Parser) Parser.monad) String) Litereum.Term) Litereum.parse.name) #name ((((((Monad.bind Parser) Parser.monad) Unit) Litereum.Term) (Litereum.parse.text ":")) # ((((((Monad.bind Parser) Parser.monad) String) Litereum.Term) Litereum.parse.name) #data_name (((((Litereum.get_data world) data_name) #found (Parser Litereum.Term)) ((Parser.fail Litereum.Term) "Type not found.")) #found.value !data = found.value; ((data #data (Parser Litereum.Term)) #data.name #data.constructors ((((((Monad.bind Parser) Parser.monad) Unit) Litereum.Term) (Litereum.parse.text "{")) # ((((((Monad.bind Parser) Parser.monad) (List Litereum.Term)) Litereum.Term) ((Litereum.parse.term.match.cases world) data.constructors)) #cses ((((((Monad.bind Parser) Parser.monad) Unit) Litereum.Term) (Litereum.parse.text "}")) # ((((Monad.pure Parser) Parser.monad) Litereum.Term) (((Litereum.Term.match name) data_name) cses)))))))))))