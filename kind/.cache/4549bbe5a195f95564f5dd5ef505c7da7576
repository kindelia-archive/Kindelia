#world #block_number #code !parsed = ((Kindelia.parse.block world) (((((Parser.State.new (Maybe.none Parser.Error)) "") +0) +0) code)); (((parsed #parsed (IO Unit)) #parsed.err ((parsed.err #parsed.err (IO Unit)) #parsed.err.nam #parsed.err.ini #parsed.err.idx #parsed.err.msg (((((Nat.ltn parsed.err.idx) (String.length code)) # (IO Unit)) !err = ((String.concat parsed.err.msg) (((parsed.err.nam #parsed.err.nam String) "") #parsed.err.nam.head #parsed.err.nam.tail ((String.concat " Inside ") ((String.concat parsed.err.nam) ":")))); !hig = ((((Kind.Code.highlight code) parsed.err.ini) parsed.err.idx) (Nat.succ parsed.err.idx)); !str = (String.flatten (((List.cons String) err) (((List.cons String) "\u{a}") (((List.cons String) hig) (List.nil String))))); ((((((Monad.bind IO) IO.monad) Unit) Unit) (IO.print ((String.concat "Error parsing block #") (Nat.show block_number)))) # (IO.print str))) (IO.print "Done.")))) #parsed.pst #parsed.val !block = parsed.val; ((((((Monad.bind IO) IO.monad) Unit) Unit) (IO.print ((String.concat "Block #") (Nat.show block_number)))) # !bits_0 = ((Kindelia.serialize.block world) block); !bits_1 = ((Kindelia.serialize.block world) ((((Kindelia.deserialize.block world) bits_0) # (List Kindelia.Transaction)) #fst #snd snd)); ((((((Monad.bind IO) IO.monad) Unit) Unit) (IO.print ((String.concat "$ ") ((String.concat (Bits.hex.encode bits_0)) ((String.concat " ") (((((Bits.eql bits_0) bits_1) # String) "ok") "bad_serialization")))))) # ((((Kindelia.api.run.go.transactions world) block_number) ((parsed.pst # String) #err #nam #ini #idx #str str)) block))))