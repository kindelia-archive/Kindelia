#world ((Parser.choice (List Kindelia.Transaction)) (((List.cons (Parser (List Kindelia.Transaction))) ((((((Monad.bind Parser) Parser.monad) Kindelia.Transaction) (List Kindelia.Transaction)) (Kindelia.parse.transaction world)) #head !world = (((((head #head Kindelia.World) #head.data world) #head.bond ((world # Kindelia.World) #names #entry ((Kindelia.World.new names) ((((Map.set Kindelia.Entry) ((head.bond # String) #name #ownr #args #otyp #main name)) (Kindelia.Entry.bond head.bond)) entry)))) #head.eval world) #head.name world); ((((((Monad.bind Parser) Parser.monad) (List Kindelia.Transaction)) (List Kindelia.Transaction)) (Kindelia.parse.block world)) #tail ((((Monad.pure Parser) Parser.monad) (List Kindelia.Transaction)) (((List.cons Kindelia.Transaction) head) tail))))) (((List.cons (Parser (List Kindelia.Transaction))) ((((((Monad.bind Parser) Parser.monad) Unit) (List Kindelia.Transaction)) (Kindelia.parse.text "save")) # ((((Monad.pure Parser) Parser.monad) (List Kindelia.Transaction)) (List.nil Kindelia.Transaction)))) (List.nil (Parser (List Kindelia.Transaction))))))