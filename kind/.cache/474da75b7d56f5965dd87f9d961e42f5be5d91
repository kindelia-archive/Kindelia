#world ((Parser.choice (List Litereum.Transaction)) (((List.cons (Parser (List Litereum.Transaction))) ((((((Monad.bind Parser) Parser.monad) Litereum.Transaction) (List Litereum.Transaction)) (Litereum.parse.transaction world)) #transaction ((((((Monad.bind Parser) Parser.monad) (List Litereum.Transaction)) (List Litereum.Transaction)) (Litereum.parse.block ((Litereum.reg world) transaction))) #block_rest ((((Monad.pure Parser) Parser.monad) (List Litereum.Transaction)) (((List.cons Litereum.Transaction) transaction) block_rest))))) (((List.cons (Parser (List Litereum.Transaction))) ((((((Monad.bind Parser) Parser.monad) (List Unit)) (List Litereum.Transaction)) Litereum.parse.ignore) # ((((((Monad.bind Parser) Parser.monad) Unit) (List Litereum.Transaction)) Parser.eof) # ((((Monad.pure Parser) Parser.monad) (List Litereum.Transaction)) (List.nil Litereum.Transaction))))) (List.nil (Parser (List Litereum.Transaction))))))