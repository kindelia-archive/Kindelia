#world ((((((Monad.bind Parser) Parser.monad) Unit) Litereum.Term) (Litereum.parse.text "run")) # ((((((Monad.bind Parser) Parser.monad) ((Pair String) Litereum.Type)) Litereum.Term) ((Parser.choice ((Pair String) Litereum.Type)) (((List.cons (Parser ((Pair String) Litereum.Type))) ((((((Monad.bind Parser) Parser.monad) String) ((Pair String) Litereum.Type)) Litereum.parse.name) #name ((((((Monad.bind Parser) Parser.monad) Unit) ((Pair String) Litereum.Type)) (Litereum.parse.text ":")) # ((((((Monad.bind Parser) Parser.monad) Litereum.Type) ((Pair String) Litereum.Type)) (Litereum.parse.type world)) #type ((((((Monad.bind Parser) Parser.monad) Unit) ((Pair String) Litereum.Type)) (Litereum.parse.text "=")) # ((((Monad.pure Parser) Parser.monad) ((Pair String) Litereum.Type)) ((((Pair.new String) Litereum.Type) name) type))))))) (((List.cons (Parser ((Pair String) Litereum.Type))) ((((Monad.pure Parser) Parser.monad) ((Pair String) Litereum.Type)) ((((Pair.new String) Litereum.Type) "") Litereum.Type.word))) (List.nil (Parser ((Pair String) Litereum.Type))))))) #name_type ((name_type # (Parser Litereum.Term)) #name #type ((((((Monad.bind Parser) Parser.monad) Litereum.Term) Litereum.Term) (Litereum.parse.term world)) #expr ((((((Monad.bind Parser) Parser.monad) (Maybe Unit)) Litereum.Term) ((Parser.maybe Unit) (Litereum.parse.text ";"))) # ((((((Monad.bind Parser) Parser.monad) Litereum.Term) Litereum.Term) (Litereum.parse.term world)) #body ((((Monad.pure Parser) Parser.monad) Litereum.Term) ((((Litereum.Term.run name) type) expr) body))))))))