#world ((Parser.choice Kindelia.Term) (((List.cons (Parser Kindelia.Term)) ((((((Monad.bind Parser) Parser.monad) Unit) Kindelia.Term) (Kindelia.parse.text "run")) # ((((((Monad.bind Parser) Parser.monad) String) Kindelia.Term) Kindelia.parse.name) #name ((((((Monad.bind Parser) Parser.monad) Unit) Kindelia.Term) (Kindelia.parse.text ":")) # ((((((Monad.bind Parser) Parser.monad) Kindelia.Type) Kindelia.Term) (Kindelia.parse.type world)) #type ((((((Monad.bind Parser) Parser.monad) Unit) Kindelia.Term) (Kindelia.parse.text "=")) # ((((((Monad.bind Parser) Parser.monad) Kindelia.Term) Kindelia.Term) (Kindelia.parse.term world)) #expr ((((((Monad.bind Parser) Parser.monad) (Maybe Unit)) Kindelia.Term) ((Parser.maybe Unit) (Kindelia.parse.text ";"))) # ((((((Monad.bind Parser) Parser.monad) Kindelia.Term) Kindelia.Term) (Kindelia.parse.term world)) #body ((((Monad.pure Parser) Parser.monad) Kindelia.Term) ((((Kindelia.Term.bind name) type) expr) body))))))))))) (((List.cons (Parser Kindelia.Term)) ((((((Monad.bind Parser) Parser.monad) Unit) Kindelia.Term) (Kindelia.parse.text "run")) # ((((((Monad.bind Parser) Parser.monad) Kindelia.Term) Kindelia.Term) (Kindelia.parse.term world)) #expr ((((((Monad.bind Parser) Parser.monad) (Maybe Unit)) Kindelia.Term) ((Parser.maybe Unit) (Kindelia.parse.text ";"))) # ((((((Monad.bind Parser) Parser.monad) Kindelia.Term) Kindelia.Term) (Kindelia.parse.term world)) #body ((((Monad.pure Parser) Parser.monad) Kindelia.Term) ((((Kindelia.Term.bind "") Kindelia.Type.word) expr) body))))))) (List.nil (Parser Kindelia.Term)))))