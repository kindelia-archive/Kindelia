#world #ctrs (((ctrs #ctrs (Parser (List Kindelia.Term))) ((((Monad.pure Parser) Parser.monad) (List Kindelia.Term)) (List.nil Kindelia.Term))) #ctrs.head #ctrs.tail !ctor = ctrs.head; ((ctor #ctor (Parser (List Kindelia.Term))) #ctor.name #ctor.args ((((((Monad.bind Parser) Parser.monad) Unit) (List Kindelia.Term)) (Kindelia.parse.text ctor.name)) # ((((((Monad.bind Parser) Parser.monad) Unit) (List Kindelia.Term)) (Kindelia.parse.text ":")) # ((((((Monad.bind Parser) Parser.monad) Kindelia.Term) (List Kindelia.Term)) (Kindelia.parse.term world)) #head ((((((Monad.bind Parser) Parser.monad) (Maybe Unit)) (List Kindelia.Term)) ((Parser.maybe Unit) (Kindelia.parse.text ","))) # ((((((Monad.bind Parser) Parser.monad) (List Kindelia.Term)) (List Kindelia.Term)) ((Kindelia.parse.term.match.cases world) ctrs.tail)) #tail ((((Monad.pure Parser) Parser.monad) (List Kindelia.Term)) (((List.cons Kindelia.Term) head) tail)))))))))