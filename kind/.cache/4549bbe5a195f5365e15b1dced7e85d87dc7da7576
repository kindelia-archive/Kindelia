#world #table #fresh #old_name #new_name #ctrs #cses (((ctrs #ctrs ((Pair Nat) (List Kindelia.Term))) (((cses #cses ((Pair Nat) (List Kindelia.Term))) ((((Pair.new Nat) (List Kindelia.Term)) fresh) (List.nil Kindelia.Term))) #cses.head #cses.tail ((((Pair.new Nat) (List Kindelia.Term)) fresh) (List.nil Kindelia.Term)))) #ctrs.head #ctrs.tail (((cses #cses ((Pair Nat) (List Kindelia.Term))) ((((Pair.new Nat) (List Kindelia.Term)) fresh) (List.nil Kindelia.Term))) #cses.head #cses.tail !new_table = table; !new_table = (((((List.for ((Pair String) Kindelia.Type)) ((ctrs.head # (List ((Pair String) Kindelia.Type))) #name #args args)) (Map String)) new_table) #field #new_table ((((Map.set String) ((String.concat old_name) ((String.concat ".") ((field # String) #fst #snd fst)))) ((String.concat new_name) ((String.concat ".") ((field # String) #fst #snd fst)))) new_table)); ((((((Kindelia.sanitize world) new_table) fresh) cses.head) # ((Pair Nat) (List Kindelia.Term))) #fresh #head (((((((((Kindelia.sanitize.cases world) table) fresh) old_name) new_name) ctrs.tail) cses.tail) # ((Pair Nat) (List Kindelia.Term))) #fresh #tail ((((Pair.new Nat) (List Kindelia.Term)) fresh) (((List.cons Kindelia.Term) head) tail))))))