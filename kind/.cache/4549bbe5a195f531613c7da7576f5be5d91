#world #type #term ((((((((((term #term String) #term.name term.name) #term.bond #term.args (((((Kindelia.get_bond world) term.bond) # String) "[call?]") #bond !bond = bond; ((bond #bond String) #bond.name #bond.ownr #bond.args #bond.otyp #bond.main !args = ((((((List.zipped_with ((Pair String) Kindelia.Type)) Kindelia.Term) bond.args) term.args) String) #inp #arg (((Kindelia.show.term world) ((inp # Kindelia.Type) #fst #snd snd)) arg)); ((String.concat term.bond) ((String.concat "(") ((String.concat ((String.join ",") args)) ")")))))) #term.name #term.type #term.expr #term.body !name = term.name; !etyp = ((Kindelia.show.type world) term.type); !expr = (((Kindelia.show.term world) term.type) term.expr); !body = (((Kindelia.show.term world) type) term.body); ((String.concat "let ") ((String.concat name) ((String.concat " : ") ((String.concat etyp) ((String.concat " = ") ((String.concat expr) ((String.concat " ") body)))))))) #term.ctor #term.vals (((type #type String) ((String.concat (Nat.show term.ctor)) ((String.concat "{") ((String.concat ((String.join ",") ((((List.mapped Kindelia.Term) term.vals) String) ((Kindelia.show.term world) Kindelia.Type.word)))) "}")))) #type.name (((((Kindelia.get_data world) type.name) # String) "[create?]") #data !data = data; ((data #data String) #data.name #data.ctrs ((((((List.get Kindelia.Constructor) term.ctor) data.ctrs) # String) "[create?]") #ctor !ctor = ctor; ((ctor #ctor String) #ctor.name #ctor.args !atyp = ((((List.mapped ((Pair String) Kindelia.Type)) ctor.args) Kindelia.Type) #x ((x # Kindelia.Type) #fst #snd snd)); !vals = ((((((List.zipped_with Kindelia.Term) ((Pair String) Kindelia.Type)) term.vals) ((ctor # (List ((Pair String) Kindelia.Type))) #name #args args)) String) #val #arg (((Kindelia.show.term world) ((arg # Kindelia.Type) #fst #snd snd)) val)); ((String.concat data.name) ((String.concat "@") ((String.concat ctor.name) ((String.concat "{") ((String.concat ((String.join ",") vals)) "}"))))))))))) #term.name #term.data #term.cses (((((Kindelia.get_data world) term.data) # String) "?") #data !data = data; ((data #data String) #data.name #data.ctrs !name = term.name; !cses = ((((((List.zipped_with Kindelia.Constructor) Kindelia.Term) data.ctrs) term.cses) String) #case_ctor #case_body ((String.concat ((case_ctor # String) #name #args name)) ((String.concat ": ") (((Kindelia.show.term world) type) case_body)))); ((String.concat "case ") ((String.concat name) ((String.concat " : ") ((String.concat term.data) ((String.concat " { ") ((String.concat ((String.join ", ") cses)) " }"))))))))) #term.numb ((String.concat "#") (U64.show term.numb))) #term.val0 #term.val1 #term.iflt #term.ifeq #term.ifgt !val0 = (((Kindelia.show.term world) Kindelia.Type.word) term.val0); !val1 = (((Kindelia.show.term world) Kindelia.Type.word) term.val1); !iflt = (((Kindelia.show.term world) type) term.iflt); !ifeq = (((Kindelia.show.term world) type) term.ifeq); !ifgt = (((Kindelia.show.term world) type) term.ifgt); ((String.concat "compare ") ((String.concat val0) ((String.concat " ") ((String.concat val1) ((String.concat " { _<_: ") ((String.concat iflt) ((String.concat " _=_: ") ((String.concat ifeq) ((String.concat " _>_: ") ((String.concat ifgt) " }"))))))))))) #term.oper #term.val0 #term.val1 !oper = (((((((((term.oper #term.oper String) "#add") "#sub") "#mul") "#div") "#mod") "#or") "#and") "#xor"); !val0 = (((Kindelia.show.term world) Kindelia.Type.word) term.val0); !val1 = (((Kindelia.show.term world) Kindelia.Type.word) term.val1); ((String.concat oper) ((String.concat "(") ((String.concat val0) ((String.concat ",") ((String.concat val1) ")")))))) #term.bond #term.expr #term.cont (((((Kindelia.get_bond world) term.bond) # String) "[bind?]") #bond !bond = bond; ((bond #bond String) #bond.name #bond.ownr #bond.args #bond.otyp #bond.main !expr = (((Kindelia.show.term world) bond.otyp) term.expr); !cont = (((Kindelia.show.term world) type) term.cont); ((String.concat "bind ") ((String.concat term.bond) ((String.concat " { ") ((String.concat expr) ((String.concat " } ") cont))))))))