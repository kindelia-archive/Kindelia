"\u{a}// Unit\u{a}\u{a}name Unit\u{a}name new\u{a}type Unit {\u{a}  new{}\u{a}}\u{a}\u{a}// Bool\u{a}\u{a}name Bool\u{a}name false\u{a}name true\u{a}type Bool {\u{a}  false{}\u{a}  true{}\u{a}}\u{a}\u{a}// Bits\u{a}\u{a}name Bits\u{a}name e\u{a}name o\u{a}name i\u{a}name pred\u{a}type Bits {\u{a}  e{}\u{a}  o{pred: Bits}\u{a}  i{pred: Bits}\u{a}}\u{a}\u{a}name Bits.inc\u{a}name x\u{a}\u{a}bond Bits.inc(x: Bits): Bits\u{a}  case x : Bits {\u{a}    e: i{e{}}\u{a}    o: i{x.pred}\u{a}    i: o{x.pred}\u{a}  }\u{a}\u{a}name Bits.add\u{a}name y\u{a}name rest\u{a}\u{a}bond Bits.add(x: Bits, y: Bits): Bits\u{a}  case y : Bits {\u{a}    e: e{}\u{a}    o:\u{a}      case x : Bits {\u{a}        e: y\u{a}        o: o{Bits.add(x.pred y.pred)}\u{a}        i: i{Bits.add(x.pred y.pred)}\u{a}      }\u{a}    i:\u{a}      case x : Bits {\u{a}        e: y\u{a}        o: i{Bits.add(x.pred y.pred)}\u{a}        i:\u{a}          let rest : Bits = Bits.add(x.pred y.pred)\u{a}          o{Bits.inc(rest)}\u{a}      }\u{a}  }\u{a}\u{a}name Bits.from_word\u{a}bond Bits.from_word(x: #word): Bits\u{a}  e{}\u{a}\u{a}// Nat\u{a}\u{a}name Nat\u{a}name zero\u{a}name succ\u{a}type Nat {\u{a}  zero{}\u{a}  succ{pred: Nat}\u{a}}\u{a}\u{a}"