#world ((((((Monad.bind Parser) Parser.monad) Unit) Kindelia.Eval) (Kindelia.parse.text "eval")) # ((((((Monad.bind Parser) Parser.monad) (Maybe (Maybe Kindelia.Auth))) Kindelia.Eval) ((Parser.maybe (Maybe Kindelia.Auth)) ((((((Monad.bind Parser) Parser.monad) Kindelia.Term) (Maybe Kindelia.Auth)) (Kindelia.parse.term.call world)) #term ((((Monad.pure Parser) Parser.monad) (Maybe Kindelia.Auth)) ((((((((((term #term (Maybe Kindelia.Auth)) #term.name (Maybe.none Kindelia.Auth)) #term.bond #term.args ((Maybe.some Kindelia.Auth) ((Kindelia.Auth.new term.bond) term.args))) #term.name #term.type #term.expr #term.body (Maybe.none Kindelia.Auth)) #term.ctor #term.vals (Maybe.none Kindelia.Auth)) #term.name #term.data #term.cses (Maybe.none Kindelia.Auth)) #term.numb (Maybe.none Kindelia.Auth)) #term.val0 #term.val1 #term.iflt #term.ifeq #term.ifgt (Maybe.none Kindelia.Auth)) #term.oper #term.val0 #term.val1 (Maybe.none Kindelia.Auth)) #term.bond #term.expr #term.cont (Maybe.none Kindelia.Auth)))))) #auth ((((((Monad.bind Parser) Parser.monad) Unit) Kindelia.Eval) (Kindelia.parse.text "{")) # ((((((Monad.bind Parser) Parser.monad) Kindelia.Term) Kindelia.Eval) (Kindelia.parse.term world)) #term ((((((Monad.bind Parser) Parser.monad) Unit) Kindelia.Eval) (Kindelia.parse.text "}")) # ((((((Monad.bind Parser) Parser.monad) Unit) Kindelia.Eval) (Kindelia.parse.text ":")) # ((((((Monad.bind Parser) Parser.monad) Kindelia.Type) Kindelia.Eval) (Kindelia.parse.type world)) #type !auth = (((auth #auth (Maybe Kindelia.Auth)) (Maybe.none Kindelia.Auth)) #auth.value (((auth.value #auth.value (Maybe Kindelia.Auth)) (Maybe.none Kindelia.Auth)) #auth.value.value ((Maybe.some Kindelia.Auth) auth.value.value))); ((((Monad.pure Parser) Parser.monad) Kindelia.Eval) (((Kindelia.Eval.new auth) term) type)))))))))