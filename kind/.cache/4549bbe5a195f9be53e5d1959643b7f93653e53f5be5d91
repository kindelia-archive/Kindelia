#world #vars #name #ctors #bits (((ctors #ctors ((Pair Bits) (List Kindelia.Term))) ((((Pair.new Bits) (List Kindelia.Term)) bits) (List.nil Kindelia.Term))) #ctors.head #ctors.tail !flds = ((((List.map ((Pair String) Kindelia.Type)) String) #fprm ((String.concat name) ((String.concat ".") ((fprm # String) #fst #snd fst)))) ((ctors.head # (List ((Pair String) Kindelia.Type))) #name #fprm fprm)); (((((Kindelia.deserialize.term world) (((List.concat String) ((List.reverse String) flds)) vars)) bits) # ((Pair Bits) (List Kindelia.Term))) #bits #head (((((((Kindelia.deserialize.cases world) vars) name) ctors.tail) bits) # ((Pair Bits) (List Kindelia.Term))) #bits #tail ((((Pair.new Bits) (List Kindelia.Term)) bits) (((List.cons Kindelia.Term) head) tail)))))