#world #constructors (((constructors #constructors (Parser (List Litereum.Term))) ((((Monad.pure Parser) Parser.monad) (List Litereum.Term)) (List.nil Litereum.Term))) #constructors.head #constructors.tail !ctor = constructors.head; ((ctor #ctor (Parser (List Litereum.Term))) #ctor.name #ctor.field_names #ctor.field_types ((((((Monad.bind Parser) Parser.monad) Unit) (List Litereum.Term)) (Litereum.parse.text ctor.name)) # ((((((Monad.bind Parser) Parser.monad) Unit) (List Litereum.Term)) (Litereum.parse.text ":")) # ((((((Monad.bind Parser) Parser.monad) Litereum.Term) (List Litereum.Term)) (Litereum.parse.term world)) #head ((((((Monad.bind Parser) Parser.monad) (Maybe Unit)) (List Litereum.Term)) ((Parser.maybe Unit) (Litereum.parse.text ","))) # ((((((Monad.bind Parser) Parser.monad) (List Litereum.Term)) (List Litereum.Term)) ((Litereum.parse.term.match.cases world) constructors.tail)) #tail ((((Monad.pure Parser) Parser.monad) (List Litereum.Term)) (((List.cons Litereum.Term) head) tail)))))))))