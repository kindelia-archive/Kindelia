type Nat {
  zero{}
  succ{pred: Nat}
}

save

// -----------------------------------------------------------------------------

bond double(x: Nat): Nat {
  case x : Nat {
    zero: zero{}
    succ: succ{succ{double(x.pred)}}
  }
}

eval {
  double(succ{succ{succ{zero{}}}})
} : Nat

save

// -----------------------------------------------------------------------------

bond get_count(): #word {
  #0
} @inc_count

bond inc_count(): & #word {
  bind get_count {
    +(get_count(), #1)
  }
  return #0
}

eval {
  run inc_count()
  run inc_count()
  run inc_count()
  return get_count()
} : & #word

save

// -----------------------------------------------------------------------------
