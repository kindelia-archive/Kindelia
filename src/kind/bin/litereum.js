module.exports = (function() {
    function word_to_u16(w) {
        var u = 0;
        for (var i = 0; i < 16; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u16_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 16; ++i) {
            w = {
                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u16_to_bits(x) {
        var s = '';
        for (var i = 0; i < 16; ++i) {
            s = (x & 1 ? '1' : '0') + s;
            x = x >>> 1;
        }
        return s;
    };

    function word_to_u32(w) {
        var u = 0;
        for (var i = 0; i < 32; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u32_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 32; ++i) {
            w = {
                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u32_for(state, from, til, func) {
        for (var i = from; i < til; ++i) {
            state = func(i)(state);
        }
        return state;
    };

    function word_to_u64(w) {
        var u = 0n;
        for (var i = 0n; i < 64n; i += 1n) {
            u = u | (w._ === 'Word.i' ? 1n << i : 0n);
            w = w.pred;
        };
        return u;
    };

    function u64_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0n; i < 64n; i += 1n) {
            w = {
                _: (u >> (64n - i - 1n)) & 1n ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };
    var list_for = list => nil => cons => {
        while (list._ !== 'List.nil') {
            nil = cons(list.head)(nil);
            list = list.tail;
        }
        return nil;
    };
    var list_length = list => {
        var len = 0;
        while (list._ === 'List.cons') {
            len += 1;
            list = list.tail;
        };
        return BigInt(len);
    };
    const inst_unit = x => x(null);
    const elim_unit = (x => {
        var $1 = (() => c0 => {
            var self = x;
            switch ("unit") {
                case 'unit':
                    var $0 = c0;
                    return $0;
            };
        })();
        return $1;
    });
    const inst_bool = x => x(true)(false);
    const elim_bool = (x => {
        var $4 = (() => c0 => c1 => {
            var self = x;
            if (self) {
                var $2 = c0;
                return $2;
            } else {
                var $3 = c1;
                return $3;
            };
        })();
        return $4;
    });
    const inst_nat = x => x(0n)(x0 => 1n + x0);
    const elim_nat = (x => {
        var $8 = (() => c0 => c1 => {
            var self = x;
            if (self === 0n) {
                var $5 = c0;
                return $5;
            } else {
                var $6 = (self - 1n);
                var $7 = c1($6);
                return $7;
            };
        })();
        return $8;
    });
    const inst_bits = x => x('')(x0 => x0 + '0')(x0 => x0 + '1');
    const elim_bits = (x => {
        var $14 = (() => c0 => c1 => c2 => {
            var self = x;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $9 = self.slice(0, -1);
                    var $10 = c1($9);
                    return $10;
                case 'i':
                    var $11 = self.slice(0, -1);
                    var $12 = c2($11);
                    return $12;
                case 'e':
                    var $13 = c0;
                    return $13;
            };
        })();
        return $14;
    });
    const inst_u16 = x => x(x0 => word_to_u16(x0));
    const elim_u16 = (x => {
        var $17 = (() => c0 => {
            var self = x;
            switch ('u16') {
                case 'u16':
                    var $15 = u16_to_word(self);
                    var $16 = c0($15);
                    return $16;
            };
        })();
        return $17;
    });
    const inst_u32 = x => x(x0 => word_to_u32(x0));
    const elim_u32 = (x => {
        var $20 = (() => c0 => {
            var self = x;
            switch ('u32') {
                case 'u32':
                    var $18 = u32_to_word(self);
                    var $19 = c0($18);
                    return $19;
            };
        })();
        return $20;
    });
    const inst_u64 = x => x(x0 => word_to_u64(x0));
    const elim_u64 = (x => {
        var $23 = (() => c0 => {
            var self = x;
            switch ('u64') {
                case 'u64':
                    var $21 = u64_to_word(self);
                    var $22 = c0($21);
                    return $22;
            };
        })();
        return $23;
    });
    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));
    const elim_string = (x => {
        var $28 = (() => c0 => c1 => {
            var self = x;
            if (self.length === 0) {
                var $24 = c0;
                return $24;
            } else {
                var $25 = self.charCodeAt(0);
                var $26 = self.slice(1);
                var $27 = c1($25)($26);
                return $27;
            };
        })();
        return $28;
    });
    var run = (p) => {
        if (typeof window === 'undefined') {
            var rl = eval("require('readline')").createInterface({
                input: process.stdin,
                output: process.stdout,
                terminal: false
            });
            var fs = eval("require('fs')");
            var pc = eval("process");
            var ht = eval("require('http')");
            var hs = eval("require('https')");
            var dg = eval("require('dgram')");
        } else {
            var rl = {
                question: (x, f) => f(''),
                close: () => {}
            };
            var fs = {
                readFileSync: () => ''
            };
            var pc = {
                exit: () => {},
                argv: []
            };
            var ht = null;
            var hs = null;
            var dg = null;
        };
        var lib = {
            rl,
            fs,
            pc,
            ht,
            hs,
            dg
        };
        return run_io(lib, p)
            .then((x) => {
                rl.close();
                return x;
            })
            .catch((e) => {
                rl.close();
                throw e;
            });
    };
    var set_file = (lib, param) => {
        var path = '';
        for (var i = 0; i < param.length && param[i] !== '='; ++i) {
            path += param[i];
        };
        var data = param.slice(i + 1);
        lib.fs.mkdirSync(path.split('/').slice(0, -1).join('/'), {
            recursive: true
        });
        lib.fs.writeFileSync(path, data);
        return '';
    };
    var del_file = (lib, param) => {
        try {
            lib.fs.unlinkSync(param);
            return '';
        } catch (e) {
            if (e.message.indexOf('EPERM') !== -1) {
                lib.fs.rmdirSync(param);
                return '';
            } else {
                throw e;
            }
        }
    };
    var get_file = (lib, param) => {
        return lib.fs.readFileSync(param, 'utf8');
    }
    var get_dir = (lib, param) => {
        return lib.fs.readdirSync(param).join(';');
    };
    var get_file_mtime = (lib, param) => {
        return String(lib.fs.statSync(param).mtime.getTime());
    };
    var request = (lib, param) => {
        if (typeof fetch === 'undefined') {
            return new Promise((res, err) => {
                (/^https/.test(param) ? lib.hs : lib.ht).get(param, r => {
                    let data = '';
                    r.on('data', chunk => {
                        data += chunk;
                    });
                    r.on('end', () => res(data));
                }).on('error', e => res(''));
            });
        } else {
            return fetch(param).then(res => res.text()).catch(e => '');
        }
    }
    let PORTS = {};

    function init_udp(lib, port_num) {
        return new Promise((resolve, reject) => {
            if (!PORTS[port_num]) {
                PORTS[port_num] = {
                    socket: lib.dg.createSocket('udp4'),
                    mailbox: []
                };
                PORTS[port_num].socket.bind(port_num);
                PORTS[port_num].socket.on('listening', () => resolve(PORTS[port_num]));
                PORTS[port_num].socket.on('message', (data, peer) => {
                    var ip = peer.address;
                    var port = peer.port;
                    PORTS[port_num].mailbox.push({
                        ip: peer.address,
                        port: peer.port,
                        data: data.toString('hex')
                    });
                })
                PORTS[port_num].socket.on('error', (err) => {
                    console.log('err');
                    reject('UDP init error.');
                });
            } else {
                resolve(PORTS[port_num]);
            }
        });
    }
    async function send_udp(lib, port_num, to_ip, to_port_num, data) {
        var port = await init_udp(lib, port_num);
        port.socket.send(Buffer.from(data, 'hex'), to_port_num, to_ip);
        return null;
    }
    async function recv_udp(lib, port_num) {
        var port = await init_udp(lib, port_num);
        var mailbox = port.mailbox;
        port.mailbox = [];
        return mailbox;
    }
    async function stop_udp(lib, port_num) {
        PORTS[port_num].socket.close();
        delete PORTS[port_num];
    }
    var file_error = e => {
        if (e.message.indexOf('NOENT') !== -1) {
            return '';
        } else {
            throw e;
        }
    };
    var io_action = {
        print: async (lib, param) => {
            console.log(param);
            return '';
        },
        put_string: async (lib, param) => {
            process.stdout.write(param);
            return '';
        },
        get_file: async (lib, param) => {
            try {
                return get_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        set_file: async (lib, param) => {
            try {
                return set_file(lib, param)
            } catch (e) {
                return file_error(e);
            }
        },
        del_file: async (lib, param) => {
            try {
                return del_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_dir: async (lib, param) => {
            try {
                return get_dir(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_file_mtime: async (lib, param) => {
            try {
                return get_file_mtime(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        exit: async (lib, param) => {
            lib.pc.exit();
            return '';
        },
        request: async (lib, param) => {
            return request(lib, param);
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        get_line: async (lib, param) => {
            return await new Promise((res, err) => {
                lib.rl.question(param, (line) => res(line));
            });
        },
        get_args: async (lib, param) => {
            return lib.pc.argv[2] || '';
        },
        init_udp: async (lib, param) => {
            try {
                await init_udp(lib, Number(param));
                return '';
            } catch (e) {
                return '';
            }
        },
        send_udp: async (lib, param) => {
            let [port_num, to_ip, to_port_num, data] = param.split(';');
            await send_udp(lib, Number(port_num), to_ip, Number(to_port_num), data);
            return '';
        },
        recv_udp: async (lib, param) => {
            var mailbox = await recv_udp(lib, Number(param));
            var reply = mailbox.map(x => x.ip + ',' + x.port + ',' + x.data).join(';');
            return reply;
        },
        stop_udp: async (lib, param) => {
            await stop_udp(lib, Number(param));
            return '';
        },
        sleep: async (lib, param) => {
            return await new Promise((resolve, reject) => {
                setTimeout(() => resolve(''), Number(param));
            });
        },
    };
    var run_io = async (lib, io, depth = 0) => {
        switch (io._) {
            case 'IO.end':
                return Promise.resolve(io.value);
            case 'IO.ask':
                var action = io_action[io.query];
                var answer = await action(lib, io.param);
                return await run_io(lib, io.then(answer), depth + 1);
        }
    };

    function Parser$Reply$(_V$1) {
        var $29 = null;
        return $29;
    };
    const Parser$Reply = x0 => Parser$Reply$(x0);

    function List$(_A$1) {
        var $30 = null;
        return $30;
    };
    const List = x0 => List$(x0);

    function Parser$Reply$error$(_err$2) {
        var $31 = ({
            _: 'Parser.Reply.error',
            'err': _err$2
        });
        return $31;
    };
    const Parser$Reply$error = x0 => Parser$Reply$error$(x0);
    const Bool$false = false;
    const Bool$true = true;
    const Nat$gtn = a0 => a1 => (a0 > a1);

    function Parser$Error$combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Parser.Error.new':
                var $33 = self.idx;
                var self = _b$2;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $35 = self.idx;
                        var self = ($33 > $35);
                        if (self) {
                            var $37 = _a$1;
                            var $36 = $37;
                        } else {
                            var $38 = _b$2;
                            var $36 = $38;
                        };
                        var $34 = $36;
                        break;
                };
                var $32 = $34;
                break;
        };
        return $32;
    };
    const Parser$Error$combine = x0 => x1 => Parser$Error$combine$(x0, x1);

    function List$cons$(_head$2, _tail$3) {
        var $39 = ({
            _: 'List.cons',
            'head': _head$2,
            'tail': _tail$3
        });
        return $39;
    };
    const List$cons = x0 => x1 => List$cons$(x0, x1);

    function Parser$Reply$value$(_pst$2, _val$3) {
        var $40 = ({
            _: 'Parser.Reply.value',
            'pst': _pst$2,
            'val': _val$3
        });
        return $40;
    };
    const Parser$Reply$value = x0 => x1 => Parser$Reply$value$(x0, x1);

    function List$reverse$go$(_xs$2, _res$3) {
        var List$reverse$go$ = (_xs$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _res$3]
        });
        var List$reverse$go = _xs$2 => _res$3 => List$reverse$go$(_xs$2, _res$3);
        var arg = [_xs$2, _res$3];
        while (true) {
            let [_xs$2, _res$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $41 = self.head;
                        var $42 = self.tail;
                        var $43 = List$reverse$go$($42, List$cons$($41, _res$3));
                        return $43;
                    case 'List.nil':
                        var $44 = _res$3;
                        return $44;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$reverse$go = x0 => x1 => List$reverse$go$(x0, x1);
    const List$nil = ({
        _: 'List.nil'
    });

    function List$reverse$(_xs$2) {
        var $45 = List$reverse$go$(_xs$2, List$nil);
        return $45;
    };
    const List$reverse = x0 => List$reverse$(x0);

    function Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5) {
        var Parser$until$go$ = (_until$2, _parse$3, _values$4, _pst$5) => ({
            ctr: 'TCO',
            arg: [_until$2, _parse$3, _values$4, _pst$5]
        });
        var Parser$until$go = _until$2 => _parse$3 => _values$4 => _pst$5 => Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5);
        var arg = [_until$2, _parse$3, _values$4, _pst$5];
        while (true) {
            let [_until$2, _parse$3, _values$4, _pst$5] = arg;
            var R = (() => {
                var _until_reply$6 = _until$2(_pst$5);
                var self = _until_reply$6;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $47 = self.err;
                        var _reply$8 = _parse$3(_pst$5);
                        var self = _reply$8;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $49 = self.err;
                                var $50 = Parser$Reply$error$(Parser$Error$combine$($49, $47));
                                var $48 = $50;
                                break;
                            case 'Parser.Reply.value':
                                var $51 = self.pst;
                                var $52 = self.val;
                                var $53 = Parser$until$go$(_until$2, _parse$3, List$cons$($52, _values$4), $51);
                                var $48 = $53;
                                break;
                        };
                        var $46 = $48;
                        break;
                    case 'Parser.Reply.value':
                        var $54 = self.pst;
                        var $55 = Parser$Reply$value$($54, List$reverse$(_values$4));
                        var $46 = $55;
                        break;
                };
                return $46;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$until$go = x0 => x1 => x2 => x3 => Parser$until$go$(x0, x1, x2, x3);

    function Parser$until$(_until$2, _parse$3) {
        var $56 = Parser$until$go(_until$2)(_parse$3)(List$nil);
        return $56;
    };
    const Parser$until = x0 => x1 => Parser$until$(x0, x1);

    function Parser$many$go$(_parse$2, _values$3, _pst$4) {
        var Parser$many$go$ = (_parse$2, _values$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_parse$2, _values$3, _pst$4]
        });
        var Parser$many$go = _parse$2 => _values$3 => _pst$4 => Parser$many$go$(_parse$2, _values$3, _pst$4);
        var arg = [_parse$2, _values$3, _pst$4];
        while (true) {
            let [_parse$2, _values$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var self = _parse$2(_pst$4);
                        switch (self._) {
                            case 'Parser.Reply.value':
                                var $58 = self.pst;
                                var $59 = self.val;
                                var $60 = Parser$many$go$(_parse$2, (_xs$12 => {
                                    var $61 = _values$3(List$cons$($59, _xs$12));
                                    return $61;
                                }), $58);
                                var $57 = $60;
                                break;
                            case 'Parser.Reply.error':
                                var $62 = Parser$Reply$value$(_pst$4, _values$3(List$nil));
                                var $57 = $62;
                                break;
                        };
                        return $57;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$many$go = x0 => x1 => x2 => Parser$many$go$(x0, x1, x2);

    function Parser$many$(_parser$2) {
        var $63 = Parser$many$go(_parser$2)((_x$3 => {
            var $64 = _x$3;
            return $64;
        }));
        return $63;
    };
    const Parser$many = x0 => Parser$many$(x0);

    function Parser$Error$new$(_nam$1, _ini$2, _idx$3, _msg$4) {
        var $65 = ({
            _: 'Parser.Error.new',
            'nam': _nam$1,
            'ini': _ini$2,
            'idx': _idx$3,
            'msg': _msg$4
        });
        return $65;
    };
    const Parser$Error$new = x0 => x1 => x2 => x3 => Parser$Error$new$(x0, x1, x2, x3);

    function Parser$Reply$fail$(_nam$2, _ini$3, _idx$4, _msg$5) {
        var $66 = Parser$Reply$error$(Parser$Error$new$(_nam$2, _ini$3, _idx$4, _msg$5));
        return $66;
    };
    const Parser$Reply$fail = x0 => x1 => x2 => x3 => Parser$Reply$fail$(x0, x1, x2, x3);

    function Maybe$some$(_value$2) {
        var $67 = ({
            _: 'Maybe.some',
            'value': _value$2
        });
        return $67;
    };
    const Maybe$some = x0 => Maybe$some$(x0);

    function Maybe$(_A$1) {
        var $68 = null;
        return $68;
    };
    const Maybe = x0 => Maybe$(x0);
    const Maybe$none = ({
        _: 'Maybe.none'
    });

    function Parser$Error$maybe_combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Maybe.some':
                var $70 = self.value;
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $72 = self.value;
                        var $73 = Maybe$some$(Parser$Error$combine$($70, $72));
                        var $71 = $73;
                        break;
                    case 'Maybe.none':
                        var $74 = _a$1;
                        var $71 = $74;
                        break;
                };
                var $69 = $71;
                break;
            case 'Maybe.none':
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.none':
                        var $76 = Maybe$none;
                        var $75 = $76;
                        break;
                    case 'Maybe.some':
                        var $77 = _b$2;
                        var $75 = $77;
                        break;
                };
                var $69 = $75;
                break;
        };
        return $69;
    };
    const Parser$Error$maybe_combine = x0 => x1 => Parser$Error$maybe_combine$(x0, x1);

    function Parser$State$new$(_err$1, _nam$2, _ini$3, _idx$4, _str$5) {
        var $78 = ({
            _: 'Parser.State.new',
            'err': _err$1,
            'nam': _nam$2,
            'ini': _ini$3,
            'idx': _idx$4,
            'str': _str$5
        });
        return $78;
    };
    const Parser$State$new = x0 => x1 => x2 => x3 => x4 => Parser$State$new$(x0, x1, x2, x3, x4);

    function Parser$choice$(_pars$2, _pst$3) {
        var Parser$choice$ = (_pars$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_pars$2, _pst$3]
        });
        var Parser$choice = _pars$2 => _pst$3 => Parser$choice$(_pars$2, _pst$3);
        var arg = [_pars$2, _pst$3];
        while (true) {
            let [_pars$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $79 = self.err;
                        var $80 = self.nam;
                        var $81 = self.ini;
                        var $82 = self.idx;
                        var $83 = self.str;
                        var self = _pars$2;
                        switch (self._) {
                            case 'List.cons':
                                var $85 = self.head;
                                var $86 = self.tail;
                                var _parsed$11 = $85(_pst$3);
                                var self = _parsed$11;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $88 = self.err;
                                        var _cur_err$13 = Maybe$some$($88);
                                        var _far_err$14 = Parser$Error$maybe_combine$($79, _cur_err$13);
                                        var _new_pst$15 = Parser$State$new$(_far_err$14, $80, $81, $82, $83);
                                        var $89 = Parser$choice$($86, _new_pst$15);
                                        var $87 = $89;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $90 = self.pst;
                                        var $91 = self.val;
                                        var $92 = Parser$Reply$value$($90, $91);
                                        var $87 = $92;
                                        break;
                                };
                                var $84 = $87;
                                break;
                            case 'List.nil':
                                var self = $79;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $94 = self.value;
                                        var $95 = Parser$Reply$error$($94);
                                        var $93 = $95;
                                        break;
                                    case 'Maybe.none':
                                        var $96 = Parser$Reply$fail$($80, $81, $82, "No parse.");
                                        var $93 = $96;
                                        break;
                                };
                                var $84 = $93;
                                break;
                        };
                        return $84;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$choice = x0 => x1 => Parser$choice$(x0, x1);

    function Parser$(_V$1) {
        var $97 = null;
        return $97;
    };
    const Parser = x0 => Parser$(x0);
    const Unit$new = null;

    function String$cons$(_head$1, _tail$2) {
        var $98 = (String.fromCharCode(_head$1) + _tail$2);
        return $98;
    };
    const String$cons = x0 => x1 => String$cons$(x0, x1);
    const String$concat = a0 => a1 => (a0 + a1);

    function Cmp$as_eql$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.gtn':
                var $100 = Bool$false;
                var $99 = $100;
                break;
            case 'Cmp.eql':
                var $101 = Bool$true;
                var $99 = $101;
                break;
        };
        return $99;
    };
    const Cmp$as_eql = x0 => Cmp$as_eql$(x0);
    const Cmp$ltn = ({
        _: 'Cmp.ltn'
    });
    const Cmp$gtn = ({
        _: 'Cmp.gtn'
    });

    function Word$cmp$go$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $103 = self.pred;
                var $104 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $106 = self.pred;
                            var $107 = (_a$pred$10 => {
                                var $108 = Word$cmp$go$(_a$pred$10, $106, _c$4);
                                return $108;
                            });
                            var $105 = $107;
                            break;
                        case 'Word.i':
                            var $109 = self.pred;
                            var $110 = (_a$pred$10 => {
                                var $111 = Word$cmp$go$(_a$pred$10, $109, Cmp$ltn);
                                return $111;
                            });
                            var $105 = $110;
                            break;
                        case 'Word.e':
                            var $112 = (_a$pred$8 => {
                                var $113 = _c$4;
                                return $113;
                            });
                            var $105 = $112;
                            break;
                    };
                    var $105 = $105($103);
                    return $105;
                });
                var $102 = $104;
                break;
            case 'Word.i':
                var $114 = self.pred;
                var $115 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $117 = self.pred;
                            var $118 = (_a$pred$10 => {
                                var $119 = Word$cmp$go$(_a$pred$10, $117, Cmp$gtn);
                                return $119;
                            });
                            var $116 = $118;
                            break;
                        case 'Word.i':
                            var $120 = self.pred;
                            var $121 = (_a$pred$10 => {
                                var $122 = Word$cmp$go$(_a$pred$10, $120, _c$4);
                                return $122;
                            });
                            var $116 = $121;
                            break;
                        case 'Word.e':
                            var $123 = (_a$pred$8 => {
                                var $124 = _c$4;
                                return $124;
                            });
                            var $116 = $123;
                            break;
                    };
                    var $116 = $116($114);
                    return $116;
                });
                var $102 = $115;
                break;
            case 'Word.e':
                var $125 = (_b$5 => {
                    var $126 = _c$4;
                    return $126;
                });
                var $102 = $125;
                break;
        };
        var $102 = $102(_b$3);
        return $102;
    };
    const Word$cmp$go = x0 => x1 => x2 => Word$cmp$go$(x0, x1, x2);
    const Cmp$eql = ({
        _: 'Cmp.eql'
    });

    function Word$cmp$(_a$2, _b$3) {
        var $127 = Word$cmp$go$(_a$2, _b$3, Cmp$eql);
        return $127;
    };
    const Word$cmp = x0 => x1 => Word$cmp$(x0, x1);

    function Word$eql$(_a$2, _b$3) {
        var $128 = Cmp$as_eql$(Word$cmp$(_a$2, _b$3));
        return $128;
    };
    const Word$eql = x0 => x1 => Word$eql$(x0, x1);

    function Nat$succ$(_pred$1) {
        var $129 = 1n + _pred$1;
        return $129;
    };
    const Nat$succ = x0 => Nat$succ$(x0);
    const Nat$zero = 0n;
    const U16$eql = a0 => a1 => (a0 === a1);
    const String$nil = '';

    function Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4) {
        var Parser$text$go$ = (_ini_idx$1, _ini_txt$2, _text$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_ini_idx$1, _ini_txt$2, _text$3, _pst$4]
        });
        var Parser$text$go = _ini_idx$1 => _ini_txt$2 => _text$3 => _pst$4 => Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4);
        var arg = [_ini_idx$1, _ini_txt$2, _text$3, _pst$4];
        while (true) {
            let [_ini_idx$1, _ini_txt$2, _text$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var $130 = self.err;
                        var $131 = self.nam;
                        var $132 = self.ini;
                        var $133 = self.idx;
                        var $134 = self.str;
                        var self = _text$3;
                        if (self.length === 0) {
                            var $136 = Parser$Reply$value$(_pst$4, Unit$new);
                            var $135 = $136;
                        } else {
                            var $137 = self.charCodeAt(0);
                            var $138 = self.slice(1);
                            var self = $134;
                            if (self.length === 0) {
                                var _error_msg$12 = ("Expected \'" + (_ini_txt$2 + "\', found end of file."));
                                var $140 = Parser$Reply$fail$($131, $132, _ini_idx$1, _error_msg$12);
                                var $139 = $140;
                            } else {
                                var $141 = self.charCodeAt(0);
                                var $142 = self.slice(1);
                                var self = ($137 === $141);
                                if (self) {
                                    var _pst$14 = Parser$State$new$($130, $131, $132, Nat$succ$($133), $142);
                                    var $144 = Parser$text$go$(_ini_idx$1, _ini_txt$2, $138, _pst$14);
                                    var $143 = $144;
                                } else {
                                    var _chr$14 = String$cons$($141, String$nil);
                                    var _err$15 = ("Expected \'" + (_ini_txt$2 + ("\', found \'" + (_chr$14 + "\'."))));
                                    var $145 = Parser$Reply$fail$($131, $132, _ini_idx$1, _err$15);
                                    var $143 = $145;
                                };
                                var $139 = $143;
                            };
                            var $135 = $139;
                        };
                        return $135;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$text$go = x0 => x1 => x2 => x3 => Parser$text$go$(x0, x1, x2, x3);

    function Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $147 = self.idx;
                var self = Parser$text$go$($147, _text$1, _text$1, _pst$2);
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $149 = self.err;
                        var $150 = Parser$Reply$error$($149);
                        var $148 = $150;
                        break;
                    case 'Parser.Reply.value':
                        var $151 = self.pst;
                        var $152 = self.val;
                        var $153 = Parser$Reply$value$($151, $152);
                        var $148 = $153;
                        break;
                };
                var $146 = $148;
                break;
        };
        return $146;
    };
    const Parser$text = x0 => x1 => Parser$text$(x0, x1);

    function Parser$eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $155 = self.nam;
                var $156 = self.ini;
                var $157 = self.idx;
                var $158 = self.str;
                var self = $158;
                if (self.length === 0) {
                    var $160 = Parser$Reply$value$(_pst$1, Unit$new);
                    var $159 = $160;
                } else {
                    var $161 = self.charCodeAt(0);
                    var $162 = self.slice(1);
                    var $163 = Parser$Reply$fail$($155, $156, $157, "Expected end-of-file.");
                    var $159 = $163;
                };
                var $154 = $159;
                break;
        };
        return $154;
    };
    const Parser$eof = x0 => Parser$eof$(x0);

    function Parser$one$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $165 = self.err;
                var $166 = self.nam;
                var $167 = self.ini;
                var $168 = self.idx;
                var $169 = self.str;
                var self = $169;
                if (self.length === 0) {
                    var $171 = Parser$Reply$fail$($166, $167, $168, "Unexpected end of file.");
                    var $170 = $171;
                } else {
                    var $172 = self.charCodeAt(0);
                    var $173 = self.slice(1);
                    var _pst$9 = Parser$State$new$($165, $166, $167, Nat$succ$($168), $173);
                    var $174 = Parser$Reply$value$(_pst$9, $172);
                    var $170 = $174;
                };
                var $164 = $170;
                break;
        };
        return $164;
    };
    const Parser$one = x0 => Parser$one$(x0);
    const Litereum$parse$ignore = Parser$many$(Parser$choice(List$cons$(Parser$text(" "), List$cons$(Parser$text("\u{9}"), List$cons$(Parser$text("\u{d}"), List$cons$(Parser$text("\u{a}"), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $176 = self.err;
                var _reply$7 = Parser$text$("//", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $178 = self.err;
                        var self = $176;
                        switch (self._) {
                            case 'Maybe.some':
                                var $180 = self.value;
                                var $181 = Parser$Reply$error$(Parser$Error$combine$($180, $178));
                                var $179 = $181;
                                break;
                            case 'Maybe.none':
                                var $182 = Parser$Reply$error$($178);
                                var $179 = $182;
                                break;
                        };
                        var $177 = $179;
                        break;
                    case 'Parser.Reply.value':
                        var $183 = self.pst;
                        var self = $183;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $185 = self.err;
                                var $186 = self.nam;
                                var $187 = self.ini;
                                var $188 = self.idx;
                                var $189 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($176, $185), $186, $187, $188, $189);
                                var _end$16 = Parser$choice(List$cons$(Parser$text("\u{a}"), List$cons$(Parser$eof, List$nil)));
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $191 = self.err;
                                        var _reply$22 = Parser$until$(_end$16, Parser$one)(_reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $193 = self.err;
                                                var self = $191;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $195 = self.value;
                                                        var $196 = Parser$Reply$error$(Parser$Error$combine$($195, $193));
                                                        var $194 = $196;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $197 = Parser$Reply$error$($193);
                                                        var $194 = $197;
                                                        break;
                                                };
                                                var $192 = $194;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $198 = self.pst;
                                                var self = $198;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $200 = self.err;
                                                        var $201 = self.nam;
                                                        var $202 = self.ini;
                                                        var $203 = self.idx;
                                                        var $204 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($191, $200), $201, $202, $203, $204);
                                                        var $205 = Parser$Reply$value$(_reply$pst$30, Unit$new);
                                                        var $199 = $205;
                                                        break;
                                                };
                                                var $192 = $199;
                                                break;
                                        };
                                        var $190 = $192;
                                        break;
                                };
                                var $184 = $190;
                                break;
                        };
                        var $177 = $184;
                        break;
                };
                var $175 = $177;
                break;
        };
        return $175;
    }), List$nil)))))));

    function Litereum$parse$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $207 = self.err;
                var _reply$8 = Litereum$parse$ignore(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $209 = self.err;
                        var self = $207;
                        switch (self._) {
                            case 'Maybe.some':
                                var $211 = self.value;
                                var $212 = Parser$Reply$error$(Parser$Error$combine$($211, $209));
                                var $210 = $212;
                                break;
                            case 'Maybe.none':
                                var $213 = Parser$Reply$error$($209);
                                var $210 = $213;
                                break;
                        };
                        var $208 = $210;
                        break;
                    case 'Parser.Reply.value':
                        var $214 = self.pst;
                        var self = $214;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $216 = self.err;
                                var $217 = self.nam;
                                var $218 = self.ini;
                                var $219 = self.idx;
                                var $220 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($207, $216), $217, $218, $219, $220);
                                var $221 = Parser$text$(_text$1, _reply$pst$16);
                                var $215 = $221;
                                break;
                        };
                        var $208 = $215;
                        break;
                };
                var $206 = $208;
                break;
        };
        return $206;
    };
    const Litereum$parse$text = x0 => x1 => Litereum$parse$text$(x0, x1);

    function Parser$letter$(_is_letter$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $223 = self.err;
                var $224 = self.nam;
                var $225 = self.ini;
                var $226 = self.idx;
                var $227 = self.str;
                var self = $227;
                if (self.length === 0) {
                    var $229 = Parser$Reply$fail$($224, $225, $226, "Unexpected eof.");
                    var $228 = $229;
                } else {
                    var $230 = self.charCodeAt(0);
                    var $231 = self.slice(1);
                    var self = _is_letter$1($230);
                    if (self) {
                        var $233 = Parser$Reply$value$(Parser$State$new$($223, $224, $225, Nat$succ$($226), $231), $230);
                        var $232 = $233;
                    } else {
                        var $234 = Parser$Reply$fail$($224, $225, $226, "Expected letter.");
                        var $232 = $234;
                    };
                    var $228 = $232;
                };
                var $222 = $228;
                break;
        };
        return $222;
    };
    const Parser$letter = x0 => x1 => Parser$letter$(x0, x1);
    const Bool$and = a0 => a1 => (a0 && a1);

    function Cmp$as_lte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $236 = Bool$true;
                var $235 = $236;
                break;
            case 'Cmp.gtn':
                var $237 = Bool$false;
                var $235 = $237;
                break;
        };
        return $235;
    };
    const Cmp$as_lte = x0 => Cmp$as_lte$(x0);

    function Word$lte$(_a$2, _b$3) {
        var $238 = Cmp$as_lte$(Word$cmp$(_a$2, _b$3));
        return $238;
    };
    const Word$lte = x0 => x1 => Word$lte$(x0, x1);
    const U16$lte = a0 => a1 => (a0 <= a1);

    function U16$btw$(_a$1, _b$2, _c$3) {
        var $239 = ((_a$1 <= _b$2) && (_b$2 <= _c$3));
        return $239;
    };
    const U16$btw = x0 => x1 => x2 => U16$btw$(x0, x1, x2);
    const Litereum$parse$letter = Parser$letter((_chr$1 => {
        var self = U16$btw$(65, _chr$1, 90);
        if (self) {
            var $241 = Bool$true;
            var $240 = $241;
        } else {
            var self = U16$btw$(97, _chr$1, 122);
            if (self) {
                var $243 = Bool$true;
                var $242 = $243;
            } else {
                var self = U16$btw$(48, _chr$1, 57);
                if (self) {
                    var $245 = Bool$true;
                    var $244 = $245;
                } else {
                    var self = (46 === _chr$1);
                    if (self) {
                        var $247 = Bool$true;
                        var $246 = $247;
                    } else {
                        var self = (95 === _chr$1);
                        if (self) {
                            var $249 = Bool$true;
                            var $248 = $249;
                        } else {
                            var self = (94 === _chr$1);
                            if (self) {
                                var $251 = Bool$true;
                                var $250 = $251;
                            } else {
                                var $252 = Bool$false;
                                var $250 = $252;
                            };
                            var $248 = $250;
                        };
                        var $246 = $248;
                    };
                    var $244 = $246;
                };
                var $242 = $244;
            };
            var $240 = $242;
        };
        return $240;
    }));

    function List$fold$(_list$2, _nil$4, _cons$5) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $254 = self.head;
                var $255 = self.tail;
                var $256 = _cons$5($254)(List$fold$($255, _nil$4, _cons$5));
                var $253 = $256;
                break;
            case 'List.nil':
                var $257 = _nil$4;
                var $253 = $257;
                break;
        };
        return $253;
    };
    const List$fold = x0 => x1 => x2 => List$fold$(x0, x1, x2);

    function Litereum$parse$name$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $259 = self.err;
                var _reply$7 = Litereum$parse$ignore(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $261 = self.err;
                        var self = $259;
                        switch (self._) {
                            case 'Maybe.some':
                                var $263 = self.value;
                                var $264 = Parser$Reply$error$(Parser$Error$combine$($263, $261));
                                var $262 = $264;
                                break;
                            case 'Maybe.none':
                                var $265 = Parser$Reply$error$($261);
                                var $262 = $265;
                                break;
                        };
                        var $260 = $262;
                        break;
                    case 'Parser.Reply.value':
                        var $266 = self.pst;
                        var self = $266;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $268 = self.err;
                                var $269 = self.nam;
                                var $270 = self.ini;
                                var $271 = self.idx;
                                var $272 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($259, $268), $269, $270, $271, $272);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $274 = self.err;
                                        var _reply$21 = Litereum$parse$letter(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $276 = self.err;
                                                var self = $274;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $278 = self.value;
                                                        var $279 = Parser$Reply$error$(Parser$Error$combine$($278, $276));
                                                        var $277 = $279;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $280 = Parser$Reply$error$($276);
                                                        var $277 = $280;
                                                        break;
                                                };
                                                var $275 = $277;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $281 = self.pst;
                                                var $282 = self.val;
                                                var self = $281;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $284 = self.err;
                                                        var $285 = self.nam;
                                                        var $286 = self.ini;
                                                        var $287 = self.idx;
                                                        var $288 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($274, $284), $285, $286, $287, $288);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $290 = self.err;
                                                                var _reply$35 = Parser$many$(Litereum$parse$letter)(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $292 = self.err;
                                                                        var self = $290;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $294 = self.value;
                                                                                var $295 = Parser$Reply$error$(Parser$Error$combine$($294, $292));
                                                                                var $293 = $295;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $296 = Parser$Reply$error$($292);
                                                                                var $293 = $296;
                                                                                break;
                                                                        };
                                                                        var $291 = $293;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $297 = self.pst;
                                                                        var $298 = self.val;
                                                                        var self = $297;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $300 = self.err;
                                                                                var $301 = self.nam;
                                                                                var $302 = self.ini;
                                                                                var $303 = self.idx;
                                                                                var $304 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($290, $300), $301, $302, $303, $304);
                                                                                var $305 = Parser$Reply$value$(_reply$pst$43, String$cons$($282, List$fold$($298, String$nil, String$cons)));
                                                                                var $299 = $305;
                                                                                break;
                                                                        };
                                                                        var $291 = $299;
                                                                        break;
                                                                };
                                                                var $289 = $291;
                                                                break;
                                                        };
                                                        var $283 = $289;
                                                        break;
                                                };
                                                var $275 = $283;
                                                break;
                                        };
                                        var $273 = $275;
                                        break;
                                };
                                var $267 = $273;
                                break;
                        };
                        var $260 = $267;
                        break;
                };
                var $258 = $260;
                break;
        };
        return $258;
    };
    const Litereum$parse$name = x0 => Litereum$parse$name$(x0);

    function Litereum$Transaction$new_name$(_name$1) {
        var $306 = ({
            _: 'Litereum.Transaction.new_name',
            'name': _name$1
        });
        return $306;
    };
    const Litereum$Transaction$new_name = x0 => Litereum$Transaction$new_name$(x0);

    function Parser$wrap$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $308 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $310 = self.err;
                        var self = $308;
                        switch (self._) {
                            case 'Maybe.some':
                                var $312 = self.value;
                                var $313 = Parser$Reply$error$(Parser$Error$combine$($312, $310));
                                var $311 = $313;
                                break;
                            case 'Maybe.none':
                                var $314 = Parser$Reply$error$($310);
                                var $311 = $314;
                                break;
                        };
                        var $309 = $311;
                        break;
                    case 'Parser.Reply.value':
                        var $315 = self.pst;
                        var self = $315;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $317 = self.err;
                                var $318 = self.nam;
                                var $319 = self.ini;
                                var $320 = self.idx;
                                var $321 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($308, $317), $318, $319, $320, $321);
                                var $322 = Parser$until$(_close$4, _parse$3)(_reply$pst$19);
                                var $316 = $322;
                                break;
                        };
                        var $309 = $316;
                        break;
                };
                var $307 = $309;
                break;
        };
        return $307;
    };
    const Parser$wrap = x0 => x1 => x2 => x3 => Parser$wrap$(x0, x1, x2, x3);

    function Parser$maybe$(_parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var self = _parse$2(_pst$3);
                switch (self._) {
                    case 'Parser.Reply.value':
                        var $325 = self.pst;
                        var $326 = self.val;
                        var $327 = Parser$Reply$value$($325, Maybe$some$($326));
                        var $324 = $327;
                        break;
                    case 'Parser.Reply.error':
                        var $328 = Parser$Reply$value$(_pst$3, Maybe$none);
                        var $324 = $328;
                        break;
                };
                var $323 = $324;
                break;
        };
        return $323;
    };
    const Parser$maybe = x0 => x1 => Parser$maybe$(x0, x1);

    function Pair$(_A$1, _B$2) {
        var $329 = null;
        return $329;
    };
    const Pair = x0 => x1 => Pair$(x0, x1);

    function Litereum$Type$effect$(_rety$1) {
        var $330 = ({
            _: 'Litereum.Type.effect',
            'rety': _rety$1
        });
        return $330;
    };
    const Litereum$Type$effect = x0 => Litereum$Type$effect$(x0);
    const Litereum$Type$word = ({
        _: 'Litereum.Type.word'
    });

    function Litereum$Type$data$(_name$1) {
        var $331 = ({
            _: 'Litereum.Type.data',
            'name': _name$1
        });
        return $331;
    };
    const Litereum$Type$data = x0 => Litereum$Type$data$(x0);

    function Litereum$parse$type$(_world$1) {
        var $332 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $334 = self.err;
                    var _reply$8 = Litereum$parse$text$("&", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $336 = self.err;
                            var self = $334;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $338 = self.value;
                                    var $339 = Parser$Reply$error$(Parser$Error$combine$($338, $336));
                                    var $337 = $339;
                                    break;
                                case 'Maybe.none':
                                    var $340 = Parser$Reply$error$($336);
                                    var $337 = $340;
                                    break;
                            };
                            var $335 = $337;
                            break;
                        case 'Parser.Reply.value':
                            var $341 = self.pst;
                            var self = $341;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $343 = self.err;
                                    var $344 = self.nam;
                                    var $345 = self.ini;
                                    var $346 = self.idx;
                                    var $347 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($334, $343), $344, $345, $346, $347);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $349 = self.err;
                                            var _reply$22 = Litereum$parse$type$(_world$1)(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $351 = self.err;
                                                    var self = $349;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $353 = self.value;
                                                            var $354 = Parser$Reply$error$(Parser$Error$combine$($353, $351));
                                                            var $352 = $354;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $355 = Parser$Reply$error$($351);
                                                            var $352 = $355;
                                                            break;
                                                    };
                                                    var $350 = $352;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $356 = self.pst;
                                                    var $357 = self.val;
                                                    var self = $356;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $359 = self.err;
                                                            var $360 = self.nam;
                                                            var $361 = self.ini;
                                                            var $362 = self.idx;
                                                            var $363 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($349, $359), $360, $361, $362, $363);
                                                            var $364 = Parser$Reply$value$(_reply$pst$30, Litereum$Type$effect$($357));
                                                            var $358 = $364;
                                                            break;
                                                    };
                                                    var $350 = $358;
                                                    break;
                                            };
                                            var $348 = $350;
                                            break;
                                    };
                                    var $342 = $348;
                                    break;
                            };
                            var $335 = $342;
                            break;
                    };
                    var $333 = $335;
                    break;
            };
            return $333;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $366 = self.err;
                    var _reply$8 = Litereum$parse$text$("#word", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $368 = self.err;
                            var self = $366;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $370 = self.value;
                                    var $371 = Parser$Reply$error$(Parser$Error$combine$($370, $368));
                                    var $369 = $371;
                                    break;
                                case 'Maybe.none':
                                    var $372 = Parser$Reply$error$($368);
                                    var $369 = $372;
                                    break;
                            };
                            var $367 = $369;
                            break;
                        case 'Parser.Reply.value':
                            var $373 = self.pst;
                            var self = $373;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $375 = self.err;
                                    var $376 = self.nam;
                                    var $377 = self.ini;
                                    var $378 = self.idx;
                                    var $379 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($366, $375), $376, $377, $378, $379);
                                    var $380 = Parser$Reply$value$(_reply$pst$16, Litereum$Type$word);
                                    var $374 = $380;
                                    break;
                            };
                            var $367 = $374;
                            break;
                    };
                    var $365 = $367;
                    break;
            };
            return $365;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $382 = self.err;
                    var _reply$8 = Litereum$parse$name$(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $384 = self.err;
                            var self = $382;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $386 = self.value;
                                    var $387 = Parser$Reply$error$(Parser$Error$combine$($386, $384));
                                    var $385 = $387;
                                    break;
                                case 'Maybe.none':
                                    var $388 = Parser$Reply$error$($384);
                                    var $385 = $388;
                                    break;
                            };
                            var $383 = $385;
                            break;
                        case 'Parser.Reply.value':
                            var $389 = self.pst;
                            var $390 = self.val;
                            var self = $389;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $392 = self.err;
                                    var $393 = self.nam;
                                    var $394 = self.ini;
                                    var $395 = self.idx;
                                    var $396 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($382, $392), $393, $394, $395, $396);
                                    var $397 = Parser$Reply$value$(_reply$pst$16, Litereum$Type$data$($390));
                                    var $391 = $397;
                                    break;
                            };
                            var $383 = $391;
                            break;
                    };
                    var $381 = $383;
                    break;
            };
            return $381;
        }), List$nil))));
        return $332;
    };
    const Litereum$parse$type = x0 => Litereum$parse$type$(x0);

    function Pair$new$(_fst$3, _snd$4) {
        var $398 = ({
            _: 'Pair.new',
            'fst': _fst$3,
            'snd': _snd$4
        });
        return $398;
    };
    const Pair$new = x0 => x1 => Pair$new$(x0, x1);

    function Litereum$parse$ann$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $400 = self.err;
                var _reply$8 = Parser$maybe$(Litereum$parse$text(","), _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $402 = self.err;
                        var self = $400;
                        switch (self._) {
                            case 'Maybe.some':
                                var $404 = self.value;
                                var $405 = Parser$Reply$error$(Parser$Error$combine$($404, $402));
                                var $403 = $405;
                                break;
                            case 'Maybe.none':
                                var $406 = Parser$Reply$error$($402);
                                var $403 = $406;
                                break;
                        };
                        var $401 = $403;
                        break;
                    case 'Parser.Reply.value':
                        var $407 = self.pst;
                        var self = $407;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $409 = self.err;
                                var $410 = self.nam;
                                var $411 = self.ini;
                                var $412 = self.idx;
                                var $413 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($400, $409), $410, $411, $412, $413);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $415 = self.err;
                                        var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $417 = self.err;
                                                var self = $415;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $419 = self.value;
                                                        var $420 = Parser$Reply$error$(Parser$Error$combine$($419, $417));
                                                        var $418 = $420;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $421 = Parser$Reply$error$($417);
                                                        var $418 = $421;
                                                        break;
                                                };
                                                var $416 = $418;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $422 = self.pst;
                                                var $423 = self.val;
                                                var self = $422;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $425 = self.err;
                                                        var $426 = self.nam;
                                                        var $427 = self.ini;
                                                        var $428 = self.idx;
                                                        var $429 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($415, $425), $426, $427, $428, $429);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $431 = self.err;
                                                                var _reply$36 = Litereum$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $433 = self.err;
                                                                        var self = $431;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $435 = self.value;
                                                                                var $436 = Parser$Reply$error$(Parser$Error$combine$($435, $433));
                                                                                var $434 = $436;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $437 = Parser$Reply$error$($433);
                                                                                var $434 = $437;
                                                                                break;
                                                                        };
                                                                        var $432 = $434;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $438 = self.pst;
                                                                        var self = $438;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $440 = self.err;
                                                                                var $441 = self.nam;
                                                                                var $442 = self.ini;
                                                                                var $443 = self.idx;
                                                                                var $444 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($431, $440), $441, $442, $443, $444);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $446 = self.err;
                                                                                        var _reply$50 = Litereum$parse$type$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $448 = self.err;
                                                                                                var self = $446;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $450 = self.value;
                                                                                                        var $451 = Parser$Reply$error$(Parser$Error$combine$($450, $448));
                                                                                                        var $449 = $451;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $452 = Parser$Reply$error$($448);
                                                                                                        var $449 = $452;
                                                                                                        break;
                                                                                                };
                                                                                                var $447 = $449;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $453 = self.pst;
                                                                                                var $454 = self.val;
                                                                                                var self = $453;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $456 = self.err;
                                                                                                        var $457 = self.nam;
                                                                                                        var $458 = self.ini;
                                                                                                        var $459 = self.idx;
                                                                                                        var $460 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($446, $456), $457, $458, $459, $460);
                                                                                                        var $461 = Parser$Reply$value$(_reply$pst$58, Pair$new$($423, $454));
                                                                                                        var $455 = $461;
                                                                                                        break;
                                                                                                };
                                                                                                var $447 = $455;
                                                                                                break;
                                                                                        };
                                                                                        var $445 = $447;
                                                                                        break;
                                                                                };
                                                                                var $439 = $445;
                                                                                break;
                                                                        };
                                                                        var $432 = $439;
                                                                        break;
                                                                };
                                                                var $430 = $432;
                                                                break;
                                                        };
                                                        var $424 = $430;
                                                        break;
                                                };
                                                var $416 = $424;
                                                break;
                                        };
                                        var $414 = $416;
                                        break;
                                };
                                var $408 = $414;
                                break;
                        };
                        var $401 = $408;
                        break;
                };
                var $399 = $401;
                break;
        };
        return $399;
    };
    const Litereum$parse$ann = x0 => x1 => Litereum$parse$ann$(x0, x1);

    function List$mapped$(_as$2, _f$4) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $463 = self.head;
                var $464 = self.tail;
                var $465 = List$cons$(_f$4($463), List$mapped$($464, _f$4));
                var $462 = $465;
                break;
            case 'List.nil':
                var $466 = List$nil;
                var $462 = $466;
                break;
        };
        return $462;
    };
    const List$mapped = x0 => x1 => List$mapped$(x0, x1);

    function Litereum$Constructor$new$(_name$1, _field_names$2, _field_types$3) {
        var $467 = ({
            _: 'Litereum.Constructor.new',
            'name': _name$1,
            'field_names': _field_names$2,
            'field_types': _field_types$3
        });
        return $467;
    };
    const Litereum$Constructor$new = x0 => x1 => x2 => Litereum$Constructor$new$(x0, x1, x2);

    function Litereum$parse$constructor$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $469 = self.err;
                var _reply$8 = Litereum$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $471 = self.err;
                        var self = $469;
                        switch (self._) {
                            case 'Maybe.some':
                                var $473 = self.value;
                                var $474 = Parser$Reply$error$(Parser$Error$combine$($473, $471));
                                var $472 = $474;
                                break;
                            case 'Maybe.none':
                                var $475 = Parser$Reply$error$($471);
                                var $472 = $475;
                                break;
                        };
                        var $470 = $472;
                        break;
                    case 'Parser.Reply.value':
                        var $476 = self.pst;
                        var $477 = self.val;
                        var self = $476;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $479 = self.err;
                                var $480 = self.nam;
                                var $481 = self.ini;
                                var $482 = self.idx;
                                var $483 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($469, $479), $480, $481, $482, $483);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $485 = self.err;
                                        var _reply$22 = Parser$wrap$(Litereum$parse$text("{"), Litereum$parse$ann(_world$1), Litereum$parse$text("}"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $487 = self.err;
                                                var self = $485;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $489 = self.value;
                                                        var $490 = Parser$Reply$error$(Parser$Error$combine$($489, $487));
                                                        var $488 = $490;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $491 = Parser$Reply$error$($487);
                                                        var $488 = $491;
                                                        break;
                                                };
                                                var $486 = $488;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $492 = self.pst;
                                                var $493 = self.val;
                                                var self = $492;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $495 = self.err;
                                                        var $496 = self.nam;
                                                        var $497 = self.ini;
                                                        var $498 = self.idx;
                                                        var $499 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($485, $495), $496, $497, $498, $499);
                                                        var _nams$31 = List$mapped$($493, (_x$31 => {
                                                            var self = _x$31;
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $502 = self.fst;
                                                                    var $503 = $502;
                                                                    var $501 = $503;
                                                                    break;
                                                            };
                                                            return $501;
                                                        }));
                                                        var _typs$32 = List$mapped$($493, (_x$32 => {
                                                            var self = _x$32;
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $505 = self.snd;
                                                                    var $506 = $505;
                                                                    var $504 = $506;
                                                                    break;
                                                            };
                                                            return $504;
                                                        }));
                                                        var $500 = Parser$Reply$value$(_reply$pst$30, Litereum$Constructor$new$($477, _nams$31, _typs$32));
                                                        var $494 = $500;
                                                        break;
                                                };
                                                var $486 = $494;
                                                break;
                                        };
                                        var $484 = $486;
                                        break;
                                };
                                var $478 = $484;
                                break;
                        };
                        var $470 = $478;
                        break;
                };
                var $468 = $470;
                break;
        };
        return $468;
    };
    const Litereum$parse$constructor = x0 => x1 => Litereum$parse$constructor$(x0, x1);

    function Litereum$Data$new$(_name$1, _constructors$2) {
        var $507 = ({
            _: 'Litereum.Data.new',
            'name': _name$1,
            'constructors': _constructors$2
        });
        return $507;
    };
    const Litereum$Data$new = x0 => x1 => Litereum$Data$new$(x0, x1);

    function Litereum$parse$data$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $509 = self.err;
                var _reply$8 = Litereum$parse$text$("type", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $511 = self.err;
                        var self = $509;
                        switch (self._) {
                            case 'Maybe.some':
                                var $513 = self.value;
                                var $514 = Parser$Reply$error$(Parser$Error$combine$($513, $511));
                                var $512 = $514;
                                break;
                            case 'Maybe.none':
                                var $515 = Parser$Reply$error$($511);
                                var $512 = $515;
                                break;
                        };
                        var $510 = $512;
                        break;
                    case 'Parser.Reply.value':
                        var $516 = self.pst;
                        var self = $516;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $518 = self.err;
                                var $519 = self.nam;
                                var $520 = self.ini;
                                var $521 = self.idx;
                                var $522 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($509, $518), $519, $520, $521, $522);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $524 = self.err;
                                        var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $526 = self.err;
                                                var self = $524;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $528 = self.value;
                                                        var $529 = Parser$Reply$error$(Parser$Error$combine$($528, $526));
                                                        var $527 = $529;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $530 = Parser$Reply$error$($526);
                                                        var $527 = $530;
                                                        break;
                                                };
                                                var $525 = $527;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $531 = self.pst;
                                                var $532 = self.val;
                                                var self = $531;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $534 = self.err;
                                                        var $535 = self.nam;
                                                        var $536 = self.ini;
                                                        var $537 = self.idx;
                                                        var $538 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($524, $534), $535, $536, $537, $538);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $540 = self.err;
                                                                var _reply$36 = Parser$wrap$(Litereum$parse$text("{"), (_pst$36 => {
                                                                    var self = _pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $543 = self.err;
                                                                            var _reply$42 = Parser$maybe$(Litereum$parse$text(","), _pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $545 = self.err;
                                                                                    var self = $543;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $547 = self.value;
                                                                                            var $548 = Parser$Reply$error$(Parser$Error$combine$($547, $545));
                                                                                            var $546 = $548;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $549 = Parser$Reply$error$($545);
                                                                                            var $546 = $549;
                                                                                            break;
                                                                                    };
                                                                                    var $544 = $546;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $550 = self.pst;
                                                                                    var self = $550;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $552 = self.err;
                                                                                            var $553 = self.nam;
                                                                                            var $554 = self.ini;
                                                                                            var $555 = self.idx;
                                                                                            var $556 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($543, $552), $553, $554, $555, $556);
                                                                                            var $557 = Litereum$parse$constructor$(_world$1, _reply$pst$50);
                                                                                            var $551 = $557;
                                                                                            break;
                                                                                    };
                                                                                    var $544 = $551;
                                                                                    break;
                                                                            };
                                                                            var $542 = $544;
                                                                            break;
                                                                    };
                                                                    return $542;
                                                                }), Litereum$parse$text("}"), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $558 = self.err;
                                                                        var self = $540;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $560 = self.value;
                                                                                var $561 = Parser$Reply$error$(Parser$Error$combine$($560, $558));
                                                                                var $559 = $561;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $562 = Parser$Reply$error$($558);
                                                                                var $559 = $562;
                                                                                break;
                                                                        };
                                                                        var $541 = $559;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $563 = self.pst;
                                                                        var $564 = self.val;
                                                                        var self = $563;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $566 = self.err;
                                                                                var $567 = self.nam;
                                                                                var $568 = self.ini;
                                                                                var $569 = self.idx;
                                                                                var $570 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($540, $566), $567, $568, $569, $570);
                                                                                var $571 = Parser$Reply$value$(_reply$pst$44, Litereum$Data$new$($532, $564));
                                                                                var $565 = $571;
                                                                                break;
                                                                        };
                                                                        var $541 = $565;
                                                                        break;
                                                                };
                                                                var $539 = $541;
                                                                break;
                                                        };
                                                        var $533 = $539;
                                                        break;
                                                };
                                                var $525 = $533;
                                                break;
                                        };
                                        var $523 = $525;
                                        break;
                                };
                                var $517 = $523;
                                break;
                        };
                        var $510 = $517;
                        break;
                };
                var $508 = $510;
                break;
        };
        return $508;
    };
    const Litereum$parse$data = x0 => x1 => Litereum$parse$data$(x0, x1);

    function Litereum$Transaction$new_data$(_data$1) {
        var $572 = ({
            _: 'Litereum.Transaction.new_data',
            'data': _data$1
        });
        return $572;
    };
    const Litereum$Transaction$new_data = x0 => Litereum$Transaction$new_data$(x0);

    function Litereum$Term$let$(_name$1, _type$2, _expr$3, _body$4) {
        var $573 = ({
            _: 'Litereum.Term.let',
            'name': _name$1,
            'type': _type$2,
            'expr': _expr$3,
            'body': _body$4
        });
        return $573;
    };
    const Litereum$Term$let = x0 => x1 => x2 => x3 => Litereum$Term$let$(x0, x1, x2, x3);

    function Litereum$parse$term$let$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $575 = self.err;
                var _reply$8 = Litereum$parse$text$("let", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $577 = self.err;
                        var self = $575;
                        switch (self._) {
                            case 'Maybe.some':
                                var $579 = self.value;
                                var $580 = Parser$Reply$error$(Parser$Error$combine$($579, $577));
                                var $578 = $580;
                                break;
                            case 'Maybe.none':
                                var $581 = Parser$Reply$error$($577);
                                var $578 = $581;
                                break;
                        };
                        var $576 = $578;
                        break;
                    case 'Parser.Reply.value':
                        var $582 = self.pst;
                        var self = $582;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $584 = self.err;
                                var $585 = self.nam;
                                var $586 = self.ini;
                                var $587 = self.idx;
                                var $588 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($575, $584), $585, $586, $587, $588);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $590 = self.err;
                                        var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $592 = self.err;
                                                var self = $590;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $594 = self.value;
                                                        var $595 = Parser$Reply$error$(Parser$Error$combine$($594, $592));
                                                        var $593 = $595;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $596 = Parser$Reply$error$($592);
                                                        var $593 = $596;
                                                        break;
                                                };
                                                var $591 = $593;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $597 = self.pst;
                                                var $598 = self.val;
                                                var self = $597;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $600 = self.err;
                                                        var $601 = self.nam;
                                                        var $602 = self.ini;
                                                        var $603 = self.idx;
                                                        var $604 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($590, $600), $601, $602, $603, $604);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $606 = self.err;
                                                                var _reply$36 = Litereum$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $608 = self.err;
                                                                        var self = $606;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $610 = self.value;
                                                                                var $611 = Parser$Reply$error$(Parser$Error$combine$($610, $608));
                                                                                var $609 = $611;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $612 = Parser$Reply$error$($608);
                                                                                var $609 = $612;
                                                                                break;
                                                                        };
                                                                        var $607 = $609;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $613 = self.pst;
                                                                        var self = $613;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $615 = self.err;
                                                                                var $616 = self.nam;
                                                                                var $617 = self.ini;
                                                                                var $618 = self.idx;
                                                                                var $619 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($606, $615), $616, $617, $618, $619);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $621 = self.err;
                                                                                        var _reply$50 = Litereum$parse$type$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $623 = self.err;
                                                                                                var self = $621;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $625 = self.value;
                                                                                                        var $626 = Parser$Reply$error$(Parser$Error$combine$($625, $623));
                                                                                                        var $624 = $626;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $627 = Parser$Reply$error$($623);
                                                                                                        var $624 = $627;
                                                                                                        break;
                                                                                                };
                                                                                                var $622 = $624;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $628 = self.pst;
                                                                                                var $629 = self.val;
                                                                                                var self = $628;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $631 = self.err;
                                                                                                        var $632 = self.nam;
                                                                                                        var $633 = self.ini;
                                                                                                        var $634 = self.idx;
                                                                                                        var $635 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($621, $631), $632, $633, $634, $635);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $637 = self.err;
                                                                                                                var _reply$64 = Litereum$parse$text$("=", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $639 = self.err;
                                                                                                                        var self = $637;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $641 = self.value;
                                                                                                                                var $642 = Parser$Reply$error$(Parser$Error$combine$($641, $639));
                                                                                                                                var $640 = $642;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $643 = Parser$Reply$error$($639);
                                                                                                                                var $640 = $643;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $638 = $640;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $644 = self.pst;
                                                                                                                        var self = $644;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $646 = self.err;
                                                                                                                                var $647 = self.nam;
                                                                                                                                var $648 = self.ini;
                                                                                                                                var $649 = self.idx;
                                                                                                                                var $650 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($637, $646), $647, $648, $649, $650);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $652 = self.err;
                                                                                                                                        var _reply$78 = Litereum$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $654 = self.err;
                                                                                                                                                var self = $652;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $656 = self.value;
                                                                                                                                                        var $657 = Parser$Reply$error$(Parser$Error$combine$($656, $654));
                                                                                                                                                        var $655 = $657;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $658 = Parser$Reply$error$($654);
                                                                                                                                                        var $655 = $658;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $653 = $655;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $659 = self.pst;
                                                                                                                                                var $660 = self.val;
                                                                                                                                                var self = $659;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $662 = self.err;
                                                                                                                                                        var $663 = self.nam;
                                                                                                                                                        var $664 = self.ini;
                                                                                                                                                        var $665 = self.idx;
                                                                                                                                                        var $666 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($652, $662), $663, $664, $665, $666);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $668 = self.err;
                                                                                                                                                                var _reply$92 = Parser$maybe$(Litereum$parse$text(";"), _reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $670 = self.err;
                                                                                                                                                                        var self = $668;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $672 = self.value;
                                                                                                                                                                                var $673 = Parser$Reply$error$(Parser$Error$combine$($672, $670));
                                                                                                                                                                                var $671 = $673;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $674 = Parser$Reply$error$($670);
                                                                                                                                                                                var $671 = $674;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $669 = $671;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $675 = self.pst;
                                                                                                                                                                        var self = $675;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $677 = self.err;
                                                                                                                                                                                var $678 = self.nam;
                                                                                                                                                                                var $679 = self.ini;
                                                                                                                                                                                var $680 = self.idx;
                                                                                                                                                                                var $681 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($668, $677), $678, $679, $680, $681);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $683 = self.err;
                                                                                                                                                                                        var _reply$106 = Litereum$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $685 = self.err;
                                                                                                                                                                                                var self = $683;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $687 = self.value;
                                                                                                                                                                                                        var $688 = Parser$Reply$error$(Parser$Error$combine$($687, $685));
                                                                                                                                                                                                        var $686 = $688;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $689 = Parser$Reply$error$($685);
                                                                                                                                                                                                        var $686 = $689;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $684 = $686;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $690 = self.pst;
                                                                                                                                                                                                var $691 = self.val;
                                                                                                                                                                                                var self = $690;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $693 = self.err;
                                                                                                                                                                                                        var $694 = self.nam;
                                                                                                                                                                                                        var $695 = self.ini;
                                                                                                                                                                                                        var $696 = self.idx;
                                                                                                                                                                                                        var $697 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($683, $693), $694, $695, $696, $697);
                                                                                                                                                                                                        var $698 = Parser$Reply$value$(_reply$pst$114, Litereum$Term$let$($598, $629, $660, $691));
                                                                                                                                                                                                        var $692 = $698;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $684 = $692;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $682 = $684;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $676 = $682;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $669 = $676;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $667 = $669;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $661 = $667;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $653 = $661;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $651 = $653;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $645 = $651;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $638 = $645;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $636 = $638;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $630 = $636;
                                                                                                        break;
                                                                                                };
                                                                                                var $622 = $630;
                                                                                                break;
                                                                                        };
                                                                                        var $620 = $622;
                                                                                        break;
                                                                                };
                                                                                var $614 = $620;
                                                                                break;
                                                                        };
                                                                        var $607 = $614;
                                                                        break;
                                                                };
                                                                var $605 = $607;
                                                                break;
                                                        };
                                                        var $599 = $605;
                                                        break;
                                                };
                                                var $591 = $599;
                                                break;
                                        };
                                        var $589 = $591;
                                        break;
                                };
                                var $583 = $589;
                                break;
                        };
                        var $576 = $583;
                        break;
                };
                var $574 = $576;
                break;
        };
        return $574;
    };
    const Litereum$parse$term$let = x0 => x1 => Litereum$parse$term$let$(x0, x1);

    function Litereum$Term$create$(_ctor$1, _vals$2) {
        var $699 = ({
            _: 'Litereum.Term.create',
            'ctor': _ctor$1,
            'vals': _vals$2
        });
        return $699;
    };
    const Litereum$Term$create = x0 => x1 => Litereum$Term$create$(x0, x1);

    function Litereum$parse$term$create$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $701 = self.err;
                var _reply$8 = Litereum$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $703 = self.err;
                        var self = $701;
                        switch (self._) {
                            case 'Maybe.some':
                                var $705 = self.value;
                                var $706 = Parser$Reply$error$(Parser$Error$combine$($705, $703));
                                var $704 = $706;
                                break;
                            case 'Maybe.none':
                                var $707 = Parser$Reply$error$($703);
                                var $704 = $707;
                                break;
                        };
                        var $702 = $704;
                        break;
                    case 'Parser.Reply.value':
                        var $708 = self.pst;
                        var $709 = self.val;
                        var self = $708;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $711 = self.err;
                                var $712 = self.nam;
                                var $713 = self.ini;
                                var $714 = self.idx;
                                var $715 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($701, $711), $712, $713, $714, $715);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $717 = self.err;
                                        var _reply$22 = Parser$wrap$(Litereum$parse$text("{"), Litereum$parse$term$(_world$1), Litereum$parse$text("}"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $719 = self.err;
                                                var self = $717;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $721 = self.value;
                                                        var $722 = Parser$Reply$error$(Parser$Error$combine$($721, $719));
                                                        var $720 = $722;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $723 = Parser$Reply$error$($719);
                                                        var $720 = $723;
                                                        break;
                                                };
                                                var $718 = $720;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $724 = self.pst;
                                                var $725 = self.val;
                                                var self = $724;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $727 = self.err;
                                                        var $728 = self.nam;
                                                        var $729 = self.ini;
                                                        var $730 = self.idx;
                                                        var $731 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($717, $727), $728, $729, $730, $731);
                                                        var $732 = Parser$Reply$value$(_reply$pst$30, Litereum$Term$create$($709, $725));
                                                        var $726 = $732;
                                                        break;
                                                };
                                                var $718 = $726;
                                                break;
                                        };
                                        var $716 = $718;
                                        break;
                                };
                                var $710 = $716;
                                break;
                        };
                        var $702 = $710;
                        break;
                };
                var $700 = $702;
                break;
        };
        return $700;
    };
    const Litereum$parse$term$create = x0 => x1 => Litereum$parse$term$create$(x0, x1);

    function Maybe$bind$(_m$3, _f$4) {
        var self = _m$3;
        switch (self._) {
            case 'Maybe.some':
                var $734 = self.value;
                var $735 = _f$4($734);
                var $733 = $735;
                break;
            case 'Maybe.none':
                var $736 = Maybe$none;
                var $733 = $736;
                break;
        };
        return $733;
    };
    const Maybe$bind = x0 => x1 => Maybe$bind$(x0, x1);

    function Maybe$monad$(_new$2) {
        var $737 = _new$2(Maybe$bind)(Maybe$some);
        return $737;
    };
    const Maybe$monad = x0 => Maybe$monad$(x0);

    function BBT$lookup$(_cmp$3, _key$4, _map$5) {
        var BBT$lookup$ = (_cmp$3, _key$4, _map$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _key$4, _map$5]
        });
        var BBT$lookup = _cmp$3 => _key$4 => _map$5 => BBT$lookup$(_cmp$3, _key$4, _map$5);
        var arg = [_cmp$3, _key$4, _map$5];
        while (true) {
            let [_cmp$3, _key$4, _map$5] = arg;
            var R = (() => {
                var self = _map$5;
                switch (self._) {
                    case 'BBT.bin':
                        var $738 = self.key;
                        var $739 = self.val;
                        var $740 = self.left;
                        var $741 = self.right;
                        var self = _cmp$3(_key$4)($738);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $743 = BBT$lookup$(_cmp$3, _key$4, $740);
                                var $742 = $743;
                                break;
                            case 'Cmp.eql':
                                var $744 = Maybe$some$($739);
                                var $742 = $744;
                                break;
                            case 'Cmp.gtn':
                                var $745 = BBT$lookup$(_cmp$3, _key$4, $741);
                                var $742 = $745;
                                break;
                        };
                        return $742;
                    case 'BBT.tip':
                        var $746 = Maybe$none;
                        return $746;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$lookup = x0 => x1 => x2 => BBT$lookup$(x0, x1, x2);

    function Cmp$as_ltn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $748 = Bool$true;
                var $747 = $748;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $749 = Bool$false;
                var $747 = $749;
                break;
        };
        return $747;
    };
    const Cmp$as_ltn = x0 => Cmp$as_ltn$(x0);

    function Word$ltn$(_a$2, _b$3) {
        var $750 = Cmp$as_ltn$(Word$cmp$(_a$2, _b$3));
        return $750;
    };
    const Word$ltn = x0 => x1 => Word$ltn$(x0, x1);
    const U16$ltn = a0 => a1 => (a0 < a1);

    function U16$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $752 = Cmp$ltn;
            var $751 = $752;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $754 = Cmp$eql;
                var $753 = $754;
            } else {
                var $755 = Cmp$gtn;
                var $753 = $755;
            };
            var $751 = $753;
        };
        return $751;
    };
    const U16$cmp = x0 => x1 => U16$cmp$(x0, x1);

    function String$cmp$(_a$1, _b$2) {
        var String$cmp$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var String$cmp = _a$1 => _b$2 => String$cmp$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                if (self.length === 0) {
                    var self = _b$2;
                    if (self.length === 0) {
                        var $757 = Cmp$eql;
                        var $756 = $757;
                    } else {
                        var $758 = self.charCodeAt(0);
                        var $759 = self.slice(1);
                        var $760 = Cmp$ltn;
                        var $756 = $760;
                    };
                    return $756;
                } else {
                    var $761 = self.charCodeAt(0);
                    var $762 = self.slice(1);
                    var self = _b$2;
                    if (self.length === 0) {
                        var $764 = Cmp$gtn;
                        var $763 = $764;
                    } else {
                        var $765 = self.charCodeAt(0);
                        var $766 = self.slice(1);
                        var self = U16$cmp$($761, $765);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $768 = Cmp$ltn;
                                var $767 = $768;
                                break;
                            case 'Cmp.eql':
                                var $769 = String$cmp$($762, $766);
                                var $767 = $769;
                                break;
                            case 'Cmp.gtn':
                                var $770 = Cmp$gtn;
                                var $767 = $770;
                                break;
                        };
                        var $763 = $767;
                    };
                    return $763;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$cmp = x0 => x1 => String$cmp$(x0, x1);

    function Map$get$(_key$2, _map$3) {
        var $771 = BBT$lookup$(String$cmp, _key$2, _map$3);
        return $771;
    };
    const Map$get = x0 => x1 => Map$get$(x0, x1);

    function Litereum$get_data$(_world$1, _name$2) {
        var self = _world$1;
        switch (self._) {
            case 'Litereum.World.new':
                var $773 = self.entry;
                var $774 = Maybe$monad$((_m$bind$7 => _m$pure$8 => {
                    var $775 = _m$bind$7;
                    return $775;
                }))(Map$get$(_name$2, $773))((_entry$7 => {
                    var self = _entry$7;
                    switch (self._) {
                        case 'Litereum.Entry.data':
                            var $777 = self.value;
                            var $778 = Maybe$some$($777);
                            var $776 = $778;
                            break;
                        case 'Litereum.Entry.bond':
                            var $779 = Maybe$none;
                            var $776 = $779;
                            break;
                    };
                    return $776;
                }));
                var $772 = $774;
                break;
        };
        return $772;
    };
    const Litereum$get_data = x0 => x1 => Litereum$get_data$(x0, x1);

    function Parser$fail$(_error$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $781 = self.nam;
                var $782 = self.ini;
                var $783 = self.idx;
                var $784 = Parser$Reply$fail$($781, $782, $783, _error$2);
                var $780 = $784;
                break;
        };
        return $780;
    };
    const Parser$fail = x0 => x1 => Parser$fail$(x0, x1);

    function Litereum$parse$term$match$cases$(_world$1, _constructors$2) {
        var self = _constructors$2;
        switch (self._) {
            case 'List.cons':
                var $786 = self.head;
                var $787 = self.tail;
                var _ctor$5 = $786;
                var self = _ctor$5;
                switch (self._) {
                    case 'Litereum.Constructor.new':
                        var $789 = self.name;
                        var $790 = (_pst$9 => {
                            var self = _pst$9;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $792 = self.err;
                                    var _reply$15 = Litereum$parse$text$($789, _pst$9);
                                    var self = _reply$15;
                                    switch (self._) {
                                        case 'Parser.Reply.error':
                                            var $794 = self.err;
                                            var self = $792;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $796 = self.value;
                                                    var $797 = Parser$Reply$error$(Parser$Error$combine$($796, $794));
                                                    var $795 = $797;
                                                    break;
                                                case 'Maybe.none':
                                                    var $798 = Parser$Reply$error$($794);
                                                    var $795 = $798;
                                                    break;
                                            };
                                            var $793 = $795;
                                            break;
                                        case 'Parser.Reply.value':
                                            var $799 = self.pst;
                                            var self = $799;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $801 = self.err;
                                                    var $802 = self.nam;
                                                    var $803 = self.ini;
                                                    var $804 = self.idx;
                                                    var $805 = self.str;
                                                    var _reply$pst$23 = Parser$State$new$(Parser$Error$maybe_combine$($792, $801), $802, $803, $804, $805);
                                                    var self = _reply$pst$23;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $807 = self.err;
                                                            var _reply$29 = Litereum$parse$text$(":", _reply$pst$23);
                                                            var self = _reply$29;
                                                            switch (self._) {
                                                                case 'Parser.Reply.error':
                                                                    var $809 = self.err;
                                                                    var self = $807;
                                                                    switch (self._) {
                                                                        case 'Maybe.some':
                                                                            var $811 = self.value;
                                                                            var $812 = Parser$Reply$error$(Parser$Error$combine$($811, $809));
                                                                            var $810 = $812;
                                                                            break;
                                                                        case 'Maybe.none':
                                                                            var $813 = Parser$Reply$error$($809);
                                                                            var $810 = $813;
                                                                            break;
                                                                    };
                                                                    var $808 = $810;
                                                                    break;
                                                                case 'Parser.Reply.value':
                                                                    var $814 = self.pst;
                                                                    var self = $814;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $816 = self.err;
                                                                            var $817 = self.nam;
                                                                            var $818 = self.ini;
                                                                            var $819 = self.idx;
                                                                            var $820 = self.str;
                                                                            var _reply$pst$37 = Parser$State$new$(Parser$Error$maybe_combine$($807, $816), $817, $818, $819, $820);
                                                                            var self = _reply$pst$37;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $822 = self.err;
                                                                                    var _reply$43 = Litereum$parse$term$(_world$1)(_reply$pst$37);
                                                                                    var self = _reply$43;
                                                                                    switch (self._) {
                                                                                        case 'Parser.Reply.error':
                                                                                            var $824 = self.err;
                                                                                            var self = $822;
                                                                                            switch (self._) {
                                                                                                case 'Maybe.some':
                                                                                                    var $826 = self.value;
                                                                                                    var $827 = Parser$Reply$error$(Parser$Error$combine$($826, $824));
                                                                                                    var $825 = $827;
                                                                                                    break;
                                                                                                case 'Maybe.none':
                                                                                                    var $828 = Parser$Reply$error$($824);
                                                                                                    var $825 = $828;
                                                                                                    break;
                                                                                            };
                                                                                            var $823 = $825;
                                                                                            break;
                                                                                        case 'Parser.Reply.value':
                                                                                            var $829 = self.pst;
                                                                                            var $830 = self.val;
                                                                                            var self = $829;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $832 = self.err;
                                                                                                    var $833 = self.nam;
                                                                                                    var $834 = self.ini;
                                                                                                    var $835 = self.idx;
                                                                                                    var $836 = self.str;
                                                                                                    var _reply$pst$51 = Parser$State$new$(Parser$Error$maybe_combine$($822, $832), $833, $834, $835, $836);
                                                                                                    var self = _reply$pst$51;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $838 = self.err;
                                                                                                            var _reply$57 = Parser$maybe$(Litereum$parse$text(","), _reply$pst$51);
                                                                                                            var self = _reply$57;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.Reply.error':
                                                                                                                    var $840 = self.err;
                                                                                                                    var self = $838;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Maybe.some':
                                                                                                                            var $842 = self.value;
                                                                                                                            var $843 = Parser$Reply$error$(Parser$Error$combine$($842, $840));
                                                                                                                            var $841 = $843;
                                                                                                                            break;
                                                                                                                        case 'Maybe.none':
                                                                                                                            var $844 = Parser$Reply$error$($840);
                                                                                                                            var $841 = $844;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $839 = $841;
                                                                                                                    break;
                                                                                                                case 'Parser.Reply.value':
                                                                                                                    var $845 = self.pst;
                                                                                                                    var self = $845;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.State.new':
                                                                                                                            var $847 = self.err;
                                                                                                                            var $848 = self.nam;
                                                                                                                            var $849 = self.ini;
                                                                                                                            var $850 = self.idx;
                                                                                                                            var $851 = self.str;
                                                                                                                            var _reply$pst$65 = Parser$State$new$(Parser$Error$maybe_combine$($838, $847), $848, $849, $850, $851);
                                                                                                                            var self = _reply$pst$65;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $853 = self.err;
                                                                                                                                    var _reply$71 = Litereum$parse$term$match$cases$(_world$1, $787)(_reply$pst$65);
                                                                                                                                    var self = _reply$71;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                            var $855 = self.err;
                                                                                                                                            var self = $853;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Maybe.some':
                                                                                                                                                    var $857 = self.value;
                                                                                                                                                    var $858 = Parser$Reply$error$(Parser$Error$combine$($857, $855));
                                                                                                                                                    var $856 = $858;
                                                                                                                                                    break;
                                                                                                                                                case 'Maybe.none':
                                                                                                                                                    var $859 = Parser$Reply$error$($855);
                                                                                                                                                    var $856 = $859;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $854 = $856;
                                                                                                                                            break;
                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                            var $860 = self.pst;
                                                                                                                                            var $861 = self.val;
                                                                                                                                            var self = $860;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $863 = self.err;
                                                                                                                                                    var $864 = self.nam;
                                                                                                                                                    var $865 = self.ini;
                                                                                                                                                    var $866 = self.idx;
                                                                                                                                                    var $867 = self.str;
                                                                                                                                                    var _reply$pst$79 = Parser$State$new$(Parser$Error$maybe_combine$($853, $863), $864, $865, $866, $867);
                                                                                                                                                    var $868 = Parser$Reply$value$(_reply$pst$79, List$cons$($830, $861));
                                                                                                                                                    var $862 = $868;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $854 = $862;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $852 = $854;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $846 = $852;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $839 = $846;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $837 = $839;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $831 = $837;
                                                                                                    break;
                                                                                            };
                                                                                            var $823 = $831;
                                                                                            break;
                                                                                    };
                                                                                    var $821 = $823;
                                                                                    break;
                                                                            };
                                                                            var $815 = $821;
                                                                            break;
                                                                    };
                                                                    var $808 = $815;
                                                                    break;
                                                            };
                                                            var $806 = $808;
                                                            break;
                                                    };
                                                    var $800 = $806;
                                                    break;
                                            };
                                            var $793 = $800;
                                            break;
                                    };
                                    var $791 = $793;
                                    break;
                            };
                            return $791;
                        });
                        var $788 = $790;
                        break;
                };
                var $785 = $788;
                break;
            case 'List.nil':
                var $869 = (_pst$3 => {
                    var $870 = Parser$Reply$value$(_pst$3, List$nil);
                    return $870;
                });
                var $785 = $869;
                break;
        };
        return $785;
    };
    const Litereum$parse$term$match$cases = x0 => x1 => Litereum$parse$term$match$cases$(x0, x1);

    function Litereum$Term$match$(_name$1, _data$2, _cses$3) {
        var $871 = ({
            _: 'Litereum.Term.match',
            'name': _name$1,
            'data': _data$2,
            'cses': _cses$3
        });
        return $871;
    };
    const Litereum$Term$match = x0 => x1 => x2 => Litereum$Term$match$(x0, x1, x2);

    function Litereum$parse$term$match$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $873 = self.err;
                var _reply$8 = Litereum$parse$text$("case ", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $875 = self.err;
                        var self = $873;
                        switch (self._) {
                            case 'Maybe.some':
                                var $877 = self.value;
                                var $878 = Parser$Reply$error$(Parser$Error$combine$($877, $875));
                                var $876 = $878;
                                break;
                            case 'Maybe.none':
                                var $879 = Parser$Reply$error$($875);
                                var $876 = $879;
                                break;
                        };
                        var $874 = $876;
                        break;
                    case 'Parser.Reply.value':
                        var $880 = self.pst;
                        var self = $880;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $882 = self.err;
                                var $883 = self.nam;
                                var $884 = self.ini;
                                var $885 = self.idx;
                                var $886 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($873, $882), $883, $884, $885, $886);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $888 = self.err;
                                        var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $890 = self.err;
                                                var self = $888;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $892 = self.value;
                                                        var $893 = Parser$Reply$error$(Parser$Error$combine$($892, $890));
                                                        var $891 = $893;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $894 = Parser$Reply$error$($890);
                                                        var $891 = $894;
                                                        break;
                                                };
                                                var $889 = $891;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $895 = self.pst;
                                                var $896 = self.val;
                                                var self = $895;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $898 = self.err;
                                                        var $899 = self.nam;
                                                        var $900 = self.ini;
                                                        var $901 = self.idx;
                                                        var $902 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($888, $898), $899, $900, $901, $902);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $904 = self.err;
                                                                var _reply$36 = Litereum$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $906 = self.err;
                                                                        var self = $904;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $908 = self.value;
                                                                                var $909 = Parser$Reply$error$(Parser$Error$combine$($908, $906));
                                                                                var $907 = $909;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $910 = Parser$Reply$error$($906);
                                                                                var $907 = $910;
                                                                                break;
                                                                        };
                                                                        var $905 = $907;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $911 = self.pst;
                                                                        var self = $911;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $913 = self.err;
                                                                                var $914 = self.nam;
                                                                                var $915 = self.ini;
                                                                                var $916 = self.idx;
                                                                                var $917 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($904, $913), $914, $915, $916, $917);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $919 = self.err;
                                                                                        var _reply$50 = Litereum$parse$name$(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $921 = self.err;
                                                                                                var self = $919;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $923 = self.value;
                                                                                                        var $924 = Parser$Reply$error$(Parser$Error$combine$($923, $921));
                                                                                                        var $922 = $924;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $925 = Parser$Reply$error$($921);
                                                                                                        var $922 = $925;
                                                                                                        break;
                                                                                                };
                                                                                                var $920 = $922;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $926 = self.pst;
                                                                                                var $927 = self.val;
                                                                                                var self = $926;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $929 = self.err;
                                                                                                        var $930 = self.nam;
                                                                                                        var $931 = self.ini;
                                                                                                        var $932 = self.idx;
                                                                                                        var $933 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($919, $929), $930, $931, $932, $933);
                                                                                                        var self = Litereum$get_data$(_world$1, $927);
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $935 = self.value;
                                                                                                                var _data$60 = $935;
                                                                                                                var self = _data$60;
                                                                                                                switch (self._) {
                                                                                                                    case 'Litereum.Data.new':
                                                                                                                        var $937 = self.constructors;
                                                                                                                        var $938 = (_pst$63 => {
                                                                                                                            var self = _pst$63;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $940 = self.err;
                                                                                                                                    var _reply$69 = Litereum$parse$text$("{", _pst$63);
                                                                                                                                    var self = _reply$69;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                            var $942 = self.err;
                                                                                                                                            var self = $940;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Maybe.some':
                                                                                                                                                    var $944 = self.value;
                                                                                                                                                    var $945 = Parser$Reply$error$(Parser$Error$combine$($944, $942));
                                                                                                                                                    var $943 = $945;
                                                                                                                                                    break;
                                                                                                                                                case 'Maybe.none':
                                                                                                                                                    var $946 = Parser$Reply$error$($942);
                                                                                                                                                    var $943 = $946;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $941 = $943;
                                                                                                                                            break;
                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                            var $947 = self.pst;
                                                                                                                                            var self = $947;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $949 = self.err;
                                                                                                                                                    var $950 = self.nam;
                                                                                                                                                    var $951 = self.ini;
                                                                                                                                                    var $952 = self.idx;
                                                                                                                                                    var $953 = self.str;
                                                                                                                                                    var _reply$pst$77 = Parser$State$new$(Parser$Error$maybe_combine$($940, $949), $950, $951, $952, $953);
                                                                                                                                                    var self = _reply$pst$77;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $955 = self.err;
                                                                                                                                                            var _reply$83 = Litereum$parse$term$match$cases$(_world$1, $937)(_reply$pst$77);
                                                                                                                                                            var self = _reply$83;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                    var $957 = self.err;
                                                                                                                                                                    var self = $955;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                            var $959 = self.value;
                                                                                                                                                                            var $960 = Parser$Reply$error$(Parser$Error$combine$($959, $957));
                                                                                                                                                                            var $958 = $960;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                            var $961 = Parser$Reply$error$($957);
                                                                                                                                                                            var $958 = $961;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $956 = $958;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                    var $962 = self.pst;
                                                                                                                                                                    var $963 = self.val;
                                                                                                                                                                    var self = $962;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $965 = self.err;
                                                                                                                                                                            var $966 = self.nam;
                                                                                                                                                                            var $967 = self.ini;
                                                                                                                                                                            var $968 = self.idx;
                                                                                                                                                                            var $969 = self.str;
                                                                                                                                                                            var _reply$pst$91 = Parser$State$new$(Parser$Error$maybe_combine$($955, $965), $966, $967, $968, $969);
                                                                                                                                                                            var self = _reply$pst$91;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $971 = self.err;
                                                                                                                                                                                    var _reply$97 = Litereum$parse$text$("}", _reply$pst$91);
                                                                                                                                                                                    var self = _reply$97;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                            var $973 = self.err;
                                                                                                                                                                                            var self = $971;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                    var $975 = self.value;
                                                                                                                                                                                                    var $976 = Parser$Reply$error$(Parser$Error$combine$($975, $973));
                                                                                                                                                                                                    var $974 = $976;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                    var $977 = Parser$Reply$error$($973);
                                                                                                                                                                                                    var $974 = $977;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $972 = $974;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                            var $978 = self.pst;
                                                                                                                                                                                            var self = $978;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                    var $980 = self.err;
                                                                                                                                                                                                    var $981 = self.nam;
                                                                                                                                                                                                    var $982 = self.ini;
                                                                                                                                                                                                    var $983 = self.idx;
                                                                                                                                                                                                    var $984 = self.str;
                                                                                                                                                                                                    var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($971, $980), $981, $982, $983, $984);
                                                                                                                                                                                                    var $985 = Parser$Reply$value$(_reply$pst$105, Litereum$Term$match$($896, $927, $963));
                                                                                                                                                                                                    var $979 = $985;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $972 = $979;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $970 = $972;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $964 = $970;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $956 = $964;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $954 = $956;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $948 = $954;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $941 = $948;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $939 = $941;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            return $939;
                                                                                                                        });
                                                                                                                        var $936 = $938;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $934 = $936;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $986 = Parser$fail("Type not found.");
                                                                                                                var $934 = $986;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $934 = $934(_reply$pst$58);
                                                                                                        var $928 = $934;
                                                                                                        break;
                                                                                                };
                                                                                                var $920 = $928;
                                                                                                break;
                                                                                        };
                                                                                        var $918 = $920;
                                                                                        break;
                                                                                };
                                                                                var $912 = $918;
                                                                                break;
                                                                        };
                                                                        var $905 = $912;
                                                                        break;
                                                                };
                                                                var $903 = $905;
                                                                break;
                                                        };
                                                        var $897 = $903;
                                                        break;
                                                };
                                                var $889 = $897;
                                                break;
                                        };
                                        var $887 = $889;
                                        break;
                                };
                                var $881 = $887;
                                break;
                        };
                        var $874 = $881;
                        break;
                };
                var $872 = $874;
                break;
        };
        return $872;
    };
    const Litereum$parse$term$match = x0 => x1 => Litereum$parse$term$match$(x0, x1);

    function Parser$many1$(_parser$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $988 = self.err;
                var _reply$9 = _parser$2(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $990 = self.err;
                        var self = $988;
                        switch (self._) {
                            case 'Maybe.some':
                                var $992 = self.value;
                                var $993 = Parser$Reply$error$(Parser$Error$combine$($992, $990));
                                var $991 = $993;
                                break;
                            case 'Maybe.none':
                                var $994 = Parser$Reply$error$($990);
                                var $991 = $994;
                                break;
                        };
                        var $989 = $991;
                        break;
                    case 'Parser.Reply.value':
                        var $995 = self.pst;
                        var $996 = self.val;
                        var self = $995;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $998 = self.err;
                                var $999 = self.nam;
                                var $1000 = self.ini;
                                var $1001 = self.idx;
                                var $1002 = self.str;
                                var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($988, $998), $999, $1000, $1001, $1002);
                                var self = _reply$pst$17;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1004 = self.err;
                                        var _reply$23 = Parser$many$(_parser$2)(_reply$pst$17);
                                        var self = _reply$23;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1006 = self.err;
                                                var self = $1004;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1008 = self.value;
                                                        var $1009 = Parser$Reply$error$(Parser$Error$combine$($1008, $1006));
                                                        var $1007 = $1009;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1010 = Parser$Reply$error$($1006);
                                                        var $1007 = $1010;
                                                        break;
                                                };
                                                var $1005 = $1007;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1011 = self.pst;
                                                var $1012 = self.val;
                                                var self = $1011;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1014 = self.err;
                                                        var $1015 = self.nam;
                                                        var $1016 = self.ini;
                                                        var $1017 = self.idx;
                                                        var $1018 = self.str;
                                                        var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($1004, $1014), $1015, $1016, $1017, $1018);
                                                        var $1019 = Parser$Reply$value$(_reply$pst$31, List$cons$($996, $1012));
                                                        var $1013 = $1019;
                                                        break;
                                                };
                                                var $1005 = $1013;
                                                break;
                                        };
                                        var $1003 = $1005;
                                        break;
                                };
                                var $997 = $1003;
                                break;
                        };
                        var $989 = $997;
                        break;
                };
                var $987 = $989;
                break;
        };
        return $987;
    };
    const Parser$many1 = x0 => x1 => Parser$many1$(x0, x1);

    function Parser$digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1021 = self.err;
                var $1022 = self.nam;
                var $1023 = self.ini;
                var $1024 = self.idx;
                var $1025 = self.str;
                var self = $1025;
                if (self.length === 0) {
                    var $1027 = Parser$Reply$fail$($1022, $1023, $1024, "Not a digit.");
                    var $1026 = $1027;
                } else {
                    var $1028 = self.charCodeAt(0);
                    var $1029 = self.slice(1);
                    var _pst$9 = Parser$State$new$($1021, $1022, $1023, Nat$succ$($1024), $1029);
                    var self = ($1028 === 48);
                    if (self) {
                        var $1031 = Parser$Reply$value$(_pst$9, 0n);
                        var $1030 = $1031;
                    } else {
                        var self = ($1028 === 49);
                        if (self) {
                            var $1033 = Parser$Reply$value$(_pst$9, 1n);
                            var $1032 = $1033;
                        } else {
                            var self = ($1028 === 50);
                            if (self) {
                                var $1035 = Parser$Reply$value$(_pst$9, 2n);
                                var $1034 = $1035;
                            } else {
                                var self = ($1028 === 51);
                                if (self) {
                                    var $1037 = Parser$Reply$value$(_pst$9, 3n);
                                    var $1036 = $1037;
                                } else {
                                    var self = ($1028 === 52);
                                    if (self) {
                                        var $1039 = Parser$Reply$value$(_pst$9, 4n);
                                        var $1038 = $1039;
                                    } else {
                                        var self = ($1028 === 53);
                                        if (self) {
                                            var $1041 = Parser$Reply$value$(_pst$9, 5n);
                                            var $1040 = $1041;
                                        } else {
                                            var self = ($1028 === 54);
                                            if (self) {
                                                var $1043 = Parser$Reply$value$(_pst$9, 6n);
                                                var $1042 = $1043;
                                            } else {
                                                var self = ($1028 === 55);
                                                if (self) {
                                                    var $1045 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $1044 = $1045;
                                                } else {
                                                    var self = ($1028 === 56);
                                                    if (self) {
                                                        var $1047 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $1046 = $1047;
                                                    } else {
                                                        var self = ($1028 === 57);
                                                        if (self) {
                                                            var $1049 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $1048 = $1049;
                                                        } else {
                                                            var $1050 = Parser$Reply$fail$($1022, $1023, $1024, "Not a digit.");
                                                            var $1048 = $1050;
                                                        };
                                                        var $1046 = $1048;
                                                    };
                                                    var $1044 = $1046;
                                                };
                                                var $1042 = $1044;
                                            };
                                            var $1040 = $1042;
                                        };
                                        var $1038 = $1040;
                                    };
                                    var $1036 = $1038;
                                };
                                var $1034 = $1036;
                            };
                            var $1032 = $1034;
                        };
                        var $1030 = $1032;
                    };
                    var $1026 = $1030;
                };
                var $1020 = $1026;
                break;
        };
        return $1020;
    };
    const Parser$digit = x0 => Parser$digit$(x0);
    const Nat$add = a0 => a1 => (a0 + a1);
    const Nat$mul = a0 => a1 => (a0 * a1);

    function Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4) {
        var Nat$from_base$go$ = (_b$1, _ds$2, _p$3, _res$4) => ({
            ctr: 'TCO',
            arg: [_b$1, _ds$2, _p$3, _res$4]
        });
        var Nat$from_base$go = _b$1 => _ds$2 => _p$3 => _res$4 => Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4);
        var arg = [_b$1, _ds$2, _p$3, _res$4];
        while (true) {
            let [_b$1, _ds$2, _p$3, _res$4] = arg;
            var R = (() => {
                var self = _ds$2;
                switch (self._) {
                    case 'List.cons':
                        var $1051 = self.head;
                        var $1052 = self.tail;
                        var $1053 = Nat$from_base$go$(_b$1, $1052, (_b$1 * _p$3), (($1051 * _p$3) + _res$4));
                        return $1053;
                    case 'List.nil':
                        var $1054 = _res$4;
                        return $1054;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$from_base$go = x0 => x1 => x2 => x3 => Nat$from_base$go$(x0, x1, x2, x3);

    function Nat$from_base$(_base$1, _ds$2) {
        var $1055 = Nat$from_base$go$(_base$1, List$reverse$(_ds$2), 1n, 0n);
        return $1055;
    };
    const Nat$from_base = x0 => x1 => Nat$from_base$(x0, x1);

    function Parser$nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1057 = self.err;
                var _reply$7 = Parser$many1$(Parser$digit, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1059 = self.err;
                        var self = $1057;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1061 = self.value;
                                var $1062 = Parser$Reply$error$(Parser$Error$combine$($1061, $1059));
                                var $1060 = $1062;
                                break;
                            case 'Maybe.none':
                                var $1063 = Parser$Reply$error$($1059);
                                var $1060 = $1063;
                                break;
                        };
                        var $1058 = $1060;
                        break;
                    case 'Parser.Reply.value':
                        var $1064 = self.pst;
                        var $1065 = self.val;
                        var self = $1064;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1067 = self.err;
                                var $1068 = self.nam;
                                var $1069 = self.ini;
                                var $1070 = self.idx;
                                var $1071 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1057, $1067), $1068, $1069, $1070, $1071);
                                var $1072 = Parser$Reply$value$(_reply$pst$15, Nat$from_base$(10n, $1065));
                                var $1066 = $1072;
                                break;
                        };
                        var $1058 = $1066;
                        break;
                };
                var $1056 = $1058;
                break;
        };
        return $1056;
    };
    const Parser$nat = x0 => Parser$nat$(x0);
    const Nat$gte = a0 => a1 => (a0 >= a1);

    function Nat$pow$aux$(_x$1, _y$2, _aux$3) {
        var Nat$pow$aux$ = (_x$1, _y$2, _aux$3) => ({
            ctr: 'TCO',
            arg: [_x$1, _y$2, _aux$3]
        });
        var Nat$pow$aux = _x$1 => _y$2 => _aux$3 => Nat$pow$aux$(_x$1, _y$2, _aux$3);
        var arg = [_x$1, _y$2, _aux$3];
        while (true) {
            let [_x$1, _y$2, _aux$3] = arg;
            var R = (() => {
                var self = _y$2;
                if (self === 0n) {
                    var $1073 = _x$1;
                    return $1073;
                } else {
                    var $1074 = (self - 1n);
                    var $1075 = Nat$pow$aux$(_x$1, $1074, (_aux$3 * 2n));
                    return $1075;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$pow$aux = x0 => x1 => x2 => Nat$pow$aux$(x0, x1, x2);
    const Nat$pow = a0 => a1 => (a0 ** a1);

    function Litereum$Term$word$(_numb$1) {
        var $1076 = ({
            _: 'Litereum.Term.word',
            'numb': _numb$1
        });
        return $1076;
    };
    const Litereum$Term$word = x0 => Litereum$Term$word$(x0);

    function U64$new$(_value$1) {
        var $1077 = word_to_u64(_value$1);
        return $1077;
    };
    const U64$new = x0 => U64$new$(x0);

    function Nat$apply$(_n$2, _f$3, _x$4) {
        var Nat$apply$ = (_n$2, _f$3, _x$4) => ({
            ctr: 'TCO',
            arg: [_n$2, _f$3, _x$4]
        });
        var Nat$apply = _n$2 => _f$3 => _x$4 => Nat$apply$(_n$2, _f$3, _x$4);
        var arg = [_n$2, _f$3, _x$4];
        while (true) {
            let [_n$2, _f$3, _x$4] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $1078 = _x$4;
                    return $1078;
                } else {
                    var $1079 = (self - 1n);
                    var $1080 = Nat$apply$($1079, _f$3, _f$3(_x$4));
                    return $1080;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$apply = x0 => x1 => x2 => Nat$apply$(x0, x1, x2);

    function Word$(_size$1) {
        var $1081 = null;
        return $1081;
    };
    const Word = x0 => Word$(x0);
    const Word$e = ({
        _: 'Word.e'
    });

    function Word$i$(_pred$2) {
        var $1082 = ({
            _: 'Word.i',
            'pred': _pred$2
        });
        return $1082;
    };
    const Word$i = x0 => Word$i$(x0);

    function Word$o$(_pred$2) {
        var $1083 = ({
            _: 'Word.o',
            'pred': _pred$2
        });
        return $1083;
    };
    const Word$o = x0 => Word$o$(x0);

    function Word$inc$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $1085 = self.pred;
                var $1086 = Word$i$($1085);
                var $1084 = $1086;
                break;
            case 'Word.i':
                var $1087 = self.pred;
                var $1088 = Word$o$(Word$inc$($1087));
                var $1084 = $1088;
                break;
            case 'Word.e':
                var $1089 = Word$e;
                var $1084 = $1089;
                break;
        };
        return $1084;
    };
    const Word$inc = x0 => Word$inc$(x0);

    function Word$zero$(_size$1) {
        var self = _size$1;
        if (self === 0n) {
            var $1091 = Word$e;
            var $1090 = $1091;
        } else {
            var $1092 = (self - 1n);
            var $1093 = Word$o$(Word$zero$($1092));
            var $1090 = $1093;
        };
        return $1090;
    };
    const Word$zero = x0 => Word$zero$(x0);

    function Nat$to_word$(_size$1, _n$2) {
        var $1094 = Nat$apply$(_n$2, Word$inc, Word$zero$(_size$1));
        return $1094;
    };
    const Nat$to_word = x0 => x1 => Nat$to_word$(x0, x1);
    const Nat$to_u64 = a0 => (a0 & 0xFFFFFFFFFFFFFFFFn);

    function Litereum$parse$term$word$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1096 = self.err;
                var _reply$8 = Litereum$parse$text$("#", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1098 = self.err;
                        var self = $1096;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1100 = self.value;
                                var $1101 = Parser$Reply$error$(Parser$Error$combine$($1100, $1098));
                                var $1099 = $1101;
                                break;
                            case 'Maybe.none':
                                var $1102 = Parser$Reply$error$($1098);
                                var $1099 = $1102;
                                break;
                        };
                        var $1097 = $1099;
                        break;
                    case 'Parser.Reply.value':
                        var $1103 = self.pst;
                        var self = $1103;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1105 = self.err;
                                var $1106 = self.nam;
                                var $1107 = self.ini;
                                var $1108 = self.idx;
                                var $1109 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1096, $1105), $1106, $1107, $1108, $1109);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1111 = self.err;
                                        var _reply$22 = Parser$nat$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1113 = self.err;
                                                var self = $1111;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1115 = self.value;
                                                        var $1116 = Parser$Reply$error$(Parser$Error$combine$($1115, $1113));
                                                        var $1114 = $1116;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1117 = Parser$Reply$error$($1113);
                                                        var $1114 = $1117;
                                                        break;
                                                };
                                                var $1112 = $1114;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1118 = self.pst;
                                                var $1119 = self.val;
                                                var self = $1118;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1121 = self.err;
                                                        var $1122 = self.nam;
                                                        var $1123 = self.ini;
                                                        var $1124 = self.idx;
                                                        var $1125 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1111, $1121), $1122, $1123, $1124, $1125);
                                                        var self = ($1119 >= (2n ** 64n));
                                                        if (self) {
                                                            var $1127 = Parser$fail("Number out of bound");
                                                            var $1126 = $1127;
                                                        } else {
                                                            var $1128 = (_pst$31 => {
                                                                var $1129 = Parser$Reply$value$(_pst$31, Litereum$Term$word$(($1119 & 0xFFFFFFFFFFFFFFFFn)));
                                                                return $1129;
                                                            });
                                                            var $1126 = $1128;
                                                        };
                                                        var $1126 = $1126(_reply$pst$30);
                                                        var $1120 = $1126;
                                                        break;
                                                };
                                                var $1112 = $1120;
                                                break;
                                        };
                                        var $1110 = $1112;
                                        break;
                                };
                                var $1104 = $1110;
                                break;
                        };
                        var $1097 = $1104;
                        break;
                };
                var $1095 = $1097;
                break;
        };
        return $1095;
    };
    const Litereum$parse$term$word = x0 => x1 => Litereum$parse$term$word$(x0, x1);

    function Litereum$Term$compare$(_val0$1, _val1$2, _iflt$3, _ifeq$4, _ifgt$5) {
        var $1130 = ({
            _: 'Litereum.Term.compare',
            'val0': _val0$1,
            'val1': _val1$2,
            'iflt': _iflt$3,
            'ifeq': _ifeq$4,
            'ifgt': _ifgt$5
        });
        return $1130;
    };
    const Litereum$Term$compare = x0 => x1 => x2 => x3 => x4 => Litereum$Term$compare$(x0, x1, x2, x3, x4);

    function Litereum$parse$term$compare$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1132 = self.err;
                var _reply$8 = Litereum$parse$text$("compare", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1134 = self.err;
                        var self = $1132;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1136 = self.value;
                                var $1137 = Parser$Reply$error$(Parser$Error$combine$($1136, $1134));
                                var $1135 = $1137;
                                break;
                            case 'Maybe.none':
                                var $1138 = Parser$Reply$error$($1134);
                                var $1135 = $1138;
                                break;
                        };
                        var $1133 = $1135;
                        break;
                    case 'Parser.Reply.value':
                        var $1139 = self.pst;
                        var self = $1139;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1141 = self.err;
                                var $1142 = self.nam;
                                var $1143 = self.ini;
                                var $1144 = self.idx;
                                var $1145 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1132, $1141), $1142, $1143, $1144, $1145);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1147 = self.err;
                                        var _reply$22 = Litereum$parse$term$(_world$1)(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1149 = self.err;
                                                var self = $1147;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1151 = self.value;
                                                        var $1152 = Parser$Reply$error$(Parser$Error$combine$($1151, $1149));
                                                        var $1150 = $1152;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1153 = Parser$Reply$error$($1149);
                                                        var $1150 = $1153;
                                                        break;
                                                };
                                                var $1148 = $1150;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1154 = self.pst;
                                                var $1155 = self.val;
                                                var self = $1154;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1157 = self.err;
                                                        var $1158 = self.nam;
                                                        var $1159 = self.ini;
                                                        var $1160 = self.idx;
                                                        var $1161 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1147, $1157), $1158, $1159, $1160, $1161);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1163 = self.err;
                                                                var _reply$36 = Litereum$parse$term$(_world$1)(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1165 = self.err;
                                                                        var self = $1163;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1167 = self.value;
                                                                                var $1168 = Parser$Reply$error$(Parser$Error$combine$($1167, $1165));
                                                                                var $1166 = $1168;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1169 = Parser$Reply$error$($1165);
                                                                                var $1166 = $1169;
                                                                                break;
                                                                        };
                                                                        var $1164 = $1166;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1170 = self.pst;
                                                                        var $1171 = self.val;
                                                                        var self = $1170;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1173 = self.err;
                                                                                var $1174 = self.nam;
                                                                                var $1175 = self.ini;
                                                                                var $1176 = self.idx;
                                                                                var $1177 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1163, $1173), $1174, $1175, $1176, $1177);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1179 = self.err;
                                                                                        var _reply$50 = Litereum$parse$text$("{", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1181 = self.err;
                                                                                                var self = $1179;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1183 = self.value;
                                                                                                        var $1184 = Parser$Reply$error$(Parser$Error$combine$($1183, $1181));
                                                                                                        var $1182 = $1184;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1185 = Parser$Reply$error$($1181);
                                                                                                        var $1182 = $1185;
                                                                                                        break;
                                                                                                };
                                                                                                var $1180 = $1182;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1186 = self.pst;
                                                                                                var self = $1186;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1188 = self.err;
                                                                                                        var $1189 = self.nam;
                                                                                                        var $1190 = self.ini;
                                                                                                        var $1191 = self.idx;
                                                                                                        var $1192 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1179, $1188), $1189, $1190, $1191, $1192);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1194 = self.err;
                                                                                                                var _reply$64 = Litereum$parse$text$("_<_:", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1196 = self.err;
                                                                                                                        var self = $1194;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1198 = self.value;
                                                                                                                                var $1199 = Parser$Reply$error$(Parser$Error$combine$($1198, $1196));
                                                                                                                                var $1197 = $1199;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1200 = Parser$Reply$error$($1196);
                                                                                                                                var $1197 = $1200;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1195 = $1197;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1201 = self.pst;
                                                                                                                        var self = $1201;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1203 = self.err;
                                                                                                                                var $1204 = self.nam;
                                                                                                                                var $1205 = self.ini;
                                                                                                                                var $1206 = self.idx;
                                                                                                                                var $1207 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1194, $1203), $1204, $1205, $1206, $1207);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1209 = self.err;
                                                                                                                                        var _reply$78 = Litereum$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1211 = self.err;
                                                                                                                                                var self = $1209;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1213 = self.value;
                                                                                                                                                        var $1214 = Parser$Reply$error$(Parser$Error$combine$($1213, $1211));
                                                                                                                                                        var $1212 = $1214;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1215 = Parser$Reply$error$($1211);
                                                                                                                                                        var $1212 = $1215;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1210 = $1212;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1216 = self.pst;
                                                                                                                                                var $1217 = self.val;
                                                                                                                                                var self = $1216;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1219 = self.err;
                                                                                                                                                        var $1220 = self.nam;
                                                                                                                                                        var $1221 = self.ini;
                                                                                                                                                        var $1222 = self.idx;
                                                                                                                                                        var $1223 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1209, $1219), $1220, $1221, $1222, $1223);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $1225 = self.err;
                                                                                                                                                                var _reply$92 = Litereum$parse$text$("_=_:", _reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $1227 = self.err;
                                                                                                                                                                        var self = $1225;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $1229 = self.value;
                                                                                                                                                                                var $1230 = Parser$Reply$error$(Parser$Error$combine$($1229, $1227));
                                                                                                                                                                                var $1228 = $1230;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $1231 = Parser$Reply$error$($1227);
                                                                                                                                                                                var $1228 = $1231;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $1226 = $1228;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $1232 = self.pst;
                                                                                                                                                                        var self = $1232;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $1234 = self.err;
                                                                                                                                                                                var $1235 = self.nam;
                                                                                                                                                                                var $1236 = self.ini;
                                                                                                                                                                                var $1237 = self.idx;
                                                                                                                                                                                var $1238 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($1225, $1234), $1235, $1236, $1237, $1238);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $1240 = self.err;
                                                                                                                                                                                        var _reply$106 = Litereum$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $1242 = self.err;
                                                                                                                                                                                                var self = $1240;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $1244 = self.value;
                                                                                                                                                                                                        var $1245 = Parser$Reply$error$(Parser$Error$combine$($1244, $1242));
                                                                                                                                                                                                        var $1243 = $1245;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $1246 = Parser$Reply$error$($1242);
                                                                                                                                                                                                        var $1243 = $1246;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $1241 = $1243;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $1247 = self.pst;
                                                                                                                                                                                                var $1248 = self.val;
                                                                                                                                                                                                var self = $1247;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $1250 = self.err;
                                                                                                                                                                                                        var $1251 = self.nam;
                                                                                                                                                                                                        var $1252 = self.ini;
                                                                                                                                                                                                        var $1253 = self.idx;
                                                                                                                                                                                                        var $1254 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($1240, $1250), $1251, $1252, $1253, $1254);
                                                                                                                                                                                                        var self = _reply$pst$114;
                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                var $1256 = self.err;
                                                                                                                                                                                                                var _reply$120 = Litereum$parse$text$("_>_:", _reply$pst$114);
                                                                                                                                                                                                                var self = _reply$120;
                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                        var $1258 = self.err;
                                                                                                                                                                                                                        var self = $1256;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                var $1260 = self.value;
                                                                                                                                                                                                                                var $1261 = Parser$Reply$error$(Parser$Error$combine$($1260, $1258));
                                                                                                                                                                                                                                var $1259 = $1261;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                var $1262 = Parser$Reply$error$($1258);
                                                                                                                                                                                                                                var $1259 = $1262;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $1257 = $1259;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                        var $1263 = self.pst;
                                                                                                                                                                                                                        var self = $1263;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                var $1265 = self.err;
                                                                                                                                                                                                                                var $1266 = self.nam;
                                                                                                                                                                                                                                var $1267 = self.ini;
                                                                                                                                                                                                                                var $1268 = self.idx;
                                                                                                                                                                                                                                var $1269 = self.str;
                                                                                                                                                                                                                                var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($1256, $1265), $1266, $1267, $1268, $1269);
                                                                                                                                                                                                                                var self = _reply$pst$128;
                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                        var $1271 = self.err;
                                                                                                                                                                                                                                        var _reply$134 = Litereum$parse$term$(_world$1)(_reply$pst$128);
                                                                                                                                                                                                                                        var self = _reply$134;
                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                var $1273 = self.err;
                                                                                                                                                                                                                                                var self = $1271;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                        var $1275 = self.value;
                                                                                                                                                                                                                                                        var $1276 = Parser$Reply$error$(Parser$Error$combine$($1275, $1273));
                                                                                                                                                                                                                                                        var $1274 = $1276;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                        var $1277 = Parser$Reply$error$($1273);
                                                                                                                                                                                                                                                        var $1274 = $1277;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $1272 = $1274;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                var $1278 = self.pst;
                                                                                                                                                                                                                                                var $1279 = self.val;
                                                                                                                                                                                                                                                var self = $1278;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                        var $1281 = self.err;
                                                                                                                                                                                                                                                        var $1282 = self.nam;
                                                                                                                                                                                                                                                        var $1283 = self.ini;
                                                                                                                                                                                                                                                        var $1284 = self.idx;
                                                                                                                                                                                                                                                        var $1285 = self.str;
                                                                                                                                                                                                                                                        var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($1271, $1281), $1282, $1283, $1284, $1285);
                                                                                                                                                                                                                                                        var self = _reply$pst$142;
                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                var $1287 = self.err;
                                                                                                                                                                                                                                                                var _reply$148 = Litereum$parse$text$("}", _reply$pst$142);
                                                                                                                                                                                                                                                                var self = _reply$148;
                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                        var $1289 = self.err;
                                                                                                                                                                                                                                                                        var self = $1287;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                                                                var $1291 = self.value;
                                                                                                                                                                                                                                                                                var $1292 = Parser$Reply$error$(Parser$Error$combine$($1291, $1289));
                                                                                                                                                                                                                                                                                var $1290 = $1292;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                                                                var $1293 = Parser$Reply$error$($1289);
                                                                                                                                                                                                                                                                                var $1290 = $1293;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $1288 = $1290;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                        var $1294 = self.pst;
                                                                                                                                                                                                                                                                        var self = $1294;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                                var $1296 = self.err;
                                                                                                                                                                                                                                                                                var $1297 = self.nam;
                                                                                                                                                                                                                                                                                var $1298 = self.ini;
                                                                                                                                                                                                                                                                                var $1299 = self.idx;
                                                                                                                                                                                                                                                                                var $1300 = self.str;
                                                                                                                                                                                                                                                                                var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($1287, $1296), $1297, $1298, $1299, $1300);
                                                                                                                                                                                                                                                                                var $1301 = Parser$Reply$value$(_reply$pst$156, Litereum$Term$compare$($1155, $1171, $1217, $1248, $1279));
                                                                                                                                                                                                                                                                                var $1295 = $1301;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $1288 = $1295;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                var $1286 = $1288;
                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                        var $1280 = $1286;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $1272 = $1280;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                        var $1270 = $1272;
                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                var $1264 = $1270;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $1257 = $1264;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                };
                                                                                                                                                                                                                var $1255 = $1257;
                                                                                                                                                                                                                break;
                                                                                                                                                                                                        };
                                                                                                                                                                                                        var $1249 = $1255;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $1241 = $1249;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $1239 = $1241;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $1233 = $1239;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $1226 = $1233;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $1224 = $1226;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $1218 = $1224;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1210 = $1218;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1208 = $1210;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1202 = $1208;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1195 = $1202;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1193 = $1195;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1187 = $1193;
                                                                                                        break;
                                                                                                };
                                                                                                var $1180 = $1187;
                                                                                                break;
                                                                                        };
                                                                                        var $1178 = $1180;
                                                                                        break;
                                                                                };
                                                                                var $1172 = $1178;
                                                                                break;
                                                                        };
                                                                        var $1164 = $1172;
                                                                        break;
                                                                };
                                                                var $1162 = $1164;
                                                                break;
                                                        };
                                                        var $1156 = $1162;
                                                        break;
                                                };
                                                var $1148 = $1156;
                                                break;
                                        };
                                        var $1146 = $1148;
                                        break;
                                };
                                var $1140 = $1146;
                                break;
                        };
                        var $1133 = $1140;
                        break;
                };
                var $1131 = $1133;
                break;
        };
        return $1131;
    };
    const Litereum$parse$term$compare = x0 => x1 => Litereum$parse$term$compare$(x0, x1);
    const Litereum$Operation$add = ({
        _: 'Litereum.Operation.add'
    });
    const Litereum$Operation$sub = ({
        _: 'Litereum.Operation.sub'
    });
    const Litereum$Operation$mul = ({
        _: 'Litereum.Operation.mul'
    });
    const Litereum$Operation$div = ({
        _: 'Litereum.Operation.div'
    });
    const Litereum$Operation$mod = ({
        _: 'Litereum.Operation.mod'
    });
    const Litereum$Operation$or = ({
        _: 'Litereum.Operation.or'
    });
    const Litereum$Operation$and = ({
        _: 'Litereum.Operation.and'
    });
    const Litereum$Operation$xor = ({
        _: 'Litereum.Operation.xor'
    });
    const Litereum$parse$term$operation = Parser$choice(List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1303 = self.err;
                var _reply$7 = Litereum$parse$text$("+", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1305 = self.err;
                        var self = $1303;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1307 = self.value;
                                var $1308 = Parser$Reply$error$(Parser$Error$combine$($1307, $1305));
                                var $1306 = $1308;
                                break;
                            case 'Maybe.none':
                                var $1309 = Parser$Reply$error$($1305);
                                var $1306 = $1309;
                                break;
                        };
                        var $1304 = $1306;
                        break;
                    case 'Parser.Reply.value':
                        var $1310 = self.pst;
                        var self = $1310;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1312 = self.err;
                                var $1313 = self.nam;
                                var $1314 = self.ini;
                                var $1315 = self.idx;
                                var $1316 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1303, $1312), $1313, $1314, $1315, $1316);
                                var $1317 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$add));
                                var $1311 = $1317;
                                break;
                        };
                        var $1304 = $1311;
                        break;
                };
                var $1302 = $1304;
                break;
        };
        return $1302;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1319 = self.err;
                var _reply$7 = Litereum$parse$text$("-", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1321 = self.err;
                        var self = $1319;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1323 = self.value;
                                var $1324 = Parser$Reply$error$(Parser$Error$combine$($1323, $1321));
                                var $1322 = $1324;
                                break;
                            case 'Maybe.none':
                                var $1325 = Parser$Reply$error$($1321);
                                var $1322 = $1325;
                                break;
                        };
                        var $1320 = $1322;
                        break;
                    case 'Parser.Reply.value':
                        var $1326 = self.pst;
                        var self = $1326;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1328 = self.err;
                                var $1329 = self.nam;
                                var $1330 = self.ini;
                                var $1331 = self.idx;
                                var $1332 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1319, $1328), $1329, $1330, $1331, $1332);
                                var $1333 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$sub));
                                var $1327 = $1333;
                                break;
                        };
                        var $1320 = $1327;
                        break;
                };
                var $1318 = $1320;
                break;
        };
        return $1318;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1335 = self.err;
                var _reply$7 = Litereum$parse$text$("*", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1337 = self.err;
                        var self = $1335;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1339 = self.value;
                                var $1340 = Parser$Reply$error$(Parser$Error$combine$($1339, $1337));
                                var $1338 = $1340;
                                break;
                            case 'Maybe.none':
                                var $1341 = Parser$Reply$error$($1337);
                                var $1338 = $1341;
                                break;
                        };
                        var $1336 = $1338;
                        break;
                    case 'Parser.Reply.value':
                        var $1342 = self.pst;
                        var self = $1342;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1344 = self.err;
                                var $1345 = self.nam;
                                var $1346 = self.ini;
                                var $1347 = self.idx;
                                var $1348 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1335, $1344), $1345, $1346, $1347, $1348);
                                var $1349 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$mul));
                                var $1343 = $1349;
                                break;
                        };
                        var $1336 = $1343;
                        break;
                };
                var $1334 = $1336;
                break;
        };
        return $1334;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1351 = self.err;
                var _reply$7 = Litereum$parse$text$("/", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1353 = self.err;
                        var self = $1351;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1355 = self.value;
                                var $1356 = Parser$Reply$error$(Parser$Error$combine$($1355, $1353));
                                var $1354 = $1356;
                                break;
                            case 'Maybe.none':
                                var $1357 = Parser$Reply$error$($1353);
                                var $1354 = $1357;
                                break;
                        };
                        var $1352 = $1354;
                        break;
                    case 'Parser.Reply.value':
                        var $1358 = self.pst;
                        var self = $1358;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1360 = self.err;
                                var $1361 = self.nam;
                                var $1362 = self.ini;
                                var $1363 = self.idx;
                                var $1364 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1351, $1360), $1361, $1362, $1363, $1364);
                                var $1365 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$div));
                                var $1359 = $1365;
                                break;
                        };
                        var $1352 = $1359;
                        break;
                };
                var $1350 = $1352;
                break;
        };
        return $1350;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1367 = self.err;
                var _reply$7 = Litereum$parse$text$("%", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1369 = self.err;
                        var self = $1367;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1371 = self.value;
                                var $1372 = Parser$Reply$error$(Parser$Error$combine$($1371, $1369));
                                var $1370 = $1372;
                                break;
                            case 'Maybe.none':
                                var $1373 = Parser$Reply$error$($1369);
                                var $1370 = $1373;
                                break;
                        };
                        var $1368 = $1370;
                        break;
                    case 'Parser.Reply.value':
                        var $1374 = self.pst;
                        var self = $1374;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1376 = self.err;
                                var $1377 = self.nam;
                                var $1378 = self.ini;
                                var $1379 = self.idx;
                                var $1380 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1367, $1376), $1377, $1378, $1379, $1380);
                                var $1381 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$mod));
                                var $1375 = $1381;
                                break;
                        };
                        var $1368 = $1375;
                        break;
                };
                var $1366 = $1368;
                break;
        };
        return $1366;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1383 = self.err;
                var _reply$7 = Litereum$parse$text$("|", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1385 = self.err;
                        var self = $1383;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1387 = self.value;
                                var $1388 = Parser$Reply$error$(Parser$Error$combine$($1387, $1385));
                                var $1386 = $1388;
                                break;
                            case 'Maybe.none':
                                var $1389 = Parser$Reply$error$($1385);
                                var $1386 = $1389;
                                break;
                        };
                        var $1384 = $1386;
                        break;
                    case 'Parser.Reply.value':
                        var $1390 = self.pst;
                        var self = $1390;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1392 = self.err;
                                var $1393 = self.nam;
                                var $1394 = self.ini;
                                var $1395 = self.idx;
                                var $1396 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1383, $1392), $1393, $1394, $1395, $1396);
                                var $1397 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$or));
                                var $1391 = $1397;
                                break;
                        };
                        var $1384 = $1391;
                        break;
                };
                var $1382 = $1384;
                break;
        };
        return $1382;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1399 = self.err;
                var _reply$7 = Litereum$parse$text$("&", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1401 = self.err;
                        var self = $1399;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1403 = self.value;
                                var $1404 = Parser$Reply$error$(Parser$Error$combine$($1403, $1401));
                                var $1402 = $1404;
                                break;
                            case 'Maybe.none':
                                var $1405 = Parser$Reply$error$($1401);
                                var $1402 = $1405;
                                break;
                        };
                        var $1400 = $1402;
                        break;
                    case 'Parser.Reply.value':
                        var $1406 = self.pst;
                        var self = $1406;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1408 = self.err;
                                var $1409 = self.nam;
                                var $1410 = self.ini;
                                var $1411 = self.idx;
                                var $1412 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1399, $1408), $1409, $1410, $1411, $1412);
                                var $1413 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$and));
                                var $1407 = $1413;
                                break;
                        };
                        var $1400 = $1407;
                        break;
                };
                var $1398 = $1400;
                break;
        };
        return $1398;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1415 = self.err;
                var _reply$7 = Litereum$parse$text$("^", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1417 = self.err;
                        var self = $1415;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1419 = self.value;
                                var $1420 = Parser$Reply$error$(Parser$Error$combine$($1419, $1417));
                                var $1418 = $1420;
                                break;
                            case 'Maybe.none':
                                var $1421 = Parser$Reply$error$($1417);
                                var $1418 = $1421;
                                break;
                        };
                        var $1416 = $1418;
                        break;
                    case 'Parser.Reply.value':
                        var $1422 = self.pst;
                        var self = $1422;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1424 = self.err;
                                var $1425 = self.nam;
                                var $1426 = self.ini;
                                var $1427 = self.idx;
                                var $1428 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1415, $1424), $1425, $1426, $1427, $1428);
                                var $1429 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$xor));
                                var $1423 = $1429;
                                break;
                        };
                        var $1416 = $1423;
                        break;
                };
                var $1414 = $1416;
                break;
        };
        return $1414;
    }), List$cons$((_pst$1 => {
        var $1430 = Parser$Reply$value$(_pst$1, Maybe$none);
        return $1430;
    }), List$nil))))))))));

    function Litereum$Term$operate$(_oper$1, _val0$2, _val1$3) {
        var $1431 = ({
            _: 'Litereum.Term.operate',
            'oper': _oper$1,
            'val0': _val0$2,
            'val1': _val1$3
        });
        return $1431;
    };
    const Litereum$Term$operate = x0 => x1 => x2 => Litereum$Term$operate$(x0, x1, x2);

    function Litereum$parse$term$operate$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1433 = self.err;
                var _reply$8 = Litereum$parse$term$operation(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1435 = self.err;
                        var self = $1433;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1437 = self.value;
                                var $1438 = Parser$Reply$error$(Parser$Error$combine$($1437, $1435));
                                var $1436 = $1438;
                                break;
                            case 'Maybe.none':
                                var $1439 = Parser$Reply$error$($1435);
                                var $1436 = $1439;
                                break;
                        };
                        var $1434 = $1436;
                        break;
                    case 'Parser.Reply.value':
                        var $1440 = self.pst;
                        var $1441 = self.val;
                        var self = $1440;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1443 = self.err;
                                var $1444 = self.nam;
                                var $1445 = self.ini;
                                var $1446 = self.idx;
                                var $1447 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1433, $1443), $1444, $1445, $1446, $1447);
                                var self = $1441;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $1449 = self.value;
                                        var $1450 = (_pst$18 => {
                                            var self = _pst$18;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $1452 = self.err;
                                                    var _reply$24 = Litereum$parse$text$("(", _pst$18);
                                                    var self = _reply$24;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $1454 = self.err;
                                                            var self = $1452;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $1456 = self.value;
                                                                    var $1457 = Parser$Reply$error$(Parser$Error$combine$($1456, $1454));
                                                                    var $1455 = $1457;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $1458 = Parser$Reply$error$($1454);
                                                                    var $1455 = $1458;
                                                                    break;
                                                            };
                                                            var $1453 = $1455;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $1459 = self.pst;
                                                            var self = $1459;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1461 = self.err;
                                                                    var $1462 = self.nam;
                                                                    var $1463 = self.ini;
                                                                    var $1464 = self.idx;
                                                                    var $1465 = self.str;
                                                                    var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($1452, $1461), $1462, $1463, $1464, $1465);
                                                                    var self = _reply$pst$32;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $1467 = self.err;
                                                                            var _reply$38 = Litereum$parse$term$(_world$1)(_reply$pst$32);
                                                                            var self = _reply$38;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $1469 = self.err;
                                                                                    var self = $1467;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $1471 = self.value;
                                                                                            var $1472 = Parser$Reply$error$(Parser$Error$combine$($1471, $1469));
                                                                                            var $1470 = $1472;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $1473 = Parser$Reply$error$($1469);
                                                                                            var $1470 = $1473;
                                                                                            break;
                                                                                    };
                                                                                    var $1468 = $1470;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $1474 = self.pst;
                                                                                    var $1475 = self.val;
                                                                                    var self = $1474;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1477 = self.err;
                                                                                            var $1478 = self.nam;
                                                                                            var $1479 = self.ini;
                                                                                            var $1480 = self.idx;
                                                                                            var $1481 = self.str;
                                                                                            var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($1467, $1477), $1478, $1479, $1480, $1481);
                                                                                            var self = _reply$pst$46;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $1483 = self.err;
                                                                                                    var _reply$52 = Parser$maybe$(Litereum$parse$text(","), _reply$pst$46);
                                                                                                    var self = _reply$52;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $1485 = self.err;
                                                                                                            var self = $1483;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $1487 = self.value;
                                                                                                                    var $1488 = Parser$Reply$error$(Parser$Error$combine$($1487, $1485));
                                                                                                                    var $1486 = $1488;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $1489 = Parser$Reply$error$($1485);
                                                                                                                    var $1486 = $1489;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1484 = $1486;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $1490 = self.pst;
                                                                                                            var self = $1490;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $1492 = self.err;
                                                                                                                    var $1493 = self.nam;
                                                                                                                    var $1494 = self.ini;
                                                                                                                    var $1495 = self.idx;
                                                                                                                    var $1496 = self.str;
                                                                                                                    var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($1483, $1492), $1493, $1494, $1495, $1496);
                                                                                                                    var self = _reply$pst$60;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.State.new':
                                                                                                                            var $1498 = self.err;
                                                                                                                            var _reply$66 = Litereum$parse$term$(_world$1)(_reply$pst$60);
                                                                                                                            var self = _reply$66;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                    var $1500 = self.err;
                                                                                                                                    var self = $1498;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Maybe.some':
                                                                                                                                            var $1502 = self.value;
                                                                                                                                            var $1503 = Parser$Reply$error$(Parser$Error$combine$($1502, $1500));
                                                                                                                                            var $1501 = $1503;
                                                                                                                                            break;
                                                                                                                                        case 'Maybe.none':
                                                                                                                                            var $1504 = Parser$Reply$error$($1500);
                                                                                                                                            var $1501 = $1504;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1499 = $1501;
                                                                                                                                    break;
                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                    var $1505 = self.pst;
                                                                                                                                    var $1506 = self.val;
                                                                                                                                    var self = $1505;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $1508 = self.err;
                                                                                                                                            var $1509 = self.nam;
                                                                                                                                            var $1510 = self.ini;
                                                                                                                                            var $1511 = self.idx;
                                                                                                                                            var $1512 = self.str;
                                                                                                                                            var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($1498, $1508), $1509, $1510, $1511, $1512);
                                                                                                                                            var self = _reply$pst$74;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $1514 = self.err;
                                                                                                                                                    var _reply$80 = Litereum$parse$text$(")", _reply$pst$74);
                                                                                                                                                    var self = _reply$80;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $1516 = self.err;
                                                                                                                                                            var self = $1514;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $1518 = self.value;
                                                                                                                                                                    var $1519 = Parser$Reply$error$(Parser$Error$combine$($1518, $1516));
                                                                                                                                                                    var $1517 = $1519;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $1520 = Parser$Reply$error$($1516);
                                                                                                                                                                    var $1517 = $1520;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1515 = $1517;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $1521 = self.pst;
                                                                                                                                                            var self = $1521;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $1523 = self.err;
                                                                                                                                                                    var $1524 = self.nam;
                                                                                                                                                                    var $1525 = self.ini;
                                                                                                                                                                    var $1526 = self.idx;
                                                                                                                                                                    var $1527 = self.str;
                                                                                                                                                                    var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($1514, $1523), $1524, $1525, $1526, $1527);
                                                                                                                                                                    var $1528 = Parser$Reply$value$(_reply$pst$88, Litereum$Term$operate$($1449, $1475, $1506));
                                                                                                                                                                    var $1522 = $1528;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1515 = $1522;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1513 = $1515;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1507 = $1513;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1499 = $1507;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1497 = $1499;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1491 = $1497;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1484 = $1491;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1482 = $1484;
                                                                                                    break;
                                                                                            };
                                                                                            var $1476 = $1482;
                                                                                            break;
                                                                                    };
                                                                                    var $1468 = $1476;
                                                                                    break;
                                                                            };
                                                                            var $1466 = $1468;
                                                                            break;
                                                                    };
                                                                    var $1460 = $1466;
                                                                    break;
                                                            };
                                                            var $1453 = $1460;
                                                            break;
                                                    };
                                                    var $1451 = $1453;
                                                    break;
                                            };
                                            return $1451;
                                        });
                                        var $1448 = $1450;
                                        break;
                                    case 'Maybe.none':
                                        var $1529 = Parser$fail("Not an operation.");
                                        var $1448 = $1529;
                                        break;
                                };
                                var $1448 = $1448(_reply$pst$16);
                                var $1442 = $1448;
                                break;
                        };
                        var $1434 = $1442;
                        break;
                };
                var $1432 = $1434;
                break;
        };
        return $1432;
    };
    const Litereum$parse$term$operate = x0 => x1 => Litereum$parse$term$operate$(x0, x1);

    function Litereum$Term$store$(_bond$1, _main$2, _body$3) {
        var $1530 = ({
            _: 'Litereum.Term.store',
            'bond': _bond$1,
            'main': _main$2,
            'body': _body$3
        });
        return $1530;
    };
    const Litereum$Term$store = x0 => x1 => x2 => Litereum$Term$store$(x0, x1, x2);

    function Litereum$parse$term$store$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1532 = self.err;
                var _reply$8 = Litereum$parse$text$("set", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1534 = self.err;
                        var self = $1532;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1536 = self.value;
                                var $1537 = Parser$Reply$error$(Parser$Error$combine$($1536, $1534));
                                var $1535 = $1537;
                                break;
                            case 'Maybe.none':
                                var $1538 = Parser$Reply$error$($1534);
                                var $1535 = $1538;
                                break;
                        };
                        var $1533 = $1535;
                        break;
                    case 'Parser.Reply.value':
                        var $1539 = self.pst;
                        var self = $1539;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1541 = self.err;
                                var $1542 = self.nam;
                                var $1543 = self.ini;
                                var $1544 = self.idx;
                                var $1545 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1532, $1541), $1542, $1543, $1544, $1545);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1547 = self.err;
                                        var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1549 = self.err;
                                                var self = $1547;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1551 = self.value;
                                                        var $1552 = Parser$Reply$error$(Parser$Error$combine$($1551, $1549));
                                                        var $1550 = $1552;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1553 = Parser$Reply$error$($1549);
                                                        var $1550 = $1553;
                                                        break;
                                                };
                                                var $1548 = $1550;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1554 = self.pst;
                                                var $1555 = self.val;
                                                var self = $1554;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1557 = self.err;
                                                        var $1558 = self.nam;
                                                        var $1559 = self.ini;
                                                        var $1560 = self.idx;
                                                        var $1561 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1547, $1557), $1558, $1559, $1560, $1561);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1563 = self.err;
                                                                var _reply$36 = Litereum$parse$text$("=", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1565 = self.err;
                                                                        var self = $1563;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1567 = self.value;
                                                                                var $1568 = Parser$Reply$error$(Parser$Error$combine$($1567, $1565));
                                                                                var $1566 = $1568;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1569 = Parser$Reply$error$($1565);
                                                                                var $1566 = $1569;
                                                                                break;
                                                                        };
                                                                        var $1564 = $1566;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1570 = self.pst;
                                                                        var self = $1570;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1572 = self.err;
                                                                                var $1573 = self.nam;
                                                                                var $1574 = self.ini;
                                                                                var $1575 = self.idx;
                                                                                var $1576 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1563, $1572), $1573, $1574, $1575, $1576);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1578 = self.err;
                                                                                        var _reply$50 = Litereum$parse$term$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1580 = self.err;
                                                                                                var self = $1578;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1582 = self.value;
                                                                                                        var $1583 = Parser$Reply$error$(Parser$Error$combine$($1582, $1580));
                                                                                                        var $1581 = $1583;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1584 = Parser$Reply$error$($1580);
                                                                                                        var $1581 = $1584;
                                                                                                        break;
                                                                                                };
                                                                                                var $1579 = $1581;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1585 = self.pst;
                                                                                                var $1586 = self.val;
                                                                                                var self = $1585;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1588 = self.err;
                                                                                                        var $1589 = self.nam;
                                                                                                        var $1590 = self.ini;
                                                                                                        var $1591 = self.idx;
                                                                                                        var $1592 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1578, $1588), $1589, $1590, $1591, $1592);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1594 = self.err;
                                                                                                                var _reply$64 = Parser$maybe$(Litereum$parse$text(";"), _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1596 = self.err;
                                                                                                                        var self = $1594;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1598 = self.value;
                                                                                                                                var $1599 = Parser$Reply$error$(Parser$Error$combine$($1598, $1596));
                                                                                                                                var $1597 = $1599;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1600 = Parser$Reply$error$($1596);
                                                                                                                                var $1597 = $1600;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1595 = $1597;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1601 = self.pst;
                                                                                                                        var self = $1601;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1603 = self.err;
                                                                                                                                var $1604 = self.nam;
                                                                                                                                var $1605 = self.ini;
                                                                                                                                var $1606 = self.idx;
                                                                                                                                var $1607 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1594, $1603), $1604, $1605, $1606, $1607);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1609 = self.err;
                                                                                                                                        var _reply$78 = Litereum$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1611 = self.err;
                                                                                                                                                var self = $1609;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1613 = self.value;
                                                                                                                                                        var $1614 = Parser$Reply$error$(Parser$Error$combine$($1613, $1611));
                                                                                                                                                        var $1612 = $1614;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1615 = Parser$Reply$error$($1611);
                                                                                                                                                        var $1612 = $1615;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1610 = $1612;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1616 = self.pst;
                                                                                                                                                var $1617 = self.val;
                                                                                                                                                var self = $1616;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1619 = self.err;
                                                                                                                                                        var $1620 = self.nam;
                                                                                                                                                        var $1621 = self.ini;
                                                                                                                                                        var $1622 = self.idx;
                                                                                                                                                        var $1623 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1609, $1619), $1620, $1621, $1622, $1623);
                                                                                                                                                        var $1624 = Parser$Reply$value$(_reply$pst$86, Litereum$Term$store$($1555, $1586, $1617));
                                                                                                                                                        var $1618 = $1624;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1610 = $1618;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1608 = $1610;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1602 = $1608;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1595 = $1602;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1593 = $1595;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1587 = $1593;
                                                                                                        break;
                                                                                                };
                                                                                                var $1579 = $1587;
                                                                                                break;
                                                                                        };
                                                                                        var $1577 = $1579;
                                                                                        break;
                                                                                };
                                                                                var $1571 = $1577;
                                                                                break;
                                                                        };
                                                                        var $1564 = $1571;
                                                                        break;
                                                                };
                                                                var $1562 = $1564;
                                                                break;
                                                        };
                                                        var $1556 = $1562;
                                                        break;
                                                };
                                                var $1548 = $1556;
                                                break;
                                        };
                                        var $1546 = $1548;
                                        break;
                                };
                                var $1540 = $1546;
                                break;
                        };
                        var $1533 = $1540;
                        break;
                };
                var $1531 = $1533;
                break;
        };
        return $1531;
    };
    const Litereum$parse$term$store = x0 => x1 => Litereum$parse$term$store$(x0, x1);

    function Litereum$Term$bind$(_name$1, _type$2, _expr$3, _body$4) {
        var $1625 = ({
            _: 'Litereum.Term.bind',
            'name': _name$1,
            'type': _type$2,
            'expr': _expr$3,
            'body': _body$4
        });
        return $1625;
    };
    const Litereum$Term$bind = x0 => x1 => x2 => x3 => Litereum$Term$bind$(x0, x1, x2, x3);

    function Litereum$parse$term$bind$(_world$1) {
        var $1626 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1628 = self.err;
                    var _reply$8 = Litereum$parse$text$("run", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1630 = self.err;
                            var self = $1628;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1632 = self.value;
                                    var $1633 = Parser$Reply$error$(Parser$Error$combine$($1632, $1630));
                                    var $1631 = $1633;
                                    break;
                                case 'Maybe.none':
                                    var $1634 = Parser$Reply$error$($1630);
                                    var $1631 = $1634;
                                    break;
                            };
                            var $1629 = $1631;
                            break;
                        case 'Parser.Reply.value':
                            var $1635 = self.pst;
                            var self = $1635;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1637 = self.err;
                                    var $1638 = self.nam;
                                    var $1639 = self.ini;
                                    var $1640 = self.idx;
                                    var $1641 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1628, $1637), $1638, $1639, $1640, $1641);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1643 = self.err;
                                            var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1645 = self.err;
                                                    var self = $1643;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1647 = self.value;
                                                            var $1648 = Parser$Reply$error$(Parser$Error$combine$($1647, $1645));
                                                            var $1646 = $1648;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1649 = Parser$Reply$error$($1645);
                                                            var $1646 = $1649;
                                                            break;
                                                    };
                                                    var $1644 = $1646;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1650 = self.pst;
                                                    var $1651 = self.val;
                                                    var self = $1650;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1653 = self.err;
                                                            var $1654 = self.nam;
                                                            var $1655 = self.ini;
                                                            var $1656 = self.idx;
                                                            var $1657 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1643, $1653), $1654, $1655, $1656, $1657);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1659 = self.err;
                                                                    var _reply$36 = Litereum$parse$text$(":", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1661 = self.err;
                                                                            var self = $1659;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1663 = self.value;
                                                                                    var $1664 = Parser$Reply$error$(Parser$Error$combine$($1663, $1661));
                                                                                    var $1662 = $1664;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1665 = Parser$Reply$error$($1661);
                                                                                    var $1662 = $1665;
                                                                                    break;
                                                                            };
                                                                            var $1660 = $1662;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1666 = self.pst;
                                                                            var self = $1666;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1668 = self.err;
                                                                                    var $1669 = self.nam;
                                                                                    var $1670 = self.ini;
                                                                                    var $1671 = self.idx;
                                                                                    var $1672 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1659, $1668), $1669, $1670, $1671, $1672);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1674 = self.err;
                                                                                            var _reply$50 = Litereum$parse$type$(_world$1)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $1676 = self.err;
                                                                                                    var self = $1674;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $1678 = self.value;
                                                                                                            var $1679 = Parser$Reply$error$(Parser$Error$combine$($1678, $1676));
                                                                                                            var $1677 = $1679;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $1680 = Parser$Reply$error$($1676);
                                                                                                            var $1677 = $1680;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1675 = $1677;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $1681 = self.pst;
                                                                                                    var $1682 = self.val;
                                                                                                    var self = $1681;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $1684 = self.err;
                                                                                                            var $1685 = self.nam;
                                                                                                            var $1686 = self.ini;
                                                                                                            var $1687 = self.idx;
                                                                                                            var $1688 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1674, $1684), $1685, $1686, $1687, $1688);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $1690 = self.err;
                                                                                                                    var _reply$64 = Litereum$parse$text$("=", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $1692 = self.err;
                                                                                                                            var self = $1690;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $1694 = self.value;
                                                                                                                                    var $1695 = Parser$Reply$error$(Parser$Error$combine$($1694, $1692));
                                                                                                                                    var $1693 = $1695;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $1696 = Parser$Reply$error$($1692);
                                                                                                                                    var $1693 = $1696;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1691 = $1693;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $1697 = self.pst;
                                                                                                                            var self = $1697;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $1699 = self.err;
                                                                                                                                    var $1700 = self.nam;
                                                                                                                                    var $1701 = self.ini;
                                                                                                                                    var $1702 = self.idx;
                                                                                                                                    var $1703 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1690, $1699), $1700, $1701, $1702, $1703);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $1705 = self.err;
                                                                                                                                            var _reply$78 = Litereum$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $1707 = self.err;
                                                                                                                                                    var self = $1705;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $1709 = self.value;
                                                                                                                                                            var $1710 = Parser$Reply$error$(Parser$Error$combine$($1709, $1707));
                                                                                                                                                            var $1708 = $1710;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $1711 = Parser$Reply$error$($1707);
                                                                                                                                                            var $1708 = $1711;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1706 = $1708;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $1712 = self.pst;
                                                                                                                                                    var $1713 = self.val;
                                                                                                                                                    var self = $1712;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $1715 = self.err;
                                                                                                                                                            var $1716 = self.nam;
                                                                                                                                                            var $1717 = self.ini;
                                                                                                                                                            var $1718 = self.idx;
                                                                                                                                                            var $1719 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1705, $1715), $1716, $1717, $1718, $1719);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $1721 = self.err;
                                                                                                                                                                    var _reply$92 = Parser$maybe$(Litereum$parse$text(";"), _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $1723 = self.err;
                                                                                                                                                                            var self = $1721;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $1725 = self.value;
                                                                                                                                                                                    var $1726 = Parser$Reply$error$(Parser$Error$combine$($1725, $1723));
                                                                                                                                                                                    var $1724 = $1726;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $1727 = Parser$Reply$error$($1723);
                                                                                                                                                                                    var $1724 = $1727;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1722 = $1724;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $1728 = self.pst;
                                                                                                                                                                            var self = $1728;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $1730 = self.err;
                                                                                                                                                                                    var $1731 = self.nam;
                                                                                                                                                                                    var $1732 = self.ini;
                                                                                                                                                                                    var $1733 = self.idx;
                                                                                                                                                                                    var $1734 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($1721, $1730), $1731, $1732, $1733, $1734);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $1736 = self.err;
                                                                                                                                                                                            var _reply$106 = Litereum$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $1738 = self.err;
                                                                                                                                                                                                    var self = $1736;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $1740 = self.value;
                                                                                                                                                                                                            var $1741 = Parser$Reply$error$(Parser$Error$combine$($1740, $1738));
                                                                                                                                                                                                            var $1739 = $1741;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $1742 = Parser$Reply$error$($1738);
                                                                                                                                                                                                            var $1739 = $1742;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $1737 = $1739;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $1743 = self.pst;
                                                                                                                                                                                                    var $1744 = self.val;
                                                                                                                                                                                                    var self = $1743;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $1746 = self.err;
                                                                                                                                                                                                            var $1747 = self.nam;
                                                                                                                                                                                                            var $1748 = self.ini;
                                                                                                                                                                                                            var $1749 = self.idx;
                                                                                                                                                                                                            var $1750 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($1736, $1746), $1747, $1748, $1749, $1750);
                                                                                                                                                                                                            var $1751 = Parser$Reply$value$(_reply$pst$114, Litereum$Term$bind$($1651, $1682, $1713, $1744));
                                                                                                                                                                                                            var $1745 = $1751;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $1737 = $1745;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $1735 = $1737;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $1729 = $1735;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1722 = $1729;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $1720 = $1722;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1714 = $1720;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1706 = $1714;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1704 = $1706;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1698 = $1704;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1691 = $1698;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1689 = $1691;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1683 = $1689;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1675 = $1683;
                                                                                                    break;
                                                                                            };
                                                                                            var $1673 = $1675;
                                                                                            break;
                                                                                    };
                                                                                    var $1667 = $1673;
                                                                                    break;
                                                                            };
                                                                            var $1660 = $1667;
                                                                            break;
                                                                    };
                                                                    var $1658 = $1660;
                                                                    break;
                                                            };
                                                            var $1652 = $1658;
                                                            break;
                                                    };
                                                    var $1644 = $1652;
                                                    break;
                                            };
                                            var $1642 = $1644;
                                            break;
                                    };
                                    var $1636 = $1642;
                                    break;
                            };
                            var $1629 = $1636;
                            break;
                    };
                    var $1627 = $1629;
                    break;
            };
            return $1627;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1753 = self.err;
                    var _reply$8 = Litereum$parse$text$("run", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1755 = self.err;
                            var self = $1753;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1757 = self.value;
                                    var $1758 = Parser$Reply$error$(Parser$Error$combine$($1757, $1755));
                                    var $1756 = $1758;
                                    break;
                                case 'Maybe.none':
                                    var $1759 = Parser$Reply$error$($1755);
                                    var $1756 = $1759;
                                    break;
                            };
                            var $1754 = $1756;
                            break;
                        case 'Parser.Reply.value':
                            var $1760 = self.pst;
                            var self = $1760;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1762 = self.err;
                                    var $1763 = self.nam;
                                    var $1764 = self.ini;
                                    var $1765 = self.idx;
                                    var $1766 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1753, $1762), $1763, $1764, $1765, $1766);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1768 = self.err;
                                            var _reply$22 = Litereum$parse$term$(_world$1)(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1770 = self.err;
                                                    var self = $1768;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1772 = self.value;
                                                            var $1773 = Parser$Reply$error$(Parser$Error$combine$($1772, $1770));
                                                            var $1771 = $1773;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1774 = Parser$Reply$error$($1770);
                                                            var $1771 = $1774;
                                                            break;
                                                    };
                                                    var $1769 = $1771;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1775 = self.pst;
                                                    var $1776 = self.val;
                                                    var self = $1775;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1778 = self.err;
                                                            var $1779 = self.nam;
                                                            var $1780 = self.ini;
                                                            var $1781 = self.idx;
                                                            var $1782 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1768, $1778), $1779, $1780, $1781, $1782);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1784 = self.err;
                                                                    var _reply$36 = Parser$maybe$(Litereum$parse$text(";"), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1786 = self.err;
                                                                            var self = $1784;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1788 = self.value;
                                                                                    var $1789 = Parser$Reply$error$(Parser$Error$combine$($1788, $1786));
                                                                                    var $1787 = $1789;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1790 = Parser$Reply$error$($1786);
                                                                                    var $1787 = $1790;
                                                                                    break;
                                                                            };
                                                                            var $1785 = $1787;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1791 = self.pst;
                                                                            var self = $1791;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1793 = self.err;
                                                                                    var $1794 = self.nam;
                                                                                    var $1795 = self.ini;
                                                                                    var $1796 = self.idx;
                                                                                    var $1797 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1784, $1793), $1794, $1795, $1796, $1797);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1799 = self.err;
                                                                                            var _reply$50 = Litereum$parse$term$(_world$1)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $1801 = self.err;
                                                                                                    var self = $1799;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $1803 = self.value;
                                                                                                            var $1804 = Parser$Reply$error$(Parser$Error$combine$($1803, $1801));
                                                                                                            var $1802 = $1804;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $1805 = Parser$Reply$error$($1801);
                                                                                                            var $1802 = $1805;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1800 = $1802;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $1806 = self.pst;
                                                                                                    var $1807 = self.val;
                                                                                                    var self = $1806;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $1809 = self.err;
                                                                                                            var $1810 = self.nam;
                                                                                                            var $1811 = self.ini;
                                                                                                            var $1812 = self.idx;
                                                                                                            var $1813 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1799, $1809), $1810, $1811, $1812, $1813);
                                                                                                            var $1814 = Parser$Reply$value$(_reply$pst$58, Litereum$Term$bind$("", Litereum$Type$word, $1776, $1807));
                                                                                                            var $1808 = $1814;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1800 = $1808;
                                                                                                    break;
                                                                                            };
                                                                                            var $1798 = $1800;
                                                                                            break;
                                                                                    };
                                                                                    var $1792 = $1798;
                                                                                    break;
                                                                            };
                                                                            var $1785 = $1792;
                                                                            break;
                                                                    };
                                                                    var $1783 = $1785;
                                                                    break;
                                                            };
                                                            var $1777 = $1783;
                                                            break;
                                                    };
                                                    var $1769 = $1777;
                                                    break;
                                            };
                                            var $1767 = $1769;
                                            break;
                                    };
                                    var $1761 = $1767;
                                    break;
                            };
                            var $1754 = $1761;
                            break;
                    };
                    var $1752 = $1754;
                    break;
            };
            return $1752;
        }), List$nil)));
        return $1626;
    };
    const Litereum$parse$term$bind = x0 => Litereum$parse$term$bind$(x0);

    function Litereum$Term$return$(_expr$1) {
        var $1815 = ({
            _: 'Litereum.Term.return',
            'expr': _expr$1
        });
        return $1815;
    };
    const Litereum$Term$return = x0 => Litereum$Term$return$(x0);

    function Litereum$parse$term$return$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1817 = self.err;
                var _reply$8 = Litereum$parse$text$("return", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1819 = self.err;
                        var self = $1817;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1821 = self.value;
                                var $1822 = Parser$Reply$error$(Parser$Error$combine$($1821, $1819));
                                var $1820 = $1822;
                                break;
                            case 'Maybe.none':
                                var $1823 = Parser$Reply$error$($1819);
                                var $1820 = $1823;
                                break;
                        };
                        var $1818 = $1820;
                        break;
                    case 'Parser.Reply.value':
                        var $1824 = self.pst;
                        var self = $1824;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1826 = self.err;
                                var $1827 = self.nam;
                                var $1828 = self.ini;
                                var $1829 = self.idx;
                                var $1830 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1817, $1826), $1827, $1828, $1829, $1830);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1832 = self.err;
                                        var _reply$22 = Litereum$parse$term$(_world$1)(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1834 = self.err;
                                                var self = $1832;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1836 = self.value;
                                                        var $1837 = Parser$Reply$error$(Parser$Error$combine$($1836, $1834));
                                                        var $1835 = $1837;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1838 = Parser$Reply$error$($1834);
                                                        var $1835 = $1838;
                                                        break;
                                                };
                                                var $1833 = $1835;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1839 = self.pst;
                                                var $1840 = self.val;
                                                var self = $1839;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1842 = self.err;
                                                        var $1843 = self.nam;
                                                        var $1844 = self.ini;
                                                        var $1845 = self.idx;
                                                        var $1846 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1832, $1842), $1843, $1844, $1845, $1846);
                                                        var $1847 = Parser$Reply$value$(_reply$pst$30, Litereum$Term$return$($1840));
                                                        var $1841 = $1847;
                                                        break;
                                                };
                                                var $1833 = $1841;
                                                break;
                                        };
                                        var $1831 = $1833;
                                        break;
                                };
                                var $1825 = $1831;
                                break;
                        };
                        var $1818 = $1825;
                        break;
                };
                var $1816 = $1818;
                break;
        };
        return $1816;
    };
    const Litereum$parse$term$return = x0 => x1 => Litereum$parse$term$return$(x0, x1);

    function Litereum$Term$call$(_bond$1, _args$2) {
        var $1848 = ({
            _: 'Litereum.Term.call',
            'bond': _bond$1,
            'args': _args$2
        });
        return $1848;
    };
    const Litereum$Term$call = x0 => x1 => Litereum$Term$call$(x0, x1);

    function Litereum$parse$term$call$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1850 = self.err;
                var _reply$8 = Litereum$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1852 = self.err;
                        var self = $1850;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1854 = self.value;
                                var $1855 = Parser$Reply$error$(Parser$Error$combine$($1854, $1852));
                                var $1853 = $1855;
                                break;
                            case 'Maybe.none':
                                var $1856 = Parser$Reply$error$($1852);
                                var $1853 = $1856;
                                break;
                        };
                        var $1851 = $1853;
                        break;
                    case 'Parser.Reply.value':
                        var $1857 = self.pst;
                        var $1858 = self.val;
                        var self = $1857;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1860 = self.err;
                                var $1861 = self.nam;
                                var $1862 = self.ini;
                                var $1863 = self.idx;
                                var $1864 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1850, $1860), $1861, $1862, $1863, $1864);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1866 = self.err;
                                        var _reply$22 = Parser$wrap$(Litereum$parse$text("("), (_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $1869 = self.err;
                                                    var _reply$28 = Parser$maybe$(Litereum$parse$text(","), _pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $1871 = self.err;
                                                            var self = $1869;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $1873 = self.value;
                                                                    var $1874 = Parser$Reply$error$(Parser$Error$combine$($1873, $1871));
                                                                    var $1872 = $1874;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $1875 = Parser$Reply$error$($1871);
                                                                    var $1872 = $1875;
                                                                    break;
                                                            };
                                                            var $1870 = $1872;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $1876 = self.pst;
                                                            var self = $1876;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1878 = self.err;
                                                                    var $1879 = self.nam;
                                                                    var $1880 = self.ini;
                                                                    var $1881 = self.idx;
                                                                    var $1882 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($1869, $1878), $1879, $1880, $1881, $1882);
                                                                    var $1883 = Litereum$parse$term$(_world$1)(_reply$pst$36);
                                                                    var $1877 = $1883;
                                                                    break;
                                                            };
                                                            var $1870 = $1877;
                                                            break;
                                                    };
                                                    var $1868 = $1870;
                                                    break;
                                            };
                                            return $1868;
                                        }), Litereum$parse$text(")"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1884 = self.err;
                                                var self = $1866;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1886 = self.value;
                                                        var $1887 = Parser$Reply$error$(Parser$Error$combine$($1886, $1884));
                                                        var $1885 = $1887;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1888 = Parser$Reply$error$($1884);
                                                        var $1885 = $1888;
                                                        break;
                                                };
                                                var $1867 = $1885;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1889 = self.pst;
                                                var $1890 = self.val;
                                                var self = $1889;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1892 = self.err;
                                                        var $1893 = self.nam;
                                                        var $1894 = self.ini;
                                                        var $1895 = self.idx;
                                                        var $1896 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1866, $1892), $1893, $1894, $1895, $1896);
                                                        var $1897 = Parser$Reply$value$(_reply$pst$30, Litereum$Term$call$($1858, $1890));
                                                        var $1891 = $1897;
                                                        break;
                                                };
                                                var $1867 = $1891;
                                                break;
                                        };
                                        var $1865 = $1867;
                                        break;
                                };
                                var $1859 = $1865;
                                break;
                        };
                        var $1851 = $1859;
                        break;
                };
                var $1849 = $1851;
                break;
        };
        return $1849;
    };
    const Litereum$parse$term$call = x0 => x1 => Litereum$parse$term$call$(x0, x1);

    function Litereum$Term$var$(_name$1) {
        var $1898 = ({
            _: 'Litereum.Term.var',
            'name': _name$1
        });
        return $1898;
    };
    const Litereum$Term$var = x0 => Litereum$Term$var$(x0);

    function Litereum$parse$term$var$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1900 = self.err;
                var _reply$8 = Litereum$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1902 = self.err;
                        var self = $1900;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1904 = self.value;
                                var $1905 = Parser$Reply$error$(Parser$Error$combine$($1904, $1902));
                                var $1903 = $1905;
                                break;
                            case 'Maybe.none':
                                var $1906 = Parser$Reply$error$($1902);
                                var $1903 = $1906;
                                break;
                        };
                        var $1901 = $1903;
                        break;
                    case 'Parser.Reply.value':
                        var $1907 = self.pst;
                        var $1908 = self.val;
                        var self = $1907;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1910 = self.err;
                                var $1911 = self.nam;
                                var $1912 = self.ini;
                                var $1913 = self.idx;
                                var $1914 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1900, $1910), $1911, $1912, $1913, $1914);
                                var $1915 = Parser$Reply$value$(_reply$pst$16, Litereum$Term$var$($1908));
                                var $1909 = $1915;
                                break;
                        };
                        var $1901 = $1909;
                        break;
                };
                var $1899 = $1901;
                break;
        };
        return $1899;
    };
    const Litereum$parse$term$var = x0 => x1 => Litereum$parse$term$var$(x0, x1);

    function Litereum$parse$term$(_world$1) {
        var $1916 = Parser$choice(List$cons$(Litereum$parse$term$let(_world$1), List$cons$(Litereum$parse$term$create(_world$1), List$cons$(Litereum$parse$term$match(_world$1), List$cons$(Litereum$parse$term$word(_world$1), List$cons$(Litereum$parse$term$compare(_world$1), List$cons$(Litereum$parse$term$operate(_world$1), List$cons$(Litereum$parse$term$store(_world$1), List$cons$(Litereum$parse$term$bind$(_world$1), List$cons$(Litereum$parse$term$return(_world$1), List$cons$(Litereum$parse$term$call(_world$1), List$cons$(Litereum$parse$term$var(_world$1), List$nil))))))))))));
        return $1916;
    };
    const Litereum$parse$term = x0 => Litereum$parse$term$(x0);

    function Litereum$Bond$new$(_name$1, _input_names$2, _input_types$3, _output_type$4, _main$5, _owners$6) {
        var $1917 = ({
            _: 'Litereum.Bond.new',
            'name': _name$1,
            'input_names': _input_names$2,
            'input_types': _input_types$3,
            'output_type': _output_type$4,
            'main': _main$5,
            'owners': _owners$6
        });
        return $1917;
    };
    const Litereum$Bond$new = x0 => x1 => x2 => x3 => x4 => x5 => Litereum$Bond$new$(x0, x1, x2, x3, x4, x5);

    function Litereum$parse$bond$(_world$1) {
        var $1918 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1920 = self.err;
                    var _reply$8 = Parser$many$((_pst$8 => {
                        var self = _pst$8;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1923 = self.err;
                                var _reply$14 = Litereum$parse$text$("@", _pst$8);
                                var self = _reply$14;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $1925 = self.err;
                                        var self = $1923;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $1927 = self.value;
                                                var $1928 = Parser$Reply$error$(Parser$Error$combine$($1927, $1925));
                                                var $1926 = $1928;
                                                break;
                                            case 'Maybe.none':
                                                var $1929 = Parser$Reply$error$($1925);
                                                var $1926 = $1929;
                                                break;
                                        };
                                        var $1924 = $1926;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $1930 = self.pst;
                                        var self = $1930;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $1932 = self.err;
                                                var $1933 = self.nam;
                                                var $1934 = self.ini;
                                                var $1935 = self.idx;
                                                var $1936 = self.str;
                                                var _reply$pst$22 = Parser$State$new$(Parser$Error$maybe_combine$($1923, $1932), $1933, $1934, $1935, $1936);
                                                var self = _reply$pst$22;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1938 = self.err;
                                                        var _reply$28 = Litereum$parse$name$(_reply$pst$22);
                                                        var self = _reply$28;
                                                        switch (self._) {
                                                            case 'Parser.Reply.error':
                                                                var $1940 = self.err;
                                                                var self = $1938;
                                                                switch (self._) {
                                                                    case 'Maybe.some':
                                                                        var $1942 = self.value;
                                                                        var $1943 = Parser$Reply$error$(Parser$Error$combine$($1942, $1940));
                                                                        var $1941 = $1943;
                                                                        break;
                                                                    case 'Maybe.none':
                                                                        var $1944 = Parser$Reply$error$($1940);
                                                                        var $1941 = $1944;
                                                                        break;
                                                                };
                                                                var $1939 = $1941;
                                                                break;
                                                            case 'Parser.Reply.value':
                                                                var $1945 = self.pst;
                                                                var $1946 = self.val;
                                                                var self = $1945;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $1948 = self.err;
                                                                        var $1949 = self.nam;
                                                                        var $1950 = self.ini;
                                                                        var $1951 = self.idx;
                                                                        var $1952 = self.str;
                                                                        var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($1938, $1948), $1949, $1950, $1951, $1952);
                                                                        var $1953 = Parser$Reply$value$(_reply$pst$36, $1946);
                                                                        var $1947 = $1953;
                                                                        break;
                                                                };
                                                                var $1939 = $1947;
                                                                break;
                                                        };
                                                        var $1937 = $1939;
                                                        break;
                                                };
                                                var $1931 = $1937;
                                                break;
                                        };
                                        var $1924 = $1931;
                                        break;
                                };
                                var $1922 = $1924;
                                break;
                        };
                        return $1922;
                    }))(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1954 = self.err;
                            var self = $1920;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1956 = self.value;
                                    var $1957 = Parser$Reply$error$(Parser$Error$combine$($1956, $1954));
                                    var $1955 = $1957;
                                    break;
                                case 'Maybe.none':
                                    var $1958 = Parser$Reply$error$($1954);
                                    var $1955 = $1958;
                                    break;
                            };
                            var $1921 = $1955;
                            break;
                        case 'Parser.Reply.value':
                            var $1959 = self.pst;
                            var $1960 = self.val;
                            var self = $1959;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1962 = self.err;
                                    var $1963 = self.nam;
                                    var $1964 = self.ini;
                                    var $1965 = self.idx;
                                    var $1966 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1920, $1962), $1963, $1964, $1965, $1966);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1968 = self.err;
                                            var _reply$22 = Litereum$parse$text$("bond", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1970 = self.err;
                                                    var self = $1968;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1972 = self.value;
                                                            var $1973 = Parser$Reply$error$(Parser$Error$combine$($1972, $1970));
                                                            var $1971 = $1973;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1974 = Parser$Reply$error$($1970);
                                                            var $1971 = $1974;
                                                            break;
                                                    };
                                                    var $1969 = $1971;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1975 = self.pst;
                                                    var self = $1975;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1977 = self.err;
                                                            var $1978 = self.nam;
                                                            var $1979 = self.ini;
                                                            var $1980 = self.idx;
                                                            var $1981 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1968, $1977), $1978, $1979, $1980, $1981);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1983 = self.err;
                                                                    var _reply$36 = Litereum$parse$name$(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1985 = self.err;
                                                                            var self = $1983;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1987 = self.value;
                                                                                    var $1988 = Parser$Reply$error$(Parser$Error$combine$($1987, $1985));
                                                                                    var $1986 = $1988;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1989 = Parser$Reply$error$($1985);
                                                                                    var $1986 = $1989;
                                                                                    break;
                                                                            };
                                                                            var $1984 = $1986;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1990 = self.pst;
                                                                            var $1991 = self.val;
                                                                            var self = $1990;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1993 = self.err;
                                                                                    var $1994 = self.nam;
                                                                                    var $1995 = self.ini;
                                                                                    var $1996 = self.idx;
                                                                                    var $1997 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1983, $1993), $1994, $1995, $1996, $1997);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1999 = self.err;
                                                                                            var _reply$50 = Parser$wrap$(Litereum$parse$text("("), Litereum$parse$ann(_world$1), Litereum$parse$text(")"), _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2001 = self.err;
                                                                                                    var self = $1999;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2003 = self.value;
                                                                                                            var $2004 = Parser$Reply$error$(Parser$Error$combine$($2003, $2001));
                                                                                                            var $2002 = $2004;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2005 = Parser$Reply$error$($2001);
                                                                                                            var $2002 = $2005;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2000 = $2002;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2006 = self.pst;
                                                                                                    var $2007 = self.val;
                                                                                                    var self = $2006;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2009 = self.err;
                                                                                                            var $2010 = self.nam;
                                                                                                            var $2011 = self.ini;
                                                                                                            var $2012 = self.idx;
                                                                                                            var $2013 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1999, $2009), $2010, $2011, $2012, $2013);
                                                                                                            var _iarg$59 = List$mapped$($2007, (_x$59 => {
                                                                                                                var self = _x$59;
                                                                                                                switch (self._) {
                                                                                                                    case 'Pair.new':
                                                                                                                        var $2016 = self.fst;
                                                                                                                        var $2017 = $2016;
                                                                                                                        var $2015 = $2017;
                                                                                                                        break;
                                                                                                                };
                                                                                                                return $2015;
                                                                                                            }));
                                                                                                            var _ityp$60 = List$mapped$($2007, (_x$60 => {
                                                                                                                var self = _x$60;
                                                                                                                switch (self._) {
                                                                                                                    case 'Pair.new':
                                                                                                                        var $2019 = self.snd;
                                                                                                                        var $2020 = $2019;
                                                                                                                        var $2018 = $2020;
                                                                                                                        break;
                                                                                                                };
                                                                                                                return $2018;
                                                                                                            }));
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2021 = self.err;
                                                                                                                    var _reply$66 = Litereum$parse$text$(":", _reply$pst$58);
                                                                                                                    var self = _reply$66;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2023 = self.err;
                                                                                                                            var self = $2021;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2025 = self.value;
                                                                                                                                    var $2026 = Parser$Reply$error$(Parser$Error$combine$($2025, $2023));
                                                                                                                                    var $2024 = $2026;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2027 = Parser$Reply$error$($2023);
                                                                                                                                    var $2024 = $2027;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2022 = $2024;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2028 = self.pst;
                                                                                                                            var self = $2028;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2030 = self.err;
                                                                                                                                    var $2031 = self.nam;
                                                                                                                                    var $2032 = self.ini;
                                                                                                                                    var $2033 = self.idx;
                                                                                                                                    var $2034 = self.str;
                                                                                                                                    var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($2021, $2030), $2031, $2032, $2033, $2034);
                                                                                                                                    var self = _reply$pst$74;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2036 = self.err;
                                                                                                                                            var _reply$80 = Litereum$parse$type$(_world$1)(_reply$pst$74);
                                                                                                                                            var self = _reply$80;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2038 = self.err;
                                                                                                                                                    var self = $2036;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2040 = self.value;
                                                                                                                                                            var $2041 = Parser$Reply$error$(Parser$Error$combine$($2040, $2038));
                                                                                                                                                            var $2039 = $2041;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2042 = Parser$Reply$error$($2038);
                                                                                                                                                            var $2039 = $2042;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2037 = $2039;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2043 = self.pst;
                                                                                                                                                    var $2044 = self.val;
                                                                                                                                                    var self = $2043;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2046 = self.err;
                                                                                                                                                            var $2047 = self.nam;
                                                                                                                                                            var $2048 = self.ini;
                                                                                                                                                            var $2049 = self.idx;
                                                                                                                                                            var $2050 = self.str;
                                                                                                                                                            var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($2036, $2046), $2047, $2048, $2049, $2050);
                                                                                                                                                            var self = _reply$pst$88;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2052 = self.err;
                                                                                                                                                                    var _reply$94 = Litereum$parse$text$("{", _reply$pst$88);
                                                                                                                                                                    var self = _reply$94;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2054 = self.err;
                                                                                                                                                                            var self = $2052;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2056 = self.value;
                                                                                                                                                                                    var $2057 = Parser$Reply$error$(Parser$Error$combine$($2056, $2054));
                                                                                                                                                                                    var $2055 = $2057;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2058 = Parser$Reply$error$($2054);
                                                                                                                                                                                    var $2055 = $2058;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2053 = $2055;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2059 = self.pst;
                                                                                                                                                                            var self = $2059;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2061 = self.err;
                                                                                                                                                                                    var $2062 = self.nam;
                                                                                                                                                                                    var $2063 = self.ini;
                                                                                                                                                                                    var $2064 = self.idx;
                                                                                                                                                                                    var $2065 = self.str;
                                                                                                                                                                                    var _reply$pst$102 = Parser$State$new$(Parser$Error$maybe_combine$($2052, $2061), $2062, $2063, $2064, $2065);
                                                                                                                                                                                    var self = _reply$pst$102;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2067 = self.err;
                                                                                                                                                                                            var _reply$108 = Litereum$parse$term$(_world$1)(_reply$pst$102);
                                                                                                                                                                                            var self = _reply$108;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2069 = self.err;
                                                                                                                                                                                                    var self = $2067;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2071 = self.value;
                                                                                                                                                                                                            var $2072 = Parser$Reply$error$(Parser$Error$combine$($2071, $2069));
                                                                                                                                                                                                            var $2070 = $2072;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2073 = Parser$Reply$error$($2069);
                                                                                                                                                                                                            var $2070 = $2073;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2068 = $2070;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2074 = self.pst;
                                                                                                                                                                                                    var $2075 = self.val;
                                                                                                                                                                                                    var self = $2074;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2077 = self.err;
                                                                                                                                                                                                            var $2078 = self.nam;
                                                                                                                                                                                                            var $2079 = self.ini;
                                                                                                                                                                                                            var $2080 = self.idx;
                                                                                                                                                                                                            var $2081 = self.str;
                                                                                                                                                                                                            var _reply$pst$116 = Parser$State$new$(Parser$Error$maybe_combine$($2067, $2077), $2078, $2079, $2080, $2081);
                                                                                                                                                                                                            var self = _reply$pst$116;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2083 = self.err;
                                                                                                                                                                                                                    var _reply$122 = Litereum$parse$text$("}", _reply$pst$116);
                                                                                                                                                                                                                    var self = _reply$122;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2085 = self.err;
                                                                                                                                                                                                                            var self = $2083;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2087 = self.value;
                                                                                                                                                                                                                                    var $2088 = Parser$Reply$error$(Parser$Error$combine$($2087, $2085));
                                                                                                                                                                                                                                    var $2086 = $2088;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2089 = Parser$Reply$error$($2085);
                                                                                                                                                                                                                                    var $2086 = $2089;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2084 = $2086;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2090 = self.pst;
                                                                                                                                                                                                                            var self = $2090;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2092 = self.err;
                                                                                                                                                                                                                                    var $2093 = self.nam;
                                                                                                                                                                                                                                    var $2094 = self.ini;
                                                                                                                                                                                                                                    var $2095 = self.idx;
                                                                                                                                                                                                                                    var $2096 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$130 = Parser$State$new$(Parser$Error$maybe_combine$($2083, $2092), $2093, $2094, $2095, $2096);
                                                                                                                                                                                                                                    var $2097 = Parser$Reply$value$(_reply$pst$130, Litereum$Bond$new$($1991, _iarg$59, _ityp$60, $2044, $2075, $1960));
                                                                                                                                                                                                                                    var $2091 = $2097;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2084 = $2091;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2082 = $2084;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2076 = $2082;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2068 = $2076;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2066 = $2068;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2060 = $2066;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2053 = $2060;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2051 = $2053;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2045 = $2051;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2037 = $2045;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2035 = $2037;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2029 = $2035;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2022 = $2029;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2014 = $2022;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2008 = $2014;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2000 = $2008;
                                                                                                    break;
                                                                                            };
                                                                                            var $1998 = $2000;
                                                                                            break;
                                                                                    };
                                                                                    var $1992 = $1998;
                                                                                    break;
                                                                            };
                                                                            var $1984 = $1992;
                                                                            break;
                                                                    };
                                                                    var $1982 = $1984;
                                                                    break;
                                                            };
                                                            var $1976 = $1982;
                                                            break;
                                                    };
                                                    var $1969 = $1976;
                                                    break;
                                            };
                                            var $1967 = $1969;
                                            break;
                                    };
                                    var $1961 = $1967;
                                    break;
                            };
                            var $1921 = $1961;
                            break;
                    };
                    var $1919 = $1921;
                    break;
            };
            return $1919;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2099 = self.err;
                    var _reply$8 = Parser$many$((_pst$8 => {
                        var self = _pst$8;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2102 = self.err;
                                var _reply$14 = Litereum$parse$text$("@", _pst$8);
                                var self = _reply$14;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $2104 = self.err;
                                        var self = $2102;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $2106 = self.value;
                                                var $2107 = Parser$Reply$error$(Parser$Error$combine$($2106, $2104));
                                                var $2105 = $2107;
                                                break;
                                            case 'Maybe.none':
                                                var $2108 = Parser$Reply$error$($2104);
                                                var $2105 = $2108;
                                                break;
                                        };
                                        var $2103 = $2105;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $2109 = self.pst;
                                        var self = $2109;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $2111 = self.err;
                                                var $2112 = self.nam;
                                                var $2113 = self.ini;
                                                var $2114 = self.idx;
                                                var $2115 = self.str;
                                                var _reply$pst$22 = Parser$State$new$(Parser$Error$maybe_combine$($2102, $2111), $2112, $2113, $2114, $2115);
                                                var self = _reply$pst$22;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2117 = self.err;
                                                        var _reply$28 = Litereum$parse$name$(_reply$pst$22);
                                                        var self = _reply$28;
                                                        switch (self._) {
                                                            case 'Parser.Reply.error':
                                                                var $2119 = self.err;
                                                                var self = $2117;
                                                                switch (self._) {
                                                                    case 'Maybe.some':
                                                                        var $2121 = self.value;
                                                                        var $2122 = Parser$Reply$error$(Parser$Error$combine$($2121, $2119));
                                                                        var $2120 = $2122;
                                                                        break;
                                                                    case 'Maybe.none':
                                                                        var $2123 = Parser$Reply$error$($2119);
                                                                        var $2120 = $2123;
                                                                        break;
                                                                };
                                                                var $2118 = $2120;
                                                                break;
                                                            case 'Parser.Reply.value':
                                                                var $2124 = self.pst;
                                                                var $2125 = self.val;
                                                                var self = $2124;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $2127 = self.err;
                                                                        var $2128 = self.nam;
                                                                        var $2129 = self.ini;
                                                                        var $2130 = self.idx;
                                                                        var $2131 = self.str;
                                                                        var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($2117, $2127), $2128, $2129, $2130, $2131);
                                                                        var $2132 = Parser$Reply$value$(_reply$pst$36, $2125);
                                                                        var $2126 = $2132;
                                                                        break;
                                                                };
                                                                var $2118 = $2126;
                                                                break;
                                                        };
                                                        var $2116 = $2118;
                                                        break;
                                                };
                                                var $2110 = $2116;
                                                break;
                                        };
                                        var $2103 = $2110;
                                        break;
                                };
                                var $2101 = $2103;
                                break;
                        };
                        return $2101;
                    }))(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2133 = self.err;
                            var self = $2099;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2135 = self.value;
                                    var $2136 = Parser$Reply$error$(Parser$Error$combine$($2135, $2133));
                                    var $2134 = $2136;
                                    break;
                                case 'Maybe.none':
                                    var $2137 = Parser$Reply$error$($2133);
                                    var $2134 = $2137;
                                    break;
                            };
                            var $2100 = $2134;
                            break;
                        case 'Parser.Reply.value':
                            var $2138 = self.pst;
                            var $2139 = self.val;
                            var self = $2138;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2141 = self.err;
                                    var $2142 = self.nam;
                                    var $2143 = self.ini;
                                    var $2144 = self.idx;
                                    var $2145 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2099, $2141), $2142, $2143, $2144, $2145);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2147 = self.err;
                                            var _reply$22 = Litereum$parse$text$("term", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2149 = self.err;
                                                    var self = $2147;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2151 = self.value;
                                                            var $2152 = Parser$Reply$error$(Parser$Error$combine$($2151, $2149));
                                                            var $2150 = $2152;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2153 = Parser$Reply$error$($2149);
                                                            var $2150 = $2153;
                                                            break;
                                                    };
                                                    var $2148 = $2150;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2154 = self.pst;
                                                    var self = $2154;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2156 = self.err;
                                                            var $2157 = self.nam;
                                                            var $2158 = self.ini;
                                                            var $2159 = self.idx;
                                                            var $2160 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2147, $2156), $2157, $2158, $2159, $2160);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2162 = self.err;
                                                                    var _reply$36 = Litereum$parse$name$(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2164 = self.err;
                                                                            var self = $2162;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2166 = self.value;
                                                                                    var $2167 = Parser$Reply$error$(Parser$Error$combine$($2166, $2164));
                                                                                    var $2165 = $2167;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2168 = Parser$Reply$error$($2164);
                                                                                    var $2165 = $2168;
                                                                                    break;
                                                                            };
                                                                            var $2163 = $2165;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2169 = self.pst;
                                                                            var $2170 = self.val;
                                                                            var self = $2169;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2172 = self.err;
                                                                                    var $2173 = self.nam;
                                                                                    var $2174 = self.ini;
                                                                                    var $2175 = self.idx;
                                                                                    var $2176 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2162, $2172), $2173, $2174, $2175, $2176);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2178 = self.err;
                                                                                            var _reply$50 = Litereum$parse$text$(":", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2180 = self.err;
                                                                                                    var self = $2178;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2182 = self.value;
                                                                                                            var $2183 = Parser$Reply$error$(Parser$Error$combine$($2182, $2180));
                                                                                                            var $2181 = $2183;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2184 = Parser$Reply$error$($2180);
                                                                                                            var $2181 = $2184;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2179 = $2181;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2185 = self.pst;
                                                                                                    var self = $2185;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2187 = self.err;
                                                                                                            var $2188 = self.nam;
                                                                                                            var $2189 = self.ini;
                                                                                                            var $2190 = self.idx;
                                                                                                            var $2191 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2178, $2187), $2188, $2189, $2190, $2191);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2193 = self.err;
                                                                                                                    var _reply$64 = Litereum$parse$type$(_world$1)(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2195 = self.err;
                                                                                                                            var self = $2193;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2197 = self.value;
                                                                                                                                    var $2198 = Parser$Reply$error$(Parser$Error$combine$($2197, $2195));
                                                                                                                                    var $2196 = $2198;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2199 = Parser$Reply$error$($2195);
                                                                                                                                    var $2196 = $2199;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2194 = $2196;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2200 = self.pst;
                                                                                                                            var $2201 = self.val;
                                                                                                                            var self = $2200;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2203 = self.err;
                                                                                                                                    var $2204 = self.nam;
                                                                                                                                    var $2205 = self.ini;
                                                                                                                                    var $2206 = self.idx;
                                                                                                                                    var $2207 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2193, $2203), $2204, $2205, $2206, $2207);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2209 = self.err;
                                                                                                                                            var _reply$78 = Litereum$parse$text$("=", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2211 = self.err;
                                                                                                                                                    var self = $2209;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2213 = self.value;
                                                                                                                                                            var $2214 = Parser$Reply$error$(Parser$Error$combine$($2213, $2211));
                                                                                                                                                            var $2212 = $2214;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2215 = Parser$Reply$error$($2211);
                                                                                                                                                            var $2212 = $2215;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2210 = $2212;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2216 = self.pst;
                                                                                                                                                    var self = $2216;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2218 = self.err;
                                                                                                                                                            var $2219 = self.nam;
                                                                                                                                                            var $2220 = self.ini;
                                                                                                                                                            var $2221 = self.idx;
                                                                                                                                                            var $2222 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2209, $2218), $2219, $2220, $2221, $2222);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2224 = self.err;
                                                                                                                                                                    var _reply$92 = Litereum$parse$term$(_world$1)(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2226 = self.err;
                                                                                                                                                                            var self = $2224;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2228 = self.value;
                                                                                                                                                                                    var $2229 = Parser$Reply$error$(Parser$Error$combine$($2228, $2226));
                                                                                                                                                                                    var $2227 = $2229;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2230 = Parser$Reply$error$($2226);
                                                                                                                                                                                    var $2227 = $2230;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2225 = $2227;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2231 = self.pst;
                                                                                                                                                                            var $2232 = self.val;
                                                                                                                                                                            var self = $2231;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2234 = self.err;
                                                                                                                                                                                    var $2235 = self.nam;
                                                                                                                                                                                    var $2236 = self.ini;
                                                                                                                                                                                    var $2237 = self.idx;
                                                                                                                                                                                    var $2238 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2224, $2234), $2235, $2236, $2237, $2238);
                                                                                                                                                                                    var $2239 = Parser$Reply$value$(_reply$pst$100, Litereum$Bond$new$($2170, List$nil, List$nil, $2201, $2232, $2139));
                                                                                                                                                                                    var $2233 = $2239;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2225 = $2233;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2223 = $2225;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2217 = $2223;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2210 = $2217;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2208 = $2210;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2202 = $2208;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2194 = $2202;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2192 = $2194;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2186 = $2192;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2179 = $2186;
                                                                                                    break;
                                                                                            };
                                                                                            var $2177 = $2179;
                                                                                            break;
                                                                                    };
                                                                                    var $2171 = $2177;
                                                                                    break;
                                                                            };
                                                                            var $2163 = $2171;
                                                                            break;
                                                                    };
                                                                    var $2161 = $2163;
                                                                    break;
                                                            };
                                                            var $2155 = $2161;
                                                            break;
                                                    };
                                                    var $2148 = $2155;
                                                    break;
                                            };
                                            var $2146 = $2148;
                                            break;
                                    };
                                    var $2140 = $2146;
                                    break;
                            };
                            var $2100 = $2140;
                            break;
                    };
                    var $2098 = $2100;
                    break;
            };
            return $2098;
        }), List$nil)));
        return $1918;
    };
    const Litereum$parse$bond = x0 => Litereum$parse$bond$(x0);

    function Litereum$Transaction$new_bond$(_bond$1) {
        var $2240 = ({
            _: 'Litereum.Transaction.new_bond',
            'bond': _bond$1
        });
        return $2240;
    };
    const Litereum$Transaction$new_bond = x0 => Litereum$Transaction$new_bond$(x0);

    function Litereum$Eval$new$(_term$1, _type$2) {
        var $2241 = ({
            _: 'Litereum.Eval.new',
            'term': _term$1,
            'type': _type$2
        });
        return $2241;
    };
    const Litereum$Eval$new = x0 => x1 => Litereum$Eval$new$(x0, x1);

    function Litereum$parse$eval$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2243 = self.err;
                var _reply$8 = Litereum$parse$text$("eval", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2245 = self.err;
                        var self = $2243;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2247 = self.value;
                                var $2248 = Parser$Reply$error$(Parser$Error$combine$($2247, $2245));
                                var $2246 = $2248;
                                break;
                            case 'Maybe.none':
                                var $2249 = Parser$Reply$error$($2245);
                                var $2246 = $2249;
                                break;
                        };
                        var $2244 = $2246;
                        break;
                    case 'Parser.Reply.value':
                        var $2250 = self.pst;
                        var self = $2250;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2252 = self.err;
                                var $2253 = self.nam;
                                var $2254 = self.ini;
                                var $2255 = self.idx;
                                var $2256 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2243, $2252), $2253, $2254, $2255, $2256);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2258 = self.err;
                                        var _reply$22 = Litereum$parse$text$("{", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2260 = self.err;
                                                var self = $2258;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2262 = self.value;
                                                        var $2263 = Parser$Reply$error$(Parser$Error$combine$($2262, $2260));
                                                        var $2261 = $2263;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2264 = Parser$Reply$error$($2260);
                                                        var $2261 = $2264;
                                                        break;
                                                };
                                                var $2259 = $2261;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2265 = self.pst;
                                                var self = $2265;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2267 = self.err;
                                                        var $2268 = self.nam;
                                                        var $2269 = self.ini;
                                                        var $2270 = self.idx;
                                                        var $2271 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2258, $2267), $2268, $2269, $2270, $2271);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2273 = self.err;
                                                                var _reply$36 = Litereum$parse$term$(_world$1)(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2275 = self.err;
                                                                        var self = $2273;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2277 = self.value;
                                                                                var $2278 = Parser$Reply$error$(Parser$Error$combine$($2277, $2275));
                                                                                var $2276 = $2278;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2279 = Parser$Reply$error$($2275);
                                                                                var $2276 = $2279;
                                                                                break;
                                                                        };
                                                                        var $2274 = $2276;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2280 = self.pst;
                                                                        var $2281 = self.val;
                                                                        var self = $2280;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2283 = self.err;
                                                                                var $2284 = self.nam;
                                                                                var $2285 = self.ini;
                                                                                var $2286 = self.idx;
                                                                                var $2287 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2273, $2283), $2284, $2285, $2286, $2287);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2289 = self.err;
                                                                                        var _reply$50 = Litereum$parse$text$("}", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2291 = self.err;
                                                                                                var self = $2289;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2293 = self.value;
                                                                                                        var $2294 = Parser$Reply$error$(Parser$Error$combine$($2293, $2291));
                                                                                                        var $2292 = $2294;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2295 = Parser$Reply$error$($2291);
                                                                                                        var $2292 = $2295;
                                                                                                        break;
                                                                                                };
                                                                                                var $2290 = $2292;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2296 = self.pst;
                                                                                                var self = $2296;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2298 = self.err;
                                                                                                        var $2299 = self.nam;
                                                                                                        var $2300 = self.ini;
                                                                                                        var $2301 = self.idx;
                                                                                                        var $2302 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2289, $2298), $2299, $2300, $2301, $2302);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2304 = self.err;
                                                                                                                var _reply$64 = Litereum$parse$text$(":", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2306 = self.err;
                                                                                                                        var self = $2304;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2308 = self.value;
                                                                                                                                var $2309 = Parser$Reply$error$(Parser$Error$combine$($2308, $2306));
                                                                                                                                var $2307 = $2309;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2310 = Parser$Reply$error$($2306);
                                                                                                                                var $2307 = $2310;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2305 = $2307;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2311 = self.pst;
                                                                                                                        var self = $2311;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2313 = self.err;
                                                                                                                                var $2314 = self.nam;
                                                                                                                                var $2315 = self.ini;
                                                                                                                                var $2316 = self.idx;
                                                                                                                                var $2317 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2304, $2313), $2314, $2315, $2316, $2317);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2319 = self.err;
                                                                                                                                        var _reply$78 = Litereum$parse$type$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2321 = self.err;
                                                                                                                                                var self = $2319;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2323 = self.value;
                                                                                                                                                        var $2324 = Parser$Reply$error$(Parser$Error$combine$($2323, $2321));
                                                                                                                                                        var $2322 = $2324;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2325 = Parser$Reply$error$($2321);
                                                                                                                                                        var $2322 = $2325;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2320 = $2322;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2326 = self.pst;
                                                                                                                                                var $2327 = self.val;
                                                                                                                                                var self = $2326;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2329 = self.err;
                                                                                                                                                        var $2330 = self.nam;
                                                                                                                                                        var $2331 = self.ini;
                                                                                                                                                        var $2332 = self.idx;
                                                                                                                                                        var $2333 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2319, $2329), $2330, $2331, $2332, $2333);
                                                                                                                                                        var $2334 = Parser$Reply$value$(_reply$pst$86, Litereum$Eval$new$($2281, $2327));
                                                                                                                                                        var $2328 = $2334;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2320 = $2328;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2318 = $2320;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2312 = $2318;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2305 = $2312;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2303 = $2305;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2297 = $2303;
                                                                                                        break;
                                                                                                };
                                                                                                var $2290 = $2297;
                                                                                                break;
                                                                                        };
                                                                                        var $2288 = $2290;
                                                                                        break;
                                                                                };
                                                                                var $2282 = $2288;
                                                                                break;
                                                                        };
                                                                        var $2274 = $2282;
                                                                        break;
                                                                };
                                                                var $2272 = $2274;
                                                                break;
                                                        };
                                                        var $2266 = $2272;
                                                        break;
                                                };
                                                var $2259 = $2266;
                                                break;
                                        };
                                        var $2257 = $2259;
                                        break;
                                };
                                var $2251 = $2257;
                                break;
                        };
                        var $2244 = $2251;
                        break;
                };
                var $2242 = $2244;
                break;
        };
        return $2242;
    };
    const Litereum$parse$eval = x0 => x1 => Litereum$parse$eval$(x0, x1);

    function Litereum$Transaction$new_eval$(_eval$1) {
        var $2335 = ({
            _: 'Litereum.Transaction.new_eval',
            'eval': _eval$1
        });
        return $2335;
    };
    const Litereum$Transaction$new_eval = x0 => Litereum$Transaction$new_eval$(x0);

    function Litereum$parse$transaction$(_world$1) {
        var $2336 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2338 = self.err;
                    var _reply$8 = Litereum$parse$text$("name", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2340 = self.err;
                            var self = $2338;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2342 = self.value;
                                    var $2343 = Parser$Reply$error$(Parser$Error$combine$($2342, $2340));
                                    var $2341 = $2343;
                                    break;
                                case 'Maybe.none':
                                    var $2344 = Parser$Reply$error$($2340);
                                    var $2341 = $2344;
                                    break;
                            };
                            var $2339 = $2341;
                            break;
                        case 'Parser.Reply.value':
                            var $2345 = self.pst;
                            var self = $2345;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2347 = self.err;
                                    var $2348 = self.nam;
                                    var $2349 = self.ini;
                                    var $2350 = self.idx;
                                    var $2351 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2338, $2347), $2348, $2349, $2350, $2351);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2353 = self.err;
                                            var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2355 = self.err;
                                                    var self = $2353;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2357 = self.value;
                                                            var $2358 = Parser$Reply$error$(Parser$Error$combine$($2357, $2355));
                                                            var $2356 = $2358;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2359 = Parser$Reply$error$($2355);
                                                            var $2356 = $2359;
                                                            break;
                                                    };
                                                    var $2354 = $2356;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2360 = self.pst;
                                                    var $2361 = self.val;
                                                    var self = $2360;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2363 = self.err;
                                                            var $2364 = self.nam;
                                                            var $2365 = self.ini;
                                                            var $2366 = self.idx;
                                                            var $2367 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2353, $2363), $2364, $2365, $2366, $2367);
                                                            var $2368 = Parser$Reply$value$(_reply$pst$30, Litereum$Transaction$new_name$($2361));
                                                            var $2362 = $2368;
                                                            break;
                                                    };
                                                    var $2354 = $2362;
                                                    break;
                                            };
                                            var $2352 = $2354;
                                            break;
                                    };
                                    var $2346 = $2352;
                                    break;
                            };
                            var $2339 = $2346;
                            break;
                    };
                    var $2337 = $2339;
                    break;
            };
            return $2337;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2370 = self.err;
                    var _reply$8 = Litereum$parse$data$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2372 = self.err;
                            var self = $2370;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2374 = self.value;
                                    var $2375 = Parser$Reply$error$(Parser$Error$combine$($2374, $2372));
                                    var $2373 = $2375;
                                    break;
                                case 'Maybe.none':
                                    var $2376 = Parser$Reply$error$($2372);
                                    var $2373 = $2376;
                                    break;
                            };
                            var $2371 = $2373;
                            break;
                        case 'Parser.Reply.value':
                            var $2377 = self.pst;
                            var $2378 = self.val;
                            var self = $2377;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2380 = self.err;
                                    var $2381 = self.nam;
                                    var $2382 = self.ini;
                                    var $2383 = self.idx;
                                    var $2384 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2370, $2380), $2381, $2382, $2383, $2384);
                                    var $2385 = Parser$Reply$value$(_reply$pst$16, Litereum$Transaction$new_data$($2378));
                                    var $2379 = $2385;
                                    break;
                            };
                            var $2371 = $2379;
                            break;
                    };
                    var $2369 = $2371;
                    break;
            };
            return $2369;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2387 = self.err;
                    var _reply$8 = Litereum$parse$bond$(_world$1)(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2389 = self.err;
                            var self = $2387;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2391 = self.value;
                                    var $2392 = Parser$Reply$error$(Parser$Error$combine$($2391, $2389));
                                    var $2390 = $2392;
                                    break;
                                case 'Maybe.none':
                                    var $2393 = Parser$Reply$error$($2389);
                                    var $2390 = $2393;
                                    break;
                            };
                            var $2388 = $2390;
                            break;
                        case 'Parser.Reply.value':
                            var $2394 = self.pst;
                            var $2395 = self.val;
                            var self = $2394;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2397 = self.err;
                                    var $2398 = self.nam;
                                    var $2399 = self.ini;
                                    var $2400 = self.idx;
                                    var $2401 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2387, $2397), $2398, $2399, $2400, $2401);
                                    var $2402 = Parser$Reply$value$(_reply$pst$16, Litereum$Transaction$new_bond$($2395));
                                    var $2396 = $2402;
                                    break;
                            };
                            var $2388 = $2396;
                            break;
                    };
                    var $2386 = $2388;
                    break;
            };
            return $2386;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2404 = self.err;
                    var _reply$8 = Litereum$parse$eval$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2406 = self.err;
                            var self = $2404;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2408 = self.value;
                                    var $2409 = Parser$Reply$error$(Parser$Error$combine$($2408, $2406));
                                    var $2407 = $2409;
                                    break;
                                case 'Maybe.none':
                                    var $2410 = Parser$Reply$error$($2406);
                                    var $2407 = $2410;
                                    break;
                            };
                            var $2405 = $2407;
                            break;
                        case 'Parser.Reply.value':
                            var $2411 = self.pst;
                            var $2412 = self.val;
                            var self = $2411;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2414 = self.err;
                                    var $2415 = self.nam;
                                    var $2416 = self.ini;
                                    var $2417 = self.idx;
                                    var $2418 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2404, $2414), $2415, $2416, $2417, $2418);
                                    var $2419 = Parser$Reply$value$(_reply$pst$16, Litereum$Transaction$new_eval$($2412));
                                    var $2413 = $2419;
                                    break;
                            };
                            var $2405 = $2413;
                            break;
                    };
                    var $2403 = $2405;
                    break;
            };
            return $2403;
        }), List$nil)))));
        return $2336;
    };
    const Litereum$parse$transaction = x0 => Litereum$parse$transaction$(x0);

    function Litereum$parse$block$(_world$1) {
        var $2420 = Parser$until$(Litereum$parse$text("save"), Litereum$parse$transaction$(_world$1));
        return $2420;
    };
    const Litereum$parse$block = x0 => Litereum$parse$block$(x0);

    function IO$(_A$1) {
        var $2421 = null;
        return $2421;
    };
    const IO = x0 => IO$(x0);
    const Nat$ltn = a0 => a1 => (a0 < a1);

    function String$length$go$(_xs$1, _n$2) {
        var String$length$go$ = (_xs$1, _n$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _n$2]
        });
        var String$length$go = _xs$1 => _n$2 => String$length$go$(_xs$1, _n$2);
        var arg = [_xs$1, _n$2];
        while (true) {
            let [_xs$1, _n$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $2422 = _n$2;
                    return $2422;
                } else {
                    var $2423 = self.charCodeAt(0);
                    var $2424 = self.slice(1);
                    var $2425 = String$length$go$($2424, Nat$succ$(_n$2));
                    return $2425;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$length$go = x0 => x1 => String$length$go$(x0, x1);

    function String$length$(_xs$1) {
        var $2426 = String$length$go$(_xs$1, 0n);
        return $2426;
    };
    const String$length = x0 => String$length$(x0);

    function String$flatten$go$(_xs$1, _res$2) {
        var String$flatten$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$flatten$go = _xs$1 => _res$2 => String$flatten$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                switch (self._) {
                    case 'List.cons':
                        var $2427 = self.head;
                        var $2428 = self.tail;
                        var $2429 = String$flatten$go$($2428, (_res$2 + $2427));
                        return $2429;
                    case 'List.nil':
                        var $2430 = _res$2;
                        return $2430;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$flatten$go = x0 => x1 => String$flatten$go$(x0, x1);

    function String$flatten$(_xs$1) {
        var $2431 = String$flatten$go$(_xs$1, "");
        return $2431;
    };
    const String$flatten = x0 => String$flatten$(x0);

    function String$join$go$(_sep$1, _list$2, _fst$3) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $2433 = self.head;
                var $2434 = self.tail;
                var $2435 = String$flatten$(List$cons$((() => {
                    var self = _fst$3;
                    if (self) {
                        var $2436 = "";
                        return $2436;
                    } else {
                        var $2437 = _sep$1;
                        return $2437;
                    };
                })(), List$cons$($2433, List$cons$(String$join$go$(_sep$1, $2434, Bool$false), List$nil))));
                var $2432 = $2435;
                break;
            case 'List.nil':
                var $2438 = "";
                var $2432 = $2438;
                break;
        };
        return $2432;
    };
    const String$join$go = x0 => x1 => x2 => String$join$go$(x0, x1, x2);

    function String$join$(_sep$1, _list$2) {
        var $2439 = String$join$go$(_sep$1, _list$2, Bool$true);
        return $2439;
    };
    const String$join = x0 => x1 => String$join$(x0, x1);

    function Kind$Code$highlight$end$(_col$1, _row$2, _res$3) {
        var $2440 = String$join$("\u{a}", _res$3);
        return $2440;
    };
    const Kind$Code$highlight$end = x0 => x1 => x2 => Kind$Code$highlight$end$(x0, x1, x2);

    function Maybe$extract$(_m$2, _a$4, _f$5) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $2442 = self.value;
                var $2443 = _f$5($2442);
                var $2441 = $2443;
                break;
            case 'Maybe.none':
                var $2444 = _a$4;
                var $2441 = $2444;
                break;
        };
        return $2441;
    };
    const Maybe$extract = x0 => x1 => x2 => Maybe$extract$(x0, x1, x2);

    function Nat$is_zero$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2446 = Bool$true;
            var $2445 = $2446;
        } else {
            var $2447 = (self - 1n);
            var $2448 = Bool$false;
            var $2445 = $2448;
        };
        return $2445;
    };
    const Nat$is_zero = x0 => Nat$is_zero$(x0);

    function Nat$double$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2450 = Nat$zero;
            var $2449 = $2450;
        } else {
            var $2451 = (self - 1n);
            var $2452 = Nat$succ$(Nat$succ$(Nat$double$($2451)));
            var $2449 = $2452;
        };
        return $2449;
    };
    const Nat$double = x0 => Nat$double$(x0);

    function Nat$pred$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2454 = Nat$zero;
            var $2453 = $2454;
        } else {
            var $2455 = (self - 1n);
            var $2456 = $2455;
            var $2453 = $2456;
        };
        return $2453;
    };
    const Nat$pred = x0 => Nat$pred$(x0);

    function String$reverse$go$(_xs$1, _res$2) {
        var String$reverse$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$reverse$go = _xs$1 => _res$2 => String$reverse$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $2457 = _res$2;
                    return $2457;
                } else {
                    var $2458 = self.charCodeAt(0);
                    var $2459 = self.slice(1);
                    var $2460 = String$reverse$go$($2459, String$cons$($2458, _res$2));
                    return $2460;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$reverse$go = x0 => x1 => String$reverse$go$(x0, x1);

    function String$reverse$(_xs$1) {
        var $2461 = String$reverse$go$(_xs$1, String$nil);
        return $2461;
    };
    const String$reverse = x0 => String$reverse$(x0);

    function String$pad_right$(_size$1, _chr$2, _str$3) {
        var self = _size$1;
        if (self === 0n) {
            var $2463 = _str$3;
            var $2462 = $2463;
        } else {
            var $2464 = (self - 1n);
            var self = _str$3;
            if (self.length === 0) {
                var $2466 = String$cons$(_chr$2, String$pad_right$($2464, _chr$2, ""));
                var $2465 = $2466;
            } else {
                var $2467 = self.charCodeAt(0);
                var $2468 = self.slice(1);
                var $2469 = String$cons$($2467, String$pad_right$($2464, _chr$2, $2468));
                var $2465 = $2469;
            };
            var $2462 = $2465;
        };
        return $2462;
    };
    const String$pad_right = x0 => x1 => x2 => String$pad_right$(x0, x1, x2);

    function String$pad_left$(_size$1, _chr$2, _str$3) {
        var $2470 = String$reverse$(String$pad_right$(_size$1, _chr$2, String$reverse$(_str$3)));
        return $2470;
    };
    const String$pad_left = x0 => x1 => x2 => String$pad_left$(x0, x1, x2);

    function Either$(_A$1, _B$2) {
        var $2471 = null;
        return $2471;
    };
    const Either = x0 => x1 => Either$(x0, x1);

    function Either$left$(_value$3) {
        var $2472 = ({
            _: 'Either.left',
            'value': _value$3
        });
        return $2472;
    };
    const Either$left = x0 => Either$left$(x0);

    function Either$right$(_value$3) {
        var $2473 = ({
            _: 'Either.right',
            'value': _value$3
        });
        return $2473;
    };
    const Either$right = x0 => Either$right$(x0);

    function Nat$sub_rem$(_n$1, _m$2) {
        var Nat$sub_rem$ = (_n$1, _m$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2]
        });
        var Nat$sub_rem = _n$1 => _m$2 => Nat$sub_rem$(_n$1, _m$2);
        var arg = [_n$1, _m$2];
        while (true) {
            let [_n$1, _m$2] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $2474 = Either$left$(_n$1);
                    return $2474;
                } else {
                    var $2475 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $2477 = Either$right$(Nat$succ$($2475));
                        var $2476 = $2477;
                    } else {
                        var $2478 = (self - 1n);
                        var $2479 = Nat$sub_rem$($2478, $2475);
                        var $2476 = $2479;
                    };
                    return $2476;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$sub_rem = x0 => x1 => Nat$sub_rem$(x0, x1);

    function Nat$div_mod$go$(_n$1, _m$2, _d$3) {
        var Nat$div_mod$go$ = (_n$1, _m$2, _d$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _d$3]
        });
        var Nat$div_mod$go = _n$1 => _m$2 => _d$3 => Nat$div_mod$go$(_n$1, _m$2, _d$3);
        var arg = [_n$1, _m$2, _d$3];
        while (true) {
            let [_n$1, _m$2, _d$3] = arg;
            var R = (() => {
                var self = Nat$sub_rem$(_n$1, _m$2);
                switch (self._) {
                    case 'Either.left':
                        var $2480 = self.value;
                        var $2481 = Nat$div_mod$go$($2480, _m$2, Nat$succ$(_d$3));
                        return $2481;
                    case 'Either.right':
                        var $2482 = Pair$new$(_d$3, _n$1);
                        return $2482;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$div_mod$go = x0 => x1 => x2 => Nat$div_mod$go$(x0, x1, x2);
    const Nat$div_mod = a0 => a1 => (({
        _: 'Pair.new',
        'fst': a0 / a1,
        'snd': a0 % a1
    }));

    function Nat$to_base$go$(_base$1, _nat$2, _res$3) {
        var Nat$to_base$go$ = (_base$1, _nat$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_base$1, _nat$2, _res$3]
        });
        var Nat$to_base$go = _base$1 => _nat$2 => _res$3 => Nat$to_base$go$(_base$1, _nat$2, _res$3);
        var arg = [_base$1, _nat$2, _res$3];
        while (true) {
            let [_base$1, _nat$2, _res$3] = arg;
            var R = (() => {
                var self = (({
                    _: 'Pair.new',
                    'fst': _nat$2 / _base$1,
                    'snd': _nat$2 % _base$1
                }));
                switch (self._) {
                    case 'Pair.new':
                        var $2483 = self.fst;
                        var $2484 = self.snd;
                        var self = $2483;
                        if (self === 0n) {
                            var $2486 = List$cons$($2484, _res$3);
                            var $2485 = $2486;
                        } else {
                            var $2487 = (self - 1n);
                            var $2488 = Nat$to_base$go$(_base$1, $2483, List$cons$($2484, _res$3));
                            var $2485 = $2488;
                        };
                        return $2485;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$to_base$go = x0 => x1 => x2 => Nat$to_base$go$(x0, x1, x2);

    function Nat$to_base$(_base$1, _nat$2) {
        var $2489 = Nat$to_base$go$(_base$1, _nat$2, List$nil);
        return $2489;
    };
    const Nat$to_base = x0 => x1 => Nat$to_base$(x0, x1);

    function Nat$mod$go$(_n$1, _m$2, _r$3) {
        var Nat$mod$go$ = (_n$1, _m$2, _r$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _r$3]
        });
        var Nat$mod$go = _n$1 => _m$2 => _r$3 => Nat$mod$go$(_n$1, _m$2, _r$3);
        var arg = [_n$1, _m$2, _r$3];
        while (true) {
            let [_n$1, _m$2, _r$3] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $2490 = Nat$mod$go$(_n$1, _r$3, _m$2);
                    return $2490;
                } else {
                    var $2491 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $2493 = _r$3;
                        var $2492 = $2493;
                    } else {
                        var $2494 = (self - 1n);
                        var $2495 = Nat$mod$go$($2494, $2491, Nat$succ$(_r$3));
                        var $2492 = $2495;
                    };
                    return $2492;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$mod$go = x0 => x1 => x2 => Nat$mod$go$(x0, x1, x2);
    const Nat$mod = a0 => a1 => (a0 % a1);
    const Nat$lte = a0 => a1 => (a0 <= a1);

    function List$at$(_index$2, _list$3) {
        var List$at$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$at = _index$2 => _list$3 => List$at$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $2496 = self.head;
                        var $2497 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $2499 = Maybe$some$($2496);
                            var $2498 = $2499;
                        } else {
                            var $2500 = (self - 1n);
                            var $2501 = List$at$($2500, $2497);
                            var $2498 = $2501;
                        };
                        return $2498;
                    case 'List.nil':
                        var $2502 = Maybe$none;
                        return $2502;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$at = x0 => x1 => List$at$(x0, x1);

    function Nat$show_digit$(_base$1, _n$2) {
        var _m$3 = (_n$2 % _base$1);
        var _base64$4 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$cons$(97, List$cons$(98, List$cons$(99, List$cons$(100, List$cons$(101, List$cons$(102, List$cons$(103, List$cons$(104, List$cons$(105, List$cons$(106, List$cons$(107, List$cons$(108, List$cons$(109, List$cons$(110, List$cons$(111, List$cons$(112, List$cons$(113, List$cons$(114, List$cons$(115, List$cons$(116, List$cons$(117, List$cons$(118, List$cons$(119, List$cons$(120, List$cons$(121, List$cons$(122, List$cons$(65, List$cons$(66, List$cons$(67, List$cons$(68, List$cons$(69, List$cons$(70, List$cons$(71, List$cons$(72, List$cons$(73, List$cons$(74, List$cons$(75, List$cons$(76, List$cons$(77, List$cons$(78, List$cons$(79, List$cons$(80, List$cons$(81, List$cons$(82, List$cons$(83, List$cons$(84, List$cons$(85, List$cons$(86, List$cons$(87, List$cons$(88, List$cons$(89, List$cons$(90, List$cons$(43, List$cons$(47, List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
        var self = ((_base$1 > 0n) && (_base$1 <= 64n));
        if (self) {
            var self = List$at$(_m$3, _base64$4);
            switch (self._) {
                case 'Maybe.some':
                    var $2505 = self.value;
                    var $2506 = $2505;
                    var $2504 = $2506;
                    break;
                case 'Maybe.none':
                    var $2507 = 35;
                    var $2504 = $2507;
                    break;
            };
            var $2503 = $2504;
        } else {
            var $2508 = 35;
            var $2503 = $2508;
        };
        return $2503;
    };
    const Nat$show_digit = x0 => x1 => Nat$show_digit$(x0, x1);

    function Nat$to_string_base$(_base$1, _nat$2) {
        var $2509 = List$fold$(Nat$to_base$(_base$1, _nat$2), String$nil, (_n$3 => _str$4 => {
            var $2510 = String$cons$(Nat$show_digit$(_base$1, _n$3), _str$4);
            return $2510;
        }));
        return $2509;
    };
    const Nat$to_string_base = x0 => x1 => Nat$to_string_base$(x0, x1);

    function Nat$show$(_n$1) {
        var $2511 = Nat$to_string_base$(10n, _n$1);
        return $2511;
    };
    const Nat$show = x0 => Nat$show$(x0);
    const Bool$not = a0 => (!a0);

    function U16$new$(_value$1) {
        var $2512 = word_to_u16(_value$1);
        return $2512;
    };
    const U16$new = x0 => U16$new$(x0);
    const Nat$to_u16 = a0 => (Number(a0) & 0xFFFF);

    function Kind$Code$color$(_col$1, _str$2) {
        var $2513 = String$cons$(27, ("[" + (_col$1 + ("m" + (_str$2 + String$cons$(27, "[0m"))))));
        return $2513;
    };
    const Kind$Code$color = x0 => x1 => Kind$Code$color$(x0, x1);
    const Nat$eql = a0 => a1 => (a0 === a1);

    function List$take$(_n$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $2515 = self.head;
                var $2516 = self.tail;
                var self = _n$2;
                if (self === 0n) {
                    var $2518 = List$nil;
                    var $2517 = $2518;
                } else {
                    var $2519 = (self - 1n);
                    var $2520 = List$cons$($2515, List$take$($2519, $2516));
                    var $2517 = $2520;
                };
                var $2514 = $2517;
                break;
            case 'List.nil':
                var $2521 = List$nil;
                var $2514 = $2521;
                break;
        };
        return $2514;
    };
    const List$take = x0 => x1 => List$take$(x0, x1);

    function Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) {
        var Kind$Code$highlight$go$ = (_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) => ({
            ctr: 'TCO',
            arg: [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9]
        });
        var Kind$Code$highlight$go = _code$1 => _ixi$2 => _ix0$3 => _ix1$4 => _col$5 => _row$6 => _lft$7 => _lin$8 => _res$9 => Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9);
        var arg = [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9];
        while (true) {
            let [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9] = arg;
            var R = (() => {
                var _spa$10 = 3n;
                var self = _code$1;
                if (self.length === 0) {
                    var $2523 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                    var $2522 = $2523;
                } else {
                    var $2524 = self.charCodeAt(0);
                    var $2525 = self.slice(1);
                    var self = ($2524 === 10);
                    if (self) {
                        var _stp$13 = Maybe$extract$(_lft$7, Bool$false, Nat$is_zero);
                        var self = _stp$13;
                        if (self) {
                            var $2528 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                            var $2527 = $2528;
                        } else {
                            var _siz$14 = Nat$succ$(Nat$double$(_spa$10));
                            var self = _ix1$4;
                            if (self === 0n) {
                                var self = _lft$7;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $2531 = self.value;
                                        var $2532 = Maybe$some$(Nat$pred$($2531));
                                        var $2530 = $2532;
                                        break;
                                    case 'Maybe.none':
                                        var $2533 = Maybe$some$(_spa$10);
                                        var $2530 = $2533;
                                        break;
                                };
                                var _lft$15 = $2530;
                            } else {
                                var $2534 = (self - 1n);
                                var $2535 = _lft$7;
                                var _lft$15 = $2535;
                            };
                            var _ixi$16 = Nat$pred$(_ixi$2);
                            var _ix0$17 = Nat$pred$(_ix0$3);
                            var _ix1$18 = Nat$pred$(_ix1$4);
                            var _col$19 = 0n;
                            var _row$20 = Nat$succ$(_row$6);
                            var _res$21 = List$cons$(String$reverse$(_lin$8), _res$9);
                            var _lin$22 = String$reverse$(String$flatten$(List$cons$(String$pad_left$(4n, 32, Nat$show$(_row$20)), List$cons$(" | ", List$nil))));
                            var $2529 = Kind$Code$highlight$go$($2525, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$20, _lft$15, _lin$22, _res$21);
                            var $2527 = $2529;
                        };
                        var $2526 = $2527;
                    } else {
                        var _chr$13 = String$cons$($2524, String$nil);
                        var self = (Nat$is_zero$(_ix0$3) && (!Nat$is_zero$(_ix1$4)));
                        if (self) {
                            var $2537 = String$reverse$(Kind$Code$color$("41", Kind$Code$color$("37", _chr$13)));
                            var _chr$14 = $2537;
                        } else {
                            var self = (Nat$is_zero$(_ixi$2) && (!Nat$is_zero$(_ix1$4)));
                            if (self) {
                                var $2539 = String$reverse$(Kind$Code$color$("31", Kind$Code$color$("4", _chr$13)));
                                var $2538 = $2539;
                            } else {
                                var $2540 = _chr$13;
                                var $2538 = $2540;
                            };
                            var _chr$14 = $2538;
                        };
                        var self = (_ix0$3 === 1n);
                        if (self) {
                            var $2541 = List$take$(_spa$10, _res$9);
                            var _res$15 = $2541;
                        } else {
                            var $2542 = _res$9;
                            var _res$15 = $2542;
                        };
                        var _ixi$16 = Nat$pred$(_ixi$2);
                        var _ix0$17 = Nat$pred$(_ix0$3);
                        var _ix1$18 = Nat$pred$(_ix1$4);
                        var _col$19 = Nat$succ$(_col$5);
                        var _lin$20 = String$flatten$(List$cons$(_chr$14, List$cons$(_lin$8, List$nil)));
                        var $2536 = Kind$Code$highlight$go$($2525, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$6, _lft$7, _lin$20, _res$15);
                        var $2526 = $2536;
                    };
                    var $2522 = $2526;
                };
                return $2522;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$highlight$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Code$highlight$go$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Code$highlight$(_code$1, _init$2, _idx0$3, _idx1$4) {
        var $2543 = Kind$Code$highlight$go$((_code$1 + " \u{a}"), _init$2, _idx0$3, _idx1$4, 0n, 1n, Maybe$none, String$reverse$("   1 | "), List$nil);
        return $2543;
    };
    const Kind$Code$highlight = x0 => x1 => x2 => x3 => Kind$Code$highlight$(x0, x1, x2, x3);

    function IO$ask$(_query$2, _param$3, _then$4) {
        var $2544 = ({
            _: 'IO.ask',
            'query': _query$2,
            'param': _param$3,
            'then': _then$4
        });
        return $2544;
    };
    const IO$ask = x0 => x1 => x2 => IO$ask$(x0, x1, x2);

    function IO$bind$(_a$3, _f$4) {
        var self = _a$3;
        switch (self._) {
            case 'IO.end':
                var $2546 = self.value;
                var $2547 = _f$4($2546);
                var $2545 = $2547;
                break;
            case 'IO.ask':
                var $2548 = self.query;
                var $2549 = self.param;
                var $2550 = self.then;
                var $2551 = IO$ask$($2548, $2549, (_x$8 => {
                    var $2552 = IO$bind$($2550(_x$8), _f$4);
                    return $2552;
                }));
                var $2545 = $2551;
                break;
        };
        return $2545;
    };
    const IO$bind = x0 => x1 => IO$bind$(x0, x1);

    function IO$end$(_value$2) {
        var $2553 = ({
            _: 'IO.end',
            'value': _value$2
        });
        return $2553;
    };
    const IO$end = x0 => IO$end$(x0);

    function IO$monad$(_new$2) {
        var $2554 = _new$2(IO$bind)(IO$end);
        return $2554;
    };
    const IO$monad = x0 => IO$monad$(x0);

    function IO$put_string$(_text$1) {
        var $2555 = IO$ask$("put_string", _text$1, (_skip$2 => {
            var $2556 = IO$end$(Unit$new);
            return $2556;
        }));
        return $2555;
    };
    const IO$put_string = x0 => IO$put_string$(x0);

    function IO$print$(_text$1) {
        var $2557 = IO$put_string$((_text$1 + "\u{a}"));
        return $2557;
    };
    const IO$print = x0 => IO$print$(x0);
    const Bits$e = '';
    const Bits$o = a0 => (a0 + '0');

    function Word$subber$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $2559 = self.pred;
                var $2560 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2562 = self.pred;
                            var $2563 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2565 = Word$i$(Word$subber$(_a$pred$10, $2562, Bool$true));
                                    var $2564 = $2565;
                                } else {
                                    var $2566 = Word$o$(Word$subber$(_a$pred$10, $2562, Bool$false));
                                    var $2564 = $2566;
                                };
                                return $2564;
                            });
                            var $2561 = $2563;
                            break;
                        case 'Word.i':
                            var $2567 = self.pred;
                            var $2568 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2570 = Word$o$(Word$subber$(_a$pred$10, $2567, Bool$true));
                                    var $2569 = $2570;
                                } else {
                                    var $2571 = Word$i$(Word$subber$(_a$pred$10, $2567, Bool$true));
                                    var $2569 = $2571;
                                };
                                return $2569;
                            });
                            var $2561 = $2568;
                            break;
                        case 'Word.e':
                            var $2572 = (_a$pred$8 => {
                                var $2573 = Word$e;
                                return $2573;
                            });
                            var $2561 = $2572;
                            break;
                    };
                    var $2561 = $2561($2559);
                    return $2561;
                });
                var $2558 = $2560;
                break;
            case 'Word.i':
                var $2574 = self.pred;
                var $2575 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2577 = self.pred;
                            var $2578 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2580 = Word$o$(Word$subber$(_a$pred$10, $2577, Bool$false));
                                    var $2579 = $2580;
                                } else {
                                    var $2581 = Word$i$(Word$subber$(_a$pred$10, $2577, Bool$false));
                                    var $2579 = $2581;
                                };
                                return $2579;
                            });
                            var $2576 = $2578;
                            break;
                        case 'Word.i':
                            var $2582 = self.pred;
                            var $2583 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2585 = Word$i$(Word$subber$(_a$pred$10, $2582, Bool$true));
                                    var $2584 = $2585;
                                } else {
                                    var $2586 = Word$o$(Word$subber$(_a$pred$10, $2582, Bool$false));
                                    var $2584 = $2586;
                                };
                                return $2584;
                            });
                            var $2576 = $2583;
                            break;
                        case 'Word.e':
                            var $2587 = (_a$pred$8 => {
                                var $2588 = Word$e;
                                return $2588;
                            });
                            var $2576 = $2587;
                            break;
                    };
                    var $2576 = $2576($2574);
                    return $2576;
                });
                var $2558 = $2575;
                break;
            case 'Word.e':
                var $2589 = (_b$5 => {
                    var $2590 = Word$e;
                    return $2590;
                });
                var $2558 = $2589;
                break;
        };
        var $2558 = $2558(_b$3);
        return $2558;
    };
    const Word$subber = x0 => x1 => x2 => Word$subber$(x0, x1, x2);

    function Word$sub$(_a$2, _b$3) {
        var $2591 = Word$subber$(_a$2, _b$3, Bool$false);
        return $2591;
    };
    const Word$sub = x0 => x1 => Word$sub$(x0, x1);
    const U16$sub = a0 => a1 => ((a0 - a1) & 0xFFFF);

    function Word$adder$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $2593 = self.pred;
                var $2594 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2596 = self.pred;
                            var $2597 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2599 = Word$i$(Word$adder$(_a$pred$10, $2596, Bool$false));
                                    var $2598 = $2599;
                                } else {
                                    var $2600 = Word$o$(Word$adder$(_a$pred$10, $2596, Bool$false));
                                    var $2598 = $2600;
                                };
                                return $2598;
                            });
                            var $2595 = $2597;
                            break;
                        case 'Word.i':
                            var $2601 = self.pred;
                            var $2602 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2604 = Word$o$(Word$adder$(_a$pred$10, $2601, Bool$true));
                                    var $2603 = $2604;
                                } else {
                                    var $2605 = Word$i$(Word$adder$(_a$pred$10, $2601, Bool$false));
                                    var $2603 = $2605;
                                };
                                return $2603;
                            });
                            var $2595 = $2602;
                            break;
                        case 'Word.e':
                            var $2606 = (_a$pred$8 => {
                                var $2607 = Word$e;
                                return $2607;
                            });
                            var $2595 = $2606;
                            break;
                    };
                    var $2595 = $2595($2593);
                    return $2595;
                });
                var $2592 = $2594;
                break;
            case 'Word.i':
                var $2608 = self.pred;
                var $2609 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2611 = self.pred;
                            var $2612 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2614 = Word$o$(Word$adder$(_a$pred$10, $2611, Bool$true));
                                    var $2613 = $2614;
                                } else {
                                    var $2615 = Word$i$(Word$adder$(_a$pred$10, $2611, Bool$false));
                                    var $2613 = $2615;
                                };
                                return $2613;
                            });
                            var $2610 = $2612;
                            break;
                        case 'Word.i':
                            var $2616 = self.pred;
                            var $2617 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2619 = Word$i$(Word$adder$(_a$pred$10, $2616, Bool$true));
                                    var $2618 = $2619;
                                } else {
                                    var $2620 = Word$o$(Word$adder$(_a$pred$10, $2616, Bool$true));
                                    var $2618 = $2620;
                                };
                                return $2618;
                            });
                            var $2610 = $2617;
                            break;
                        case 'Word.e':
                            var $2621 = (_a$pred$8 => {
                                var $2622 = Word$e;
                                return $2622;
                            });
                            var $2610 = $2621;
                            break;
                    };
                    var $2610 = $2610($2608);
                    return $2610;
                });
                var $2592 = $2609;
                break;
            case 'Word.e':
                var $2623 = (_b$5 => {
                    var $2624 = Word$e;
                    return $2624;
                });
                var $2592 = $2623;
                break;
        };
        var $2592 = $2592(_b$3);
        return $2592;
    };
    const Word$adder = x0 => x1 => x2 => Word$adder$(x0, x1, x2);

    function Word$add$(_a$2, _b$3) {
        var $2625 = Word$adder$(_a$2, _b$3, Bool$false);
        return $2625;
    };
    const Word$add = x0 => x1 => Word$add$(x0, x1);
    const U16$add = a0 => a1 => ((a0 + a1) & 0xFFFF);

    function Pair$fst$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $2627 = self.fst;
                var $2628 = $2627;
                var $2626 = $2628;
                break;
        };
        return $2626;
    };
    const Pair$fst = x0 => Pair$fst$(x0);
    const Nat$div = a0 => a1 => (a0 / a1);
    const Bits$i = a0 => (a0 + '1');

    function Litereum$serialize$fixlen$(_size$1, _value$2) {
        var self = _size$1;
        if (self === 0n) {
            var $2630 = Bits$e;
            var $2629 = $2630;
        } else {
            var $2631 = (self - 1n);
            var self = ((_value$2 % 2n) === 0n);
            if (self) {
                var $2633 = (Litereum$serialize$fixlen$($2631, (_value$2 / 2n)) + '0');
                var $2632 = $2633;
            } else {
                var $2634 = (Litereum$serialize$fixlen$($2631, (_value$2 / 2n)) + '1');
                var $2632 = $2634;
            };
            var $2629 = $2632;
        };
        return $2629;
    };
    const Litereum$serialize$fixlen = x0 => x1 => Litereum$serialize$fixlen$(x0, x1);

    function Word$fold$(_nil$3, _w0$4, _w1$5, _word$6) {
        var self = _word$6;
        switch (self._) {
            case 'Word.o':
                var $2636 = self.pred;
                var $2637 = _w0$4(Word$fold$(_nil$3, _w0$4, _w1$5, $2636));
                var $2635 = $2637;
                break;
            case 'Word.i':
                var $2638 = self.pred;
                var $2639 = _w1$5(Word$fold$(_nil$3, _w0$4, _w1$5, $2638));
                var $2635 = $2639;
                break;
            case 'Word.e':
                var $2640 = _nil$3;
                var $2635 = $2640;
                break;
        };
        return $2635;
    };
    const Word$fold = x0 => x1 => x2 => x3 => Word$fold$(x0, x1, x2, x3);

    function Word$to_nat$(_word$2) {
        var $2641 = Word$fold$(0n, a1 => (2n * a1), (_x$4 => {
            var $2642 = Nat$succ$((2n * _x$4));
            return $2642;
        }), _word$2);
        return $2641;
    };
    const Word$to_nat = x0 => Word$to_nat$(x0);
    const U16$to_nat = a0 => (BigInt(a0));
    const Bits$concat = a0 => a1 => (a1 + a0);

    function Litereum$serialize$name$new$(_name$1) {
        var self = _name$1;
        if (self.length === 0) {
            var $2644 = (Bits$e + '0');
            var $2643 = $2644;
        } else {
            var $2645 = self.charCodeAt(0);
            var $2646 = self.slice(1);
            var self = U16$btw$(48, $2645, 57);
            if (self) {
                var $2648 = (($2645 - 48) & 0xFFFF);
                var _numb$4 = $2648;
            } else {
                var self = U16$btw$(65, $2645, 90);
                if (self) {
                    var $2650 = (((($2645 - 65) & 0xFFFF) + 10) & 0xFFFF);
                    var $2649 = $2650;
                } else {
                    var self = U16$btw$(97, $2645, 122);
                    if (self) {
                        var $2652 = (((($2645 - 97) & 0xFFFF) + 36) & 0xFFFF);
                        var $2651 = $2652;
                    } else {
                        var self = U16$btw$(95, $2645, 95);
                        if (self) {
                            var $2654 = 62;
                            var $2653 = $2654;
                        } else {
                            var $2655 = 63;
                            var $2653 = $2655;
                        };
                        var $2651 = $2653;
                    };
                    var $2649 = $2651;
                };
                var _numb$4 = $2649;
            };
            var _head$5 = Litereum$serialize$fixlen$(6n, (BigInt(_numb$4)));
            var _tail$6 = Litereum$serialize$name$new$($2646);
            var $2647 = ((_tail$6 + _head$5) + '1');
            var $2643 = $2647;
        };
        return $2643;
    };
    const Litereum$serialize$name$new = x0 => Litereum$serialize$name$new$(x0);

    function Litereum$serialize$varlen$go$(_value$1) {
        var self = _value$1;
        if (self === 0n) {
            var $2657 = Bits$e;
            var $2656 = $2657;
        } else {
            var $2658 = (self - 1n);
            var self = (_value$1 === 1n);
            if (self) {
                var $2660 = (Bits$e + '0');
                var $2659 = $2660;
            } else {
                var self = ((_value$1 % 2n) === 0n);
                if (self) {
                    var $2662 = ((Litereum$serialize$varlen$go$((_value$1 / 2n)) + '0') + '1');
                    var $2661 = $2662;
                } else {
                    var $2663 = ((Litereum$serialize$varlen$go$((_value$1 / 2n)) + '1') + '1');
                    var $2661 = $2663;
                };
                var $2659 = $2661;
            };
            var $2656 = $2659;
        };
        return $2656;
    };
    const Litereum$serialize$varlen$go = x0 => Litereum$serialize$varlen$go$(x0);

    function Litereum$serialize$varlen$(_value$1) {
        var $2664 = Litereum$serialize$varlen$go$((_value$1 + 1n));
        return $2664;
    };
    const Litereum$serialize$varlen = x0 => Litereum$serialize$varlen$(x0);

    function Litereum$serialize$name$(_world$1, _name$2) {
        var self = _world$1;
        switch (self._) {
            case 'Litereum.World.new':
                var $2666 = self.name_to_index;
                var self = Map$get$(_name$2, $2666);
                switch (self._) {
                    case 'Maybe.some':
                        var $2668 = self.value;
                        var $2669 = (Litereum$serialize$varlen$($2668) + '1');
                        var $2667 = $2669;
                        break;
                    case 'Maybe.none':
                        var $2670 = (Litereum$serialize$name$new$(_name$2) + '0');
                        var $2667 = $2670;
                        break;
                };
                var $2665 = $2667;
                break;
        };
        return $2665;
    };
    const Litereum$serialize$name = x0 => x1 => Litereum$serialize$name$(x0, x1);

    function Litereum$serialize$list$(_item$2, _list$3) {
        var self = _list$3;
        switch (self._) {
            case 'List.cons':
                var $2672 = self.head;
                var $2673 = self.tail;
                var $2674 = ((Litereum$serialize$list$(_item$2, $2673) + _item$2($2672)) + '1');
                var $2671 = $2674;
                break;
            case 'List.nil':
                var $2675 = (Bits$e + '0');
                var $2671 = $2675;
                break;
        };
        return $2671;
    };
    const Litereum$serialize$list = x0 => x1 => Litereum$serialize$list$(x0, x1);

    function Litereum$serialize$type$(_world$1, _typ$2) {
        var self = _typ$2;
        switch (self._) {
            case 'Litereum.Type.data':
                var $2677 = self.name;
                var $2678 = ((Litereum$serialize$name$(_world$1, $2677) + '0') + '1');
                var $2676 = $2678;
                break;
            case 'Litereum.Type.effect':
                var $2679 = self.rety;
                var $2680 = ((Litereum$serialize$type$(_world$1, $2679) + '1') + '0');
                var $2676 = $2680;
                break;
            case 'Litereum.Type.word':
                var $2681 = ((Bits$e + '0') + '0');
                var $2676 = $2681;
                break;
        };
        return $2676;
    };
    const Litereum$serialize$type = x0 => x1 => Litereum$serialize$type$(x0, x1);

    function Litereum$serialize$constructor$(_world$1, _ctor$2) {
        var self = _ctor$2;
        switch (self._) {
            case 'Litereum.Constructor.new':
                var $2683 = self.name;
                var $2684 = self.field_names;
                var $2685 = self.field_types;
                var _name$6 = Litereum$serialize$name$(_world$1, $2683);
                var _nams$7 = Litereum$serialize$list$(Litereum$serialize$name(_world$1), $2684);
                var _typs$8 = Litereum$serialize$list$(Litereum$serialize$type(_world$1), $2685);
                var $2686 = ((_typs$8 + _nams$7) + _name$6);
                var $2682 = $2686;
                break;
        };
        return $2682;
    };
    const Litereum$serialize$constructor = x0 => x1 => Litereum$serialize$constructor$(x0, x1);

    function Litereum$serialize$data$(_world$1, _data$2) {
        var self = _data$2;
        switch (self._) {
            case 'Litereum.Data.new':
                var $2688 = self.name;
                var $2689 = self.constructors;
                var _name$5 = Litereum$serialize$name$(_world$1, $2688);
                var _ctrs$6 = Litereum$serialize$list$(Litereum$serialize$constructor(_world$1), $2689);
                var $2690 = (_ctrs$6 + _name$5);
                var $2687 = $2690;
                break;
        };
        return $2687;
    };
    const Litereum$serialize$data = x0 => x1 => Litereum$serialize$data$(x0, x1);

    function List$find_index$go$(_xs$2, _f$3, _i$4) {
        var List$find_index$go$ = (_xs$2, _f$3, _i$4) => ({
            ctr: 'TCO',
            arg: [_xs$2, _f$3, _i$4]
        });
        var List$find_index$go = _xs$2 => _f$3 => _i$4 => List$find_index$go$(_xs$2, _f$3, _i$4);
        var arg = [_xs$2, _f$3, _i$4];
        while (true) {
            let [_xs$2, _f$3, _i$4] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $2691 = self.head;
                        var $2692 = self.tail;
                        var self = _f$3($2691);
                        if (self) {
                            var $2694 = Maybe$some$(_i$4);
                            var $2693 = $2694;
                        } else {
                            var $2695 = List$find_index$go$($2692, _f$3, Nat$succ$(_i$4));
                            var $2693 = $2695;
                        };
                        return $2693;
                    case 'List.nil':
                        var $2696 = Maybe$none;
                        return $2696;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$find_index$go = x0 => x1 => x2 => List$find_index$go$(x0, x1, x2);

    function List$find_index$(_xs$2, _f$3) {
        var $2697 = List$find_index$go$(_xs$2, _f$3, Nat$zero);
        return $2697;
    };
    const List$find_index = x0 => x1 => List$find_index$(x0, x1);
    const String$eql = a0 => a1 => (a0 === a1);

    function Litereum$serialize$name$local$(_world$1, _vars$2, _name$3) {
        var self = List$find_index$(_vars$2, a1 => (_name$3 === a1));
        switch (self._) {
            case 'Maybe.some':
                var $2699 = self.value;
                var $2700 = Litereum$serialize$varlen$($2699);
                var $2698 = $2700;
                break;
            case 'Maybe.none':
                var $2701 = Bits$e;
                var $2698 = $2701;
                break;
        };
        return $2698;
    };
    const Litereum$serialize$name$local = x0 => x1 => x2 => Litereum$serialize$name$local$(x0, x1, x2);

    function List$map$(_f$3, _as$4) {
        var self = _as$4;
        switch (self._) {
            case 'List.cons':
                var $2703 = self.head;
                var $2704 = self.tail;
                var $2705 = List$cons$(_f$3($2703), List$map$(_f$3, $2704));
                var $2702 = $2705;
                break;
            case 'List.nil':
                var $2706 = List$nil;
                var $2702 = $2706;
                break;
        };
        return $2702;
    };
    const List$map = x0 => x1 => List$map$(x0, x1);

    function List$concat$(_as$2, _bs$3) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $2708 = self.head;
                var $2709 = self.tail;
                var $2710 = List$cons$($2708, List$concat$($2709, _bs$3));
                var $2707 = $2710;
                break;
            case 'List.nil':
                var $2711 = _bs$3;
                var $2707 = $2711;
                break;
        };
        return $2707;
    };
    const List$concat = x0 => x1 => List$concat$(x0, x1);

    function Litereum$serialize$cases$(_world$1, _vars$2, _name$3, _ctors$4, _cases$5) {
        var self = _ctors$4;
        switch (self._) {
            case 'List.cons':
                var $2713 = self.head;
                var $2714 = self.tail;
                var self = _cases$5;
                switch (self._) {
                    case 'List.cons':
                        var $2716 = self.head;
                        var $2717 = self.tail;
                        var _flds$10 = List$map$(a1 => ((_name$3 + ".") + a1), (() => {
                            var self = $2713;
                            switch (self._) {
                                case 'Litereum.Constructor.new':
                                    var $2719 = self.field_names;
                                    var $2720 = $2719;
                                    return $2720;
                            };
                        })());
                        var _head$11 = Litereum$serialize$term$(_world$1, List$concat$(List$reverse$(_flds$10), _vars$2), $2716);
                        var _tail$12 = Litereum$serialize$cases$(_world$1, _vars$2, _name$3, $2714, $2717);
                        var $2718 = (_tail$12 + _head$11);
                        var $2715 = $2718;
                        break;
                    case 'List.nil':
                        var $2721 = Bits$e;
                        var $2715 = $2721;
                        break;
                };
                var $2712 = $2715;
                break;
            case 'List.nil':
                var self = _cases$5;
                switch (self._) {
                    case 'List.nil':
                    case 'List.cons':
                        var $2723 = Bits$e;
                        var $2722 = $2723;
                        break;
                };
                var $2712 = $2722;
                break;
        };
        return $2712;
    };
    const Litereum$serialize$cases = x0 => x1 => x2 => x3 => x4 => Litereum$serialize$cases$(x0, x1, x2, x3, x4);

    function Maybe$default$(_m$2, _a$3) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $2725 = self.value;
                var $2726 = $2725;
                var $2724 = $2726;
                break;
            case 'Maybe.none':
                var $2727 = _a$3;
                var $2724 = $2727;
                break;
        };
        return $2724;
    };
    const Maybe$default = x0 => x1 => Maybe$default$(x0, x1);

    function Litereum$get_constructors$(_world$1, _name$2) {
        var self = Litereum$get_data$(_world$1, _name$2);
        switch (self._) {
            case 'Maybe.some':
                var $2729 = self.value;
                var $2730 = Maybe$some$((() => {
                    var self = $2729;
                    switch (self._) {
                        case 'Litereum.Data.new':
                            var $2731 = self.constructors;
                            var $2732 = $2731;
                            return $2732;
                    };
                })());
                var $2728 = $2730;
                break;
            case 'Maybe.none':
                var $2733 = Maybe$none;
                var $2728 = $2733;
                break;
        };
        return $2728;
    };
    const Litereum$get_constructors = x0 => x1 => Litereum$get_constructors$(x0, x1);
    const U64$to_nat = a0 => (a0);

    function Litereum$get_bond$(_world$1, _name$2) {
        var self = _world$1;
        switch (self._) {
            case 'Litereum.World.new':
                var $2735 = self.entry;
                var $2736 = Maybe$monad$((_m$bind$7 => _m$pure$8 => {
                    var $2737 = _m$bind$7;
                    return $2737;
                }))(Map$get$(_name$2, $2735))((_entry$7 => {
                    var self = _entry$7;
                    switch (self._) {
                        case 'Litereum.Entry.bond':
                            var $2739 = self.value;
                            var $2740 = Maybe$some$($2739);
                            var $2738 = $2740;
                            break;
                        case 'Litereum.Entry.data':
                            var $2741 = Maybe$none;
                            var $2738 = $2741;
                            break;
                    };
                    return $2738;
                }));
                var $2734 = $2736;
                break;
        };
        return $2734;
    };
    const Litereum$get_bond = x0 => x1 => Litereum$get_bond$(x0, x1);

    function Litereum$serialize$term$(_world$1, _vars$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Litereum.Term.var':
                var $2743 = self.name;
                var $2744 = (Litereum$serialize$name$local$(_world$1, _vars$2, $2743) + '0');
                var $2742 = $2744;
                break;
            case 'Litereum.Term.call':
                var $2745 = self.bond;
                var $2746 = self.args;
                var _bond$6 = Litereum$serialize$name$(_world$1, $2745);
                var _args$7 = Litereum$serialize$list$(Litereum$serialize$term(_world$1)(_vars$2), $2746);
                var $2747 = (((((_args$7 + _bond$6) + '0') + '0') + '1') + '1');
                var $2742 = $2747;
                break;
            case 'Litereum.Term.let':
                var $2748 = self.name;
                var $2749 = self.type;
                var $2750 = self.expr;
                var $2751 = self.body;
                var _name$8 = Litereum$serialize$name$(_world$1, $2748);
                var _type$9 = Litereum$serialize$type$(_world$1, $2749);
                var _expr$10 = Litereum$serialize$term$(_world$1, _vars$2, $2750);
                var _body$11 = Litereum$serialize$term$(_world$1, List$cons$($2748, _vars$2), $2751);
                var $2752 = (((((((_body$11 + _expr$10) + _type$9) + _name$8) + '0') + '0') + '0') + '1');
                var $2742 = $2752;
                break;
            case 'Litereum.Term.create':
                var $2753 = self.ctor;
                var $2754 = self.vals;
                var _ctor$6 = Litereum$serialize$name$(_world$1, $2753);
                var _vals$7 = Litereum$serialize$list$(Litereum$serialize$term(_world$1)(_vars$2), $2754);
                var $2755 = (((((_vals$7 + _ctor$6) + '0') + '1') + '0') + '1');
                var $2742 = $2755;
                break;
            case 'Litereum.Term.match':
                var $2756 = self.name;
                var $2757 = self.data;
                var $2758 = self.cses;
                var _name$7 = Litereum$serialize$name$local$(_world$1, _vars$2, $2756);
                var _data$8 = Litereum$serialize$name$(_world$1, $2757);
                var _cses$9 = Litereum$serialize$cases$(_world$1, _vars$2, $2756, Maybe$default$(Litereum$get_constructors$(_world$1, $2757), List$nil), $2758);
                var $2759 = ((((((_cses$9 + _data$8) + _name$7) + '0') + '1') + '1') + '1');
                var $2742 = $2759;
                break;
            case 'Litereum.Term.word':
                var $2760 = self.numb;
                var _numb$5 = Litereum$serialize$fixlen$(64n, ($2760));
                var $2761 = ((((_numb$5 + '1') + '0') + '0') + '1');
                var $2742 = $2761;
                break;
            case 'Litereum.Term.compare':
                var $2762 = self.val0;
                var $2763 = self.val1;
                var $2764 = self.iflt;
                var $2765 = self.ifeq;
                var $2766 = self.ifgt;
                var _val0$9 = Litereum$serialize$term$(_world$1, _vars$2, $2762);
                var _val1$10 = Litereum$serialize$term$(_world$1, _vars$2, $2763);
                var _iflt$11 = Litereum$serialize$term$(_world$1, _vars$2, $2764);
                var _ifeq$12 = Litereum$serialize$term$(_world$1, _vars$2, $2765);
                var _ifgt$13 = Litereum$serialize$term$(_world$1, _vars$2, $2766);
                var $2767 = ((((((((_ifgt$13 + _ifeq$12) + _iflt$11) + _val1$10) + _val0$9) + '1') + '0') + '1') + '1');
                var $2742 = $2767;
                break;
            case 'Litereum.Term.operate':
                var $2768 = self.oper;
                var $2769 = self.val0;
                var $2770 = self.val1;
                var _oper$7 = Litereum$serialize$fixlen$(3n, (() => {
                    var self = $2768;
                    switch (self._) {
                        case 'Litereum.Operation.add':
                            var $2772 = 0n;
                            return $2772;
                        case 'Litereum.Operation.sub':
                            var $2773 = 1n;
                            return $2773;
                        case 'Litereum.Operation.mul':
                            var $2774 = 2n;
                            return $2774;
                        case 'Litereum.Operation.div':
                            var $2775 = 3n;
                            return $2775;
                        case 'Litereum.Operation.mod':
                            var $2776 = 4n;
                            return $2776;
                        case 'Litereum.Operation.or':
                            var $2777 = 5n;
                            return $2777;
                        case 'Litereum.Operation.and':
                            var $2778 = 6n;
                            return $2778;
                        case 'Litereum.Operation.xor':
                            var $2779 = 7n;
                            return $2779;
                    };
                })());
                var _val0$8 = Litereum$serialize$term$(_world$1, _vars$2, $2769);
                var _val1$9 = Litereum$serialize$term$(_world$1, _vars$2, $2770);
                var $2771 = ((((((_val1$9 + _val0$8) + _oper$7) + '1') + '1') + '0') + '1');
                var $2742 = $2771;
                break;
            case 'Litereum.Term.store':
                var $2780 = self.bond;
                var $2781 = self.main;
                var $2782 = self.body;
                var self = Litereum$get_bond$(_world$1, $2780);
                switch (self._) {
                    case 'Maybe.some':
                        var $2784 = self.value;
                        var _bond$8 = $2784;
                        var self = _bond$8;
                        switch (self._) {
                            case 'Litereum.Bond.new':
                                var $2786 = self.input_names;
                                var _name$15 = Litereum$serialize$name$(_world$1, $2780);
                                var _vrs2$16 = List$concat$(List$reverse$($2786), _vars$2);
                                var _main$17 = Litereum$serialize$term$(_world$1, _vrs2$16, $2781);
                                var _body$18 = Litereum$serialize$term$(_world$1, _vars$2, $2782);
                                var $2787 = ((((((((_body$18 + _main$17) + _name$15) + '0') + '0') + '1') + '1') + '1') + '1');
                                var $2785 = $2787;
                                break;
                        };
                        var $2783 = $2785;
                        break;
                    case 'Maybe.none':
                        var $2788 = Bits$e;
                        var $2783 = $2788;
                        break;
                };
                var $2742 = $2783;
                break;
            case 'Litereum.Term.bind':
                var $2789 = self.name;
                var $2790 = self.type;
                var $2791 = self.expr;
                var $2792 = self.body;
                var _name$8 = Litereum$serialize$name$(_world$1, $2789);
                var _type$9 = Litereum$serialize$type$(_world$1, $2790);
                var _expr$10 = Litereum$serialize$term$(_world$1, _vars$2, $2791);
                var _body$11 = Litereum$serialize$term$(_world$1, List$cons$($2789, _vars$2), $2792);
                var $2793 = (((((((((_body$11 + _expr$10) + _type$9) + _name$8) + '0') + '1') + '1') + '1') + '1') + '1');
                var $2742 = $2793;
                break;
            case 'Litereum.Term.return':
                var $2794 = self.expr;
                var _expr$5 = Litereum$serialize$term$(_world$1, _vars$2, $2794);
                var $2795 = ((((((_expr$5 + '1') + '0') + '1') + '1') + '1') + '1');
                var $2742 = $2795;
                break;
        };
        return $2742;
    };
    const Litereum$serialize$term = x0 => x1 => x2 => Litereum$serialize$term$(x0, x1, x2);

    function Litereum$serialize$bond$(_world$1, _bond$2) {
        var self = _bond$2;
        switch (self._) {
            case 'Litereum.Bond.new':
                var $2797 = self.name;
                var $2798 = self.input_names;
                var $2799 = self.input_types;
                var $2800 = self.output_type;
                var $2801 = self.main;
                var $2802 = self.owners;
                var _name$9 = Litereum$serialize$name$(_world$1, $2797);
                var _input_names$10 = Litereum$serialize$list$(Litereum$serialize$name(_world$1), $2798);
                var _input_types$11 = Litereum$serialize$list$(Litereum$serialize$type(_world$1), $2799);
                var _output_type$12 = Litereum$serialize$type$(_world$1, $2800);
                var _main$13 = Litereum$serialize$term$(_world$1, List$reverse$($2798), $2801);
                var _owners$14 = Litereum$serialize$list$(Litereum$serialize$name(_world$1), $2802);
                var $2803 = (((((_owners$14 + _main$13) + _output_type$12) + _input_types$11) + _input_names$10) + _name$9);
                var $2796 = $2803;
                break;
        };
        return $2796;
    };
    const Litereum$serialize$bond = x0 => x1 => Litereum$serialize$bond$(x0, x1);

    function Litereum$serialize$eval$(_world$1, _eval$2) {
        var self = _eval$2;
        switch (self._) {
            case 'Litereum.Eval.new':
                var $2805 = self.term;
                var $2806 = self.type;
                var _term$5 = Litereum$serialize$term$(_world$1, List$nil, $2805);
                var _type$6 = Litereum$serialize$type$(_world$1, $2806);
                var $2807 = (_type$6 + _term$5);
                var $2804 = $2807;
                break;
        };
        return $2804;
    };
    const Litereum$serialize$eval = x0 => x1 => Litereum$serialize$eval$(x0, x1);

    function Litereum$serialize$transaction$(_world$1, _transaction$2) {
        var self = _transaction$2;
        switch (self._) {
            case 'Litereum.Transaction.new_name':
                var $2809 = self.name;
                var _name$4 = Litereum$serialize$name$new$($2809);
                var $2810 = ((_name$4 + '0') + '0');
                var $2808 = $2810;
                break;
            case 'Litereum.Transaction.new_data':
                var $2811 = self.data;
                var _data$4 = Litereum$serialize$data$(_world$1, $2811);
                var $2812 = ((_data$4 + '0') + '1');
                var $2808 = $2812;
                break;
            case 'Litereum.Transaction.new_bond':
                var $2813 = self.bond;
                var _bond$4 = Litereum$serialize$bond$(_world$1, $2813);
                var $2814 = ((_bond$4 + '1') + '0');
                var $2808 = $2814;
                break;
            case 'Litereum.Transaction.new_eval':
                var $2815 = self.eval;
                var _term$4 = Litereum$serialize$eval$(_world$1, $2815);
                var $2816 = ((_term$4 + '1') + '1');
                var $2808 = $2816;
                break;
        };
        return $2808;
    };
    const Litereum$serialize$transaction = x0 => x1 => Litereum$serialize$transaction$(x0, x1);

    function Litereum$serialize$block$(_world$1, _block$2) {
        var self = _block$2;
        switch (self._) {
            case 'List.cons':
                var $2818 = self.head;
                var $2819 = self.tail;
                var _head$5 = Litereum$serialize$transaction$(_world$1, $2818);
                var _tail$6 = Litereum$serialize$block$(_world$1, $2819);
                var $2820 = (_tail$6 + _head$5);
                var $2817 = $2820;
                break;
            case 'List.nil':
                var $2821 = Bits$e;
                var $2817 = $2821;
                break;
        };
        return $2817;
    };
    const Litereum$serialize$block = x0 => x1 => Litereum$serialize$block$(x0, x1);

    function Bits$is_empty$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'e':
                var $2823 = Bool$true;
                var $2822 = $2823;
                break;
            case 'o':
            case 'i':
                var $2824 = Bool$false;
                var $2822 = $2824;
                break;
        };
        return $2822;
    };
    const Bits$is_empty = x0 => Bits$is_empty$(x0);

    function Litereum$deserialize$fixlen$(_size$1, _bits$2) {
        var self = _size$1;
        if (self === 0n) {
            var $2826 = Pair$new$(_bits$2, 0n);
            var $2825 = $2826;
        } else {
            var $2827 = (self - 1n);
            var self = _bits$2;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $2829 = self.slice(0, -1);
                    var self = Litereum$deserialize$fixlen$($2827, $2829);
                    switch (self._) {
                        case 'Pair.new':
                            var $2831 = self.fst;
                            var $2832 = self.snd;
                            var $2833 = Pair$new$($2831, ($2832 * 2n));
                            var $2830 = $2833;
                            break;
                    };
                    var $2828 = $2830;
                    break;
                case 'i':
                    var $2834 = self.slice(0, -1);
                    var self = Litereum$deserialize$fixlen$($2827, $2834);
                    switch (self._) {
                        case 'Pair.new':
                            var $2836 = self.fst;
                            var $2837 = self.snd;
                            var $2838 = Pair$new$($2836, (($2837 * 2n) + 1n));
                            var $2835 = $2838;
                            break;
                    };
                    var $2828 = $2835;
                    break;
                case 'e':
                    var $2839 = Pair$new$(Bits$e, 0n);
                    var $2828 = $2839;
                    break;
            };
            var $2825 = $2828;
        };
        return $2825;
    };
    const Litereum$deserialize$fixlen = x0 => x1 => Litereum$deserialize$fixlen$(x0, x1);
    const U16$from_nat = a0 => (Number(a0) & 0xFFFF);

    function Litereum$deserialize$name$new$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2841 = self.slice(0, -1);
                var $2842 = Pair$new$($2841, "");
                var $2840 = $2842;
                break;
            case 'i':
                var $2843 = self.slice(0, -1);
                var self = Litereum$deserialize$fixlen$(6n, $2843);
                switch (self._) {
                    case 'Pair.new':
                        var $2845 = self.fst;
                        var $2846 = self.snd;
                        var self = Litereum$deserialize$name$new$($2845);
                        switch (self._) {
                            case 'Pair.new':
                                var $2848 = self.fst;
                                var $2849 = self.snd;
                                var _numb$7 = (Number($2846) & 0xFFFF);
                                var self = U16$btw$(0, _numb$7, 9);
                                if (self) {
                                    var $2851 = ((_numb$7 + 48) & 0xFFFF);
                                    var _head$8 = $2851;
                                } else {
                                    var self = U16$btw$(10, _numb$7, 35);
                                    if (self) {
                                        var $2853 = ((((_numb$7 - 10) & 0xFFFF) + 65) & 0xFFFF);
                                        var $2852 = $2853;
                                    } else {
                                        var self = U16$btw$(36, _numb$7, 61);
                                        if (self) {
                                            var $2855 = ((((_numb$7 - 36) & 0xFFFF) + 97) & 0xFFFF);
                                            var $2854 = $2855;
                                        } else {
                                            var self = U16$btw$(62, _numb$7, 62);
                                            if (self) {
                                                var $2857 = 95;
                                                var $2856 = $2857;
                                            } else {
                                                var $2858 = 46;
                                                var $2856 = $2858;
                                            };
                                            var $2854 = $2856;
                                        };
                                        var $2852 = $2854;
                                    };
                                    var _head$8 = $2852;
                                };
                                var $2850 = Pair$new$($2848, String$cons$(_head$8, $2849));
                                var $2847 = $2850;
                                break;
                        };
                        var $2844 = $2847;
                        break;
                };
                var $2840 = $2844;
                break;
            case 'e':
                var $2859 = Pair$new$(Bits$e, "");
                var $2840 = $2859;
                break;
        };
        return $2840;
    };
    const Litereum$deserialize$name$new = x0 => Litereum$deserialize$name$new$(x0);

    function Litereum$deserialize$varlen$go$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2861 = self.slice(0, -1);
                var $2862 = Pair$new$($2861, 1n);
                var $2860 = $2862;
                break;
            case 'i':
                var $2863 = self.slice(0, -1);
                var self = $2863;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $2865 = self.slice(0, -1);
                        var self = Litereum$deserialize$varlen$go$($2865);
                        switch (self._) {
                            case 'Pair.new':
                                var $2867 = self.fst;
                                var $2868 = self.snd;
                                var $2869 = Pair$new$($2867, ($2868 * 2n));
                                var $2866 = $2869;
                                break;
                        };
                        var $2864 = $2866;
                        break;
                    case 'i':
                        var $2870 = self.slice(0, -1);
                        var self = Litereum$deserialize$varlen$go$($2870);
                        switch (self._) {
                            case 'Pair.new':
                                var $2872 = self.fst;
                                var $2873 = self.snd;
                                var $2874 = Pair$new$($2872, (($2873 * 2n) + 1n));
                                var $2871 = $2874;
                                break;
                        };
                        var $2864 = $2871;
                        break;
                    case 'e':
                        var $2875 = Pair$new$($2863, 0n);
                        var $2864 = $2875;
                        break;
                };
                var $2860 = $2864;
                break;
            case 'e':
                var $2876 = Pair$new$(Bits$e, 0n);
                var $2860 = $2876;
                break;
        };
        return $2860;
    };
    const Litereum$deserialize$varlen$go = x0 => Litereum$deserialize$varlen$go$(x0);
    const Nat$sub = a0 => a1 => (a0 - a1 <= 0n ? 0n : a0 - a1);

    function Litereum$deserialize$varlen$(_bits$1) {
        var self = Litereum$deserialize$varlen$go$(_bits$1);
        switch (self._) {
            case 'Pair.new':
                var $2878 = self.fst;
                var $2879 = self.snd;
                var $2880 = Pair$new$($2878, ($2879 - 1n <= 0n ? 0n : $2879 - 1n));
                var $2877 = $2880;
                break;
        };
        return $2877;
    };
    const Litereum$deserialize$varlen = x0 => Litereum$deserialize$varlen$(x0);

    function Litereum$deserialize$name$(_world$1, _bits$2) {
        var self = _world$1;
        switch (self._) {
            case 'Litereum.World.new':
                var $2882 = self.index_to_name;
                var self = _bits$2;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $2884 = self.slice(0, -1);
                        var $2885 = Litereum$deserialize$name$new$($2884);
                        var $2883 = $2885;
                        break;
                    case 'i':
                        var $2886 = self.slice(0, -1);
                        var self = Litereum$deserialize$varlen$($2886);
                        switch (self._) {
                            case 'Pair.new':
                                var $2888 = self.fst;
                                var $2889 = self.snd;
                                var $2890 = Pair$new$($2888, Maybe$default$(Map$get$(Nat$show$($2889), $2882), ""));
                                var $2887 = $2890;
                                break;
                        };
                        var $2883 = $2887;
                        break;
                    case 'e':
                        var $2891 = Pair$new$(_bits$2, "");
                        var $2883 = $2891;
                        break;
                };
                var $2881 = $2883;
                break;
        };
        return $2881;
    };
    const Litereum$deserialize$name = x0 => x1 => Litereum$deserialize$name$(x0, x1);

    function Litereum$deserialize$list$(_item$2, _bits$3) {
        var self = _bits$3;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2893 = self.slice(0, -1);
                var $2894 = Pair$new$($2893, List$nil);
                var $2892 = $2894;
                break;
            case 'i':
                var $2895 = self.slice(0, -1);
                var self = _item$2($2895);
                switch (self._) {
                    case 'Pair.new':
                        var $2897 = self.fst;
                        var $2898 = self.snd;
                        var self = Litereum$deserialize$list$(_item$2, $2897);
                        switch (self._) {
                            case 'Pair.new':
                                var $2900 = self.fst;
                                var $2901 = self.snd;
                                var $2902 = Pair$new$($2900, List$cons$($2898, $2901));
                                var $2899 = $2902;
                                break;
                        };
                        var $2896 = $2899;
                        break;
                };
                var $2892 = $2896;
                break;
            case 'e':
                var $2903 = Pair$new$(Bits$e, List$nil);
                var $2892 = $2903;
                break;
        };
        return $2892;
    };
    const Litereum$deserialize$list = x0 => x1 => Litereum$deserialize$list$(x0, x1);

    function Litereum$deserialize$type$(_world$1, _bits$2) {
        var self = Litereum$deserialize$fixlen$(2n, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $2905 = self.fst;
                var $2906 = self.snd;
                var self = ($2906 === 0n);
                if (self) {
                    var $2908 = Pair$new$($2905, Litereum$Type$word);
                    var $2907 = $2908;
                } else {
                    var self = ($2906 === 1n);
                    if (self) {
                        var self = Litereum$deserialize$name$(_world$1, $2905);
                        switch (self._) {
                            case 'Pair.new':
                                var $2911 = self.fst;
                                var $2912 = self.snd;
                                var $2913 = Pair$new$($2911, Litereum$Type$data$($2912));
                                var $2910 = $2913;
                                break;
                        };
                        var $2909 = $2910;
                    } else {
                        var self = ($2906 === 2n);
                        if (self) {
                            var self = Litereum$deserialize$type$(_world$1, $2905);
                            switch (self._) {
                                case 'Pair.new':
                                    var $2916 = self.fst;
                                    var $2917 = self.snd;
                                    var $2918 = Pair$new$($2916, Litereum$Type$effect$($2917));
                                    var $2915 = $2918;
                                    break;
                            };
                            var $2914 = $2915;
                        } else {
                            var $2919 = Pair$new$($2905, Litereum$Type$word);
                            var $2914 = $2919;
                        };
                        var $2909 = $2914;
                    };
                    var $2907 = $2909;
                };
                var $2904 = $2907;
                break;
        };
        return $2904;
    };
    const Litereum$deserialize$type = x0 => x1 => Litereum$deserialize$type$(x0, x1);

    function Litereum$deserialize$constructor$(_world$1, _bits$2) {
        var self = Litereum$deserialize$name$(_world$1, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $2921 = self.fst;
                var $2922 = self.snd;
                var self = Litereum$deserialize$list$(Litereum$deserialize$name(_world$1), $2921);
                switch (self._) {
                    case 'Pair.new':
                        var $2924 = self.fst;
                        var $2925 = self.snd;
                        var self = Litereum$deserialize$list$(Litereum$deserialize$type(_world$1), $2924);
                        switch (self._) {
                            case 'Pair.new':
                                var $2927 = self.fst;
                                var $2928 = self.snd;
                                var $2929 = Pair$new$($2927, Litereum$Constructor$new$($2922, $2925, $2928));
                                var $2926 = $2929;
                                break;
                        };
                        var $2923 = $2926;
                        break;
                };
                var $2920 = $2923;
                break;
        };
        return $2920;
    };
    const Litereum$deserialize$constructor = x0 => x1 => Litereum$deserialize$constructor$(x0, x1);

    function Litereum$deserialize$data$(_world$1, _bits$2) {
        var self = Litereum$deserialize$name$(_world$1, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $2931 = self.fst;
                var $2932 = self.snd;
                var self = Litereum$deserialize$list$(Litereum$deserialize$constructor(_world$1), $2931);
                switch (self._) {
                    case 'Pair.new':
                        var $2934 = self.fst;
                        var $2935 = self.snd;
                        var $2936 = Pair$new$($2934, Litereum$Data$new$($2932, $2935));
                        var $2933 = $2936;
                        break;
                };
                var $2930 = $2933;
                break;
        };
        return $2930;
    };
    const Litereum$deserialize$data = x0 => x1 => Litereum$deserialize$data$(x0, x1);
    const U64$from_nat = a0 => (a0 & 0xFFFFFFFFFFFFFFFFn);

    function List$get$(_index$2, _list$3) {
        var List$get$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$get = _index$2 => _list$3 => List$get$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $2937 = self.head;
                        var $2938 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $2940 = Maybe$some$($2937);
                            var $2939 = $2940;
                        } else {
                            var $2941 = (self - 1n);
                            var $2942 = List$get$($2941, $2938);
                            var $2939 = $2942;
                        };
                        return $2939;
                    case 'List.nil':
                        var $2943 = Maybe$none;
                        return $2943;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$get = x0 => x1 => List$get$(x0, x1);

    function Litereum$deserialize$name$local$(_world$1, _vars$2, _bits$3) {
        var self = Litereum$deserialize$varlen$(_bits$3);
        switch (self._) {
            case 'Pair.new':
                var $2945 = self.fst;
                var $2946 = self.snd;
                var $2947 = Pair$new$($2945, Maybe$default$(List$get$($2946, _vars$2), ""));
                var $2944 = $2947;
                break;
        };
        return $2944;
    };
    const Litereum$deserialize$name$local = x0 => x1 => x2 => Litereum$deserialize$name$local$(x0, x1, x2);

    function Litereum$deserialize$cases$(_world$1, _vars$2, _name$3, _ctors$4, _bits$5) {
        var self = _ctors$4;
        switch (self._) {
            case 'List.cons':
                var $2949 = self.head;
                var $2950 = self.tail;
                var _flds$8 = List$map$(a1 => ((_name$3 + ".") + a1), (() => {
                    var self = $2949;
                    switch (self._) {
                        case 'Litereum.Constructor.new':
                            var $2952 = self.field_names;
                            var $2953 = $2952;
                            return $2953;
                    };
                })());
                var self = Litereum$deserialize$term$(_world$1, List$concat$(List$reverse$(_flds$8), _vars$2), _bits$5);
                switch (self._) {
                    case 'Pair.new':
                        var $2954 = self.fst;
                        var $2955 = self.snd;
                        var self = Litereum$deserialize$cases$(_world$1, _vars$2, _name$3, $2950, $2954);
                        switch (self._) {
                            case 'Pair.new':
                                var $2957 = self.fst;
                                var $2958 = self.snd;
                                var $2959 = Pair$new$($2957, List$cons$($2955, $2958));
                                var $2956 = $2959;
                                break;
                        };
                        var $2951 = $2956;
                        break;
                };
                var $2948 = $2951;
                break;
            case 'List.nil':
                var $2960 = Pair$new$(_bits$5, List$nil);
                var $2948 = $2960;
                break;
        };
        return $2948;
    };
    const Litereum$deserialize$cases = x0 => x1 => x2 => x3 => x4 => Litereum$deserialize$cases$(x0, x1, x2, x3, x4);

    function Litereum$deserialize$term$(_world$1, _vars$2, _bits$3) {
        var self = _bits$3;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2962 = self.slice(0, -1);
                var self = Litereum$deserialize$name$local$(_world$1, _vars$2, $2962);
                switch (self._) {
                    case 'Pair.new':
                        var $2964 = self.fst;
                        var $2965 = self.snd;
                        var $2966 = Pair$new$($2964, Litereum$Term$var$($2965));
                        var $2963 = $2966;
                        break;
                };
                var $2961 = $2963;
                break;
            case 'i':
                var $2967 = self.slice(0, -1);
                var self = Litereum$deserialize$fixlen$(3n, $2967);
                switch (self._) {
                    case 'Pair.new':
                        var $2969 = self.fst;
                        var $2970 = self.snd;
                        var self = ($2970 === 0n);
                        if (self) {
                            var self = Litereum$deserialize$name$(_world$1, $2969);
                            switch (self._) {
                                case 'Pair.new':
                                    var $2973 = self.fst;
                                    var $2974 = self.snd;
                                    var self = Litereum$deserialize$type$(_world$1, $2973);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $2976 = self.fst;
                                            var $2977 = self.snd;
                                            var self = Litereum$deserialize$term$(_world$1, _vars$2, $2976);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $2979 = self.fst;
                                                    var $2980 = self.snd;
                                                    var self = Litereum$deserialize$term$(_world$1, List$cons$($2974, _vars$2), $2979);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $2982 = self.fst;
                                                            var $2983 = self.snd;
                                                            var $2984 = Pair$new$($2982, Litereum$Term$let$($2974, $2977, $2980, $2983));
                                                            var $2981 = $2984;
                                                            break;
                                                    };
                                                    var $2978 = $2981;
                                                    break;
                                            };
                                            var $2975 = $2978;
                                            break;
                                    };
                                    var $2972 = $2975;
                                    break;
                            };
                            var $2971 = $2972;
                        } else {
                            var self = ($2970 === 1n);
                            if (self) {
                                var self = Litereum$deserialize$name$(_world$1, $2969);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $2987 = self.fst;
                                        var $2988 = self.snd;
                                        var self = Litereum$deserialize$list$(Litereum$deserialize$term(_world$1)(_vars$2), $2987);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $2990 = self.fst;
                                                var $2991 = self.snd;
                                                var $2992 = Pair$new$($2990, Litereum$Term$call$($2988, $2991));
                                                var $2989 = $2992;
                                                break;
                                        };
                                        var $2986 = $2989;
                                        break;
                                };
                                var $2985 = $2986;
                            } else {
                                var self = ($2970 === 2n);
                                if (self) {
                                    var self = Litereum$deserialize$name$(_world$1, $2969);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $2995 = self.fst;
                                            var $2996 = self.snd;
                                            var self = Litereum$deserialize$list$(Litereum$deserialize$term(_world$1)(_vars$2), $2995);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $2998 = self.fst;
                                                    var $2999 = self.snd;
                                                    var $3000 = Pair$new$($2998, Litereum$Term$create$($2996, $2999));
                                                    var $2997 = $3000;
                                                    break;
                                            };
                                            var $2994 = $2997;
                                            break;
                                    };
                                    var $2993 = $2994;
                                } else {
                                    var self = ($2970 === 3n);
                                    if (self) {
                                        var self = Litereum$deserialize$name$local$(_world$1, _vars$2, $2969);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3003 = self.fst;
                                                var $3004 = self.snd;
                                                var self = Litereum$deserialize$name$(_world$1, $3003);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3006 = self.fst;
                                                        var $3007 = self.snd;
                                                        var self = Litereum$deserialize$cases$(_world$1, _vars$2, $3004, Maybe$default$(Litereum$get_constructors$(_world$1, $3007), List$nil), $3006);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3009 = self.fst;
                                                                var $3010 = self.snd;
                                                                var $3011 = Pair$new$($3009, Litereum$Term$match$($3004, $3007, $3010));
                                                                var $3008 = $3011;
                                                                break;
                                                        };
                                                        var $3005 = $3008;
                                                        break;
                                                };
                                                var $3002 = $3005;
                                                break;
                                        };
                                        var $3001 = $3002;
                                    } else {
                                        var self = ($2970 === 4n);
                                        if (self) {
                                            var self = Litereum$deserialize$fixlen$(64n, $2969);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3014 = self.fst;
                                                    var $3015 = self.snd;
                                                    var $3016 = Pair$new$($3014, Litereum$Term$word$(($3015 & 0xFFFFFFFFFFFFFFFFn)));
                                                    var $3013 = $3016;
                                                    break;
                                            };
                                            var $3012 = $3013;
                                        } else {
                                            var self = ($2970 === 5n);
                                            if (self) {
                                                var self = Litereum$deserialize$term$(_world$1, _vars$2, $2969);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3019 = self.fst;
                                                        var $3020 = self.snd;
                                                        var self = Litereum$deserialize$term$(_world$1, _vars$2, $3019);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3022 = self.fst;
                                                                var $3023 = self.snd;
                                                                var self = Litereum$deserialize$term$(_world$1, _vars$2, $3022);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $3025 = self.fst;
                                                                        var $3026 = self.snd;
                                                                        var self = Litereum$deserialize$term$(_world$1, _vars$2, $3025);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3028 = self.fst;
                                                                                var $3029 = self.snd;
                                                                                var self = Litereum$deserialize$term$(_world$1, _vars$2, $3028);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3031 = self.fst;
                                                                                        var $3032 = self.snd;
                                                                                        var $3033 = Pair$new$($3031, Litereum$Term$compare$($3020, $3023, $3026, $3029, $3032));
                                                                                        var $3030 = $3033;
                                                                                        break;
                                                                                };
                                                                                var $3027 = $3030;
                                                                                break;
                                                                        };
                                                                        var $3024 = $3027;
                                                                        break;
                                                                };
                                                                var $3021 = $3024;
                                                                break;
                                                        };
                                                        var $3018 = $3021;
                                                        break;
                                                };
                                                var $3017 = $3018;
                                            } else {
                                                var self = ($2970 === 6n);
                                                if (self) {
                                                    var self = Litereum$deserialize$fixlen$(3n, $2969);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3036 = self.fst;
                                                            var $3037 = self.snd;
                                                            var self = Litereum$deserialize$term$(_world$1, _vars$2, $3036);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $3039 = self.fst;
                                                                    var $3040 = self.snd;
                                                                    var self = Litereum$deserialize$term$(_world$1, _vars$2, $3039);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $3042 = self.fst;
                                                                            var $3043 = self.snd;
                                                                            var self = ($3037 === 0n);
                                                                            if (self) {
                                                                                var $3045 = Litereum$Operation$add;
                                                                                var _oper$13 = $3045;
                                                                            } else {
                                                                                var self = ($3037 === 1n);
                                                                                if (self) {
                                                                                    var $3047 = Litereum$Operation$sub;
                                                                                    var $3046 = $3047;
                                                                                } else {
                                                                                    var self = ($3037 === 2n);
                                                                                    if (self) {
                                                                                        var $3049 = Litereum$Operation$mul;
                                                                                        var $3048 = $3049;
                                                                                    } else {
                                                                                        var self = ($3037 === 3n);
                                                                                        if (self) {
                                                                                            var $3051 = Litereum$Operation$div;
                                                                                            var $3050 = $3051;
                                                                                        } else {
                                                                                            var self = ($3037 === 4n);
                                                                                            if (self) {
                                                                                                var $3053 = Litereum$Operation$mod;
                                                                                                var $3052 = $3053;
                                                                                            } else {
                                                                                                var self = ($3037 === 5n);
                                                                                                if (self) {
                                                                                                    var $3055 = Litereum$Operation$or;
                                                                                                    var $3054 = $3055;
                                                                                                } else {
                                                                                                    var self = ($3037 === 6n);
                                                                                                    if (self) {
                                                                                                        var $3057 = Litereum$Operation$and;
                                                                                                        var $3056 = $3057;
                                                                                                    } else {
                                                                                                        var self = ($3037 === 7n);
                                                                                                        if (self) {
                                                                                                            var $3059 = Litereum$Operation$xor;
                                                                                                            var $3058 = $3059;
                                                                                                        } else {
                                                                                                            var $3060 = Litereum$Operation$add;
                                                                                                            var $3058 = $3060;
                                                                                                        };
                                                                                                        var $3056 = $3058;
                                                                                                    };
                                                                                                    var $3054 = $3056;
                                                                                                };
                                                                                                var $3052 = $3054;
                                                                                            };
                                                                                            var $3050 = $3052;
                                                                                        };
                                                                                        var $3048 = $3050;
                                                                                    };
                                                                                    var $3046 = $3048;
                                                                                };
                                                                                var _oper$13 = $3046;
                                                                            };
                                                                            var $3044 = Pair$new$($3042, Litereum$Term$operate$(_oper$13, $3040, $3043));
                                                                            var $3041 = $3044;
                                                                            break;
                                                                    };
                                                                    var $3038 = $3041;
                                                                    break;
                                                            };
                                                            var $3035 = $3038;
                                                            break;
                                                    };
                                                    var $3034 = $3035;
                                                } else {
                                                    var self = ($2970 === 7n);
                                                    if (self) {
                                                        var self = Litereum$deserialize$fixlen$(2n, $2969);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3063 = self.fst;
                                                                var $3064 = self.snd;
                                                                var self = ($3064 === 0n);
                                                                if (self) {
                                                                    var self = Litereum$deserialize$name$(_world$1, $3063);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $3067 = self.fst;
                                                                            var $3068 = self.snd;
                                                                            var self = Litereum$get_bond$(_world$1, $3068);
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3070 = self.value;
                                                                                    var _bond$12 = $3070;
                                                                                    var self = _bond$12;
                                                                                    switch (self._) {
                                                                                        case 'Litereum.Bond.new':
                                                                                            var $3072 = self.input_names;
                                                                                            var _vrs2$19 = List$concat$(List$reverse$($3072), _vars$2);
                                                                                            var self = Litereum$deserialize$term$(_world$1, _vrs2$19, $3067);
                                                                                            switch (self._) {
                                                                                                case 'Pair.new':
                                                                                                    var $3074 = self.fst;
                                                                                                    var $3075 = self.snd;
                                                                                                    var self = Litereum$deserialize$term$(_world$1, _vars$2, $3074);
                                                                                                    switch (self._) {
                                                                                                        case 'Pair.new':
                                                                                                            var $3077 = self.fst;
                                                                                                            var $3078 = self.snd;
                                                                                                            var $3079 = Pair$new$($3077, Litereum$Term$store$($3068, $3075, $3078));
                                                                                                            var $3076 = $3079;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3073 = $3076;
                                                                                                    break;
                                                                                            };
                                                                                            var $3071 = $3073;
                                                                                            break;
                                                                                    };
                                                                                    var $3069 = $3071;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3080 = Pair$new$($3067, Litereum$Term$word$(0n));
                                                                                    var $3069 = $3080;
                                                                                    break;
                                                                            };
                                                                            var $3066 = $3069;
                                                                            break;
                                                                    };
                                                                    var $3065 = $3066;
                                                                } else {
                                                                    var self = ($3064 === 1n);
                                                                    if (self) {
                                                                        var self = Litereum$deserialize$name$(_world$1, $3063);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3083 = self.fst;
                                                                                var $3084 = self.snd;
                                                                                var self = Litereum$deserialize$type$(_world$1, $3083);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3086 = self.fst;
                                                                                        var $3087 = self.snd;
                                                                                        var self = Litereum$deserialize$term$(_world$1, _vars$2, $3086);
                                                                                        switch (self._) {
                                                                                            case 'Pair.new':
                                                                                                var $3089 = self.fst;
                                                                                                var $3090 = self.snd;
                                                                                                var self = Litereum$deserialize$term$(_world$1, List$cons$($3084, _vars$2), $3089);
                                                                                                switch (self._) {
                                                                                                    case 'Pair.new':
                                                                                                        var $3092 = self.fst;
                                                                                                        var $3093 = self.snd;
                                                                                                        var $3094 = Pair$new$($3092, Litereum$Term$bind$($3084, $3087, $3090, $3093));
                                                                                                        var $3091 = $3094;
                                                                                                        break;
                                                                                                };
                                                                                                var $3088 = $3091;
                                                                                                break;
                                                                                        };
                                                                                        var $3085 = $3088;
                                                                                        break;
                                                                                };
                                                                                var $3082 = $3085;
                                                                                break;
                                                                        };
                                                                        var $3081 = $3082;
                                                                    } else {
                                                                        var self = ($3064 === 2n);
                                                                        if (self) {
                                                                            var self = Litereum$deserialize$term$(_world$1, _vars$2, $3063);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $3097 = self.fst;
                                                                                    var $3098 = self.snd;
                                                                                    var $3099 = Pair$new$($3097, Litereum$Term$return$($3098));
                                                                                    var $3096 = $3099;
                                                                                    break;
                                                                            };
                                                                            var $3095 = $3096;
                                                                        } else {
                                                                            var $3100 = Pair$new$($3063, Litereum$Term$word$(0n));
                                                                            var $3095 = $3100;
                                                                        };
                                                                        var $3081 = $3095;
                                                                    };
                                                                    var $3065 = $3081;
                                                                };
                                                                var $3062 = $3065;
                                                                break;
                                                        };
                                                        var $3061 = $3062;
                                                    } else {
                                                        var $3101 = Pair$new$($2969, Litereum$Term$word$(0n));
                                                        var $3061 = $3101;
                                                    };
                                                    var $3034 = $3061;
                                                };
                                                var $3017 = $3034;
                                            };
                                            var $3012 = $3017;
                                        };
                                        var $3001 = $3012;
                                    };
                                    var $2993 = $3001;
                                };
                                var $2985 = $2993;
                            };
                            var $2971 = $2985;
                        };
                        var $2968 = $2971;
                        break;
                };
                var $2961 = $2968;
                break;
            case 'e':
                var $3102 = Pair$new$(_bits$3, Litereum$Term$word$(0n));
                var $2961 = $3102;
                break;
        };
        return $2961;
    };
    const Litereum$deserialize$term = x0 => x1 => x2 => Litereum$deserialize$term$(x0, x1, x2);

    function Litereum$deserialize$bond$(_world$1, _bits$2) {
        var self = Litereum$deserialize$name$(_world$1, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3104 = self.fst;
                var $3105 = self.snd;
                var self = Litereum$deserialize$list$(Litereum$deserialize$name(_world$1), $3104);
                switch (self._) {
                    case 'Pair.new':
                        var $3107 = self.fst;
                        var $3108 = self.snd;
                        var self = Litereum$deserialize$list$(Litereum$deserialize$type(_world$1), $3107);
                        switch (self._) {
                            case 'Pair.new':
                                var $3110 = self.fst;
                                var $3111 = self.snd;
                                var self = Litereum$deserialize$type$(_world$1, $3110);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3113 = self.fst;
                                        var $3114 = self.snd;
                                        var self = Litereum$deserialize$term$(_world$1, List$reverse$($3108), $3113);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3116 = self.fst;
                                                var $3117 = self.snd;
                                                var self = Litereum$deserialize$list$(Litereum$deserialize$name(_world$1), $3116);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3119 = self.fst;
                                                        var $3120 = self.snd;
                                                        var $3121 = Pair$new$($3119, Litereum$Bond$new$($3105, $3108, $3111, $3114, $3117, $3120));
                                                        var $3118 = $3121;
                                                        break;
                                                };
                                                var $3115 = $3118;
                                                break;
                                        };
                                        var $3112 = $3115;
                                        break;
                                };
                                var $3109 = $3112;
                                break;
                        };
                        var $3106 = $3109;
                        break;
                };
                var $3103 = $3106;
                break;
        };
        return $3103;
    };
    const Litereum$deserialize$bond = x0 => x1 => Litereum$deserialize$bond$(x0, x1);

    function Litereum$deserialize$eval$(_world$1, _bits$2) {
        var self = Litereum$deserialize$term$(_world$1, List$nil, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3123 = self.fst;
                var $3124 = self.snd;
                var self = Litereum$deserialize$type$(_world$1, $3123);
                switch (self._) {
                    case 'Pair.new':
                        var $3126 = self.fst;
                        var $3127 = self.snd;
                        var $3128 = Pair$new$($3126, Litereum$Eval$new$($3124, $3127));
                        var $3125 = $3128;
                        break;
                };
                var $3122 = $3125;
                break;
        };
        return $3122;
    };
    const Litereum$deserialize$eval = x0 => x1 => Litereum$deserialize$eval$(x0, x1);

    function Litereum$deserialize$transaction$(_world$1, _bits$2) {
        var self = Litereum$deserialize$fixlen$(2n, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3130 = self.fst;
                var $3131 = self.snd;
                var self = ($3131 === 0n);
                if (self) {
                    var self = Litereum$deserialize$name$new$($3130);
                    switch (self._) {
                        case 'Pair.new':
                            var $3134 = self.fst;
                            var $3135 = self.snd;
                            var $3136 = Pair$new$($3134, Litereum$Transaction$new_name$($3135));
                            var $3133 = $3136;
                            break;
                    };
                    var $3132 = $3133;
                } else {
                    var self = ($3131 === 1n);
                    if (self) {
                        var self = Litereum$deserialize$data$(_world$1, $3130);
                        switch (self._) {
                            case 'Pair.new':
                                var $3139 = self.fst;
                                var $3140 = self.snd;
                                var $3141 = Pair$new$($3139, Litereum$Transaction$new_data$($3140));
                                var $3138 = $3141;
                                break;
                        };
                        var $3137 = $3138;
                    } else {
                        var self = ($3131 === 2n);
                        if (self) {
                            var self = Litereum$deserialize$bond$(_world$1, $3130);
                            switch (self._) {
                                case 'Pair.new':
                                    var $3144 = self.fst;
                                    var $3145 = self.snd;
                                    var $3146 = Pair$new$($3144, Litereum$Transaction$new_bond$($3145));
                                    var $3143 = $3146;
                                    break;
                            };
                            var $3142 = $3143;
                        } else {
                            var self = ($3131 === 3n);
                            if (self) {
                                var self = Litereum$deserialize$eval$(_world$1, $3130);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3149 = self.fst;
                                        var $3150 = self.snd;
                                        var $3151 = Pair$new$($3149, Litereum$Transaction$new_eval$($3150));
                                        var $3148 = $3151;
                                        break;
                                };
                                var $3147 = $3148;
                            } else {
                                var $3152 = Pair$new$($3130, Litereum$Transaction$new_name$(""));
                                var $3147 = $3152;
                            };
                            var $3142 = $3147;
                        };
                        var $3137 = $3142;
                    };
                    var $3132 = $3137;
                };
                var $3129 = $3132;
                break;
        };
        return $3129;
    };
    const Litereum$deserialize$transaction = x0 => x1 => Litereum$deserialize$transaction$(x0, x1);

    function Litereum$deserialize$block$(_world$1, _bits$2) {
        var self = Bits$is_empty$(_bits$2);
        if (self) {
            var $3154 = Pair$new$(Bits$e, List$nil);
            var $3153 = $3154;
        } else {
            var self = Litereum$deserialize$transaction$(_world$1, _bits$2);
            switch (self._) {
                case 'Pair.new':
                    var $3156 = self.fst;
                    var $3157 = self.snd;
                    var self = Litereum$deserialize$block$(_world$1, $3156);
                    switch (self._) {
                        case 'Pair.new':
                            var $3159 = self.fst;
                            var $3160 = self.snd;
                            var $3161 = Pair$new$($3159, List$cons$($3157, $3160));
                            var $3158 = $3161;
                            break;
                    };
                    var $3155 = $3158;
                    break;
            };
            var $3153 = $3155;
        };
        return $3153;
    };
    const Litereum$deserialize$block = x0 => x1 => Litereum$deserialize$block$(x0, x1);

    function Bits$hex$encode$(_x$1) {
        var self = _x$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3163 = self.slice(0, -1);
                var self = $3163;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3165 = self.slice(0, -1);
                        var self = $3165;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3167 = self.slice(0, -1);
                                var self = $3167;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3169 = self.slice(0, -1);
                                        var $3170 = ("0" + Bits$hex$encode$($3169));
                                        var $3168 = $3170;
                                        break;
                                    case 'i':
                                        var $3171 = self.slice(0, -1);
                                        var $3172 = ("8" + Bits$hex$encode$($3171));
                                        var $3168 = $3172;
                                        break;
                                    case 'e':
                                        var $3173 = "0";
                                        var $3168 = $3173;
                                        break;
                                };
                                var $3166 = $3168;
                                break;
                            case 'i':
                                var $3174 = self.slice(0, -1);
                                var self = $3174;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3176 = self.slice(0, -1);
                                        var $3177 = ("4" + Bits$hex$encode$($3176));
                                        var $3175 = $3177;
                                        break;
                                    case 'i':
                                        var $3178 = self.slice(0, -1);
                                        var $3179 = ("c" + Bits$hex$encode$($3178));
                                        var $3175 = $3179;
                                        break;
                                    case 'e':
                                        var $3180 = "4";
                                        var $3175 = $3180;
                                        break;
                                };
                                var $3166 = $3175;
                                break;
                            case 'e':
                                var $3181 = "0";
                                var $3166 = $3181;
                                break;
                        };
                        var $3164 = $3166;
                        break;
                    case 'i':
                        var $3182 = self.slice(0, -1);
                        var self = $3182;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3184 = self.slice(0, -1);
                                var self = $3184;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3186 = self.slice(0, -1);
                                        var $3187 = ("2" + Bits$hex$encode$($3186));
                                        var $3185 = $3187;
                                        break;
                                    case 'i':
                                        var $3188 = self.slice(0, -1);
                                        var $3189 = ("a" + Bits$hex$encode$($3188));
                                        var $3185 = $3189;
                                        break;
                                    case 'e':
                                        var $3190 = "2";
                                        var $3185 = $3190;
                                        break;
                                };
                                var $3183 = $3185;
                                break;
                            case 'i':
                                var $3191 = self.slice(0, -1);
                                var self = $3191;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3193 = self.slice(0, -1);
                                        var $3194 = ("6" + Bits$hex$encode$($3193));
                                        var $3192 = $3194;
                                        break;
                                    case 'i':
                                        var $3195 = self.slice(0, -1);
                                        var $3196 = ("e" + Bits$hex$encode$($3195));
                                        var $3192 = $3196;
                                        break;
                                    case 'e':
                                        var $3197 = "6";
                                        var $3192 = $3197;
                                        break;
                                };
                                var $3183 = $3192;
                                break;
                            case 'e':
                                var $3198 = "2";
                                var $3183 = $3198;
                                break;
                        };
                        var $3164 = $3183;
                        break;
                    case 'e':
                        var $3199 = "0";
                        var $3164 = $3199;
                        break;
                };
                var $3162 = $3164;
                break;
            case 'i':
                var $3200 = self.slice(0, -1);
                var self = $3200;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3202 = self.slice(0, -1);
                        var self = $3202;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3204 = self.slice(0, -1);
                                var self = $3204;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3206 = self.slice(0, -1);
                                        var $3207 = ("1" + Bits$hex$encode$($3206));
                                        var $3205 = $3207;
                                        break;
                                    case 'i':
                                        var $3208 = self.slice(0, -1);
                                        var $3209 = ("9" + Bits$hex$encode$($3208));
                                        var $3205 = $3209;
                                        break;
                                    case 'e':
                                        var $3210 = "1";
                                        var $3205 = $3210;
                                        break;
                                };
                                var $3203 = $3205;
                                break;
                            case 'i':
                                var $3211 = self.slice(0, -1);
                                var self = $3211;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3213 = self.slice(0, -1);
                                        var $3214 = ("5" + Bits$hex$encode$($3213));
                                        var $3212 = $3214;
                                        break;
                                    case 'i':
                                        var $3215 = self.slice(0, -1);
                                        var $3216 = ("d" + Bits$hex$encode$($3215));
                                        var $3212 = $3216;
                                        break;
                                    case 'e':
                                        var $3217 = "5";
                                        var $3212 = $3217;
                                        break;
                                };
                                var $3203 = $3212;
                                break;
                            case 'e':
                                var $3218 = "1";
                                var $3203 = $3218;
                                break;
                        };
                        var $3201 = $3203;
                        break;
                    case 'i':
                        var $3219 = self.slice(0, -1);
                        var self = $3219;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3221 = self.slice(0, -1);
                                var self = $3221;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3223 = self.slice(0, -1);
                                        var $3224 = ("3" + Bits$hex$encode$($3223));
                                        var $3222 = $3224;
                                        break;
                                    case 'i':
                                        var $3225 = self.slice(0, -1);
                                        var $3226 = ("b" + Bits$hex$encode$($3225));
                                        var $3222 = $3226;
                                        break;
                                    case 'e':
                                        var $3227 = "3";
                                        var $3222 = $3227;
                                        break;
                                };
                                var $3220 = $3222;
                                break;
                            case 'i':
                                var $3228 = self.slice(0, -1);
                                var self = $3228;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3230 = self.slice(0, -1);
                                        var $3231 = ("7" + Bits$hex$encode$($3230));
                                        var $3229 = $3231;
                                        break;
                                    case 'i':
                                        var $3232 = self.slice(0, -1);
                                        var $3233 = ("f" + Bits$hex$encode$($3232));
                                        var $3229 = $3233;
                                        break;
                                    case 'e':
                                        var $3234 = "7";
                                        var $3229 = $3234;
                                        break;
                                };
                                var $3220 = $3229;
                                break;
                            case 'e':
                                var $3235 = "3";
                                var $3220 = $3235;
                                break;
                        };
                        var $3201 = $3220;
                        break;
                    case 'e':
                        var $3236 = "1";
                        var $3201 = $3236;
                        break;
                };
                var $3162 = $3201;
                break;
            case 'e':
                var $3237 = "";
                var $3162 = $3237;
                break;
        };
        return $3162;
    };
    const Bits$hex$encode = x0 => Bits$hex$encode$(x0);
    const Bits$eql = a0 => a1 => (a1 === a0);

    function BBT$(_K$1, _V$2) {
        var $3238 = null;
        return $3238;
    };
    const BBT = x0 => x1 => BBT$(x0, x1);

    function Map$(_V$1) {
        var $3239 = null;
        return $3239;
    };
    const Map = x0 => Map$(x0);

    function Litereum$World$new$(_name_count$1, _name_to_index$2, _index_to_name$3, _entry$4) {
        var $3240 = ({
            _: 'Litereum.World.new',
            'name_count': _name_count$1,
            'name_to_index': _name_to_index$2,
            'index_to_name': _index_to_name$3,
            'entry': _entry$4
        });
        return $3240;
    };
    const Litereum$World$new = x0 => x1 => x2 => x3 => Litereum$World$new$(x0, x1, x2, x3);

    function BBT$bin$(_size$3, _key$4, _val$5, _left$6, _right$7) {
        var $3241 = ({
            _: 'BBT.bin',
            'size': _size$3,
            'key': _key$4,
            'val': _val$5,
            'left': _left$6,
            'right': _right$7
        });
        return $3241;
    };
    const BBT$bin = x0 => x1 => x2 => x3 => x4 => BBT$bin$(x0, x1, x2, x3, x4);

    function U32$new$(_value$1) {
        var $3242 = word_to_u32(_value$1);
        return $3242;
    };
    const U32$new = x0 => U32$new$(x0);
    const Nat$to_u32 = a0 => (Number(a0) >>> 0);
    const BBT$tip = ({
        _: 'BBT.tip'
    });

    function BBT$singleton$(_key$3, _val$4) {
        var $3243 = BBT$bin$(1, _key$3, _val$4, BBT$tip, BBT$tip);
        return $3243;
    };
    const BBT$singleton = x0 => x1 => BBT$singleton$(x0, x1);

    function BBT$size$(_map$3) {
        var self = _map$3;
        switch (self._) {
            case 'BBT.bin':
                var $3245 = self.size;
                var $3246 = $3245;
                var $3244 = $3246;
                break;
            case 'BBT.tip':
                var $3247 = 0;
                var $3244 = $3247;
                break;
        };
        return $3244;
    };
    const BBT$size = x0 => BBT$size$(x0);
    const U32$add = a0 => a1 => ((a0 + a1) >>> 0);

    function Word$shift_left$one$go$(_word$2, _prev$3) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3249 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $3251 = Word$i$(Word$shift_left$one$go$($3249, Bool$false));
                    var $3250 = $3251;
                } else {
                    var $3252 = Word$o$(Word$shift_left$one$go$($3249, Bool$false));
                    var $3250 = $3252;
                };
                var $3248 = $3250;
                break;
            case 'Word.i':
                var $3253 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $3255 = Word$i$(Word$shift_left$one$go$($3253, Bool$true));
                    var $3254 = $3255;
                } else {
                    var $3256 = Word$o$(Word$shift_left$one$go$($3253, Bool$true));
                    var $3254 = $3256;
                };
                var $3248 = $3254;
                break;
            case 'Word.e':
                var $3257 = Word$e;
                var $3248 = $3257;
                break;
        };
        return $3248;
    };
    const Word$shift_left$one$go = x0 => x1 => Word$shift_left$one$go$(x0, x1);

    function Word$shift_left$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3259 = self.pred;
                var $3260 = Word$o$(Word$shift_left$one$go$($3259, Bool$false));
                var $3258 = $3260;
                break;
            case 'Word.i':
                var $3261 = self.pred;
                var $3262 = Word$o$(Word$shift_left$one$go$($3261, Bool$true));
                var $3258 = $3262;
                break;
            case 'Word.e':
                var $3263 = Word$e;
                var $3258 = $3263;
                break;
        };
        return $3258;
    };
    const Word$shift_left$one = x0 => Word$shift_left$one$(x0);

    function Word$shift_left$(_value$2, _n$3) {
        var Word$shift_left$ = (_value$2, _n$3) => ({
            ctr: 'TCO',
            arg: [_value$2, _n$3]
        });
        var Word$shift_left = _value$2 => _n$3 => Word$shift_left$(_value$2, _n$3);
        var arg = [_value$2, _n$3];
        while (true) {
            let [_value$2, _n$3] = arg;
            var R = (() => {
                var self = _n$3;
                if (self === 0n) {
                    var $3264 = _value$2;
                    return $3264;
                } else {
                    var $3265 = (self - 1n);
                    var $3266 = Word$shift_left$(Word$shift_left$one$(_value$2), $3265);
                    return $3266;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_left = x0 => x1 => Word$shift_left$(x0, x1);

    function Word$mul$go$(_a$3, _b$4, _acc$5) {
        var Word$mul$go$ = (_a$3, _b$4, _acc$5) => ({
            ctr: 'TCO',
            arg: [_a$3, _b$4, _acc$5]
        });
        var Word$mul$go = _a$3 => _b$4 => _acc$5 => Word$mul$go$(_a$3, _b$4, _acc$5);
        var arg = [_a$3, _b$4, _acc$5];
        while (true) {
            let [_a$3, _b$4, _acc$5] = arg;
            var R = (() => {
                var self = _a$3;
                switch (self._) {
                    case 'Word.o':
                        var $3267 = self.pred;
                        var $3268 = Word$mul$go$($3267, Word$shift_left$(_b$4, 1n), _acc$5);
                        return $3268;
                    case 'Word.i':
                        var $3269 = self.pred;
                        var $3270 = Word$mul$go$($3269, Word$shift_left$(_b$4, 1n), Word$add$(_b$4, _acc$5));
                        return $3270;
                    case 'Word.e':
                        var $3271 = _acc$5;
                        return $3271;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$mul$go = x0 => x1 => x2 => Word$mul$go$(x0, x1, x2);

    function Word$to_zero$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3273 = self.pred;
                var $3274 = Word$o$(Word$to_zero$($3273));
                var $3272 = $3274;
                break;
            case 'Word.i':
                var $3275 = self.pred;
                var $3276 = Word$o$(Word$to_zero$($3275));
                var $3272 = $3276;
                break;
            case 'Word.e':
                var $3277 = Word$e;
                var $3272 = $3277;
                break;
        };
        return $3272;
    };
    const Word$to_zero = x0 => Word$to_zero$(x0);

    function Word$mul$(_a$2, _b$3) {
        var $3278 = Word$mul$go$(_a$2, _b$3, Word$to_zero$(_a$2));
        return $3278;
    };
    const Word$mul = x0 => x1 => Word$mul$(x0, x1);
    const U32$mul = a0 => a1 => ((a0 * a1) >>> 0);
    const BBT$w = 3;
    const U32$ltn = a0 => a1 => (a0 < a1);
    const U32$from_nat = a0 => (Number(a0) >>> 0);

    function BBT$node$(_key$3, _val$4, _left$5, _right$6) {
        var _size_left$7 = BBT$size$(_left$5);
        var _size_right$8 = BBT$size$(_right$6);
        var _new_size$9 = ((1 + ((_size_left$7 + _size_right$8) >>> 0)) >>> 0);
        var $3279 = BBT$bin$(_new_size$9, _key$3, _val$4, _left$5, _right$6);
        return $3279;
    };
    const BBT$node = x0 => x1 => x2 => x3 => BBT$node$(x0, x1, x2, x3);

    function Cmp$as_gtn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $3281 = Bool$false;
                var $3280 = $3281;
                break;
            case 'Cmp.gtn':
                var $3282 = Bool$true;
                var $3280 = $3282;
                break;
        };
        return $3280;
    };
    const Cmp$as_gtn = x0 => Cmp$as_gtn$(x0);

    function Word$gtn$(_a$2, _b$3) {
        var $3283 = Cmp$as_gtn$(Word$cmp$(_a$2, _b$3));
        return $3283;
    };
    const Word$gtn = x0 => x1 => Word$gtn$(x0, x1);
    const U32$gtn = a0 => a1 => (a0 > a1);

    function BBT$balance$(_k$3, _v$4, _l$5, _r$6) {
        var _size_l$7 = BBT$size$(_l$5);
        var _size_r$8 = BBT$size$(_r$6);
        var _size_l_plus_size_r$9 = ((_size_l$7 + _size_r$8) >>> 0);
        var _w_x_size_l$10 = ((BBT$w * _size_l$7) >>> 0);
        var _w_x_size_r$11 = ((BBT$w * _size_r$8) >>> 0);
        var self = (_size_l_plus_size_r$9 < 2);
        if (self) {
            var $3285 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
            var $3284 = $3285;
        } else {
            var self = (_size_r$8 > _w_x_size_l$10);
            if (self) {
                var self = _r$6;
                switch (self._) {
                    case 'BBT.bin':
                        var $3288 = self.key;
                        var $3289 = self.val;
                        var $3290 = self.left;
                        var $3291 = self.right;
                        var _size_rl$17 = BBT$size$($3290);
                        var _size_rr$18 = BBT$size$($3291);
                        var self = (_size_rl$17 < _size_rr$18);
                        if (self) {
                            var _new_key$19 = $3288;
                            var _new_val$20 = $3289;
                            var _new_left$21 = BBT$node$(_k$3, _v$4, _l$5, $3290);
                            var _new_right$22 = $3291;
                            var $3293 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                            var $3292 = $3293;
                        } else {
                            var self = $3290;
                            switch (self._) {
                                case 'BBT.bin':
                                    var $3295 = self.key;
                                    var $3296 = self.val;
                                    var $3297 = self.left;
                                    var $3298 = self.right;
                                    var _new_key$24 = $3295;
                                    var _new_val$25 = $3296;
                                    var _new_left$26 = BBT$node$(_k$3, _v$4, _l$5, $3297);
                                    var _new_right$27 = BBT$node$($3288, $3289, $3298, $3291);
                                    var $3299 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                    var $3294 = $3299;
                                    break;
                                case 'BBT.tip':
                                    var $3300 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                    var $3294 = $3300;
                                    break;
                            };
                            var $3292 = $3294;
                        };
                        var $3287 = $3292;
                        break;
                    case 'BBT.tip':
                        var $3301 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                        var $3287 = $3301;
                        break;
                };
                var $3286 = $3287;
            } else {
                var self = (_size_l$7 > _w_x_size_r$11);
                if (self) {
                    var self = _l$5;
                    switch (self._) {
                        case 'BBT.bin':
                            var $3304 = self.key;
                            var $3305 = self.val;
                            var $3306 = self.left;
                            var $3307 = self.right;
                            var _size_ll$17 = BBT$size$($3306);
                            var _size_lr$18 = BBT$size$($3307);
                            var self = (_size_lr$18 < _size_ll$17);
                            if (self) {
                                var _new_key$19 = $3304;
                                var _new_val$20 = $3305;
                                var _new_left$21 = $3306;
                                var _new_right$22 = BBT$node$(_k$3, _v$4, $3307, _r$6);
                                var $3309 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                                var $3308 = $3309;
                            } else {
                                var self = $3307;
                                switch (self._) {
                                    case 'BBT.bin':
                                        var $3311 = self.key;
                                        var $3312 = self.val;
                                        var $3313 = self.left;
                                        var $3314 = self.right;
                                        var _new_key$24 = $3311;
                                        var _new_val$25 = $3312;
                                        var _new_left$26 = BBT$node$($3304, $3305, $3306, $3313);
                                        var _new_right$27 = BBT$node$(_k$3, _v$4, $3314, _r$6);
                                        var $3315 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                        var $3310 = $3315;
                                        break;
                                    case 'BBT.tip':
                                        var $3316 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                        var $3310 = $3316;
                                        break;
                                };
                                var $3308 = $3310;
                            };
                            var $3303 = $3308;
                            break;
                        case 'BBT.tip':
                            var $3317 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                            var $3303 = $3317;
                            break;
                    };
                    var $3302 = $3303;
                } else {
                    var $3318 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                    var $3302 = $3318;
                };
                var $3286 = $3302;
            };
            var $3284 = $3286;
        };
        return $3284;
    };
    const BBT$balance = x0 => x1 => x2 => x3 => BBT$balance$(x0, x1, x2, x3);

    function BBT$insert$(_cmp$3, _key$4, _val$5, _map$6) {
        var self = _map$6;
        switch (self._) {
            case 'BBT.bin':
                var $3320 = self.key;
                var $3321 = self.val;
                var $3322 = self.left;
                var $3323 = self.right;
                var self = _cmp$3(_key$4)($3320);
                switch (self._) {
                    case 'Cmp.ltn':
                        var _new_key$12 = $3320;
                        var _new_val$13 = $3321;
                        var _new_left$14 = BBT$insert$(_cmp$3, _key$4, _val$5, $3322);
                        var _new_right$15 = $3323;
                        var $3325 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $3324 = $3325;
                        break;
                    case 'Cmp.eql':
                        var $3326 = BBT$node$(_key$4, _val$5, $3322, $3323);
                        var $3324 = $3326;
                        break;
                    case 'Cmp.gtn':
                        var _new_key$12 = $3320;
                        var _new_val$13 = $3321;
                        var _new_left$14 = $3322;
                        var _new_right$15 = BBT$insert$(_cmp$3, _key$4, _val$5, $3323);
                        var $3327 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $3324 = $3327;
                        break;
                };
                var $3319 = $3324;
                break;
            case 'BBT.tip':
                var $3328 = BBT$singleton$(_key$4, _val$5);
                var $3319 = $3328;
                break;
        };
        return $3319;
    };
    const BBT$insert = x0 => x1 => x2 => x3 => BBT$insert$(x0, x1, x2, x3);

    function Map$set$(_key$2, _val$3, _map$4) {
        var $3329 = BBT$insert$(String$cmp, _key$2, _val$3, _map$4);
        return $3329;
    };
    const Map$set = x0 => x1 => x2 => Map$set$(x0, x1, x2);

    function Litereum$Entry$data$(_value$1) {
        var $3330 = ({
            _: 'Litereum.Entry.data',
            'value': _value$1
        });
        return $3330;
    };
    const Litereum$Entry$data = x0 => Litereum$Entry$data$(x0);

    function Litereum$Entry$bond$(_value$1) {
        var $3331 = ({
            _: 'Litereum.Entry.bond',
            'value': _value$1
        });
        return $3331;
    };
    const Litereum$Entry$bond = x0 => Litereum$Entry$bond$(x0);

    function Litereum$extend$(_map$2, _keys$3, _vals$4) {
        var Litereum$extend$ = (_map$2, _keys$3, _vals$4) => ({
            ctr: 'TCO',
            arg: [_map$2, _keys$3, _vals$4]
        });
        var Litereum$extend = _map$2 => _keys$3 => _vals$4 => Litereum$extend$(_map$2, _keys$3, _vals$4);
        var arg = [_map$2, _keys$3, _vals$4];
        while (true) {
            let [_map$2, _keys$3, _vals$4] = arg;
            var R = (() => {
                var self = _keys$3;
                switch (self._) {
                    case 'List.cons':
                        var $3332 = self.head;
                        var $3333 = self.tail;
                        var self = _vals$4;
                        switch (self._) {
                            case 'List.cons':
                                var $3335 = self.head;
                                var $3336 = self.tail;
                                var $3337 = Litereum$extend$(Map$set$($3332, $3335, _map$2), $3333, $3336);
                                var $3334 = $3337;
                                break;
                            case 'List.nil':
                                var $3338 = _map$2;
                                var $3334 = $3338;
                                break;
                        };
                        return $3334;
                    case 'List.nil':
                        var self = _vals$4;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $3340 = _map$2;
                                var $3339 = $3340;
                                break;
                        };
                        return $3339;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Litereum$extend = x0 => x1 => x2 => Litereum$extend$(x0, x1, x2);

    function Pair$snd$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $3342 = self.snd;
                var $3343 = $3342;
                var $3341 = $3343;
                break;
        };
        return $3341;
    };
    const Pair$snd = x0 => Pair$snd$(x0);

    function BBT$from_list$go$(_cmp$3, _acc$4, _xs$5) {
        var BBT$from_list$go$ = (_cmp$3, _acc$4, _xs$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _acc$4, _xs$5]
        });
        var BBT$from_list$go = _cmp$3 => _acc$4 => _xs$5 => BBT$from_list$go$(_cmp$3, _acc$4, _xs$5);
        var arg = [_cmp$3, _acc$4, _xs$5];
        while (true) {
            let [_cmp$3, _acc$4, _xs$5] = arg;
            var R = (() => {
                var self = _xs$5;
                switch (self._) {
                    case 'List.cons':
                        var $3344 = self.head;
                        var $3345 = self.tail;
                        var _key$8 = Pair$fst$($3344);
                        var _val$9 = Pair$snd$($3344);
                        var _new_acc$10 = BBT$insert$(_cmp$3, _key$8, _val$9, _acc$4);
                        var $3346 = BBT$from_list$go$(_cmp$3, _new_acc$10, $3345);
                        return $3346;
                    case 'List.nil':
                        var $3347 = _acc$4;
                        return $3347;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$from_list$go = x0 => x1 => x2 => BBT$from_list$go$(x0, x1, x2);

    function BBT$from_list$(_cmp$3, _xs$4) {
        var $3348 = BBT$from_list$go$(_cmp$3, BBT$tip, _xs$4);
        return $3348;
    };
    const BBT$from_list = x0 => x1 => BBT$from_list$(x0, x1);

    function Map$from_list$(_xs$2) {
        var $3349 = BBT$from_list$(String$cmp, _xs$2);
        return $3349;
    };
    const Map$from_list = x0 => Map$from_list$(x0);

    function Litereum$equal$(_a$1, _b$2) {
        var Litereum$equal$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var Litereum$equal = _a$1 => _b$2 => Litereum$equal$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                switch (self._) {
                    case 'Litereum.Type.data':
                        var $3350 = self.name;
                        var self = _b$2;
                        switch (self._) {
                            case 'Litereum.Type.data':
                                var $3352 = self.name;
                                var $3353 = ($3350 === $3352);
                                var $3351 = $3353;
                                break;
                            case 'Litereum.Type.word':
                            case 'Litereum.Type.effect':
                                var $3354 = Bool$false;
                                var $3351 = $3354;
                                break;
                        };
                        return $3351;
                    case 'Litereum.Type.effect':
                        var $3355 = self.rety;
                        var self = _b$2;
                        switch (self._) {
                            case 'Litereum.Type.effect':
                                var $3357 = self.rety;
                                var $3358 = Litereum$equal$($3355, $3357);
                                var $3356 = $3358;
                                break;
                            case 'Litereum.Type.word':
                            case 'Litereum.Type.data':
                                var $3359 = Bool$false;
                                var $3356 = $3359;
                                break;
                        };
                        return $3356;
                    case 'Litereum.Type.word':
                        var self = _b$2;
                        switch (self._) {
                            case 'Litereum.Type.word':
                                var $3361 = Bool$true;
                                var $3360 = $3361;
                                break;
                            case 'Litereum.Type.data':
                            case 'Litereum.Type.effect':
                                var $3362 = Bool$false;
                                var $3360 = $3362;
                                break;
                        };
                        return $3360;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Litereum$equal = x0 => x1 => Litereum$equal$(x0, x1);

    function List$zip$(_as$3, _bs$4) {
        var self = _as$3;
        switch (self._) {
            case 'List.cons':
                var $3364 = self.head;
                var $3365 = self.tail;
                var self = _bs$4;
                switch (self._) {
                    case 'List.cons':
                        var $3367 = self.head;
                        var $3368 = self.tail;
                        var $3369 = List$cons$(Pair$new$($3364, $3367), List$zip$($3365, $3368));
                        var $3366 = $3369;
                        break;
                    case 'List.nil':
                        var $3370 = List$nil;
                        var $3366 = $3370;
                        break;
                };
                var $3363 = $3366;
                break;
            case 'List.nil':
                var $3371 = List$nil;
                var $3363 = $3371;
                break;
        };
        return $3363;
    };
    const List$zip = x0 => x1 => List$zip$(x0, x1);

    function List$all$(_cond$2, _list$3) {
        var List$all$ = (_cond$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _list$3]
        });
        var List$all = _cond$2 => _list$3 => List$all$(_cond$2, _list$3);
        var arg = [_cond$2, _list$3];
        while (true) {
            let [_cond$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $3372 = self.head;
                        var $3373 = self.tail;
                        var self = _cond$2($3372);
                        if (self) {
                            var $3375 = List$all$(_cond$2, $3373);
                            var $3374 = $3375;
                        } else {
                            var $3376 = Bool$false;
                            var $3374 = $3376;
                        };
                        return $3374;
                    case 'List.nil':
                        var $3377 = Bool$true;
                        return $3377;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$all = x0 => x1 => List$all$(x0, x1);

    function Maybe$mapped$(_m$2, _f$4) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $3379 = self.value;
                var $3380 = Maybe$some$(_f$4($3379));
                var $3378 = $3380;
                break;
            case 'Maybe.none':
                var $3381 = Maybe$none;
                var $3378 = $3381;
                break;
        };
        return $3378;
    };
    const Maybe$mapped = x0 => x1 => Maybe$mapped$(x0, x1);

    function List$ifind$go$(_xs$2, _f$3, _i$4) {
        var List$ifind$go$ = (_xs$2, _f$3, _i$4) => ({
            ctr: 'TCO',
            arg: [_xs$2, _f$3, _i$4]
        });
        var List$ifind$go = _xs$2 => _f$3 => _i$4 => List$ifind$go$(_xs$2, _f$3, _i$4);
        var arg = [_xs$2, _f$3, _i$4];
        while (true) {
            let [_xs$2, _f$3, _i$4] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $3382 = self.head;
                        var $3383 = self.tail;
                        var self = _f$3(_i$4)($3382);
                        if (self) {
                            var $3385 = Maybe$some$(Pair$new$(_i$4, $3382));
                            var $3384 = $3385;
                        } else {
                            var $3386 = List$ifind$go$($3383, _f$3, Nat$succ$(_i$4));
                            var $3384 = $3386;
                        };
                        return $3384;
                    case 'List.nil':
                        var $3387 = Maybe$none;
                        return $3387;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$ifind$go = x0 => x1 => x2 => List$ifind$go$(x0, x1, x2);

    function List$ifind$(_f$2, _xs$3) {
        var $3388 = List$ifind$go$(_xs$3, _f$2, Nat$zero);
        return $3388;
    };
    const List$ifind = x0 => x1 => List$ifind$(x0, x1);

    function Litereum$get_constructor_value$(_data$1, _name$2) {
        var $3389 = Maybe$mapped$(List$ifind$((_i$3 => _ctr$4 => {
            var $3390 = ((() => {
                var self = _ctr$4;
                switch (self._) {
                    case 'Litereum.Constructor.new':
                        var $3391 = self.name;
                        var $3392 = $3391;
                        return $3392;
                };
            })() === _name$2);
            return $3390;
        }), (() => {
            var self = _data$1;
            switch (self._) {
                case 'Litereum.Data.new':
                    var $3393 = self.constructors;
                    var $3394 = $3393;
                    return $3394;
            };
        })()), (_x$3 => {
            var self = _x$3;
            switch (self._) {
                case 'Pair.new':
                    var $3396 = self.snd;
                    var $3397 = $3396;
                    var $3395 = $3397;
                    break;
            };
            return $3395;
        }));
        return $3389;
    };
    const Litereum$get_constructor_value = x0 => x1 => Litereum$get_constructor_value$(x0, x1);
    const List$length = a0 => (list_length(a0));

    function List$zip_with$(_f$4, _as$5, _bs$6) {
        var self = _as$5;
        switch (self._) {
            case 'List.cons':
                var $3399 = self.head;
                var $3400 = self.tail;
                var self = _bs$6;
                switch (self._) {
                    case 'List.cons':
                        var $3402 = self.head;
                        var $3403 = self.tail;
                        var $3404 = List$cons$(_f$4($3399)($3402), List$zip_with$(_f$4, $3400, $3403));
                        var $3401 = $3404;
                        break;
                    case 'List.nil':
                        var $3405 = List$nil;
                        var $3401 = $3405;
                        break;
                };
                var $3398 = $3401;
                break;
            case 'List.nil':
                var $3406 = List$nil;
                var $3398 = $3406;
                break;
        };
        return $3398;
    };
    const List$zip_with = x0 => x1 => x2 => List$zip_with$(x0, x1, x2);

    function List$zipped_with$(_as$3, _bs$4, _f$6) {
        var $3407 = List$zip_with$(_f$6, _as$3, _bs$4);
        return $3407;
    };
    const List$zipped_with = x0 => x1 => x2 => List$zipped_with$(x0, x1, x2);

    function List$and$(_list$1) {
        var $3408 = List$all$((_x$2 => {
            var $3409 = _x$2;
            return $3409;
        }), _list$1);
        return $3408;
    };
    const List$and = x0 => List$and$(x0);

    function Litereum$check$(_context$1, _world$2, _term$3, _type$4) {
        var self = _context$1;
        switch (self._) {
            case 'BBT.tip':
                var self = _world$2;
                switch (self._) {
                    case 'Litereum.World.new':
                        var self = _term$3;
                        switch (self._) {
                            case 'Litereum.Term.var':
                                var $3413 = self.name;
                                var self = Map$get$($3413, _context$1);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3415 = self.value;
                                        var $3416 = Litereum$equal$($3415, _type$4);
                                        var $3414 = $3416;
                                        break;
                                    case 'Maybe.none':
                                        var $3417 = Bool$false;
                                        var $3414 = $3417;
                                        break;
                                };
                                var $3412 = $3414;
                                break;
                            case 'Litereum.Term.call':
                                var $3418 = self.bond;
                                var $3419 = self.args;
                                var self = Litereum$get_bond$(_world$2, $3418);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3421 = self.value;
                                        var _bond$12 = $3421;
                                        var self = _bond$12;
                                        switch (self._) {
                                            case 'Litereum.Bond.new':
                                                var $3423 = self.input_types;
                                                var $3424 = self.output_type;
                                                var _otyp$19 = Litereum$equal$($3424, _type$4);
                                                var _args$20 = List$zip$($3419, $3423);
                                                var _args$21 = List$all$((_x$21 => {
                                                    var $3426 = Litereum$check$(_context$1, _world$2, (() => {
                                                        var self = _x$21;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3427 = self.fst;
                                                                var $3428 = $3427;
                                                                return $3428;
                                                        };
                                                    })(), (() => {
                                                        var self = _x$21;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3429 = self.snd;
                                                                var $3430 = $3429;
                                                                return $3430;
                                                        };
                                                    })());
                                                    return $3426;
                                                }), _args$20);
                                                var $3425 = (_otyp$19 && _args$21);
                                                var $3422 = $3425;
                                                break;
                                        };
                                        var $3420 = $3422;
                                        break;
                                    case 'Maybe.none':
                                        var $3431 = Bool$false;
                                        var $3420 = $3431;
                                        break;
                                };
                                var $3412 = $3420;
                                break;
                            case 'Litereum.Term.let':
                                var $3432 = self.name;
                                var $3433 = self.type;
                                var $3434 = self.expr;
                                var $3435 = self.body;
                                var _expr$13 = Litereum$check$(_context$1, _world$2, $3434, $3433);
                                var _ctx2$14 = Map$set$($3432, $3433, _context$1);
                                var _body$15 = Litereum$check$(_ctx2$14, _world$2, $3435, _type$4);
                                var $3436 = (_expr$13 && _body$15);
                                var $3412 = $3436;
                                break;
                            case 'Litereum.Term.create':
                                var $3437 = self.ctor;
                                var $3438 = self.vals;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.data':
                                        var $3440 = self.name;
                                        var self = Litereum$get_data$(_world$2, $3440);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3442 = self.value;
                                                var _data$13 = $3442;
                                                var self = _data$13;
                                                switch (self._) {
                                                    case 'Litereum.Data.new':
                                                        var self = Litereum$get_constructor_value$(_data$13, $3437);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $3445 = self.value;
                                                                var _ctor$17 = $3445;
                                                                var self = _ctor$17;
                                                                switch (self._) {
                                                                    case 'Litereum.Constructor.new':
                                                                        var $3447 = self.field_types;
                                                                        var _size$21 = ((list_length($3438)) === (list_length($3447)));
                                                                        var _vals$22 = List$zip$($3438, $3447);
                                                                        var _vals$23 = List$all$((_x$23 => {
                                                                            var $3449 = Litereum$check$(_context$1, _world$2, (() => {
                                                                                var self = _x$23;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3450 = self.fst;
                                                                                        var $3451 = $3450;
                                                                                        return $3451;
                                                                                };
                                                                            })(), (() => {
                                                                                var self = _x$23;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3452 = self.snd;
                                                                                        var $3453 = $3452;
                                                                                        return $3453;
                                                                                };
                                                                            })());
                                                                            return $3449;
                                                                        }), _vals$22);
                                                                        var $3448 = (_size$21 && _vals$23);
                                                                        var $3446 = $3448;
                                                                        break;
                                                                };
                                                                var $3444 = $3446;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $3454 = Bool$false;
                                                                var $3444 = $3454;
                                                                break;
                                                        };
                                                        var $3443 = $3444;
                                                        break;
                                                };
                                                var $3441 = $3443;
                                                break;
                                            case 'Maybe.none':
                                                var $3455 = Bool$false;
                                                var $3441 = $3455;
                                                break;
                                        };
                                        var $3439 = $3441;
                                        break;
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.effect':
                                        var $3456 = Bool$false;
                                        var $3439 = $3456;
                                        break;
                                };
                                var $3412 = $3439;
                                break;
                            case 'Litereum.Term.match':
                                var $3457 = self.name;
                                var $3458 = self.data;
                                var $3459 = self.cses;
                                var self = Litereum$get_data$(_world$2, $3458);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3461 = self.value;
                                        var _data$13 = $3461;
                                        var self = _data$13;
                                        switch (self._) {
                                            case 'Litereum.Data.new':
                                                var $3463 = self.constructors;
                                                var _size$16 = ((list_length($3459)) === (list_length($3463)));
                                                var _expr$17 = Litereum$check$(_context$1, _world$2, Litereum$Term$var$($3457), Litereum$Type$data$($3458));
                                                var _cses$18 = List$zipped_with$($3459, $3463, (_case_body$18 => _case_ctor$19 => {
                                                    var _nams$20 = List$map$(a1 => (($3457 + ".") + a1), (() => {
                                                        var self = _case_ctor$19;
                                                        switch (self._) {
                                                            case 'Litereum.Constructor.new':
                                                                var $3466 = self.field_names;
                                                                var $3467 = $3466;
                                                                return $3467;
                                                        };
                                                    })());
                                                    var self = _case_ctor$19;
                                                    switch (self._) {
                                                        case 'Litereum.Constructor.new':
                                                            var $3468 = self.field_types;
                                                            var $3469 = $3468;
                                                            var _typs$21 = $3469;
                                                            break;
                                                    };
                                                    var _ctx2$22 = Litereum$extend$(_context$1, _nams$20, _typs$21);
                                                    var $3465 = Litereum$check$(_ctx2$22, _world$2, _case_body$18, _type$4);
                                                    return $3465;
                                                }));
                                                var $3464 = (_size$16 && List$and$(_cses$18));
                                                var $3462 = $3464;
                                                break;
                                        };
                                        var $3460 = $3462;
                                        break;
                                    case 'Maybe.none':
                                        var $3470 = Bool$false;
                                        var $3460 = $3470;
                                        break;
                                };
                                var $3412 = $3460;
                                break;
                            case 'Litereum.Term.compare':
                                var $3471 = self.val0;
                                var $3472 = self.iflt;
                                var $3473 = self.ifeq;
                                var $3474 = self.ifgt;
                                var _val0$14 = Litereum$check$(_context$1, _world$2, $3471, Litereum$Type$word);
                                var _val1$15 = Litereum$check$(_context$1, _world$2, $3471, Litereum$Type$word);
                                var _iflt$16 = Litereum$check$(_context$1, _world$2, $3472, _type$4);
                                var _ifeq$17 = Litereum$check$(_context$1, _world$2, $3473, _type$4);
                                var _ifgt$18 = Litereum$check$(_context$1, _world$2, $3474, _type$4);
                                var $3475 = (_val0$14 && (_val1$15 && (_iflt$16 && (_ifeq$17 && _ifgt$18))));
                                var $3412 = $3475;
                                break;
                            case 'Litereum.Term.operate':
                                var $3476 = self.val0;
                                var $3477 = self.val1;
                                var _val0$12 = Litereum$check$(_context$1, _world$2, $3476, Litereum$Type$word);
                                var _val1$13 = Litereum$check$(_context$1, _world$2, $3477, Litereum$Type$word);
                                var $3478 = (_val0$12 && _val1$13);
                                var $3412 = $3478;
                                break;
                            case 'Litereum.Term.store':
                                var $3479 = self.bond;
                                var $3480 = self.main;
                                var $3481 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3483 = Bool$false;
                                        var $3482 = $3483;
                                        break;
                                    case 'Litereum.Type.effect':
                                        var self = Litereum$get_bond$(_world$2, $3479);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3485 = self.value;
                                                var _bond$14 = $3485;
                                                var self = _bond$14;
                                                switch (self._) {
                                                    case 'Litereum.Bond.new':
                                                        var $3487 = self.input_names;
                                                        var $3488 = self.input_types;
                                                        var $3489 = self.output_type;
                                                        var _ctx2$21 = Litereum$extend$(_context$1, $3487, $3488);
                                                        var _main$22 = Litereum$check$(_ctx2$21, _world$2, $3480, $3489);
                                                        var _body$23 = Litereum$check$(_context$1, _world$2, $3481, _type$4);
                                                        var $3490 = (_main$22 && _body$23);
                                                        var $3486 = $3490;
                                                        break;
                                                };
                                                var $3484 = $3486;
                                                break;
                                            case 'Maybe.none':
                                                var $3491 = Bool$false;
                                                var $3484 = $3491;
                                                break;
                                        };
                                        var $3482 = $3484;
                                        break;
                                };
                                var $3412 = $3482;
                                break;
                            case 'Litereum.Term.bind':
                                var $3492 = self.name;
                                var $3493 = self.type;
                                var $3494 = self.expr;
                                var $3495 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3497 = Bool$false;
                                        var $3496 = $3497;
                                        break;
                                    case 'Litereum.Type.effect':
                                        var _expr$14 = Litereum$check$(_context$1, _world$2, $3494, Litereum$Type$effect$($3493));
                                        var _ctx2$15 = Map$set$($3492, $3493, _context$1);
                                        var _body$16 = Litereum$check$(_ctx2$15, _world$2, $3495, _type$4);
                                        var $3498 = (_expr$14 && _body$16);
                                        var $3496 = $3498;
                                        break;
                                };
                                var $3412 = $3496;
                                break;
                            case 'Litereum.Term.return':
                                var $3499 = self.expr;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.effect':
                                        var $3501 = self.rety;
                                        var $3502 = Litereum$check$(_context$1, _world$2, $3499, $3501);
                                        var $3500 = $3502;
                                        break;
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3503 = Bool$false;
                                        var $3500 = $3503;
                                        break;
                                };
                                var $3412 = $3500;
                                break;
                            case 'Litereum.Term.word':
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                        var $3505 = Bool$true;
                                        var $3504 = $3505;
                                        break;
                                    case 'Litereum.Type.data':
                                    case 'Litereum.Type.effect':
                                        var $3506 = Bool$false;
                                        var $3504 = $3506;
                                        break;
                                };
                                var $3412 = $3504;
                                break;
                        };
                        var $3411 = $3412;
                        break;
                };
                var $3410 = $3411;
                break;
            case 'BBT.bin':
                var self = _world$2;
                switch (self._) {
                    case 'Litereum.World.new':
                        var self = _term$3;
                        switch (self._) {
                            case 'Litereum.Term.var':
                                var $3509 = self.name;
                                var self = Map$get$($3509, _context$1);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3511 = self.value;
                                        var $3512 = Litereum$equal$($3511, _type$4);
                                        var $3510 = $3512;
                                        break;
                                    case 'Maybe.none':
                                        var $3513 = Bool$false;
                                        var $3510 = $3513;
                                        break;
                                };
                                var $3508 = $3510;
                                break;
                            case 'Litereum.Term.call':
                                var $3514 = self.bond;
                                var $3515 = self.args;
                                var self = Litereum$get_bond$(_world$2, $3514);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3517 = self.value;
                                        var _bond$17 = $3517;
                                        var self = _bond$17;
                                        switch (self._) {
                                            case 'Litereum.Bond.new':
                                                var $3519 = self.input_types;
                                                var $3520 = self.output_type;
                                                var _otyp$24 = Litereum$equal$($3520, _type$4);
                                                var _args$25 = List$zip$($3515, $3519);
                                                var _args$26 = List$all$((_x$26 => {
                                                    var $3522 = Litereum$check$(_context$1, _world$2, (() => {
                                                        var self = _x$26;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3523 = self.fst;
                                                                var $3524 = $3523;
                                                                return $3524;
                                                        };
                                                    })(), (() => {
                                                        var self = _x$26;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3525 = self.snd;
                                                                var $3526 = $3525;
                                                                return $3526;
                                                        };
                                                    })());
                                                    return $3522;
                                                }), _args$25);
                                                var $3521 = (_otyp$24 && _args$26);
                                                var $3518 = $3521;
                                                break;
                                        };
                                        var $3516 = $3518;
                                        break;
                                    case 'Maybe.none':
                                        var $3527 = Bool$false;
                                        var $3516 = $3527;
                                        break;
                                };
                                var $3508 = $3516;
                                break;
                            case 'Litereum.Term.let':
                                var $3528 = self.name;
                                var $3529 = self.type;
                                var $3530 = self.expr;
                                var $3531 = self.body;
                                var _expr$18 = Litereum$check$(_context$1, _world$2, $3530, $3529);
                                var _ctx2$19 = Map$set$($3528, $3529, _context$1);
                                var _body$20 = Litereum$check$(_ctx2$19, _world$2, $3531, _type$4);
                                var $3532 = (_expr$18 && _body$20);
                                var $3508 = $3532;
                                break;
                            case 'Litereum.Term.create':
                                var $3533 = self.ctor;
                                var $3534 = self.vals;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.data':
                                        var $3536 = self.name;
                                        var self = Litereum$get_data$(_world$2, $3536);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3538 = self.value;
                                                var _data$18 = $3538;
                                                var self = _data$18;
                                                switch (self._) {
                                                    case 'Litereum.Data.new':
                                                        var self = Litereum$get_constructor_value$(_data$18, $3533);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $3541 = self.value;
                                                                var _ctor$22 = $3541;
                                                                var self = _ctor$22;
                                                                switch (self._) {
                                                                    case 'Litereum.Constructor.new':
                                                                        var $3543 = self.field_types;
                                                                        var _size$26 = ((list_length($3534)) === (list_length($3543)));
                                                                        var _vals$27 = List$zip$($3534, $3543);
                                                                        var _vals$28 = List$all$((_x$28 => {
                                                                            var $3545 = Litereum$check$(_context$1, _world$2, (() => {
                                                                                var self = _x$28;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3546 = self.fst;
                                                                                        var $3547 = $3546;
                                                                                        return $3547;
                                                                                };
                                                                            })(), (() => {
                                                                                var self = _x$28;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3548 = self.snd;
                                                                                        var $3549 = $3548;
                                                                                        return $3549;
                                                                                };
                                                                            })());
                                                                            return $3545;
                                                                        }), _vals$27);
                                                                        var $3544 = (_size$26 && _vals$28);
                                                                        var $3542 = $3544;
                                                                        break;
                                                                };
                                                                var $3540 = $3542;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $3550 = Bool$false;
                                                                var $3540 = $3550;
                                                                break;
                                                        };
                                                        var $3539 = $3540;
                                                        break;
                                                };
                                                var $3537 = $3539;
                                                break;
                                            case 'Maybe.none':
                                                var $3551 = Bool$false;
                                                var $3537 = $3551;
                                                break;
                                        };
                                        var $3535 = $3537;
                                        break;
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.effect':
                                        var $3552 = Bool$false;
                                        var $3535 = $3552;
                                        break;
                                };
                                var $3508 = $3535;
                                break;
                            case 'Litereum.Term.match':
                                var $3553 = self.name;
                                var $3554 = self.data;
                                var $3555 = self.cses;
                                var self = Litereum$get_data$(_world$2, $3554);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3557 = self.value;
                                        var _data$18 = $3557;
                                        var self = _data$18;
                                        switch (self._) {
                                            case 'Litereum.Data.new':
                                                var $3559 = self.constructors;
                                                var _size$21 = ((list_length($3555)) === (list_length($3559)));
                                                var _expr$22 = Litereum$check$(_context$1, _world$2, Litereum$Term$var$($3553), Litereum$Type$data$($3554));
                                                var _cses$23 = List$zipped_with$($3555, $3559, (_case_body$23 => _case_ctor$24 => {
                                                    var _nams$25 = List$map$(a1 => (($3553 + ".") + a1), (() => {
                                                        var self = _case_ctor$24;
                                                        switch (self._) {
                                                            case 'Litereum.Constructor.new':
                                                                var $3562 = self.field_names;
                                                                var $3563 = $3562;
                                                                return $3563;
                                                        };
                                                    })());
                                                    var self = _case_ctor$24;
                                                    switch (self._) {
                                                        case 'Litereum.Constructor.new':
                                                            var $3564 = self.field_types;
                                                            var $3565 = $3564;
                                                            var _typs$26 = $3565;
                                                            break;
                                                    };
                                                    var _ctx2$27 = Litereum$extend$(_context$1, _nams$25, _typs$26);
                                                    var $3561 = Litereum$check$(_ctx2$27, _world$2, _case_body$23, _type$4);
                                                    return $3561;
                                                }));
                                                var $3560 = (_size$21 && List$and$(_cses$23));
                                                var $3558 = $3560;
                                                break;
                                        };
                                        var $3556 = $3558;
                                        break;
                                    case 'Maybe.none':
                                        var $3566 = Bool$false;
                                        var $3556 = $3566;
                                        break;
                                };
                                var $3508 = $3556;
                                break;
                            case 'Litereum.Term.compare':
                                var $3567 = self.val0;
                                var $3568 = self.iflt;
                                var $3569 = self.ifeq;
                                var $3570 = self.ifgt;
                                var _val0$19 = Litereum$check$(_context$1, _world$2, $3567, Litereum$Type$word);
                                var _val1$20 = Litereum$check$(_context$1, _world$2, $3567, Litereum$Type$word);
                                var _iflt$21 = Litereum$check$(_context$1, _world$2, $3568, _type$4);
                                var _ifeq$22 = Litereum$check$(_context$1, _world$2, $3569, _type$4);
                                var _ifgt$23 = Litereum$check$(_context$1, _world$2, $3570, _type$4);
                                var $3571 = (_val0$19 && (_val1$20 && (_iflt$21 && (_ifeq$22 && _ifgt$23))));
                                var $3508 = $3571;
                                break;
                            case 'Litereum.Term.operate':
                                var $3572 = self.val0;
                                var $3573 = self.val1;
                                var _val0$17 = Litereum$check$(_context$1, _world$2, $3572, Litereum$Type$word);
                                var _val1$18 = Litereum$check$(_context$1, _world$2, $3573, Litereum$Type$word);
                                var $3574 = (_val0$17 && _val1$18);
                                var $3508 = $3574;
                                break;
                            case 'Litereum.Term.store':
                                var $3575 = self.bond;
                                var $3576 = self.main;
                                var $3577 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3579 = Bool$false;
                                        var $3578 = $3579;
                                        break;
                                    case 'Litereum.Type.effect':
                                        var self = Litereum$get_bond$(_world$2, $3575);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3581 = self.value;
                                                var _bond$19 = $3581;
                                                var self = _bond$19;
                                                switch (self._) {
                                                    case 'Litereum.Bond.new':
                                                        var $3583 = self.input_names;
                                                        var $3584 = self.input_types;
                                                        var $3585 = self.output_type;
                                                        var _ctx2$26 = Litereum$extend$(_context$1, $3583, $3584);
                                                        var _main$27 = Litereum$check$(_ctx2$26, _world$2, $3576, $3585);
                                                        var _body$28 = Litereum$check$(_context$1, _world$2, $3577, _type$4);
                                                        var $3586 = (_main$27 && _body$28);
                                                        var $3582 = $3586;
                                                        break;
                                                };
                                                var $3580 = $3582;
                                                break;
                                            case 'Maybe.none':
                                                var $3587 = Bool$false;
                                                var $3580 = $3587;
                                                break;
                                        };
                                        var $3578 = $3580;
                                        break;
                                };
                                var $3508 = $3578;
                                break;
                            case 'Litereum.Term.bind':
                                var $3588 = self.name;
                                var $3589 = self.type;
                                var $3590 = self.expr;
                                var $3591 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3593 = Bool$false;
                                        var $3592 = $3593;
                                        break;
                                    case 'Litereum.Type.effect':
                                        var _expr$19 = Litereum$check$(_context$1, _world$2, $3590, Litereum$Type$effect$($3589));
                                        var _ctx2$20 = Map$set$($3588, $3589, _context$1);
                                        var _body$21 = Litereum$check$(_ctx2$20, _world$2, $3591, _type$4);
                                        var $3594 = (_expr$19 && _body$21);
                                        var $3592 = $3594;
                                        break;
                                };
                                var $3508 = $3592;
                                break;
                            case 'Litereum.Term.return':
                                var $3595 = self.expr;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.effect':
                                        var $3597 = self.rety;
                                        var $3598 = Litereum$check$(_context$1, _world$2, $3595, $3597);
                                        var $3596 = $3598;
                                        break;
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3599 = Bool$false;
                                        var $3596 = $3599;
                                        break;
                                };
                                var $3508 = $3596;
                                break;
                            case 'Litereum.Term.word':
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                        var $3601 = Bool$true;
                                        var $3600 = $3601;
                                        break;
                                    case 'Litereum.Type.data':
                                    case 'Litereum.Type.effect':
                                        var $3602 = Bool$false;
                                        var $3600 = $3602;
                                        break;
                                };
                                var $3508 = $3600;
                                break;
                        };
                        var $3507 = $3508;
                        break;
                };
                var $3410 = $3507;
                break;
        };
        return $3410;
    };
    const Litereum$check = x0 => x1 => x2 => x3 => Litereum$check$(x0, x1, x2, x3);

    function Litereum$sanitize$many$(_world$1, _table$2, _fresh$3, _terms$4) {
        var self = _terms$4;
        switch (self._) {
            case 'List.cons':
                var $3604 = self.head;
                var $3605 = self.tail;
                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3604);
                switch (self._) {
                    case 'Pair.new':
                        var $3607 = self.fst;
                        var $3608 = self.snd;
                        var self = Litereum$sanitize$many$(_world$1, _table$2, $3607, $3605);
                        switch (self._) {
                            case 'Pair.new':
                                var $3610 = self.fst;
                                var $3611 = self.snd;
                                var $3612 = Pair$new$($3610, List$cons$($3608, $3611));
                                var $3609 = $3612;
                                break;
                        };
                        var $3606 = $3609;
                        break;
                };
                var $3603 = $3606;
                break;
            case 'List.nil':
                var $3613 = Pair$new$(_fresh$3, List$nil);
                var $3603 = $3613;
                break;
        };
        return $3603;
    };
    const Litereum$sanitize$many = x0 => x1 => x2 => x3 => Litereum$sanitize$many$(x0, x1, x2, x3);

    function Triple$new$(_fst$4, _snd$5, _trd$6) {
        var $3614 = ({
            _: 'Triple.new',
            'fst': _fst$4,
            'snd': _snd$5,
            'trd': _trd$6
        });
        return $3614;
    };
    const Triple$new = x0 => x1 => x2 => Triple$new$(x0, x1, x2);

    function Litereum$rename$(_table$1, _fresh$2, _old_name$3) {
        var _new_name$4 = ("$" + Nat$show$(_fresh$2));
        var _table$5 = Map$set$(_old_name$3, _new_name$4, _table$1);
        var _fresh$6 = Nat$succ$(_fresh$2);
        var $3615 = Triple$new$(_table$5, _fresh$6, _new_name$4);
        return $3615;
    };
    const Litereum$rename = x0 => x1 => x2 => Litereum$rename$(x0, x1, x2);
    const List$for = a0 => a1 => a2 => (list_for(a0)(a1)(a2));

    function Litereum$sanitize$cases$(_world$1, _table$2, _fresh$3, _old_name$4, _new_name$5, _ctrs$6, _cses$7) {
        var self = _ctrs$6;
        switch (self._) {
            case 'List.cons':
                var $3617 = self.head;
                var $3618 = self.tail;
                var self = _cses$7;
                switch (self._) {
                    case 'List.cons':
                        var $3620 = self.head;
                        var $3621 = self.tail;
                        var _new_table$12 = _table$2;
                        var _new_table$13 = (() => {
                            var $3624 = _new_table$12;
                            var self = $3617;
                            switch (self._) {
                                case 'Litereum.Constructor.new':
                                    var $3626 = self.field_names;
                                    var $3627 = $3626;
                                    var $3625 = $3627;
                                    break;
                            };
                            let _new_table$14 = $3624;
                            let _field$13;
                            while ($3625._ === 'List.cons') {
                                _field$13 = $3625.head;
                                var $3624 = Map$set$((_old_name$4 + ("." + _field$13)), (_new_name$5 + ("." + _field$13)), _new_table$14);
                                _new_table$14 = $3624;
                                $3625 = $3625.tail;
                            }
                            return _new_table$14;
                        })();
                        var self = Litereum$sanitize$(_world$1, _new_table$13, _fresh$3, $3620);
                        switch (self._) {
                            case 'Pair.new':
                                var $3628 = self.fst;
                                var $3629 = self.snd;
                                var self = Litereum$sanitize$cases$(_world$1, _table$2, $3628, _old_name$4, _new_name$5, $3618, $3621);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3631 = self.fst;
                                        var $3632 = self.snd;
                                        var $3633 = Pair$new$($3631, List$cons$($3629, $3632));
                                        var $3630 = $3633;
                                        break;
                                };
                                var $3622 = $3630;
                                break;
                        };
                        var $3619 = $3622;
                        break;
                    case 'List.nil':
                        var $3634 = Pair$new$(_fresh$3, List$nil);
                        var $3619 = $3634;
                        break;
                };
                var $3616 = $3619;
                break;
            case 'List.nil':
                var self = _cses$7;
                switch (self._) {
                    case 'List.nil':
                    case 'List.cons':
                        var $3636 = Pair$new$(_fresh$3, List$nil);
                        var $3635 = $3636;
                        break;
                };
                var $3616 = $3635;
                break;
        };
        return $3616;
    };
    const Litereum$sanitize$cases = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Litereum$sanitize$cases$(x0, x1, x2, x3, x4, x5, x6);

    function Triple$(_A$1, _B$2, _C$3) {
        var $3637 = null;
        return $3637;
    };
    const Triple = x0 => x1 => x2 => Triple$(x0, x1, x2);

    function Litereum$rename$many$(_table$1, _fresh$2, _names$3) {
        var self = _names$3;
        switch (self._) {
            case 'List.cons':
                var $3639 = self.head;
                var $3640 = self.tail;
                var self = Litereum$rename$(_table$1, _fresh$2, $3639);
                switch (self._) {
                    case 'Triple.new':
                        var $3642 = self.fst;
                        var $3643 = self.snd;
                        var $3644 = self.trd;
                        var self = Litereum$rename$many$($3642, $3643, $3640);
                        switch (self._) {
                            case 'Triple.new':
                                var $3646 = self.fst;
                                var $3647 = self.snd;
                                var $3648 = self.trd;
                                var $3649 = Triple$new$($3646, $3647, List$cons$($3644, $3648));
                                var $3645 = $3649;
                                break;
                        };
                        var $3641 = $3645;
                        break;
                };
                var $3638 = $3641;
                break;
            case 'List.nil':
                var $3650 = Triple$new$(_table$1, _fresh$2, List$nil);
                var $3638 = $3650;
                break;
        };
        return $3638;
    };
    const Litereum$rename$many = x0 => x1 => x2 => Litereum$rename$many$(x0, x1, x2);

    function Litereum$sanitize$(_world$1, _table$2, _fresh$3, _term$4) {
        var self = _term$4;
        switch (self._) {
            case 'Litereum.Term.var':
                var $3652 = self.name;
                var _term$6 = Litereum$Term$var$(Maybe$default$(Map$get$($3652, _table$2), $3652));
                var $3653 = Pair$new$(_fresh$3, _term$6);
                var $3651 = $3653;
                break;
            case 'Litereum.Term.call':
                var $3654 = self.bond;
                var $3655 = self.args;
                var self = Litereum$sanitize$many$(_world$1, _table$2, _fresh$3, $3655);
                switch (self._) {
                    case 'Pair.new':
                        var $3657 = self.fst;
                        var $3658 = self.snd;
                        var $3659 = Pair$new$($3657, Litereum$Term$call$($3654, $3658));
                        var $3656 = $3659;
                        break;
                };
                var $3651 = $3656;
                break;
            case 'Litereum.Term.let':
                var $3660 = self.name;
                var $3661 = self.type;
                var $3662 = self.expr;
                var $3663 = self.body;
                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3662);
                switch (self._) {
                    case 'Pair.new':
                        var $3665 = self.fst;
                        var $3666 = self.snd;
                        var self = Litereum$rename$(_table$2, $3665, $3660);
                        switch (self._) {
                            case 'Triple.new':
                                var $3668 = self.fst;
                                var $3669 = self.snd;
                                var $3670 = self.trd;
                                var self = Litereum$sanitize$(_world$1, $3668, $3669, $3663);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3672 = self.fst;
                                        var $3673 = self.snd;
                                        var $3674 = Pair$new$($3672, Litereum$Term$let$($3670, $3661, $3666, $3673));
                                        var $3671 = $3674;
                                        break;
                                };
                                var $3667 = $3671;
                                break;
                        };
                        var $3664 = $3667;
                        break;
                };
                var $3651 = $3664;
                break;
            case 'Litereum.Term.create':
                var $3675 = self.ctor;
                var $3676 = self.vals;
                var self = Litereum$sanitize$many$(_world$1, _table$2, _fresh$3, $3676);
                switch (self._) {
                    case 'Pair.new':
                        var $3678 = self.fst;
                        var $3679 = self.snd;
                        var $3680 = Pair$new$($3678, Litereum$Term$create$($3675, $3679));
                        var $3677 = $3680;
                        break;
                };
                var $3651 = $3677;
                break;
            case 'Litereum.Term.match':
                var $3681 = self.name;
                var $3682 = self.data;
                var $3683 = self.cses;
                var _ctrs$8 = Maybe$default$(Litereum$get_constructors$(_world$1, $3682), List$nil);
                var _old_name$9 = $3681;
                var _new_name$10 = Maybe$default$(Map$get$($3681, _table$2), $3681);
                var self = Litereum$sanitize$cases$(_world$1, _table$2, _fresh$3, _old_name$9, _new_name$10, _ctrs$8, $3683);
                switch (self._) {
                    case 'Pair.new':
                        var $3685 = self.fst;
                        var $3686 = self.snd;
                        var $3687 = Pair$new$($3685, Litereum$Term$match$(_new_name$10, $3682, $3686));
                        var $3684 = $3687;
                        break;
                };
                var $3651 = $3684;
                break;
            case 'Litereum.Term.word':
                var $3688 = self.numb;
                var $3689 = Pair$new$(_fresh$3, Litereum$Term$word$($3688));
                var $3651 = $3689;
                break;
            case 'Litereum.Term.compare':
                var $3690 = self.val0;
                var $3691 = self.val1;
                var $3692 = self.iflt;
                var $3693 = self.ifeq;
                var $3694 = self.ifgt;
                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3690);
                switch (self._) {
                    case 'Pair.new':
                        var $3696 = self.fst;
                        var $3697 = self.snd;
                        var self = Litereum$sanitize$(_world$1, _table$2, $3696, $3691);
                        switch (self._) {
                            case 'Pair.new':
                                var $3699 = self.fst;
                                var $3700 = self.snd;
                                var self = Litereum$sanitize$(_world$1, _table$2, $3699, $3692);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3702 = self.fst;
                                        var $3703 = self.snd;
                                        var self = Litereum$sanitize$(_world$1, _table$2, $3702, $3693);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3705 = self.fst;
                                                var $3706 = self.snd;
                                                var self = Litereum$sanitize$(_world$1, _table$2, $3705, $3694);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3708 = self.fst;
                                                        var $3709 = self.snd;
                                                        var $3710 = Pair$new$($3708, Litereum$Term$compare$($3697, $3700, $3703, $3706, $3709));
                                                        var $3707 = $3710;
                                                        break;
                                                };
                                                var $3704 = $3707;
                                                break;
                                        };
                                        var $3701 = $3704;
                                        break;
                                };
                                var $3698 = $3701;
                                break;
                        };
                        var $3695 = $3698;
                        break;
                };
                var $3651 = $3695;
                break;
            case 'Litereum.Term.operate':
                var $3711 = self.oper;
                var $3712 = self.val0;
                var $3713 = self.val1;
                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3712);
                switch (self._) {
                    case 'Pair.new':
                        var $3715 = self.fst;
                        var $3716 = self.snd;
                        var self = Litereum$sanitize$(_world$1, _table$2, $3715, $3713);
                        switch (self._) {
                            case 'Pair.new':
                                var $3718 = self.fst;
                                var $3719 = self.snd;
                                var $3720 = Pair$new$($3718, Litereum$Term$operate$($3711, $3716, $3719));
                                var $3717 = $3720;
                                break;
                        };
                        var $3714 = $3717;
                        break;
                };
                var $3651 = $3714;
                break;
            case 'Litereum.Term.store':
                var $3721 = self.bond;
                var $3722 = self.main;
                var $3723 = self.body;
                var self = Litereum$get_bond$(_world$1, $3721);
                switch (self._) {
                    case 'Maybe.some':
                        var $3725 = self.value;
                        var _bond$9 = $3725;
                        var self = _bond$9;
                        switch (self._) {
                            case 'Litereum.Bond.new':
                                var $3727 = self.input_names;
                                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3723);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3729 = self.fst;
                                        var $3730 = self.snd;
                                        var self = Litereum$rename$many$(_table$2, $3729, $3727);
                                        switch (self._) {
                                            case 'Triple.new':
                                                var $3732 = self.fst;
                                                var $3733 = self.snd;
                                                var self = Litereum$sanitize$(_world$1, $3732, $3733, $3722);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3735 = self.fst;
                                                        var $3736 = self.snd;
                                                        var $3737 = Pair$new$($3735, Litereum$Term$store$($3721, $3736, $3730));
                                                        var $3734 = $3737;
                                                        break;
                                                };
                                                var $3731 = $3734;
                                                break;
                                        };
                                        var $3728 = $3731;
                                        break;
                                };
                                var $3726 = $3728;
                                break;
                        };
                        var $3724 = $3726;
                        break;
                    case 'Maybe.none':
                        var $3738 = Pair$new$(_fresh$3, _term$4);
                        var $3724 = $3738;
                        break;
                };
                var $3651 = $3724;
                break;
            case 'Litereum.Term.bind':
                var $3739 = self.name;
                var $3740 = self.type;
                var $3741 = self.expr;
                var $3742 = self.body;
                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3741);
                switch (self._) {
                    case 'Pair.new':
                        var $3744 = self.fst;
                        var $3745 = self.snd;
                        var self = Litereum$rename$(_table$2, $3744, $3739);
                        switch (self._) {
                            case 'Triple.new':
                                var $3747 = self.fst;
                                var $3748 = self.snd;
                                var $3749 = self.trd;
                                var self = Litereum$sanitize$(_world$1, $3747, $3748, $3742);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3751 = self.fst;
                                        var $3752 = self.snd;
                                        var $3753 = Pair$new$($3751, Litereum$Term$bind$($3749, $3740, $3745, $3752));
                                        var $3750 = $3753;
                                        break;
                                };
                                var $3746 = $3750;
                                break;
                        };
                        var $3743 = $3746;
                        break;
                };
                var $3651 = $3743;
                break;
            case 'Litereum.Term.return':
                var $3754 = self.expr;
                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3754);
                switch (self._) {
                    case 'Pair.new':
                        var $3756 = self.fst;
                        var $3757 = self.snd;
                        var $3758 = Pair$new$($3756, Litereum$Term$return$($3757));
                        var $3755 = $3758;
                        break;
                };
                var $3651 = $3755;
                break;
        };
        return $3651;
    };
    const Litereum$sanitize = x0 => x1 => x2 => x3 => Litereum$sanitize$(x0, x1, x2, x3);

    function Litereum$Runtime$(_A$1) {
        var $3759 = null;
        return $3759;
    };
    const Litereum$Runtime = x0 => Litereum$Runtime$(x0);

    function Litereum$Runtime$new$(_world$2, _subst$3, _fresh$4, _gas$5, _term$6) {
        var $3760 = ({
            _: 'Litereum.Runtime.new',
            'world': _world$2,
            'subst': _subst$3,
            'fresh': _fresh$4,
            'gas': _gas$5,
            'term': _term$6
        });
        return $3760;
    };
    const Litereum$Runtime$new = x0 => x1 => x2 => x3 => x4 => Litereum$Runtime$new$(x0, x1, x2, x3, x4);

    function Litereum$get_constructor_index$(_data$1, _name$2) {
        var $3761 = Maybe$mapped$(List$ifind$((_i$3 => _ctr$4 => {
            var $3762 = ((() => {
                var self = _ctr$4;
                switch (self._) {
                    case 'Litereum.Constructor.new':
                        var $3763 = self.name;
                        var $3764 = $3763;
                        return $3764;
                };
            })() === _name$2);
            return $3762;
        }), (() => {
            var self = _data$1;
            switch (self._) {
                case 'Litereum.Data.new':
                    var $3765 = self.constructors;
                    var $3766 = $3765;
                    return $3766;
            };
        })()), (_x$3 => {
            var self = _x$3;
            switch (self._) {
                case 'Pair.new':
                    var $3768 = self.fst;
                    var $3769 = $3768;
                    var $3767 = $3769;
                    break;
            };
            return $3767;
        }));
        return $3761;
    };
    const Litereum$get_constructor_index = x0 => x1 => Litereum$get_constructor_index$(x0, x1);
    const U64$ltn = a0 => a1 => (a0 < a1);
    const U64$eql = a0 => a1 => (a0 === a1);

    function U64$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $3771 = Cmp$ltn;
            var $3770 = $3771;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $3773 = Cmp$eql;
                var $3772 = $3773;
            } else {
                var $3774 = Cmp$gtn;
                var $3772 = $3774;
            };
            var $3770 = $3772;
        };
        return $3770;
    };
    const U64$cmp = x0 => x1 => U64$cmp$(x0, x1);
    const U64$add = a0 => a1 => ((a0 + a1) & 0xFFFFFFFFFFFFFFFFn);
    const U64$sub = a0 => a1 => ((a0 - a1) & 0xFFFFFFFFFFFFFFFFn);
    const U64$mul = a0 => a1 => ((a0 * a1) & 0xFFFFFFFFFFFFFFFFn);

    function Word$bit_length$go$(_word$2, _c$3, _n$4) {
        var Word$bit_length$go$ = (_word$2, _c$3, _n$4) => ({
            ctr: 'TCO',
            arg: [_word$2, _c$3, _n$4]
        });
        var Word$bit_length$go = _word$2 => _c$3 => _n$4 => Word$bit_length$go$(_word$2, _c$3, _n$4);
        var arg = [_word$2, _c$3, _n$4];
        while (true) {
            let [_word$2, _c$3, _n$4] = arg;
            var R = (() => {
                var self = _word$2;
                switch (self._) {
                    case 'Word.o':
                        var $3775 = self.pred;
                        var $3776 = Word$bit_length$go$($3775, Nat$succ$(_c$3), _n$4);
                        return $3776;
                    case 'Word.i':
                        var $3777 = self.pred;
                        var $3778 = Word$bit_length$go$($3777, Nat$succ$(_c$3), Nat$succ$(_c$3));
                        return $3778;
                    case 'Word.e':
                        var $3779 = _n$4;
                        return $3779;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$bit_length$go = x0 => x1 => x2 => Word$bit_length$go$(x0, x1, x2);

    function Word$bit_length$(_word$2) {
        var $3780 = Word$bit_length$go$(_word$2, 0n, 0n);
        return $3780;
    };
    const Word$bit_length = x0 => Word$bit_length$(x0);

    function Cmp$as_gte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $3782 = Bool$false;
                var $3781 = $3782;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $3783 = Bool$true;
                var $3781 = $3783;
                break;
        };
        return $3781;
    };
    const Cmp$as_gte = x0 => Cmp$as_gte$(x0);

    function Word$gte$(_a$2, _b$3) {
        var $3784 = Cmp$as_gte$(Word$cmp$(_a$2, _b$3));
        return $3784;
    };
    const Word$gte = x0 => x1 => Word$gte$(x0, x1);

    function Word$or$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $3786 = self.pred;
                var $3787 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3789 = self.pred;
                            var $3790 = (_a$pred$9 => {
                                var $3791 = Word$o$(Word$or$(_a$pred$9, $3789));
                                return $3791;
                            });
                            var $3788 = $3790;
                            break;
                        case 'Word.i':
                            var $3792 = self.pred;
                            var $3793 = (_a$pred$9 => {
                                var $3794 = Word$i$(Word$or$(_a$pred$9, $3792));
                                return $3794;
                            });
                            var $3788 = $3793;
                            break;
                        case 'Word.e':
                            var $3795 = (_a$pred$7 => {
                                var $3796 = Word$e;
                                return $3796;
                            });
                            var $3788 = $3795;
                            break;
                    };
                    var $3788 = $3788($3786);
                    return $3788;
                });
                var $3785 = $3787;
                break;
            case 'Word.i':
                var $3797 = self.pred;
                var $3798 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3800 = self.pred;
                            var $3801 = (_a$pred$9 => {
                                var $3802 = Word$i$(Word$or$(_a$pred$9, $3800));
                                return $3802;
                            });
                            var $3799 = $3801;
                            break;
                        case 'Word.i':
                            var $3803 = self.pred;
                            var $3804 = (_a$pred$9 => {
                                var $3805 = Word$i$(Word$or$(_a$pred$9, $3803));
                                return $3805;
                            });
                            var $3799 = $3804;
                            break;
                        case 'Word.e':
                            var $3806 = (_a$pred$7 => {
                                var $3807 = Word$e;
                                return $3807;
                            });
                            var $3799 = $3806;
                            break;
                    };
                    var $3799 = $3799($3797);
                    return $3799;
                });
                var $3785 = $3798;
                break;
            case 'Word.e':
                var $3808 = (_b$4 => {
                    var $3809 = Word$e;
                    return $3809;
                });
                var $3785 = $3808;
                break;
        };
        var $3785 = $3785(_b$3);
        return $3785;
    };
    const Word$or = x0 => x1 => Word$or$(x0, x1);

    function Word$shift_right$one$go$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3811 = self.pred;
                var $3812 = Word$o$(Word$shift_right$one$go$($3811));
                var $3810 = $3812;
                break;
            case 'Word.i':
                var $3813 = self.pred;
                var $3814 = Word$i$(Word$shift_right$one$go$($3813));
                var $3810 = $3814;
                break;
            case 'Word.e':
                var $3815 = Word$o$(Word$e);
                var $3810 = $3815;
                break;
        };
        return $3810;
    };
    const Word$shift_right$one$go = x0 => Word$shift_right$one$go$(x0);

    function Word$shift_right$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3817 = self.pred;
                var $3818 = Word$shift_right$one$go$($3817);
                var $3816 = $3818;
                break;
            case 'Word.i':
                var $3819 = self.pred;
                var $3820 = Word$shift_right$one$go$($3819);
                var $3816 = $3820;
                break;
            case 'Word.e':
                var $3821 = Word$e;
                var $3816 = $3821;
                break;
        };
        return $3816;
    };
    const Word$shift_right$one = x0 => Word$shift_right$one$(x0);

    function Word$shift_right$(_value$2, _n$3) {
        var Word$shift_right$ = (_value$2, _n$3) => ({
            ctr: 'TCO',
            arg: [_value$2, _n$3]
        });
        var Word$shift_right = _value$2 => _n$3 => Word$shift_right$(_value$2, _n$3);
        var arg = [_value$2, _n$3];
        while (true) {
            let [_value$2, _n$3] = arg;
            var R = (() => {
                var self = _n$3;
                if (self === 0n) {
                    var $3822 = _value$2;
                    return $3822;
                } else {
                    var $3823 = (self - 1n);
                    var $3824 = Word$shift_right$(Word$shift_right$one$(_value$2), $3823);
                    return $3824;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_right = x0 => x1 => Word$shift_right$(x0, x1);

    function Word$div$go$(_shift$2, _sub_copy$3, _shift_copy$4, _value$5) {
        var Word$div$go$ = (_shift$2, _sub_copy$3, _shift_copy$4, _value$5) => ({
            ctr: 'TCO',
            arg: [_shift$2, _sub_copy$3, _shift_copy$4, _value$5]
        });
        var Word$div$go = _shift$2 => _sub_copy$3 => _shift_copy$4 => _value$5 => Word$div$go$(_shift$2, _sub_copy$3, _shift_copy$4, _value$5);
        var arg = [_shift$2, _sub_copy$3, _shift_copy$4, _value$5];
        while (true) {
            let [_shift$2, _sub_copy$3, _shift_copy$4, _value$5] = arg;
            var R = (() => {
                var self = Word$gte$(_sub_copy$3, _shift_copy$4);
                if (self) {
                    var _mask$6 = Word$shift_left$(Word$inc$(Word$to_zero$(_sub_copy$3)), _shift$2);
                    var $3825 = Pair$new$(Bool$true, Word$or$(_value$5, _mask$6));
                    var self = $3825;
                } else {
                    var $3826 = Pair$new$(Bool$false, _value$5);
                    var self = $3826;
                };
                switch (self._) {
                    case 'Pair.new':
                        var $3827 = self.fst;
                        var $3828 = self.snd;
                        var self = _shift$2;
                        if (self === 0n) {
                            var $3830 = $3828;
                            var $3829 = $3830;
                        } else {
                            var $3831 = (self - 1n);
                            var _new_shift_copy$9 = Word$shift_right$(_shift_copy$4, 1n);
                            var self = $3827;
                            if (self) {
                                var $3833 = Word$div$go$($3831, Word$sub$(_sub_copy$3, _shift_copy$4), _new_shift_copy$9, $3828);
                                var $3832 = $3833;
                            } else {
                                var $3834 = Word$div$go$($3831, _sub_copy$3, _new_shift_copy$9, $3828);
                                var $3832 = $3834;
                            };
                            var $3829 = $3832;
                        };
                        return $3829;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$div$go = x0 => x1 => x2 => x3 => Word$div$go$(x0, x1, x2, x3);

    function Word$div$(_a$2, _b$3) {
        var _a_bits$4 = Word$bit_length$(_a$2);
        var _b_bits$5 = Word$bit_length$(_b$3);
        var self = (_a_bits$4 < _b_bits$5);
        if (self) {
            var $3836 = Word$to_zero$(_a$2);
            var $3835 = $3836;
        } else {
            var _shift$6 = (_a_bits$4 - _b_bits$5 <= 0n ? 0n : _a_bits$4 - _b_bits$5);
            var _shift_copy$7 = Word$shift_left$(_b$3, _shift$6);
            var $3837 = Word$div$go$(_shift$6, _a$2, _shift_copy$7, Word$to_zero$(_a$2));
            var $3835 = $3837;
        };
        return $3835;
    };
    const Word$div = x0 => x1 => Word$div$(x0, x1);
    const U64$div = a0 => a1 => ((a0 / a1) & 0xFFFFFFFFFFFFFFFFn);

    function Word$mod$(_a$2, _b$3) {
        var _q$4 = Word$div$(_a$2, _b$3);
        var $3838 = Word$sub$(_a$2, Word$mul$(_b$3, _q$4));
        return $3838;
    };
    const Word$mod = x0 => x1 => Word$mod$(x0, x1);
    const U64$mod = a0 => a1 => (a0 % a1);
    const U64$or = a0 => a1 => (a0 | a1);

    function Word$and$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $3840 = self.pred;
                var $3841 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3843 = self.pred;
                            var $3844 = (_a$pred$9 => {
                                var $3845 = Word$o$(Word$and$(_a$pred$9, $3843));
                                return $3845;
                            });
                            var $3842 = $3844;
                            break;
                        case 'Word.i':
                            var $3846 = self.pred;
                            var $3847 = (_a$pred$9 => {
                                var $3848 = Word$o$(Word$and$(_a$pred$9, $3846));
                                return $3848;
                            });
                            var $3842 = $3847;
                            break;
                        case 'Word.e':
                            var $3849 = (_a$pred$7 => {
                                var $3850 = Word$e;
                                return $3850;
                            });
                            var $3842 = $3849;
                            break;
                    };
                    var $3842 = $3842($3840);
                    return $3842;
                });
                var $3839 = $3841;
                break;
            case 'Word.i':
                var $3851 = self.pred;
                var $3852 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3854 = self.pred;
                            var $3855 = (_a$pred$9 => {
                                var $3856 = Word$o$(Word$and$(_a$pred$9, $3854));
                                return $3856;
                            });
                            var $3853 = $3855;
                            break;
                        case 'Word.i':
                            var $3857 = self.pred;
                            var $3858 = (_a$pred$9 => {
                                var $3859 = Word$i$(Word$and$(_a$pred$9, $3857));
                                return $3859;
                            });
                            var $3853 = $3858;
                            break;
                        case 'Word.e':
                            var $3860 = (_a$pred$7 => {
                                var $3861 = Word$e;
                                return $3861;
                            });
                            var $3853 = $3860;
                            break;
                    };
                    var $3853 = $3853($3851);
                    return $3853;
                });
                var $3839 = $3852;
                break;
            case 'Word.e':
                var $3862 = (_b$4 => {
                    var $3863 = Word$e;
                    return $3863;
                });
                var $3839 = $3862;
                break;
        };
        var $3839 = $3839(_b$3);
        return $3839;
    };
    const Word$and = x0 => x1 => Word$and$(x0, x1);
    const U64$and = a0 => a1 => (a0 & a1);

    function Word$xor$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $3865 = self.pred;
                var $3866 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3868 = self.pred;
                            var $3869 = (_a$pred$9 => {
                                var $3870 = Word$o$(Word$xor$(_a$pred$9, $3868));
                                return $3870;
                            });
                            var $3867 = $3869;
                            break;
                        case 'Word.i':
                            var $3871 = self.pred;
                            var $3872 = (_a$pred$9 => {
                                var $3873 = Word$i$(Word$xor$(_a$pred$9, $3871));
                                return $3873;
                            });
                            var $3867 = $3872;
                            break;
                        case 'Word.e':
                            var $3874 = (_a$pred$7 => {
                                var $3875 = Word$e;
                                return $3875;
                            });
                            var $3867 = $3874;
                            break;
                    };
                    var $3867 = $3867($3865);
                    return $3867;
                });
                var $3864 = $3866;
                break;
            case 'Word.i':
                var $3876 = self.pred;
                var $3877 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3879 = self.pred;
                            var $3880 = (_a$pred$9 => {
                                var $3881 = Word$i$(Word$xor$(_a$pred$9, $3879));
                                return $3881;
                            });
                            var $3878 = $3880;
                            break;
                        case 'Word.i':
                            var $3882 = self.pred;
                            var $3883 = (_a$pred$9 => {
                                var $3884 = Word$o$(Word$xor$(_a$pred$9, $3882));
                                return $3884;
                            });
                            var $3878 = $3883;
                            break;
                        case 'Word.e':
                            var $3885 = (_a$pred$7 => {
                                var $3886 = Word$e;
                                return $3886;
                            });
                            var $3878 = $3885;
                            break;
                    };
                    var $3878 = $3878($3876);
                    return $3878;
                });
                var $3864 = $3877;
                break;
            case 'Word.e':
                var $3887 = (_b$4 => {
                    var $3888 = Word$e;
                    return $3888;
                });
                var $3864 = $3887;
                break;
        };
        var $3864 = $3864(_b$3);
        return $3864;
    };
    const Word$xor = x0 => x1 => Word$xor$(x0, x1);
    const U64$xor = a0 => a1 => (a0 ^ a1);

    function Litereum$reduce$(_state$1) {
        var self = _state$1;
        switch (self._) {
            case 'Litereum.Runtime.new':
                var $3890 = self.world;
                var $3891 = self.subst;
                var $3892 = self.fresh;
                var $3893 = self.gas;
                var $3894 = self.term;
                var self = $3894;
                switch (self._) {
                    case 'Litereum.Term.var':
                        var $3896 = self.name;
                        var _term$8 = Maybe$default$(Map$get$($3896, $3891), $3894);
                        var self = Litereum$reduce$(Litereum$Runtime$new$($3890, $3891, $3892, $3893, _term$8));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $3898 = self.world;
                                var $3899 = self.subst;
                                var $3900 = self.fresh;
                                var $3901 = self.gas;
                                var $3902 = self.term;
                                var $3903 = Litereum$Runtime$new$($3898, Map$set$($3896, $3902, $3899), $3900, $3901, $3902);
                                var $3897 = $3903;
                                break;
                        };
                        var $3895 = $3897;
                        break;
                    case 'Litereum.Term.call':
                        var $3904 = self.bond;
                        var $3905 = self.args;
                        var self = Litereum$get_bond$($3890, $3904);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3907 = self.value;
                                var _bond$10 = $3907;
                                var self = _bond$10;
                                switch (self._) {
                                    case 'Litereum.Bond.new':
                                        var $3909 = self.input_names;
                                        var $3910 = self.main;
                                        var self = Litereum$rename$many$(Map$from_list$(List$nil), $3892, $3909);
                                        switch (self._) {
                                            case 'Triple.new':
                                                var $3912 = self.fst;
                                                var $3913 = self.snd;
                                                var $3914 = self.trd;
                                                var self = Litereum$sanitize$($3890, $3912, $3913, $3910);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3916 = self.fst;
                                                        var $3917 = self.snd;
                                                        var _subst$22 = Litereum$extend$($3891, $3914, $3905);
                                                        var $3918 = Litereum$reduce$(Litereum$Runtime$new$($3890, _subst$22, $3916, $3893, $3917));
                                                        var $3915 = $3918;
                                                        break;
                                                };
                                                var $3911 = $3915;
                                                break;
                                        };
                                        var $3908 = $3911;
                                        break;
                                };
                                var $3906 = $3908;
                                break;
                            case 'Maybe.none':
                                var $3919 = _state$1;
                                var $3906 = $3919;
                                break;
                        };
                        var $3895 = $3906;
                        break;
                    case 'Litereum.Term.let':
                        var $3920 = self.name;
                        var $3921 = self.expr;
                        var $3922 = self.body;
                        var $3923 = Litereum$reduce$(Litereum$Runtime$new$($3890, Map$set$($3920, $3921, $3891), $3892, $3893, $3922));
                        var $3895 = $3923;
                        break;
                    case 'Litereum.Term.match':
                        var $3924 = self.name;
                        var $3925 = self.data;
                        var $3926 = self.cses;
                        var self = Litereum$reduce$(Litereum$Runtime$new$($3890, $3891, $3892, $3893, Maybe$default$(Map$get$($3924, $3891), Litereum$Term$word$(0n))));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $3928 = self.world;
                                var $3929 = self.subst;
                                var $3930 = self.fresh;
                                var $3931 = self.gas;
                                var $3932 = self.term;
                                var self = $3932;
                                switch (self._) {
                                    case 'Litereum.Term.create':
                                        var $3934 = self.ctor;
                                        var $3935 = self.vals;
                                        var self = Litereum$get_data$($3928, $3925);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3937 = self.value;
                                                var _data$18 = $3937;
                                                var self = _data$18;
                                                switch (self._) {
                                                    case 'Litereum.Data.new':
                                                        var self = Litereum$get_constructor_value$(_data$18, $3934);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $3940 = self.value;
                                                                var _ctor$22 = $3940;
                                                                var self = _ctor$22;
                                                                switch (self._) {
                                                                    case 'Litereum.Constructor.new':
                                                                        var self = Litereum$get_constructor_index$(_data$18, $3934);
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $3943 = self.value;
                                                                                var self = List$get$($3943, $3926);
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $3945 = self.value;
                                                                                        var _nams$28 = List$map$(a1 => (($3924 + ".") + a1), (() => {
                                                                                            var self = _ctor$22;
                                                                                            switch (self._) {
                                                                                                case 'Litereum.Constructor.new':
                                                                                                    var $3947 = self.field_names;
                                                                                                    var $3948 = $3947;
                                                                                                    return $3948;
                                                                                            };
                                                                                        })());
                                                                                        var _subst$29 = Litereum$extend$($3929, _nams$28, $3935);
                                                                                        var $3946 = Litereum$reduce$(Litereum$Runtime$new$($3928, _subst$29, $3930, $3931, $3945));
                                                                                        var $3944 = $3946;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $3949 = _state$1;
                                                                                        var $3944 = $3949;
                                                                                        break;
                                                                                };
                                                                                var $3942 = $3944;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $3950 = _state$1;
                                                                                var $3942 = $3950;
                                                                                break;
                                                                        };
                                                                        var $3941 = $3942;
                                                                        break;
                                                                };
                                                                var $3939 = $3941;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $3951 = _state$1;
                                                                var $3939 = $3951;
                                                                break;
                                                        };
                                                        var $3938 = $3939;
                                                        break;
                                                };
                                                var $3936 = $3938;
                                                break;
                                            case 'Maybe.none':
                                                var $3952 = _state$1;
                                                var $3936 = $3952;
                                                break;
                                        };
                                        var $3933 = $3936;
                                        break;
                                    case 'Litereum.Term.var':
                                    case 'Litereum.Term.call':
                                    case 'Litereum.Term.let':
                                    case 'Litereum.Term.match':
                                    case 'Litereum.Term.word':
                                    case 'Litereum.Term.compare':
                                    case 'Litereum.Term.operate':
                                    case 'Litereum.Term.store':
                                    case 'Litereum.Term.bind':
                                    case 'Litereum.Term.return':
                                        var $3953 = _state$1;
                                        var $3933 = $3953;
                                        break;
                                };
                                var $3927 = $3933;
                                break;
                        };
                        var $3895 = $3927;
                        break;
                    case 'Litereum.Term.compare':
                        var $3954 = self.val0;
                        var $3955 = self.val1;
                        var $3956 = self.iflt;
                        var $3957 = self.ifeq;
                        var $3958 = self.ifgt;
                        var self = Litereum$reduce$(Litereum$Runtime$new$($3890, $3891, $3892, $3893, $3954));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $3960 = self.world;
                                var $3961 = self.subst;
                                var $3962 = self.fresh;
                                var $3963 = self.gas;
                                var $3964 = self.term;
                                var self = Litereum$reduce$(Litereum$Runtime$new$($3960, $3961, $3962, $3963, $3955));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $3966 = self.world;
                                        var $3967 = self.subst;
                                        var $3968 = self.fresh;
                                        var $3969 = self.gas;
                                        var $3970 = self.term;
                                        var self = $3964;
                                        switch (self._) {
                                            case 'Litereum.Term.word':
                                                var $3972 = self.numb;
                                                var self = $3970;
                                                switch (self._) {
                                                    case 'Litereum.Term.word':
                                                        var $3974 = self.numb;
                                                        var self = U64$cmp$($3972, $3974);
                                                        switch (self._) {
                                                            case 'Cmp.ltn':
                                                                var $3976 = Litereum$reduce$(Litereum$Runtime$new$($3966, $3967, $3968, $3969, $3956));
                                                                var $3975 = $3976;
                                                                break;
                                                            case 'Cmp.eql':
                                                                var $3977 = Litereum$reduce$(Litereum$Runtime$new$($3966, $3967, $3968, $3969, $3957));
                                                                var $3975 = $3977;
                                                                break;
                                                            case 'Cmp.gtn':
                                                                var $3978 = Litereum$reduce$(Litereum$Runtime$new$($3966, $3967, $3968, $3969, $3958));
                                                                var $3975 = $3978;
                                                                break;
                                                        };
                                                        var $3973 = $3975;
                                                        break;
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.store':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $3979 = _state$1;
                                                        var $3973 = $3979;
                                                        break;
                                                };
                                                var $3971 = $3973;
                                                break;
                                            case 'Litereum.Term.var':
                                            case 'Litereum.Term.return':
                                                var self = $3970;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.store':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $3981 = _state$1;
                                                        var $3980 = $3981;
                                                        break;
                                                };
                                                var $3971 = $3980;
                                                break;
                                            case 'Litereum.Term.call':
                                            case 'Litereum.Term.create':
                                                var self = $3970;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.store':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $3983 = _state$1;
                                                        var $3982 = $3983;
                                                        break;
                                                };
                                                var $3971 = $3982;
                                                break;
                                            case 'Litereum.Term.let':
                                            case 'Litereum.Term.bind':
                                                var self = $3970;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.store':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $3985 = _state$1;
                                                        var $3984 = $3985;
                                                        break;
                                                };
                                                var $3971 = $3984;
                                                break;
                                            case 'Litereum.Term.match':
                                            case 'Litereum.Term.operate':
                                            case 'Litereum.Term.store':
                                                var self = $3970;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.store':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $3987 = _state$1;
                                                        var $3986 = $3987;
                                                        break;
                                                };
                                                var $3971 = $3986;
                                                break;
                                            case 'Litereum.Term.compare':
                                                var self = $3970;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.store':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $3989 = _state$1;
                                                        var $3988 = $3989;
                                                        break;
                                                };
                                                var $3971 = $3988;
                                                break;
                                        };
                                        var $3965 = $3971;
                                        break;
                                };
                                var $3959 = $3965;
                                break;
                        };
                        var $3895 = $3959;
                        break;
                    case 'Litereum.Term.operate':
                        var $3990 = self.oper;
                        var $3991 = self.val0;
                        var $3992 = self.val1;
                        var self = Litereum$reduce$(Litereum$Runtime$new$($3890, $3891, $3892, $3893, $3991));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $3994 = self.world;
                                var $3995 = self.subst;
                                var $3996 = self.fresh;
                                var $3997 = self.gas;
                                var $3998 = self.term;
                                var self = Litereum$reduce$(Litereum$Runtime$new$($3994, $3995, $3996, $3997, $3992));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $4000 = self.world;
                                        var $4001 = self.subst;
                                        var $4002 = self.fresh;
                                        var $4003 = self.gas;
                                        var $4004 = self.term;
                                        var self = $3998;
                                        switch (self._) {
                                            case 'Litereum.Term.word':
                                                var $4006 = self.numb;
                                                var self = $4004;
                                                switch (self._) {
                                                    case 'Litereum.Term.word':
                                                        var $4008 = self.numb;
                                                        var self = $3990;
                                                        switch (self._) {
                                                            case 'Litereum.Operation.add':
                                                                var $4010 = Litereum$Runtime$new$($4000, $4001, $4002, $4003, Litereum$Term$word$((($4006 + $4008) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4009 = $4010;
                                                                break;
                                                            case 'Litereum.Operation.sub':
                                                                var $4011 = Litereum$Runtime$new$($4000, $4001, $4002, $4003, Litereum$Term$word$((($4006 - $4008) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4009 = $4011;
                                                                break;
                                                            case 'Litereum.Operation.mul':
                                                                var $4012 = Litereum$Runtime$new$($4000, $4001, $4002, $4003, Litereum$Term$word$((($4006 * $4008) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4009 = $4012;
                                                                break;
                                                            case 'Litereum.Operation.div':
                                                                var $4013 = Litereum$Runtime$new$($4000, $4001, $4002, $4003, Litereum$Term$word$((($4006 / $4008) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4009 = $4013;
                                                                break;
                                                            case 'Litereum.Operation.mod':
                                                                var $4014 = Litereum$Runtime$new$($4000, $4001, $4002, $4003, Litereum$Term$word$(($4006 % $4008)));
                                                                var $4009 = $4014;
                                                                break;
                                                            case 'Litereum.Operation.or':
                                                                var $4015 = Litereum$Runtime$new$($4000, $4001, $4002, $4003, Litereum$Term$word$(($4006 | $4008)));
                                                                var $4009 = $4015;
                                                                break;
                                                            case 'Litereum.Operation.and':
                                                                var $4016 = Litereum$Runtime$new$($4000, $4001, $4002, $4003, Litereum$Term$word$(($4006 & $4008)));
                                                                var $4009 = $4016;
                                                                break;
                                                            case 'Litereum.Operation.xor':
                                                                var $4017 = Litereum$Runtime$new$($4000, $4001, $4002, $4003, Litereum$Term$word$(($4006 ^ $4008)));
                                                                var $4009 = $4017;
                                                                break;
                                                        };
                                                        var $4007 = $4009;
                                                        break;
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.store':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4018 = _state$1;
                                                        var $4007 = $4018;
                                                        break;
                                                };
                                                var $4005 = $4007;
                                                break;
                                            case 'Litereum.Term.var':
                                            case 'Litereum.Term.return':
                                                var self = $4004;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.store':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4020 = _state$1;
                                                        var $4019 = $4020;
                                                        break;
                                                };
                                                var $4005 = $4019;
                                                break;
                                            case 'Litereum.Term.call':
                                            case 'Litereum.Term.create':
                                                var self = $4004;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.store':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4022 = _state$1;
                                                        var $4021 = $4022;
                                                        break;
                                                };
                                                var $4005 = $4021;
                                                break;
                                            case 'Litereum.Term.let':
                                            case 'Litereum.Term.bind':
                                                var self = $4004;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.store':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4024 = _state$1;
                                                        var $4023 = $4024;
                                                        break;
                                                };
                                                var $4005 = $4023;
                                                break;
                                            case 'Litereum.Term.match':
                                            case 'Litereum.Term.operate':
                                            case 'Litereum.Term.store':
                                                var self = $4004;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.store':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4026 = _state$1;
                                                        var $4025 = $4026;
                                                        break;
                                                };
                                                var $4005 = $4025;
                                                break;
                                            case 'Litereum.Term.compare':
                                                var self = $4004;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.store':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4028 = _state$1;
                                                        var $4027 = $4028;
                                                        break;
                                                };
                                                var $4005 = $4027;
                                                break;
                                        };
                                        var $3999 = $4005;
                                        break;
                                };
                                var $3993 = $3999;
                                break;
                        };
                        var $3895 = $3993;
                        break;
                    case 'Litereum.Term.create':
                    case 'Litereum.Term.word':
                    case 'Litereum.Term.store':
                    case 'Litereum.Term.bind':
                    case 'Litereum.Term.return':
                        var $4029 = _state$1;
                        var $3895 = $4029;
                        break;
                };
                var $3889 = $3895;
                break;
        };
        return $3889;
    };
    const Litereum$reduce = x0 => Litereum$reduce$(x0);

    function Litereum$normalize$many$(_state$1) {
        var self = _state$1;
        switch (self._) {
            case 'Litereum.Runtime.new':
                var $4031 = self.world;
                var $4032 = self.subst;
                var $4033 = self.fresh;
                var $4034 = self.gas;
                var $4035 = self.term;
                var self = $4035;
                switch (self._) {
                    case 'List.cons':
                        var $4037 = self.head;
                        var $4038 = self.tail;
                        var self = Litereum$normalize$(Litereum$Runtime$new$($4031, $4032, $4033, $4034, $4037));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4040 = self.world;
                                var $4041 = self.subst;
                                var $4042 = self.fresh;
                                var $4043 = self.gas;
                                var $4044 = self.term;
                                var self = Litereum$normalize$many$(Litereum$Runtime$new$($4040, $4041, $4042, $4043, $4038));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $4046 = self.world;
                                        var $4047 = self.subst;
                                        var $4048 = self.fresh;
                                        var $4049 = self.gas;
                                        var $4050 = self.term;
                                        var $4051 = Litereum$Runtime$new$($4046, $4047, $4048, $4049, List$cons$($4044, $4050));
                                        var $4045 = $4051;
                                        break;
                                };
                                var $4039 = $4045;
                                break;
                        };
                        var $4036 = $4039;
                        break;
                    case 'List.nil':
                        var $4052 = _state$1;
                        var $4036 = $4052;
                        break;
                };
                var $4030 = $4036;
                break;
        };
        return $4030;
    };
    const Litereum$normalize$many = x0 => Litereum$normalize$many$(x0);

    function Litereum$normalize$cases$(_ctrs$1, _name$2, _state$3) {
        var self = _state$3;
        switch (self._) {
            case 'Litereum.Runtime.new':
                var $4054 = self.world;
                var $4055 = self.subst;
                var $4056 = self.fresh;
                var $4057 = self.gas;
                var $4058 = self.term;
                var self = _ctrs$1;
                switch (self._) {
                    case 'List.cons':
                        var $4060 = self.head;
                        var $4061 = self.tail;
                        var self = $4058;
                        switch (self._) {
                            case 'List.cons':
                                var $4063 = self.head;
                                var $4064 = self.tail;
                                var _nams$13 = List$map$(a1 => ((_name$2 + ".") + a1), (() => {
                                    var self = $4060;
                                    switch (self._) {
                                        case 'Litereum.Constructor.new':
                                            var $4066 = self.field_names;
                                            var $4067 = $4066;
                                            return $4067;
                                    };
                                })());
                                var _vals$14 = List$map$(Litereum$Term$var, _nams$13);
                                var _subst$15 = Litereum$extend$($4055, _nams$13, _vals$14);
                                var self = Litereum$normalize$(Litereum$Runtime$new$($4054, _subst$15, $4056, $4057, $4063));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $4068 = self.world;
                                        var $4069 = self.subst;
                                        var $4070 = self.fresh;
                                        var $4071 = self.gas;
                                        var $4072 = self.term;
                                        var self = Litereum$normalize$cases$($4061, _name$2, Litereum$Runtime$new$($4068, $4069, $4070, $4071, $4064));
                                        switch (self._) {
                                            case 'Litereum.Runtime.new':
                                                var $4074 = self.world;
                                                var $4075 = self.subst;
                                                var $4076 = self.fresh;
                                                var $4077 = self.gas;
                                                var $4078 = self.term;
                                                var $4079 = Litereum$Runtime$new$($4074, $4075, $4076, $4077, List$cons$($4072, $4078));
                                                var $4073 = $4079;
                                                break;
                                        };
                                        var $4065 = $4073;
                                        break;
                                };
                                var $4062 = $4065;
                                break;
                            case 'List.nil':
                                var $4080 = _state$3;
                                var $4062 = $4080;
                                break;
                        };
                        var $4059 = $4062;
                        break;
                    case 'List.nil':
                        var self = $4058;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $4082 = _state$3;
                                var $4081 = $4082;
                                break;
                        };
                        var $4059 = $4081;
                        break;
                };
                var $4053 = $4059;
                break;
        };
        return $4053;
    };
    const Litereum$normalize$cases = x0 => x1 => x2 => Litereum$normalize$cases$(x0, x1, x2);

    function Litereum$normalize$bound$(_names$1, _state$2) {
        var self = _state$2;
        switch (self._) {
            case 'Litereum.Runtime.new':
                var $4084 = self.world;
                var $4085 = self.subst;
                var $4086 = self.fresh;
                var $4087 = self.gas;
                var $4088 = self.term;
                var _subst$8 = Litereum$extend$($4085, _names$1, List$map$(Litereum$Term$var, _names$1));
                var $4089 = Litereum$normalize$(Litereum$Runtime$new$($4084, _subst$8, $4086, $4087, $4088));
                var $4083 = $4089;
                break;
        };
        return $4083;
    };
    const Litereum$normalize$bound = x0 => x1 => Litereum$normalize$bound$(x0, x1);

    function Litereum$normalize$(_state$1) {
        var self = Litereum$reduce$(_state$1);
        switch (self._) {
            case 'Litereum.Runtime.new':
                var $4091 = self.world;
                var $4092 = self.subst;
                var $4093 = self.fresh;
                var $4094 = self.gas;
                var $4095 = self.term;
                var self = $4095;
                switch (self._) {
                    case 'Litereum.Term.create':
                        var $4097 = self.ctor;
                        var $4098 = self.vals;
                        var self = Litereum$normalize$many$(Litereum$Runtime$new$($4091, $4092, $4093, $4094, $4098));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4100 = self.world;
                                var $4101 = self.subst;
                                var $4102 = self.fresh;
                                var $4103 = self.gas;
                                var $4104 = self.term;
                                var $4105 = Litereum$Runtime$new$($4100, $4101, $4102, $4103, Litereum$Term$create$($4097, $4104));
                                var $4099 = $4105;
                                break;
                        };
                        var $4096 = $4099;
                        break;
                    case 'Litereum.Term.match':
                        var $4106 = self.name;
                        var $4107 = self.data;
                        var $4108 = self.cses;
                        var self = Litereum$get_constructors$($4091, $4107);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4110 = self.value;
                                var _ctrs$11 = $4110;
                                var self = _ctrs$11;
                                switch (self._) {
                                    case 'List.nil':
                                        var self = Litereum$normalize$cases$(_ctrs$11, $4106, Litereum$Runtime$new$($4091, $4092, $4093, $4094, $4108));
                                        switch (self._) {
                                            case 'Litereum.Runtime.new':
                                                var $4113 = self.world;
                                                var $4114 = self.subst;
                                                var $4115 = self.fresh;
                                                var $4116 = self.gas;
                                                var $4117 = self.term;
                                                var $4118 = Litereum$Runtime$new$($4113, $4114, $4115, $4116, Litereum$Term$match$($4106, $4107, $4117));
                                                var $4112 = $4118;
                                                break;
                                        };
                                        var $4111 = $4112;
                                        break;
                                    case 'List.cons':
                                        var self = Litereum$normalize$cases$(_ctrs$11, $4106, Litereum$Runtime$new$($4091, $4092, $4093, $4094, $4108));
                                        switch (self._) {
                                            case 'Litereum.Runtime.new':
                                                var $4120 = self.world;
                                                var $4121 = self.subst;
                                                var $4122 = self.fresh;
                                                var $4123 = self.gas;
                                                var $4124 = self.term;
                                                var $4125 = Litereum$Runtime$new$($4120, $4121, $4122, $4123, Litereum$Term$match$($4106, $4107, $4124));
                                                var $4119 = $4125;
                                                break;
                                        };
                                        var $4111 = $4119;
                                        break;
                                };
                                var $4109 = $4111;
                                break;
                            case 'Maybe.none':
                                var $4126 = Litereum$Runtime$new$($4091, $4092, $4093, $4094, $4095);
                                var $4109 = $4126;
                                break;
                        };
                        var $4096 = $4109;
                        break;
                    case 'Litereum.Term.compare':
                        var $4127 = self.val0;
                        var $4128 = self.val1;
                        var $4129 = self.iflt;
                        var $4130 = self.ifeq;
                        var $4131 = self.ifgt;
                        var self = Litereum$normalize$(Litereum$Runtime$new$($4091, $4092, $4093, $4094, $4127));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4133 = self.world;
                                var $4134 = self.subst;
                                var $4135 = self.fresh;
                                var $4136 = self.gas;
                                var $4137 = self.term;
                                var self = Litereum$normalize$(Litereum$Runtime$new$($4133, $4134, $4135, $4136, $4128));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $4139 = self.world;
                                        var $4140 = self.subst;
                                        var $4141 = self.fresh;
                                        var $4142 = self.gas;
                                        var $4143 = self.term;
                                        var self = Litereum$normalize$(Litereum$Runtime$new$($4139, $4140, $4141, $4142, $4129));
                                        switch (self._) {
                                            case 'Litereum.Runtime.new':
                                                var $4145 = self.world;
                                                var $4146 = self.subst;
                                                var $4147 = self.fresh;
                                                var $4148 = self.gas;
                                                var $4149 = self.term;
                                                var self = Litereum$normalize$(Litereum$Runtime$new$($4145, $4146, $4147, $4148, $4130));
                                                switch (self._) {
                                                    case 'Litereum.Runtime.new':
                                                        var $4151 = self.world;
                                                        var $4152 = self.subst;
                                                        var $4153 = self.fresh;
                                                        var $4154 = self.gas;
                                                        var $4155 = self.term;
                                                        var self = Litereum$normalize$(Litereum$Runtime$new$($4151, $4152, $4153, $4154, $4131));
                                                        switch (self._) {
                                                            case 'Litereum.Runtime.new':
                                                                var $4157 = self.world;
                                                                var $4158 = self.subst;
                                                                var $4159 = self.fresh;
                                                                var $4160 = self.gas;
                                                                var $4161 = self.term;
                                                                var $4162 = Litereum$Runtime$new$($4157, $4158, $4159, $4160, Litereum$Term$compare$($4137, $4143, $4149, $4155, $4161));
                                                                var $4156 = $4162;
                                                                break;
                                                        };
                                                        var $4150 = $4156;
                                                        break;
                                                };
                                                var $4144 = $4150;
                                                break;
                                        };
                                        var $4138 = $4144;
                                        break;
                                };
                                var $4132 = $4138;
                                break;
                        };
                        var $4096 = $4132;
                        break;
                    case 'Litereum.Term.operate':
                        var $4163 = self.oper;
                        var $4164 = self.val0;
                        var $4165 = self.val1;
                        var self = Litereum$normalize$(Litereum$Runtime$new$($4091, $4092, $4093, $4094, $4164));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4167 = self.world;
                                var $4168 = self.subst;
                                var $4169 = self.fresh;
                                var $4170 = self.gas;
                                var $4171 = self.term;
                                var self = Litereum$normalize$(Litereum$Runtime$new$($4167, $4168, $4169, $4170, $4165));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $4173 = self.world;
                                        var $4174 = self.subst;
                                        var $4175 = self.fresh;
                                        var $4176 = self.gas;
                                        var $4177 = self.term;
                                        var $4178 = Litereum$Runtime$new$($4173, $4174, $4175, $4176, Litereum$Term$operate$($4163, $4171, $4177));
                                        var $4172 = $4178;
                                        break;
                                };
                                var $4166 = $4172;
                                break;
                        };
                        var $4096 = $4166;
                        break;
                    case 'Litereum.Term.store':
                        var $4179 = self.bond;
                        var $4180 = self.main;
                        var $4181 = self.body;
                        var self = Litereum$get_bond$($4091, $4179);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4183 = self.value;
                                var _bond$11 = $4183;
                                var self = _bond$11;
                                switch (self._) {
                                    case 'Litereum.Bond.new':
                                        var $4185 = self.input_names;
                                        var self = Litereum$normalize$bound$($4185, Litereum$Runtime$new$($4091, $4092, $4093, $4094, $4180));
                                        switch (self._) {
                                            case 'Litereum.Runtime.new':
                                                var $4187 = self.world;
                                                var $4188 = self.subst;
                                                var $4189 = self.fresh;
                                                var $4190 = self.gas;
                                                var $4191 = self.term;
                                                var self = Litereum$normalize$(Litereum$Runtime$new$($4187, $4188, $4189, $4190, $4181));
                                                switch (self._) {
                                                    case 'Litereum.Runtime.new':
                                                        var $4193 = self.world;
                                                        var $4194 = self.subst;
                                                        var $4195 = self.fresh;
                                                        var $4196 = self.gas;
                                                        var $4197 = self.term;
                                                        var $4198 = Litereum$Runtime$new$($4193, $4194, $4195, $4196, Litereum$Term$store$($4179, $4191, $4197));
                                                        var $4192 = $4198;
                                                        break;
                                                };
                                                var $4186 = $4192;
                                                break;
                                        };
                                        var $4184 = $4186;
                                        break;
                                };
                                var $4182 = $4184;
                                break;
                            case 'Maybe.none':
                                var $4199 = _state$1;
                                var $4182 = $4199;
                                break;
                        };
                        var $4096 = $4182;
                        break;
                    case 'Litereum.Term.bind':
                        var $4200 = self.name;
                        var $4201 = self.type;
                        var $4202 = self.expr;
                        var $4203 = self.body;
                        var self = Litereum$normalize$(Litereum$Runtime$new$($4091, $4092, $4093, $4094, $4202));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4205 = self.world;
                                var $4206 = self.subst;
                                var $4207 = self.fresh;
                                var $4208 = self.gas;
                                var $4209 = self.term;
                                var self = Litereum$normalize$(Litereum$Runtime$new$($4205, $4206, $4207, $4208, $4203));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $4211 = self.world;
                                        var $4212 = self.subst;
                                        var $4213 = self.fresh;
                                        var $4214 = self.gas;
                                        var $4215 = self.term;
                                        var $4216 = Litereum$Runtime$new$($4211, $4212, $4213, $4214, Litereum$Term$bind$($4200, $4201, $4209, $4215));
                                        var $4210 = $4216;
                                        break;
                                };
                                var $4204 = $4210;
                                break;
                        };
                        var $4096 = $4204;
                        break;
                    case 'Litereum.Term.return':
                        var $4217 = self.expr;
                        var self = Litereum$normalize$(Litereum$Runtime$new$($4091, $4092, $4093, $4094, $4217));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4219 = self.world;
                                var $4220 = self.subst;
                                var $4221 = self.fresh;
                                var $4222 = self.gas;
                                var $4223 = self.term;
                                var $4224 = Litereum$Runtime$new$($4219, $4220, $4221, $4222, Litereum$Term$return$($4223));
                                var $4218 = $4224;
                                break;
                        };
                        var $4096 = $4218;
                        break;
                    case 'Litereum.Term.var':
                    case 'Litereum.Term.call':
                    case 'Litereum.Term.let':
                    case 'Litereum.Term.word':
                        var $4225 = Litereum$Runtime$new$($4091, $4092, $4093, $4094, $4095);
                        var $4096 = $4225;
                        break;
                };
                var $4090 = $4096;
                break;
        };
        return $4090;
    };
    const Litereum$normalize = x0 => Litereum$normalize$(x0);

    function Litereum$run$(_state$1) {
        var self = Litereum$reduce$(_state$1);
        switch (self._) {
            case 'Litereum.Runtime.new':
                var $4227 = self.world;
                var $4228 = self.subst;
                var $4229 = self.fresh;
                var $4230 = self.gas;
                var $4231 = self.term;
                var self = $4231;
                switch (self._) {
                    case 'Litereum.Term.store':
                        var $4233 = self.bond;
                        var $4234 = self.main;
                        var $4235 = self.body;
                        var self = Litereum$get_bond$($4227, $4233);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4237 = self.value;
                                var _bond$11 = $4237;
                                var self = _bond$11;
                                switch (self._) {
                                    case 'Litereum.Bond.new':
                                        var $4239 = self.input_names;
                                        var self = Litereum$normalize$bound$($4239, Litereum$Runtime$new$($4227, $4228, $4229, $4230, $4234));
                                        switch (self._) {
                                            case 'Litereum.Runtime.new':
                                                var $4241 = self.world;
                                                var $4242 = self.subst;
                                                var $4243 = self.fresh;
                                                var $4244 = self.gas;
                                                var $4245 = self.term;
                                                var _new_entry$23 = Litereum$Entry$bond$((() => {
                                                    var self = _bond$11;
                                                    switch (self._) {
                                                        case 'Litereum.Bond.new':
                                                            var $4247 = self.name;
                                                            var $4248 = self.input_names;
                                                            var $4249 = self.input_types;
                                                            var $4250 = self.output_type;
                                                            var $4251 = self.owners;
                                                            var $4252 = Litereum$Bond$new$($4247, $4248, $4249, $4250, $4245, $4251);
                                                            return $4252;
                                                    };
                                                })());
                                                var self = $4241;
                                                switch (self._) {
                                                    case 'Litereum.World.new':
                                                        var $4253 = self.name_count;
                                                        var $4254 = self.name_to_index;
                                                        var $4255 = self.index_to_name;
                                                        var $4256 = Litereum$World$new$($4253, $4254, $4255, Map$set$($4233, _new_entry$23, (() => {
                                                            var self = $4241;
                                                            switch (self._) {
                                                                case 'Litereum.World.new':
                                                                    var $4257 = self.entry;
                                                                    var $4258 = $4257;
                                                                    return $4258;
                                                            };
                                                        })()));
                                                        var _new_world$24 = $4256;
                                                        break;
                                                };
                                                var $4246 = Litereum$run$(Litereum$Runtime$new$(_new_world$24, $4242, $4243, $4244, $4235));
                                                var $4240 = $4246;
                                                break;
                                        };
                                        var $4238 = $4240;
                                        break;
                                };
                                var $4236 = $4238;
                                break;
                            case 'Maybe.none':
                                var $4259 = _state$1;
                                var $4236 = $4259;
                                break;
                        };
                        var $4232 = $4236;
                        break;
                    case 'Litereum.Term.bind':
                        var $4260 = self.name;
                        var $4261 = self.type;
                        var $4262 = self.expr;
                        var $4263 = self.body;
                        var self = Litereum$run$(Litereum$Runtime$new$($4227, $4228, $4229, $4230, $4262));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4265 = self.world;
                                var $4266 = self.subst;
                                var $4267 = self.fresh;
                                var $4268 = self.gas;
                                var $4269 = self.term;
                                var self = $4269;
                                switch (self._) {
                                    case 'Litereum.Term.return':
                                        var $4271 = self.expr;
                                        var $4272 = Litereum$run$(Litereum$Runtime$new$($4265, Map$set$($4260, $4271, $4266), $4267, $4268, $4263));
                                        var $4270 = $4272;
                                        break;
                                    case 'Litereum.Term.var':
                                    case 'Litereum.Term.call':
                                    case 'Litereum.Term.let':
                                    case 'Litereum.Term.create':
                                    case 'Litereum.Term.match':
                                    case 'Litereum.Term.word':
                                    case 'Litereum.Term.compare':
                                    case 'Litereum.Term.operate':
                                    case 'Litereum.Term.store':
                                    case 'Litereum.Term.bind':
                                        var $4273 = Litereum$Runtime$new$($4265, $4266, $4267, $4268, Litereum$Term$bind$($4260, $4261, $4269, $4263));
                                        var $4270 = $4273;
                                        break;
                                };
                                var $4264 = $4270;
                                break;
                        };
                        var $4232 = $4264;
                        break;
                    case 'Litereum.Term.var':
                    case 'Litereum.Term.call':
                    case 'Litereum.Term.let':
                    case 'Litereum.Term.create':
                    case 'Litereum.Term.match':
                    case 'Litereum.Term.word':
                    case 'Litereum.Term.compare':
                    case 'Litereum.Term.operate':
                    case 'Litereum.Term.return':
                        var $4274 = Litereum$Runtime$new$($4227, $4228, $4229, $4230, $4231);
                        var $4232 = $4274;
                        break;
                };
                var $4226 = $4232;
                break;
        };
        return $4226;
    };
    const Litereum$run = x0 => Litereum$run$(x0);

    function Litereum$show$type$(_world$1, _type$2) {
        var self = _type$2;
        switch (self._) {
            case 'Litereum.Type.data':
                var $4276 = self.name;
                var $4277 = $4276;
                var $4275 = $4277;
                break;
            case 'Litereum.Type.effect':
                var $4278 = self.rety;
                var $4279 = ("& " + Litereum$show$type$(_world$1, $4278));
                var $4275 = $4279;
                break;
            case 'Litereum.Type.word':
                var $4280 = "#word";
                var $4275 = $4280;
                break;
        };
        return $4275;
    };
    const Litereum$show$type = x0 => x1 => Litereum$show$type$(x0, x1);

    function Word$show$(_size$1, _a$2) {
        var $4281 = Nat$show$(Word$to_nat$(_a$2));
        return $4281;
    };
    const Word$show = x0 => x1 => Word$show$(x0, x1);
    const U64$show = a0 => (String(a0));

    function String$is_empty$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $4283 = Bool$true;
            var $4282 = $4283;
        } else {
            var $4284 = self.charCodeAt(0);
            var $4285 = self.slice(1);
            var $4286 = Bool$false;
            var $4282 = $4286;
        };
        return $4282;
    };
    const String$is_empty = x0 => String$is_empty$(x0);

    function Litereum$show$term$(_world$1, _term$2) {
        var self = _term$2;
        switch (self._) {
            case 'Litereum.Term.var':
                var $4288 = self.name;
                var $4289 = $4288;
                var $4287 = $4289;
                break;
            case 'Litereum.Term.call':
                var $4290 = self.bond;
                var $4291 = self.args;
                var _bond$5 = $4290;
                var _args$6 = List$map$(Litereum$show$term(_world$1), $4291);
                var $4292 = (_bond$5 + ("(" + (String$join$(",", _args$6) + ")")));
                var $4287 = $4292;
                break;
            case 'Litereum.Term.let':
                var $4293 = self.name;
                var $4294 = self.type;
                var $4295 = self.expr;
                var $4296 = self.body;
                var _name$7 = $4293;
                var _type$8 = Litereum$show$type$(_world$1, $4294);
                var _expr$9 = Litereum$show$term$(_world$1, $4295);
                var _body$10 = Litereum$show$term$(_world$1, $4296);
                var $4297 = ("let " + (_name$7 + (" : " + (_type$8 + (" = " + (_expr$9 + (" " + _body$10)))))));
                var $4287 = $4297;
                break;
            case 'Litereum.Term.create':
                var $4298 = self.ctor;
                var $4299 = self.vals;
                var _vals$5 = List$mapped$($4299, Litereum$show$term(_world$1));
                var $4300 = ($4298 + ("{" + (String$join$(",", _vals$5) + "}")));
                var $4287 = $4300;
                break;
            case 'Litereum.Term.match':
                var $4301 = self.name;
                var $4302 = self.data;
                var $4303 = self.cses;
                var self = Litereum$get_data$(_world$1, $4302);
                switch (self._) {
                    case 'Maybe.some':
                        var $4305 = self.value;
                        var _data$7 = $4305;
                        var self = _data$7;
                        switch (self._) {
                            case 'Litereum.Data.new':
                                var $4307 = self.constructors;
                                var _name$10 = $4301;
                                var _cses$11 = List$zipped_with$($4307, $4303, (_case_ctor$11 => _case_body$12 => {
                                    var $4309 = ((() => {
                                        var self = _case_ctor$11;
                                        switch (self._) {
                                            case 'Litereum.Constructor.new':
                                                var $4310 = self.name;
                                                var $4311 = $4310;
                                                return $4311;
                                        };
                                    })() + (": " + Litereum$show$term$(_world$1, _case_body$12)));
                                    return $4309;
                                }));
                                var $4308 = ("case " + (_name$10 + (" : " + ($4302 + (" { " + (String$join$(", ", _cses$11) + " }"))))));
                                var $4306 = $4308;
                                break;
                        };
                        var $4304 = $4306;
                        break;
                    case 'Maybe.none':
                        var $4312 = "?";
                        var $4304 = $4312;
                        break;
                };
                var $4287 = $4304;
                break;
            case 'Litereum.Term.word':
                var $4313 = self.numb;
                var $4314 = ("#" + (String($4313)));
                var $4287 = $4314;
                break;
            case 'Litereum.Term.compare':
                var $4315 = self.val0;
                var $4316 = self.val1;
                var $4317 = self.iflt;
                var $4318 = self.ifeq;
                var $4319 = self.ifgt;
                var _val0$8 = Litereum$show$term$(_world$1, $4315);
                var _val1$9 = Litereum$show$term$(_world$1, $4316);
                var _iflt$10 = Litereum$show$term$(_world$1, $4317);
                var _ifeq$11 = Litereum$show$term$(_world$1, $4318);
                var _ifgt$12 = Litereum$show$term$(_world$1, $4319);
                var $4320 = ("compare " + (_val0$8 + (" " + (_val1$9 + (" { _<_: " + (_iflt$10 + (" _=_: " + (_ifeq$11 + (" _>_: " + (_ifgt$12 + " }"))))))))));
                var $4287 = $4320;
                break;
            case 'Litereum.Term.operate':
                var $4321 = self.oper;
                var $4322 = self.val0;
                var $4323 = self.val1;
                var self = $4321;
                switch (self._) {
                    case 'Litereum.Operation.add':
                        var $4325 = "+";
                        var _oper$6 = $4325;
                        break;
                    case 'Litereum.Operation.sub':
                        var $4326 = "-";
                        var _oper$6 = $4326;
                        break;
                    case 'Litereum.Operation.mul':
                        var $4327 = "*";
                        var _oper$6 = $4327;
                        break;
                    case 'Litereum.Operation.div':
                        var $4328 = "/";
                        var _oper$6 = $4328;
                        break;
                    case 'Litereum.Operation.mod':
                        var $4329 = "%";
                        var _oper$6 = $4329;
                        break;
                    case 'Litereum.Operation.or':
                        var $4330 = "|";
                        var _oper$6 = $4330;
                        break;
                    case 'Litereum.Operation.and':
                        var $4331 = "&";
                        var _oper$6 = $4331;
                        break;
                    case 'Litereum.Operation.xor':
                        var $4332 = "^";
                        var _oper$6 = $4332;
                        break;
                };
                var _val0$7 = Litereum$show$term$(_world$1, $4322);
                var _val1$8 = Litereum$show$term$(_world$1, $4323);
                var $4324 = (_oper$6 + ("(" + (_val0$7 + ("," + (_val1$8 + ")")))));
                var $4287 = $4324;
                break;
            case 'Litereum.Term.store':
                var $4333 = self.bond;
                var $4334 = self.main;
                var $4335 = self.body;
                var _bond$6 = $4333;
                var _main$7 = Litereum$show$term$(_world$1, $4334);
                var _body$8 = Litereum$show$term$(_world$1, $4335);
                var $4336 = ("set " + (_bond$6 + (" = " + (_main$7 + ("; " + _body$8)))));
                var $4287 = $4336;
                break;
            case 'Litereum.Term.bind':
                var $4337 = self.name;
                var $4338 = self.type;
                var $4339 = self.expr;
                var $4340 = self.body;
                var _name$7 = $4337;
                var _type$8 = Litereum$show$type$(_world$1, $4338);
                var _expr$9 = Litereum$show$term$(_world$1, $4339);
                var _body$10 = Litereum$show$term$(_world$1, $4340);
                var self = String$is_empty$(_name$7);
                if (self) {
                    var $4342 = ("run " + (_expr$9 + ("; " + _body$10)));
                    var $4341 = $4342;
                } else {
                    var $4343 = ("run " + (_name$7 + (" : " + (_type$8 + (" = " + (_expr$9 + ("; " + _body$10)))))));
                    var $4341 = $4343;
                };
                var $4287 = $4341;
                break;
            case 'Litereum.Term.return':
                var $4344 = self.expr;
                var _expr$4 = Litereum$show$term$(_world$1, $4344);
                var $4345 = ("return " + _expr$4);
                var $4287 = $4345;
                break;
        };
        return $4287;
    };
    const Litereum$show$term = x0 => x1 => Litereum$show$term$(x0, x1);

    function Litereum$transact$(_world$1, _transaction$2) {
        var self = _world$1;
        switch (self._) {
            case 'Litereum.World.new':
                var $4347 = self.name_count;
                var $4348 = self.name_to_index;
                var $4349 = self.index_to_name;
                var $4350 = self.entry;
                var self = _transaction$2;
                switch (self._) {
                    case 'Litereum.Transaction.new_name':
                        var $4352 = self.name;
                        var _name$8 = $4352;
                        var self = Map$get$(_name$8, (() => {
                            var self = _world$1;
                            switch (self._) {
                                case 'Litereum.World.new':
                                    var $4354 = self.name_to_index;
                                    var $4355 = $4354;
                                    return $4355;
                            };
                        })());
                        switch (self._) {
                            case 'Maybe.none':
                                var self = _world$1;
                                switch (self._) {
                                    case 'Litereum.World.new':
                                        var $4357 = self.name_to_index;
                                        var $4358 = self.index_to_name;
                                        var $4359 = self.entry;
                                        var $4360 = Litereum$World$new$(($4347 + 1n), $4357, $4358, $4359);
                                        var _world$9 = $4360;
                                        break;
                                };
                                var self = _world$9;
                                switch (self._) {
                                    case 'Litereum.World.new':
                                        var $4361 = self.name_count;
                                        var $4362 = self.index_to_name;
                                        var $4363 = self.entry;
                                        var $4364 = Litereum$World$new$($4361, Map$set$(_name$8, $4347, $4348), $4362, $4363);
                                        var _world$10 = $4364;
                                        break;
                                };
                                var self = _world$10;
                                switch (self._) {
                                    case 'Litereum.World.new':
                                        var $4365 = self.name_count;
                                        var $4366 = self.name_to_index;
                                        var $4367 = self.entry;
                                        var $4368 = Litereum$World$new$($4365, $4366, Map$set$(Nat$show$($4347), _name$8, $4349), $4367);
                                        var _world$11 = $4368;
                                        break;
                                };
                                var $4356 = Maybe$some$(Pair$new$(_world$11, ("[name] " + _name$8)));
                                var $4353 = $4356;
                                break;
                            case 'Maybe.some':
                                var $4369 = Maybe$none;
                                var $4353 = $4369;
                                break;
                        };
                        var $4351 = $4353;
                        break;
                    case 'Litereum.Transaction.new_data':
                        var $4370 = self.data;
                        var _data$8 = $4370;
                        var self = _data$8;
                        switch (self._) {
                            case 'Litereum.Data.new':
                                var $4372 = self.name;
                                var self = Map$get$($4372, $4350);
                                switch (self._) {
                                    case 'Maybe.none':
                                        var self = _world$1;
                                        switch (self._) {
                                            case 'Litereum.World.new':
                                                var $4375 = self.name_count;
                                                var $4376 = self.name_to_index;
                                                var $4377 = self.index_to_name;
                                                var $4378 = Litereum$World$new$($4375, $4376, $4377, Map$set$($4372, Litereum$Entry$data$(_data$8), $4350));
                                                var _world$11 = $4378;
                                                break;
                                        };
                                        var $4374 = Maybe$some$(Pair$new$(_world$11, ("[data] " + $4372)));
                                        var $4373 = $4374;
                                        break;
                                    case 'Maybe.some':
                                        var $4379 = Maybe$none;
                                        var $4373 = $4379;
                                        break;
                                };
                                var $4371 = $4373;
                                break;
                        };
                        var $4351 = $4371;
                        break;
                    case 'Litereum.Transaction.new_bond':
                        var $4380 = self.bond;
                        var _bond$8 = $4380;
                        var self = _bond$8;
                        switch (self._) {
                            case 'Litereum.Bond.new':
                                var $4382 = self.name;
                                var $4383 = self.input_names;
                                var $4384 = self.input_types;
                                var $4385 = self.output_type;
                                var $4386 = self.main;
                                var self = Map$get$($4382, $4350);
                                switch (self._) {
                                    case 'Maybe.none':
                                        var self = _world$1;
                                        switch (self._) {
                                            case 'Litereum.World.new':
                                                var $4389 = self.name_count;
                                                var $4390 = self.name_to_index;
                                                var $4391 = self.index_to_name;
                                                var $4392 = Litereum$World$new$($4389, $4390, $4391, Map$set$($4382, Litereum$Entry$bond$(_bond$8), $4350));
                                                var _world$15 = $4392;
                                                break;
                                        };
                                        var _context$16 = Litereum$extend$(Map$from_list$(List$nil), $4383, $4384);
                                        var self = Litereum$check$(_context$16, _world$15, $4386, $4385);
                                        if (self) {
                                            var $4393 = Maybe$some$(Pair$new$(_world$15, ("[bond] " + $4382)));
                                            var $4388 = $4393;
                                        } else {
                                            var $4394 = Maybe$none;
                                            var $4388 = $4394;
                                        };
                                        var $4387 = $4388;
                                        break;
                                    case 'Maybe.some':
                                        var $4395 = Maybe$none;
                                        var $4387 = $4395;
                                        break;
                                };
                                var $4381 = $4387;
                                break;
                        };
                        var $4351 = $4381;
                        break;
                    case 'Litereum.Transaction.new_eval':
                        var $4396 = self.eval;
                        var _eval$8 = $4396;
                        var self = _eval$8;
                        switch (self._) {
                            case 'Litereum.Eval.new':
                                var $4398 = self.term;
                                var $4399 = self.type;
                                var self = Litereum$check$(Map$from_list$(List$nil), _world$1, $4398, $4399);
                                if (self) {
                                    var _fresh$11 = 0n;
                                    var self = Litereum$sanitize$(_world$1, Map$from_list$(List$nil), _fresh$11, $4398);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $4402 = self.fst;
                                            var $4403 = self.snd;
                                            var self = $4399;
                                            switch (self._) {
                                                case 'Litereum.Type.word':
                                                case 'Litereum.Type.data':
                                                    var $4405 = Litereum$normalize$(Litereum$Runtime$new$(_world$1, Map$from_list$(List$nil), $4402, 0n, $4403));
                                                    var self = $4405;
                                                    break;
                                                case 'Litereum.Type.effect':
                                                    var $4406 = Litereum$normalize$(Litereum$run$(Litereum$Runtime$new$(_world$1, Map$from_list$(List$nil), $4402, 0n, $4403)));
                                                    var self = $4406;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Litereum.Runtime.new':
                                                    var $4407 = self.world;
                                                    var $4408 = self.term;
                                                    var $4409 = Maybe$some$(Pair$new$($4407, ("[eval] " + Litereum$show$term$($4407, $4408))));
                                                    var $4404 = $4409;
                                                    break;
                                            };
                                            var $4401 = $4404;
                                            break;
                                    };
                                    var $4400 = $4401;
                                } else {
                                    var $4410 = Maybe$none;
                                    var $4400 = $4410;
                                };
                                var $4397 = $4400;
                                break;
                        };
                        var $4351 = $4397;
                        break;
                };
                var $4346 = $4351;
                break;
        };
        return $4346;
    };
    const Litereum$transact = x0 => x1 => Litereum$transact$(x0, x1);

    function Litereum$api$run$go$transactions$(_world$1, _block_number$2, _code$3, _transactions$4) {
        var self = _transactions$4;
        switch (self._) {
            case 'List.cons':
                var $4412 = self.head;
                var $4413 = self.tail;
                var self = Litereum$transact$(_world$1, $4412);
                switch (self._) {
                    case 'Maybe.some':
                        var $4415 = self.value;
                        var self = $4415;
                        switch (self._) {
                            case 'Pair.new':
                                var $4417 = self.fst;
                                var $4418 = self.snd;
                                var $4419 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                                    var $4420 = _m$bind$10;
                                    return $4420;
                                }))(IO$print$(("- " + $4418)))((_$10 => {
                                    var $4421 = Litereum$api$run$go$transactions$($4417, _block_number$2, _code$3, $4413);
                                    return $4421;
                                }));
                                var $4416 = $4419;
                                break;
                        };
                        var $4414 = $4416;
                        break;
                    case 'Maybe.none':
                        var $4422 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                            var $4423 = _m$bind$7;
                            return $4423;
                        }))(IO$print$("- [fail]"))((_$7 => {
                            var $4424 = Litereum$api$run$go$transactions$(_world$1, _block_number$2, _code$3, $4413);
                            return $4424;
                        }));
                        var $4414 = $4422;
                        break;
                };
                var $4411 = $4414;
                break;
            case 'List.nil':
                var $4425 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $4426 = _m$bind$5;
                    return $4426;
                }))(IO$print$(""))((_$5 => {
                    var $4427 = Litereum$api$run$go$(_world$1, Nat$succ$(_block_number$2), _code$3);
                    return $4427;
                }));
                var $4411 = $4425;
                break;
        };
        return $4411;
    };
    const Litereum$api$run$go$transactions = x0 => x1 => x2 => x3 => Litereum$api$run$go$transactions$(x0, x1, x2, x3);

    function Litereum$api$run$go$(_world$1, _block_number$2, _code$3) {
        var _parsed$4 = Litereum$parse$block$(_world$1)(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$3));
        var self = _parsed$4;
        switch (self._) {
            case 'Parser.Reply.error':
                var $4429 = self.err;
                var self = $4429;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $4431 = self.nam;
                        var $4432 = self.ini;
                        var $4433 = self.idx;
                        var $4434 = self.msg;
                        var self = ($4433 < String$length$(_code$3));
                        if (self) {
                            var _err$10 = ($4434 + (() => {
                                var self = $4431;
                                if (self.length === 0) {
                                    var $4437 = "";
                                    return $4437;
                                } else {
                                    var $4438 = self.charCodeAt(0);
                                    var $4439 = self.slice(1);
                                    var $4440 = (" Inside " + ($4431 + ":"));
                                    return $4440;
                                };
                            })());
                            var _hig$11 = Kind$Code$highlight$(_code$3, $4432, $4433, Nat$succ$($4433));
                            var _str$12 = String$flatten$(List$cons$(_err$10, List$cons$("\u{a}", List$cons$(_hig$11, List$nil))));
                            var $4436 = IO$monad$((_m$bind$13 => _m$pure$14 => {
                                var $4441 = _m$bind$13;
                                return $4441;
                            }))(IO$print$(("Error parsing block #" + Nat$show$(_block_number$2))))((_$13 => {
                                var $4442 = IO$print$(_str$12);
                                return $4442;
                            }));
                            var $4435 = $4436;
                        } else {
                            var $4443 = IO$print$("Done.");
                            var $4435 = $4443;
                        };
                        var $4430 = $4435;
                        break;
                };
                var $4428 = $4430;
                break;
            case 'Parser.Reply.value':
                var $4444 = self.pst;
                var $4445 = self.val;
                var _block$7 = $4445;
                var $4446 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                    var $4447 = _m$bind$8;
                    return $4447;
                }))(IO$print$(("Block #" + Nat$show$(_block_number$2))))((_$8 => {
                    var _bits_0$9 = Litereum$serialize$block$(_world$1, _block$7);
                    var _bits_1$10 = Litereum$serialize$block$(_world$1, (() => {
                        var self = Litereum$deserialize$block$(_world$1, _bits_0$9);
                        switch (self._) {
                            case 'Pair.new':
                                var $4449 = self.snd;
                                var $4450 = $4449;
                                return $4450;
                        };
                    })());
                    var $4448 = IO$monad$((_m$bind$11 => _m$pure$12 => {
                        var $4451 = _m$bind$11;
                        return $4451;
                    }))(IO$print$(("$ " + (Bits$hex$encode$(_bits_0$9) + (" " + (() => {
                        var self = (_bits_1$10 === _bits_0$9);
                        if (self) {
                            var $4452 = "ok";
                            return $4452;
                        } else {
                            var $4453 = "bad_serialization";
                            return $4453;
                        };
                    })())))))((_$11 => {
                        var $4454 = Litereum$api$run$go$transactions$(_world$1, _block_number$2, (() => {
                            var self = $4444;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4455 = self.str;
                                    var $4456 = $4455;
                                    return $4456;
                            };
                        })(), _block$7);
                        return $4454;
                    }));
                    return $4448;
                }));
                var $4428 = $4446;
                break;
        };
        return $4428;
    };
    const Litereum$api$run$go = x0 => x1 => x2 => Litereum$api$run$go$(x0, x1, x2);
    const Litereum$genesis = Litereum$World$new$(1n, Map$from_list$(List$cons$(Pair$new$("", 0n), List$nil)), Map$from_list$(List$cons$(Pair$new$("0", ""), List$nil)), Map$from_list$(List$nil));

    function Litereum$api$run$(_code$1) {
        var $4457 = Litereum$api$run$go$(Litereum$genesis, 0n, _code$1);
        return $4457;
    };
    const Litereum$api$run = x0 => Litereum$api$run$(x0);
    const Litereum = (() => {
        var _x$1 = Litereum$api$run;
        var $4458 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $4459 = _m$pure$3;
            return $4459;
        }))(Unit$new);
        return $4458;
    })();
    return {
        '$main$': () => run(Litereum),
        'run': run,
        'Parser.Reply': Parser$Reply,
        'List': List,
        'Parser.Reply.error': Parser$Reply$error,
        'Bool.false': Bool$false,
        'Bool.true': Bool$true,
        'Nat.gtn': Nat$gtn,
        'Parser.Error.combine': Parser$Error$combine,
        'List.cons': List$cons,
        'Parser.Reply.value': Parser$Reply$value,
        'List.reverse.go': List$reverse$go,
        'List.nil': List$nil,
        'List.reverse': List$reverse,
        'Parser.until.go': Parser$until$go,
        'Parser.until': Parser$until,
        'Parser.many.go': Parser$many$go,
        'Parser.many': Parser$many,
        'Parser.Error.new': Parser$Error$new,
        'Parser.Reply.fail': Parser$Reply$fail,
        'Maybe.some': Maybe$some,
        'Maybe': Maybe,
        'Maybe.none': Maybe$none,
        'Parser.Error.maybe_combine': Parser$Error$maybe_combine,
        'Parser.State.new': Parser$State$new,
        'Parser.choice': Parser$choice,
        'Parser': Parser,
        'Unit.new': Unit$new,
        'String.cons': String$cons,
        'String.concat': String$concat,
        'Cmp.as_eql': Cmp$as_eql,
        'Cmp.ltn': Cmp$ltn,
        'Cmp.gtn': Cmp$gtn,
        'Word.cmp.go': Word$cmp$go,
        'Cmp.eql': Cmp$eql,
        'Word.cmp': Word$cmp,
        'Word.eql': Word$eql,
        'Nat.succ': Nat$succ,
        'Nat.zero': Nat$zero,
        'U16.eql': U16$eql,
        'String.nil': String$nil,
        'Parser.text.go': Parser$text$go,
        'Parser.text': Parser$text,
        'Parser.eof': Parser$eof,
        'Parser.one': Parser$one,
        'Litereum.parse.ignore': Litereum$parse$ignore,
        'Litereum.parse.text': Litereum$parse$text,
        'Parser.letter': Parser$letter,
        'Bool.and': Bool$and,
        'Cmp.as_lte': Cmp$as_lte,
        'Word.lte': Word$lte,
        'U16.lte': U16$lte,
        'U16.btw': U16$btw,
        'Litereum.parse.letter': Litereum$parse$letter,
        'List.fold': List$fold,
        'Litereum.parse.name': Litereum$parse$name,
        'Litereum.Transaction.new_name': Litereum$Transaction$new_name,
        'Parser.wrap': Parser$wrap,
        'Parser.maybe': Parser$maybe,
        'Pair': Pair,
        'Litereum.Type.effect': Litereum$Type$effect,
        'Litereum.Type.word': Litereum$Type$word,
        'Litereum.Type.data': Litereum$Type$data,
        'Litereum.parse.type': Litereum$parse$type,
        'Pair.new': Pair$new,
        'Litereum.parse.ann': Litereum$parse$ann,
        'List.mapped': List$mapped,
        'Litereum.Constructor.new': Litereum$Constructor$new,
        'Litereum.parse.constructor': Litereum$parse$constructor,
        'Litereum.Data.new': Litereum$Data$new,
        'Litereum.parse.data': Litereum$parse$data,
        'Litereum.Transaction.new_data': Litereum$Transaction$new_data,
        'Litereum.Term.let': Litereum$Term$let,
        'Litereum.parse.term.let': Litereum$parse$term$let,
        'Litereum.Term.create': Litereum$Term$create,
        'Litereum.parse.term.create': Litereum$parse$term$create,
        'Maybe.bind': Maybe$bind,
        'Maybe.monad': Maybe$monad,
        'BBT.lookup': BBT$lookup,
        'Cmp.as_ltn': Cmp$as_ltn,
        'Word.ltn': Word$ltn,
        'U16.ltn': U16$ltn,
        'U16.cmp': U16$cmp,
        'String.cmp': String$cmp,
        'Map.get': Map$get,
        'Litereum.get_data': Litereum$get_data,
        'Parser.fail': Parser$fail,
        'Litereum.parse.term.match.cases': Litereum$parse$term$match$cases,
        'Litereum.Term.match': Litereum$Term$match,
        'Litereum.parse.term.match': Litereum$parse$term$match,
        'Parser.many1': Parser$many1,
        'Parser.digit': Parser$digit,
        'Nat.add': Nat$add,
        'Nat.mul': Nat$mul,
        'Nat.from_base.go': Nat$from_base$go,
        'Nat.from_base': Nat$from_base,
        'Parser.nat': Parser$nat,
        'Nat.gte': Nat$gte,
        'Nat.pow.aux': Nat$pow$aux,
        'Nat.pow': Nat$pow,
        'Litereum.Term.word': Litereum$Term$word,
        'U64.new': U64$new,
        'Nat.apply': Nat$apply,
        'Word': Word,
        'Word.e': Word$e,
        'Word.i': Word$i,
        'Word.o': Word$o,
        'Word.inc': Word$inc,
        'Word.zero': Word$zero,
        'Nat.to_word': Nat$to_word,
        'Nat.to_u64': Nat$to_u64,
        'Litereum.parse.term.word': Litereum$parse$term$word,
        'Litereum.Term.compare': Litereum$Term$compare,
        'Litereum.parse.term.compare': Litereum$parse$term$compare,
        'Litereum.Operation.add': Litereum$Operation$add,
        'Litereum.Operation.sub': Litereum$Operation$sub,
        'Litereum.Operation.mul': Litereum$Operation$mul,
        'Litereum.Operation.div': Litereum$Operation$div,
        'Litereum.Operation.mod': Litereum$Operation$mod,
        'Litereum.Operation.or': Litereum$Operation$or,
        'Litereum.Operation.and': Litereum$Operation$and,
        'Litereum.Operation.xor': Litereum$Operation$xor,
        'Litereum.parse.term.operation': Litereum$parse$term$operation,
        'Litereum.Term.operate': Litereum$Term$operate,
        'Litereum.parse.term.operate': Litereum$parse$term$operate,
        'Litereum.Term.store': Litereum$Term$store,
        'Litereum.parse.term.store': Litereum$parse$term$store,
        'Litereum.Term.bind': Litereum$Term$bind,
        'Litereum.parse.term.bind': Litereum$parse$term$bind,
        'Litereum.Term.return': Litereum$Term$return,
        'Litereum.parse.term.return': Litereum$parse$term$return,
        'Litereum.Term.call': Litereum$Term$call,
        'Litereum.parse.term.call': Litereum$parse$term$call,
        'Litereum.Term.var': Litereum$Term$var,
        'Litereum.parse.term.var': Litereum$parse$term$var,
        'Litereum.parse.term': Litereum$parse$term,
        'Litereum.Bond.new': Litereum$Bond$new,
        'Litereum.parse.bond': Litereum$parse$bond,
        'Litereum.Transaction.new_bond': Litereum$Transaction$new_bond,
        'Litereum.Eval.new': Litereum$Eval$new,
        'Litereum.parse.eval': Litereum$parse$eval,
        'Litereum.Transaction.new_eval': Litereum$Transaction$new_eval,
        'Litereum.parse.transaction': Litereum$parse$transaction,
        'Litereum.parse.block': Litereum$parse$block,
        'IO': IO,
        'Nat.ltn': Nat$ltn,
        'String.length.go': String$length$go,
        'String.length': String$length,
        'String.flatten.go': String$flatten$go,
        'String.flatten': String$flatten,
        'String.join.go': String$join$go,
        'String.join': String$join,
        'Kind.Code.highlight.end': Kind$Code$highlight$end,
        'Maybe.extract': Maybe$extract,
        'Nat.is_zero': Nat$is_zero,
        'Nat.double': Nat$double,
        'Nat.pred': Nat$pred,
        'String.reverse.go': String$reverse$go,
        'String.reverse': String$reverse,
        'String.pad_right': String$pad_right,
        'String.pad_left': String$pad_left,
        'Either': Either,
        'Either.left': Either$left,
        'Either.right': Either$right,
        'Nat.sub_rem': Nat$sub_rem,
        'Nat.div_mod.go': Nat$div_mod$go,
        'Nat.div_mod': Nat$div_mod,
        'Nat.to_base.go': Nat$to_base$go,
        'Nat.to_base': Nat$to_base,
        'Nat.mod.go': Nat$mod$go,
        'Nat.mod': Nat$mod,
        'Nat.lte': Nat$lte,
        'List.at': List$at,
        'Nat.show_digit': Nat$show_digit,
        'Nat.to_string_base': Nat$to_string_base,
        'Nat.show': Nat$show,
        'Bool.not': Bool$not,
        'U16.new': U16$new,
        'Nat.to_u16': Nat$to_u16,
        'Kind.Code.color': Kind$Code$color,
        'Nat.eql': Nat$eql,
        'List.take': List$take,
        'Kind.Code.highlight.go': Kind$Code$highlight$go,
        'Kind.Code.highlight': Kind$Code$highlight,
        'IO.ask': IO$ask,
        'IO.bind': IO$bind,
        'IO.end': IO$end,
        'IO.monad': IO$monad,
        'IO.put_string': IO$put_string,
        'IO.print': IO$print,
        'Bits.e': Bits$e,
        'Bits.o': Bits$o,
        'Word.subber': Word$subber,
        'Word.sub': Word$sub,
        'U16.sub': U16$sub,
        'Word.adder': Word$adder,
        'Word.add': Word$add,
        'U16.add': U16$add,
        'Pair.fst': Pair$fst,
        'Nat.div': Nat$div,
        'Bits.i': Bits$i,
        'Litereum.serialize.fixlen': Litereum$serialize$fixlen,
        'Word.fold': Word$fold,
        'Word.to_nat': Word$to_nat,
        'U16.to_nat': U16$to_nat,
        'Bits.concat': Bits$concat,
        'Litereum.serialize.name.new': Litereum$serialize$name$new,
        'Litereum.serialize.varlen.go': Litereum$serialize$varlen$go,
        'Litereum.serialize.varlen': Litereum$serialize$varlen,
        'Litereum.serialize.name': Litereum$serialize$name,
        'Litereum.serialize.list': Litereum$serialize$list,
        'Litereum.serialize.type': Litereum$serialize$type,
        'Litereum.serialize.constructor': Litereum$serialize$constructor,
        'Litereum.serialize.data': Litereum$serialize$data,
        'List.find_index.go': List$find_index$go,
        'List.find_index': List$find_index,
        'String.eql': String$eql,
        'Litereum.serialize.name.local': Litereum$serialize$name$local,
        'List.map': List$map,
        'List.concat': List$concat,
        'Litereum.serialize.cases': Litereum$serialize$cases,
        'Maybe.default': Maybe$default,
        'Litereum.get_constructors': Litereum$get_constructors,
        'U64.to_nat': U64$to_nat,
        'Litereum.get_bond': Litereum$get_bond,
        'Litereum.serialize.term': Litereum$serialize$term,
        'Litereum.serialize.bond': Litereum$serialize$bond,
        'Litereum.serialize.eval': Litereum$serialize$eval,
        'Litereum.serialize.transaction': Litereum$serialize$transaction,
        'Litereum.serialize.block': Litereum$serialize$block,
        'Bits.is_empty': Bits$is_empty,
        'Litereum.deserialize.fixlen': Litereum$deserialize$fixlen,
        'U16.from_nat': U16$from_nat,
        'Litereum.deserialize.name.new': Litereum$deserialize$name$new,
        'Litereum.deserialize.varlen.go': Litereum$deserialize$varlen$go,
        'Nat.sub': Nat$sub,
        'Litereum.deserialize.varlen': Litereum$deserialize$varlen,
        'Litereum.deserialize.name': Litereum$deserialize$name,
        'Litereum.deserialize.list': Litereum$deserialize$list,
        'Litereum.deserialize.type': Litereum$deserialize$type,
        'Litereum.deserialize.constructor': Litereum$deserialize$constructor,
        'Litereum.deserialize.data': Litereum$deserialize$data,
        'U64.from_nat': U64$from_nat,
        'List.get': List$get,
        'Litereum.deserialize.name.local': Litereum$deserialize$name$local,
        'Litereum.deserialize.cases': Litereum$deserialize$cases,
        'Litereum.deserialize.term': Litereum$deserialize$term,
        'Litereum.deserialize.bond': Litereum$deserialize$bond,
        'Litereum.deserialize.eval': Litereum$deserialize$eval,
        'Litereum.deserialize.transaction': Litereum$deserialize$transaction,
        'Litereum.deserialize.block': Litereum$deserialize$block,
        'Bits.hex.encode': Bits$hex$encode,
        'Bits.eql': Bits$eql,
        'BBT': BBT,
        'Map': Map,
        'Litereum.World.new': Litereum$World$new,
        'BBT.bin': BBT$bin,
        'U32.new': U32$new,
        'Nat.to_u32': Nat$to_u32,
        'BBT.tip': BBT$tip,
        'BBT.singleton': BBT$singleton,
        'BBT.size': BBT$size,
        'U32.add': U32$add,
        'Word.shift_left.one.go': Word$shift_left$one$go,
        'Word.shift_left.one': Word$shift_left$one,
        'Word.shift_left': Word$shift_left,
        'Word.mul.go': Word$mul$go,
        'Word.to_zero': Word$to_zero,
        'Word.mul': Word$mul,
        'U32.mul': U32$mul,
        'BBT.w': BBT$w,
        'U32.ltn': U32$ltn,
        'U32.from_nat': U32$from_nat,
        'BBT.node': BBT$node,
        'Cmp.as_gtn': Cmp$as_gtn,
        'Word.gtn': Word$gtn,
        'U32.gtn': U32$gtn,
        'BBT.balance': BBT$balance,
        'BBT.insert': BBT$insert,
        'Map.set': Map$set,
        'Litereum.Entry.data': Litereum$Entry$data,
        'Litereum.Entry.bond': Litereum$Entry$bond,
        'Litereum.extend': Litereum$extend,
        'Pair.snd': Pair$snd,
        'BBT.from_list.go': BBT$from_list$go,
        'BBT.from_list': BBT$from_list,
        'Map.from_list': Map$from_list,
        'Litereum.equal': Litereum$equal,
        'List.zip': List$zip,
        'List.all': List$all,
        'Maybe.mapped': Maybe$mapped,
        'List.ifind.go': List$ifind$go,
        'List.ifind': List$ifind,
        'Litereum.get_constructor_value': Litereum$get_constructor_value,
        'List.length': List$length,
        'List.zip_with': List$zip_with,
        'List.zipped_with': List$zipped_with,
        'List.and': List$and,
        'Litereum.check': Litereum$check,
        'Litereum.sanitize.many': Litereum$sanitize$many,
        'Triple.new': Triple$new,
        'Litereum.rename': Litereum$rename,
        'List.for': List$for,
        'Litereum.sanitize.cases': Litereum$sanitize$cases,
        'Triple': Triple,
        'Litereum.rename.many': Litereum$rename$many,
        'Litereum.sanitize': Litereum$sanitize,
        'Litereum.Runtime': Litereum$Runtime,
        'Litereum.Runtime.new': Litereum$Runtime$new,
        'Litereum.get_constructor_index': Litereum$get_constructor_index,
        'U64.ltn': U64$ltn,
        'U64.eql': U64$eql,
        'U64.cmp': U64$cmp,
        'U64.add': U64$add,
        'U64.sub': U64$sub,
        'U64.mul': U64$mul,
        'Word.bit_length.go': Word$bit_length$go,
        'Word.bit_length': Word$bit_length,
        'Cmp.as_gte': Cmp$as_gte,
        'Word.gte': Word$gte,
        'Word.or': Word$or,
        'Word.shift_right.one.go': Word$shift_right$one$go,
        'Word.shift_right.one': Word$shift_right$one,
        'Word.shift_right': Word$shift_right,
        'Word.div.go': Word$div$go,
        'Word.div': Word$div,
        'U64.div': U64$div,
        'Word.mod': Word$mod,
        'U64.mod': U64$mod,
        'U64.or': U64$or,
        'Word.and': Word$and,
        'U64.and': U64$and,
        'Word.xor': Word$xor,
        'U64.xor': U64$xor,
        'Litereum.reduce': Litereum$reduce,
        'Litereum.normalize.many': Litereum$normalize$many,
        'Litereum.normalize.cases': Litereum$normalize$cases,
        'Litereum.normalize.bound': Litereum$normalize$bound,
        'Litereum.normalize': Litereum$normalize,
        'Litereum.run': Litereum$run,
        'Litereum.show.type': Litereum$show$type,
        'Word.show': Word$show,
        'U64.show': U64$show,
        'String.is_empty': String$is_empty,
        'Litereum.show.term': Litereum$show$term,
        'Litereum.transact': Litereum$transact,
        'Litereum.api.run.go.transactions': Litereum$api$run$go$transactions,
        'Litereum.api.run.go': Litereum$api$run$go,
        'Litereum.genesis': Litereum$genesis,
        'Litereum.api.run': Litereum$api$run,
        'Litereum': Litereum,
    };
})();
module.exports['$main$']();