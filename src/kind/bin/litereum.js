module.exports = (function() {
    function word_to_u16(w) {
        var u = 0;
        for (var i = 0; i < 16; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u16_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 16; ++i) {
            w = {
                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u16_to_bits(x) {
        var s = '';
        for (var i = 0; i < 16; ++i) {
            s = (x & 1 ? '1' : '0') + s;
            x = x >>> 1;
        }
        return s;
    };

    function word_to_u32(w) {
        var u = 0;
        for (var i = 0; i < 32; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u32_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 32; ++i) {
            w = {
                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u32_for(state, from, til, func) {
        for (var i = from; i < til; ++i) {
            state = func(i)(state);
        }
        return state;
    };

    function word_to_u64(w) {
        var u = 0n;
        for (var i = 0n; i < 64n; i += 1n) {
            u = u | (w._ === 'Word.i' ? 1n << i : 0n);
            w = w.pred;
        };
        return u;
    };

    function u64_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0n; i < 64n; i += 1n) {
            w = {
                _: (u >> (64n - i - 1n)) & 1n ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };
    var list_for = list => nil => cons => {
        while (list._ !== 'List.nil') {
            nil = cons(list.head)(nil);
            list = list.tail;
        }
        return nil;
    };
    var list_length = list => {
        var len = 0;
        while (list._ === 'List.cons') {
            len += 1;
            list = list.tail;
        };
        return BigInt(len);
    };
    const inst_unit = x => x(null);
    const elim_unit = (x => {
        var $1 = (() => c0 => {
            var self = x;
            switch ("unit") {
                case 'unit':
                    var $0 = c0;
                    return $0;
            };
        })();
        return $1;
    });
    const inst_bool = x => x(true)(false);
    const elim_bool = (x => {
        var $4 = (() => c0 => c1 => {
            var self = x;
            if (self) {
                var $2 = c0;
                return $2;
            } else {
                var $3 = c1;
                return $3;
            };
        })();
        return $4;
    });
    const inst_nat = x => x(0n)(x0 => 1n + x0);
    const elim_nat = (x => {
        var $8 = (() => c0 => c1 => {
            var self = x;
            if (self === 0n) {
                var $5 = c0;
                return $5;
            } else {
                var $6 = (self - 1n);
                var $7 = c1($6);
                return $7;
            };
        })();
        return $8;
    });
    const inst_bits = x => x('')(x0 => x0 + '0')(x0 => x0 + '1');
    const elim_bits = (x => {
        var $14 = (() => c0 => c1 => c2 => {
            var self = x;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $9 = self.slice(0, -1);
                    var $10 = c1($9);
                    return $10;
                case 'i':
                    var $11 = self.slice(0, -1);
                    var $12 = c2($11);
                    return $12;
                case 'e':
                    var $13 = c0;
                    return $13;
            };
        })();
        return $14;
    });
    const inst_u16 = x => x(x0 => word_to_u16(x0));
    const elim_u16 = (x => {
        var $17 = (() => c0 => {
            var self = x;
            switch ('u16') {
                case 'u16':
                    var $15 = u16_to_word(self);
                    var $16 = c0($15);
                    return $16;
            };
        })();
        return $17;
    });
    const inst_u32 = x => x(x0 => word_to_u32(x0));
    const elim_u32 = (x => {
        var $20 = (() => c0 => {
            var self = x;
            switch ('u32') {
                case 'u32':
                    var $18 = u32_to_word(self);
                    var $19 = c0($18);
                    return $19;
            };
        })();
        return $20;
    });
    const inst_u64 = x => x(x0 => word_to_u64(x0));
    const elim_u64 = (x => {
        var $23 = (() => c0 => {
            var self = x;
            switch ('u64') {
                case 'u64':
                    var $21 = u64_to_word(self);
                    var $22 = c0($21);
                    return $22;
            };
        })();
        return $23;
    });
    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));
    const elim_string = (x => {
        var $28 = (() => c0 => c1 => {
            var self = x;
            if (self.length === 0) {
                var $24 = c0;
                return $24;
            } else {
                var $25 = self.charCodeAt(0);
                var $26 = self.slice(1);
                var $27 = c1($25)($26);
                return $27;
            };
        })();
        return $28;
    });
    var run = (p) => {
        if (typeof window === 'undefined') {
            var rl = eval("require('readline')").createInterface({
                input: process.stdin,
                output: process.stdout,
                terminal: false
            });
            var fs = eval("require('fs')");
            var pc = eval("process");
            var ht = eval("require('http')");
            var hs = eval("require('https')");
            var dg = eval("require('dgram')");
        } else {
            var rl = {
                question: (x, f) => f(''),
                close: () => {}
            };
            var fs = {
                readFileSync: () => ''
            };
            var pc = {
                exit: () => {},
                argv: []
            };
            var ht = null;
            var hs = null;
            var dg = null;
        };
        var lib = {
            rl,
            fs,
            pc,
            ht,
            hs,
            dg
        };
        return run_io(lib, p)
            .then((x) => {
                rl.close();
                return x;
            })
            .catch((e) => {
                rl.close();
                throw e;
            });
    };
    var set_file = (lib, param) => {
        var path = '';
        for (var i = 0; i < param.length && param[i] !== '='; ++i) {
            path += param[i];
        };
        var data = param.slice(i + 1);
        lib.fs.mkdirSync(path.split('/').slice(0, -1).join('/'), {
            recursive: true
        });
        lib.fs.writeFileSync(path, data);
        return '';
    };
    var del_file = (lib, param) => {
        try {
            lib.fs.unlinkSync(param);
            return '';
        } catch (e) {
            if (e.message.indexOf('EPERM') !== -1) {
                lib.fs.rmdirSync(param);
                return '';
            } else {
                throw e;
            }
        }
    };
    var get_file = (lib, param) => {
        return lib.fs.readFileSync(param, 'utf8');
    }
    var get_dir = (lib, param) => {
        return lib.fs.readdirSync(param).join(';');
    };
    var get_file_mtime = (lib, param) => {
        return String(lib.fs.statSync(param).mtime.getTime());
    };
    var request = (lib, param) => {
        if (typeof fetch === 'undefined') {
            return new Promise((res, err) => {
                (/^https/.test(param) ? lib.hs : lib.ht).get(param, r => {
                    let data = '';
                    r.on('data', chunk => {
                        data += chunk;
                    });
                    r.on('end', () => res(data));
                }).on('error', e => res(''));
            });
        } else {
            return fetch(param).then(res => res.text()).catch(e => '');
        }
    }
    let PORTS = {};

    function init_udp(lib, port_num) {
        return new Promise((resolve, reject) => {
            if (!PORTS[port_num]) {
                PORTS[port_num] = {
                    socket: lib.dg.createSocket('udp4'),
                    mailbox: []
                };
                PORTS[port_num].socket.bind(port_num);
                PORTS[port_num].socket.on('listening', () => resolve(PORTS[port_num]));
                PORTS[port_num].socket.on('message', (data, peer) => {
                    var ip = peer.address;
                    var port = peer.port;
                    PORTS[port_num].mailbox.push({
                        ip: peer.address,
                        port: peer.port,
                        data: data.toString('hex')
                    });
                })
                PORTS[port_num].socket.on('error', (err) => {
                    console.log('err');
                    reject('UDP init error.');
                });
            } else {
                resolve(PORTS[port_num]);
            }
        });
    }
    async function send_udp(lib, port_num, to_ip, to_port_num, data) {
        var port = await init_udp(lib, port_num);
        port.socket.send(Buffer.from(data, 'hex'), to_port_num, to_ip);
        return null;
    }
    async function recv_udp(lib, port_num) {
        var port = await init_udp(lib, port_num);
        var mailbox = port.mailbox;
        port.mailbox = [];
        return mailbox;
    }
    async function stop_udp(lib, port_num) {
        PORTS[port_num].socket.close();
        delete PORTS[port_num];
    }
    var file_error = e => {
        if (e.message.indexOf('NOENT') !== -1) {
            return '';
        } else {
            throw e;
        }
    };
    var io_action = {
        print: async (lib, param) => {
            console.log(param);
            return '';
        },
        put_string: async (lib, param) => {
            process.stdout.write(param);
            return '';
        },
        get_file: async (lib, param) => {
            try {
                return get_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        set_file: async (lib, param) => {
            try {
                return set_file(lib, param)
            } catch (e) {
                return file_error(e);
            }
        },
        del_file: async (lib, param) => {
            try {
                return del_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_dir: async (lib, param) => {
            try {
                return get_dir(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_file_mtime: async (lib, param) => {
            try {
                return get_file_mtime(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        exit: async (lib, param) => {
            lib.pc.exit();
            return '';
        },
        request: async (lib, param) => {
            return request(lib, param);
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        get_line: async (lib, param) => {
            return await new Promise((res, err) => {
                lib.rl.question(param, (line) => res(line));
            });
        },
        get_args: async (lib, param) => {
            return lib.pc.argv[2] || '';
        },
        init_udp: async (lib, param) => {
            try {
                await init_udp(lib, Number(param));
                return '';
            } catch (e) {
                return '';
            }
        },
        send_udp: async (lib, param) => {
            let [port_num, to_ip, to_port_num, data] = param.split(';');
            await send_udp(lib, Number(port_num), to_ip, Number(to_port_num), data);
            return '';
        },
        recv_udp: async (lib, param) => {
            var mailbox = await recv_udp(lib, Number(param));
            var reply = mailbox.map(x => x.ip + ',' + x.port + ',' + x.data).join(';');
            return reply;
        },
        stop_udp: async (lib, param) => {
            await stop_udp(lib, Number(param));
            return '';
        },
        sleep: async (lib, param) => {
            return await new Promise((resolve, reject) => {
                setTimeout(() => resolve(''), Number(param));
            });
        },
    };
    var run_io = async (lib, io, depth = 0) => {
        switch (io._) {
            case 'IO.end':
                return Promise.resolve(io.value);
            case 'IO.ask':
                var action = io_action[io.query];
                var answer = await action(lib, io.param);
                return await run_io(lib, io.then(answer), depth + 1);
        }
    };

    function Parser$Reply$(_V$1) {
        var $29 = null;
        return $29;
    };
    const Parser$Reply = x0 => Parser$Reply$(x0);

    function List$(_A$1) {
        var $30 = null;
        return $30;
    };
    const List = x0 => List$(x0);

    function Parser$Reply$error$(_err$2) {
        var $31 = ({
            _: 'Parser.Reply.error',
            'err': _err$2
        });
        return $31;
    };
    const Parser$Reply$error = x0 => Parser$Reply$error$(x0);
    const Bool$false = false;
    const Bool$true = true;
    const Nat$gtn = a0 => a1 => (a0 > a1);

    function Parser$Error$combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Parser.Error.new':
                var $33 = self.idx;
                var self = _b$2;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $35 = self.idx;
                        var self = ($33 > $35);
                        if (self) {
                            var $37 = _a$1;
                            var $36 = $37;
                        } else {
                            var $38 = _b$2;
                            var $36 = $38;
                        };
                        var $34 = $36;
                        break;
                };
                var $32 = $34;
                break;
        };
        return $32;
    };
    const Parser$Error$combine = x0 => x1 => Parser$Error$combine$(x0, x1);

    function List$cons$(_head$2, _tail$3) {
        var $39 = ({
            _: 'List.cons',
            'head': _head$2,
            'tail': _tail$3
        });
        return $39;
    };
    const List$cons = x0 => x1 => List$cons$(x0, x1);

    function Parser$Reply$value$(_pst$2, _val$3) {
        var $40 = ({
            _: 'Parser.Reply.value',
            'pst': _pst$2,
            'val': _val$3
        });
        return $40;
    };
    const Parser$Reply$value = x0 => x1 => Parser$Reply$value$(x0, x1);

    function List$reverse$go$(_xs$2, _res$3) {
        var List$reverse$go$ = (_xs$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _res$3]
        });
        var List$reverse$go = _xs$2 => _res$3 => List$reverse$go$(_xs$2, _res$3);
        var arg = [_xs$2, _res$3];
        while (true) {
            let [_xs$2, _res$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $41 = self.head;
                        var $42 = self.tail;
                        var $43 = List$reverse$go$($42, List$cons$($41, _res$3));
                        return $43;
                    case 'List.nil':
                        var $44 = _res$3;
                        return $44;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$reverse$go = x0 => x1 => List$reverse$go$(x0, x1);
    const List$nil = ({
        _: 'List.nil'
    });

    function List$reverse$(_xs$2) {
        var $45 = List$reverse$go$(_xs$2, List$nil);
        return $45;
    };
    const List$reverse = x0 => List$reverse$(x0);

    function Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5) {
        var Parser$until$go$ = (_until$2, _parse$3, _values$4, _pst$5) => ({
            ctr: 'TCO',
            arg: [_until$2, _parse$3, _values$4, _pst$5]
        });
        var Parser$until$go = _until$2 => _parse$3 => _values$4 => _pst$5 => Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5);
        var arg = [_until$2, _parse$3, _values$4, _pst$5];
        while (true) {
            let [_until$2, _parse$3, _values$4, _pst$5] = arg;
            var R = (() => {
                var _until_reply$6 = _until$2(_pst$5);
                var self = _until_reply$6;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $47 = self.err;
                        var _reply$8 = _parse$3(_pst$5);
                        var self = _reply$8;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $49 = self.err;
                                var $50 = Parser$Reply$error$(Parser$Error$combine$($49, $47));
                                var $48 = $50;
                                break;
                            case 'Parser.Reply.value':
                                var $51 = self.pst;
                                var $52 = self.val;
                                var $53 = Parser$until$go$(_until$2, _parse$3, List$cons$($52, _values$4), $51);
                                var $48 = $53;
                                break;
                        };
                        var $46 = $48;
                        break;
                    case 'Parser.Reply.value':
                        var $54 = self.pst;
                        var $55 = Parser$Reply$value$($54, List$reverse$(_values$4));
                        var $46 = $55;
                        break;
                };
                return $46;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$until$go = x0 => x1 => x2 => x3 => Parser$until$go$(x0, x1, x2, x3);

    function Parser$until$(_until$2, _parse$3) {
        var $56 = Parser$until$go(_until$2)(_parse$3)(List$nil);
        return $56;
    };
    const Parser$until = x0 => x1 => Parser$until$(x0, x1);

    function Parser$many$go$(_parse$2, _values$3, _pst$4) {
        var Parser$many$go$ = (_parse$2, _values$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_parse$2, _values$3, _pst$4]
        });
        var Parser$many$go = _parse$2 => _values$3 => _pst$4 => Parser$many$go$(_parse$2, _values$3, _pst$4);
        var arg = [_parse$2, _values$3, _pst$4];
        while (true) {
            let [_parse$2, _values$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var self = _parse$2(_pst$4);
                        switch (self._) {
                            case 'Parser.Reply.value':
                                var $58 = self.pst;
                                var $59 = self.val;
                                var $60 = Parser$many$go$(_parse$2, (_xs$12 => {
                                    var $61 = _values$3(List$cons$($59, _xs$12));
                                    return $61;
                                }), $58);
                                var $57 = $60;
                                break;
                            case 'Parser.Reply.error':
                                var $62 = Parser$Reply$value$(_pst$4, _values$3(List$nil));
                                var $57 = $62;
                                break;
                        };
                        return $57;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$many$go = x0 => x1 => x2 => Parser$many$go$(x0, x1, x2);

    function Parser$many$(_parser$2) {
        var $63 = Parser$many$go(_parser$2)((_x$3 => {
            var $64 = _x$3;
            return $64;
        }));
        return $63;
    };
    const Parser$many = x0 => Parser$many$(x0);

    function Parser$Error$new$(_nam$1, _ini$2, _idx$3, _msg$4) {
        var $65 = ({
            _: 'Parser.Error.new',
            'nam': _nam$1,
            'ini': _ini$2,
            'idx': _idx$3,
            'msg': _msg$4
        });
        return $65;
    };
    const Parser$Error$new = x0 => x1 => x2 => x3 => Parser$Error$new$(x0, x1, x2, x3);

    function Parser$Reply$fail$(_nam$2, _ini$3, _idx$4, _msg$5) {
        var $66 = Parser$Reply$error$(Parser$Error$new$(_nam$2, _ini$3, _idx$4, _msg$5));
        return $66;
    };
    const Parser$Reply$fail = x0 => x1 => x2 => x3 => Parser$Reply$fail$(x0, x1, x2, x3);

    function Maybe$some$(_value$2) {
        var $67 = ({
            _: 'Maybe.some',
            'value': _value$2
        });
        return $67;
    };
    const Maybe$some = x0 => Maybe$some$(x0);

    function Maybe$(_A$1) {
        var $68 = null;
        return $68;
    };
    const Maybe = x0 => Maybe$(x0);
    const Maybe$none = ({
        _: 'Maybe.none'
    });

    function Parser$Error$maybe_combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Maybe.some':
                var $70 = self.value;
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $72 = self.value;
                        var $73 = Maybe$some$(Parser$Error$combine$($70, $72));
                        var $71 = $73;
                        break;
                    case 'Maybe.none':
                        var $74 = _a$1;
                        var $71 = $74;
                        break;
                };
                var $69 = $71;
                break;
            case 'Maybe.none':
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.none':
                        var $76 = Maybe$none;
                        var $75 = $76;
                        break;
                    case 'Maybe.some':
                        var $77 = _b$2;
                        var $75 = $77;
                        break;
                };
                var $69 = $75;
                break;
        };
        return $69;
    };
    const Parser$Error$maybe_combine = x0 => x1 => Parser$Error$maybe_combine$(x0, x1);

    function Parser$State$new$(_err$1, _nam$2, _ini$3, _idx$4, _str$5) {
        var $78 = ({
            _: 'Parser.State.new',
            'err': _err$1,
            'nam': _nam$2,
            'ini': _ini$3,
            'idx': _idx$4,
            'str': _str$5
        });
        return $78;
    };
    const Parser$State$new = x0 => x1 => x2 => x3 => x4 => Parser$State$new$(x0, x1, x2, x3, x4);

    function Parser$choice$(_pars$2, _pst$3) {
        var Parser$choice$ = (_pars$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_pars$2, _pst$3]
        });
        var Parser$choice = _pars$2 => _pst$3 => Parser$choice$(_pars$2, _pst$3);
        var arg = [_pars$2, _pst$3];
        while (true) {
            let [_pars$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $79 = self.err;
                        var $80 = self.nam;
                        var $81 = self.ini;
                        var $82 = self.idx;
                        var $83 = self.str;
                        var self = _pars$2;
                        switch (self._) {
                            case 'List.cons':
                                var $85 = self.head;
                                var $86 = self.tail;
                                var _parsed$11 = $85(_pst$3);
                                var self = _parsed$11;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $88 = self.err;
                                        var _cur_err$13 = Maybe$some$($88);
                                        var _far_err$14 = Parser$Error$maybe_combine$($79, _cur_err$13);
                                        var _new_pst$15 = Parser$State$new$(_far_err$14, $80, $81, $82, $83);
                                        var $89 = Parser$choice$($86, _new_pst$15);
                                        var $87 = $89;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $90 = self.pst;
                                        var $91 = self.val;
                                        var $92 = Parser$Reply$value$($90, $91);
                                        var $87 = $92;
                                        break;
                                };
                                var $84 = $87;
                                break;
                            case 'List.nil':
                                var self = $79;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $94 = self.value;
                                        var $95 = Parser$Reply$error$($94);
                                        var $93 = $95;
                                        break;
                                    case 'Maybe.none':
                                        var $96 = Parser$Reply$fail$($80, $81, $82, "No parse.");
                                        var $93 = $96;
                                        break;
                                };
                                var $84 = $93;
                                break;
                        };
                        return $84;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$choice = x0 => x1 => Parser$choice$(x0, x1);

    function Parser$(_V$1) {
        var $97 = null;
        return $97;
    };
    const Parser = x0 => Parser$(x0);
    const Unit$new = null;

    function String$cons$(_head$1, _tail$2) {
        var $98 = (String.fromCharCode(_head$1) + _tail$2);
        return $98;
    };
    const String$cons = x0 => x1 => String$cons$(x0, x1);
    const String$concat = a0 => a1 => (a0 + a1);

    function Cmp$as_eql$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.gtn':
                var $100 = Bool$false;
                var $99 = $100;
                break;
            case 'Cmp.eql':
                var $101 = Bool$true;
                var $99 = $101;
                break;
        };
        return $99;
    };
    const Cmp$as_eql = x0 => Cmp$as_eql$(x0);
    const Cmp$ltn = ({
        _: 'Cmp.ltn'
    });
    const Cmp$gtn = ({
        _: 'Cmp.gtn'
    });

    function Word$cmp$go$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $103 = self.pred;
                var $104 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $106 = self.pred;
                            var $107 = (_a$pred$10 => {
                                var $108 = Word$cmp$go$(_a$pred$10, $106, _c$4);
                                return $108;
                            });
                            var $105 = $107;
                            break;
                        case 'Word.i':
                            var $109 = self.pred;
                            var $110 = (_a$pred$10 => {
                                var $111 = Word$cmp$go$(_a$pred$10, $109, Cmp$ltn);
                                return $111;
                            });
                            var $105 = $110;
                            break;
                        case 'Word.e':
                            var $112 = (_a$pred$8 => {
                                var $113 = _c$4;
                                return $113;
                            });
                            var $105 = $112;
                            break;
                    };
                    var $105 = $105($103);
                    return $105;
                });
                var $102 = $104;
                break;
            case 'Word.i':
                var $114 = self.pred;
                var $115 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $117 = self.pred;
                            var $118 = (_a$pred$10 => {
                                var $119 = Word$cmp$go$(_a$pred$10, $117, Cmp$gtn);
                                return $119;
                            });
                            var $116 = $118;
                            break;
                        case 'Word.i':
                            var $120 = self.pred;
                            var $121 = (_a$pred$10 => {
                                var $122 = Word$cmp$go$(_a$pred$10, $120, _c$4);
                                return $122;
                            });
                            var $116 = $121;
                            break;
                        case 'Word.e':
                            var $123 = (_a$pred$8 => {
                                var $124 = _c$4;
                                return $124;
                            });
                            var $116 = $123;
                            break;
                    };
                    var $116 = $116($114);
                    return $116;
                });
                var $102 = $115;
                break;
            case 'Word.e':
                var $125 = (_b$5 => {
                    var $126 = _c$4;
                    return $126;
                });
                var $102 = $125;
                break;
        };
        var $102 = $102(_b$3);
        return $102;
    };
    const Word$cmp$go = x0 => x1 => x2 => Word$cmp$go$(x0, x1, x2);
    const Cmp$eql = ({
        _: 'Cmp.eql'
    });

    function Word$cmp$(_a$2, _b$3) {
        var $127 = Word$cmp$go$(_a$2, _b$3, Cmp$eql);
        return $127;
    };
    const Word$cmp = x0 => x1 => Word$cmp$(x0, x1);

    function Word$eql$(_a$2, _b$3) {
        var $128 = Cmp$as_eql$(Word$cmp$(_a$2, _b$3));
        return $128;
    };
    const Word$eql = x0 => x1 => Word$eql$(x0, x1);

    function Nat$succ$(_pred$1) {
        var $129 = 1n + _pred$1;
        return $129;
    };
    const Nat$succ = x0 => Nat$succ$(x0);
    const Nat$zero = 0n;
    const U16$eql = a0 => a1 => (a0 === a1);
    const String$nil = '';

    function Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4) {
        var Parser$text$go$ = (_ini_idx$1, _ini_txt$2, _text$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_ini_idx$1, _ini_txt$2, _text$3, _pst$4]
        });
        var Parser$text$go = _ini_idx$1 => _ini_txt$2 => _text$3 => _pst$4 => Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4);
        var arg = [_ini_idx$1, _ini_txt$2, _text$3, _pst$4];
        while (true) {
            let [_ini_idx$1, _ini_txt$2, _text$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var $130 = self.err;
                        var $131 = self.nam;
                        var $132 = self.ini;
                        var $133 = self.idx;
                        var $134 = self.str;
                        var self = _text$3;
                        if (self.length === 0) {
                            var $136 = Parser$Reply$value$(_pst$4, Unit$new);
                            var $135 = $136;
                        } else {
                            var $137 = self.charCodeAt(0);
                            var $138 = self.slice(1);
                            var self = $134;
                            if (self.length === 0) {
                                var _error_msg$12 = ("Expected \'" + (_ini_txt$2 + "\', found end of file."));
                                var $140 = Parser$Reply$fail$($131, $132, _ini_idx$1, _error_msg$12);
                                var $139 = $140;
                            } else {
                                var $141 = self.charCodeAt(0);
                                var $142 = self.slice(1);
                                var self = ($137 === $141);
                                if (self) {
                                    var _pst$14 = Parser$State$new$($130, $131, $132, Nat$succ$($133), $142);
                                    var $144 = Parser$text$go$(_ini_idx$1, _ini_txt$2, $138, _pst$14);
                                    var $143 = $144;
                                } else {
                                    var _chr$14 = String$cons$($141, String$nil);
                                    var _err$15 = ("Expected \'" + (_ini_txt$2 + ("\', found \'" + (_chr$14 + "\'."))));
                                    var $145 = Parser$Reply$fail$($131, $132, _ini_idx$1, _err$15);
                                    var $143 = $145;
                                };
                                var $139 = $143;
                            };
                            var $135 = $139;
                        };
                        return $135;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$text$go = x0 => x1 => x2 => x3 => Parser$text$go$(x0, x1, x2, x3);

    function Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $147 = self.idx;
                var self = Parser$text$go$($147, _text$1, _text$1, _pst$2);
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $149 = self.err;
                        var $150 = Parser$Reply$error$($149);
                        var $148 = $150;
                        break;
                    case 'Parser.Reply.value':
                        var $151 = self.pst;
                        var $152 = self.val;
                        var $153 = Parser$Reply$value$($151, $152);
                        var $148 = $153;
                        break;
                };
                var $146 = $148;
                break;
        };
        return $146;
    };
    const Parser$text = x0 => x1 => Parser$text$(x0, x1);

    function Parser$eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $155 = self.nam;
                var $156 = self.ini;
                var $157 = self.idx;
                var $158 = self.str;
                var self = $158;
                if (self.length === 0) {
                    var $160 = Parser$Reply$value$(_pst$1, Unit$new);
                    var $159 = $160;
                } else {
                    var $161 = self.charCodeAt(0);
                    var $162 = self.slice(1);
                    var $163 = Parser$Reply$fail$($155, $156, $157, "Expected end-of-file.");
                    var $159 = $163;
                };
                var $154 = $159;
                break;
        };
        return $154;
    };
    const Parser$eof = x0 => Parser$eof$(x0);

    function Parser$one$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $165 = self.err;
                var $166 = self.nam;
                var $167 = self.ini;
                var $168 = self.idx;
                var $169 = self.str;
                var self = $169;
                if (self.length === 0) {
                    var $171 = Parser$Reply$fail$($166, $167, $168, "Unexpected end of file.");
                    var $170 = $171;
                } else {
                    var $172 = self.charCodeAt(0);
                    var $173 = self.slice(1);
                    var _pst$9 = Parser$State$new$($165, $166, $167, Nat$succ$($168), $173);
                    var $174 = Parser$Reply$value$(_pst$9, $172);
                    var $170 = $174;
                };
                var $164 = $170;
                break;
        };
        return $164;
    };
    const Parser$one = x0 => Parser$one$(x0);
    const Litereum$parse$ignore = Parser$many$(Parser$choice(List$cons$(Parser$text(" "), List$cons$(Parser$text("\u{9}"), List$cons$(Parser$text("\u{d}"), List$cons$(Parser$text("\u{a}"), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $176 = self.err;
                var _reply$7 = Parser$text$("//", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $178 = self.err;
                        var self = $176;
                        switch (self._) {
                            case 'Maybe.some':
                                var $180 = self.value;
                                var $181 = Parser$Reply$error$(Parser$Error$combine$($180, $178));
                                var $179 = $181;
                                break;
                            case 'Maybe.none':
                                var $182 = Parser$Reply$error$($178);
                                var $179 = $182;
                                break;
                        };
                        var $177 = $179;
                        break;
                    case 'Parser.Reply.value':
                        var $183 = self.pst;
                        var self = $183;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $185 = self.err;
                                var $186 = self.nam;
                                var $187 = self.ini;
                                var $188 = self.idx;
                                var $189 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($176, $185), $186, $187, $188, $189);
                                var _end$16 = Parser$choice(List$cons$(Parser$text("\u{a}"), List$cons$(Parser$eof, List$nil)));
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $191 = self.err;
                                        var _reply$22 = Parser$until$(_end$16, Parser$one)(_reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $193 = self.err;
                                                var self = $191;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $195 = self.value;
                                                        var $196 = Parser$Reply$error$(Parser$Error$combine$($195, $193));
                                                        var $194 = $196;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $197 = Parser$Reply$error$($193);
                                                        var $194 = $197;
                                                        break;
                                                };
                                                var $192 = $194;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $198 = self.pst;
                                                var self = $198;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $200 = self.err;
                                                        var $201 = self.nam;
                                                        var $202 = self.ini;
                                                        var $203 = self.idx;
                                                        var $204 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($191, $200), $201, $202, $203, $204);
                                                        var $205 = Parser$Reply$value$(_reply$pst$30, Unit$new);
                                                        var $199 = $205;
                                                        break;
                                                };
                                                var $192 = $199;
                                                break;
                                        };
                                        var $190 = $192;
                                        break;
                                };
                                var $184 = $190;
                                break;
                        };
                        var $177 = $184;
                        break;
                };
                var $175 = $177;
                break;
        };
        return $175;
    }), List$nil)))))));

    function Litereum$parse$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $207 = self.err;
                var _reply$8 = Litereum$parse$ignore(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $209 = self.err;
                        var self = $207;
                        switch (self._) {
                            case 'Maybe.some':
                                var $211 = self.value;
                                var $212 = Parser$Reply$error$(Parser$Error$combine$($211, $209));
                                var $210 = $212;
                                break;
                            case 'Maybe.none':
                                var $213 = Parser$Reply$error$($209);
                                var $210 = $213;
                                break;
                        };
                        var $208 = $210;
                        break;
                    case 'Parser.Reply.value':
                        var $214 = self.pst;
                        var self = $214;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $216 = self.err;
                                var $217 = self.nam;
                                var $218 = self.ini;
                                var $219 = self.idx;
                                var $220 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($207, $216), $217, $218, $219, $220);
                                var $221 = Parser$text$(_text$1, _reply$pst$16);
                                var $215 = $221;
                                break;
                        };
                        var $208 = $215;
                        break;
                };
                var $206 = $208;
                break;
        };
        return $206;
    };
    const Litereum$parse$text = x0 => x1 => Litereum$parse$text$(x0, x1);

    function Parser$letter$(_is_letter$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $223 = self.err;
                var $224 = self.nam;
                var $225 = self.ini;
                var $226 = self.idx;
                var $227 = self.str;
                var self = $227;
                if (self.length === 0) {
                    var $229 = Parser$Reply$fail$($224, $225, $226, "Unexpected eof.");
                    var $228 = $229;
                } else {
                    var $230 = self.charCodeAt(0);
                    var $231 = self.slice(1);
                    var self = _is_letter$1($230);
                    if (self) {
                        var $233 = Parser$Reply$value$(Parser$State$new$($223, $224, $225, Nat$succ$($226), $231), $230);
                        var $232 = $233;
                    } else {
                        var $234 = Parser$Reply$fail$($224, $225, $226, "Expected letter.");
                        var $232 = $234;
                    };
                    var $228 = $232;
                };
                var $222 = $228;
                break;
        };
        return $222;
    };
    const Parser$letter = x0 => x1 => Parser$letter$(x0, x1);
    const Bool$and = a0 => a1 => (a0 && a1);

    function Cmp$as_lte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $236 = Bool$true;
                var $235 = $236;
                break;
            case 'Cmp.gtn':
                var $237 = Bool$false;
                var $235 = $237;
                break;
        };
        return $235;
    };
    const Cmp$as_lte = x0 => Cmp$as_lte$(x0);

    function Word$lte$(_a$2, _b$3) {
        var $238 = Cmp$as_lte$(Word$cmp$(_a$2, _b$3));
        return $238;
    };
    const Word$lte = x0 => x1 => Word$lte$(x0, x1);
    const U16$lte = a0 => a1 => (a0 <= a1);

    function U16$btw$(_a$1, _b$2, _c$3) {
        var $239 = ((_a$1 <= _b$2) && (_b$2 <= _c$3));
        return $239;
    };
    const U16$btw = x0 => x1 => x2 => U16$btw$(x0, x1, x2);
    const Litereum$parse$letter = Parser$letter((_chr$1 => {
        var self = U16$btw$(65, _chr$1, 90);
        if (self) {
            var $241 = Bool$true;
            var $240 = $241;
        } else {
            var self = U16$btw$(97, _chr$1, 122);
            if (self) {
                var $243 = Bool$true;
                var $242 = $243;
            } else {
                var self = U16$btw$(48, _chr$1, 57);
                if (self) {
                    var $245 = Bool$true;
                    var $244 = $245;
                } else {
                    var self = (46 === _chr$1);
                    if (self) {
                        var $247 = Bool$true;
                        var $246 = $247;
                    } else {
                        var self = (95 === _chr$1);
                        if (self) {
                            var $249 = Bool$true;
                            var $248 = $249;
                        } else {
                            var self = (94 === _chr$1);
                            if (self) {
                                var $251 = Bool$true;
                                var $250 = $251;
                            } else {
                                var $252 = Bool$false;
                                var $250 = $252;
                            };
                            var $248 = $250;
                        };
                        var $246 = $248;
                    };
                    var $244 = $246;
                };
                var $242 = $244;
            };
            var $240 = $242;
        };
        return $240;
    }));

    function List$fold$(_list$2, _nil$4, _cons$5) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $254 = self.head;
                var $255 = self.tail;
                var $256 = _cons$5($254)(List$fold$($255, _nil$4, _cons$5));
                var $253 = $256;
                break;
            case 'List.nil':
                var $257 = _nil$4;
                var $253 = $257;
                break;
        };
        return $253;
    };
    const List$fold = x0 => x1 => x2 => List$fold$(x0, x1, x2);

    function Litereum$parse$name$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $259 = self.err;
                var _reply$7 = Litereum$parse$ignore(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $261 = self.err;
                        var self = $259;
                        switch (self._) {
                            case 'Maybe.some':
                                var $263 = self.value;
                                var $264 = Parser$Reply$error$(Parser$Error$combine$($263, $261));
                                var $262 = $264;
                                break;
                            case 'Maybe.none':
                                var $265 = Parser$Reply$error$($261);
                                var $262 = $265;
                                break;
                        };
                        var $260 = $262;
                        break;
                    case 'Parser.Reply.value':
                        var $266 = self.pst;
                        var self = $266;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $268 = self.err;
                                var $269 = self.nam;
                                var $270 = self.ini;
                                var $271 = self.idx;
                                var $272 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($259, $268), $269, $270, $271, $272);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $274 = self.err;
                                        var _reply$21 = Litereum$parse$letter(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $276 = self.err;
                                                var self = $274;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $278 = self.value;
                                                        var $279 = Parser$Reply$error$(Parser$Error$combine$($278, $276));
                                                        var $277 = $279;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $280 = Parser$Reply$error$($276);
                                                        var $277 = $280;
                                                        break;
                                                };
                                                var $275 = $277;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $281 = self.pst;
                                                var $282 = self.val;
                                                var self = $281;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $284 = self.err;
                                                        var $285 = self.nam;
                                                        var $286 = self.ini;
                                                        var $287 = self.idx;
                                                        var $288 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($274, $284), $285, $286, $287, $288);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $290 = self.err;
                                                                var _reply$35 = Parser$many$(Litereum$parse$letter)(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $292 = self.err;
                                                                        var self = $290;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $294 = self.value;
                                                                                var $295 = Parser$Reply$error$(Parser$Error$combine$($294, $292));
                                                                                var $293 = $295;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $296 = Parser$Reply$error$($292);
                                                                                var $293 = $296;
                                                                                break;
                                                                        };
                                                                        var $291 = $293;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $297 = self.pst;
                                                                        var $298 = self.val;
                                                                        var self = $297;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $300 = self.err;
                                                                                var $301 = self.nam;
                                                                                var $302 = self.ini;
                                                                                var $303 = self.idx;
                                                                                var $304 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($290, $300), $301, $302, $303, $304);
                                                                                var $305 = Parser$Reply$value$(_reply$pst$43, String$cons$($282, List$fold$($298, String$nil, String$cons)));
                                                                                var $299 = $305;
                                                                                break;
                                                                        };
                                                                        var $291 = $299;
                                                                        break;
                                                                };
                                                                var $289 = $291;
                                                                break;
                                                        };
                                                        var $283 = $289;
                                                        break;
                                                };
                                                var $275 = $283;
                                                break;
                                        };
                                        var $273 = $275;
                                        break;
                                };
                                var $267 = $273;
                                break;
                        };
                        var $260 = $267;
                        break;
                };
                var $258 = $260;
                break;
        };
        return $258;
    };
    const Litereum$parse$name = x0 => Litereum$parse$name$(x0);

    function Parser$wrap$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $307 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $309 = self.err;
                        var self = $307;
                        switch (self._) {
                            case 'Maybe.some':
                                var $311 = self.value;
                                var $312 = Parser$Reply$error$(Parser$Error$combine$($311, $309));
                                var $310 = $312;
                                break;
                            case 'Maybe.none':
                                var $313 = Parser$Reply$error$($309);
                                var $310 = $313;
                                break;
                        };
                        var $308 = $310;
                        break;
                    case 'Parser.Reply.value':
                        var $314 = self.pst;
                        var self = $314;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $316 = self.err;
                                var $317 = self.nam;
                                var $318 = self.ini;
                                var $319 = self.idx;
                                var $320 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($307, $316), $317, $318, $319, $320);
                                var $321 = Parser$until$(_close$4, _parse$3)(_reply$pst$19);
                                var $315 = $321;
                                break;
                        };
                        var $308 = $315;
                        break;
                };
                var $306 = $308;
                break;
        };
        return $306;
    };
    const Parser$wrap = x0 => x1 => x2 => x3 => Parser$wrap$(x0, x1, x2, x3);

    function Parser$maybe$(_parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var self = _parse$2(_pst$3);
                switch (self._) {
                    case 'Parser.Reply.value':
                        var $324 = self.pst;
                        var $325 = self.val;
                        var $326 = Parser$Reply$value$($324, Maybe$some$($325));
                        var $323 = $326;
                        break;
                    case 'Parser.Reply.error':
                        var $327 = Parser$Reply$value$(_pst$3, Maybe$none);
                        var $323 = $327;
                        break;
                };
                var $322 = $323;
                break;
        };
        return $322;
    };
    const Parser$maybe = x0 => x1 => Parser$maybe$(x0, x1);

    function Pair$(_A$1, _B$2) {
        var $328 = null;
        return $328;
    };
    const Pair = x0 => x1 => Pair$(x0, x1);

    function Litereum$Type$effe$(_rety$1) {
        var $329 = ({
            _: 'Litereum.Type.effe',
            'rety': _rety$1
        });
        return $329;
    };
    const Litereum$Type$effe = x0 => Litereum$Type$effe$(x0);
    const Litereum$Type$word = ({
        _: 'Litereum.Type.word'
    });

    function Litereum$Type$data$(_name$1) {
        var $330 = ({
            _: 'Litereum.Type.data',
            'name': _name$1
        });
        return $330;
    };
    const Litereum$Type$data = x0 => Litereum$Type$data$(x0);

    function Litereum$parse$type$(_world$1) {
        var $331 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $333 = self.err;
                    var _reply$8 = Litereum$parse$text$("&", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $335 = self.err;
                            var self = $333;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $337 = self.value;
                                    var $338 = Parser$Reply$error$(Parser$Error$combine$($337, $335));
                                    var $336 = $338;
                                    break;
                                case 'Maybe.none':
                                    var $339 = Parser$Reply$error$($335);
                                    var $336 = $339;
                                    break;
                            };
                            var $334 = $336;
                            break;
                        case 'Parser.Reply.value':
                            var $340 = self.pst;
                            var self = $340;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $342 = self.err;
                                    var $343 = self.nam;
                                    var $344 = self.ini;
                                    var $345 = self.idx;
                                    var $346 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($333, $342), $343, $344, $345, $346);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $348 = self.err;
                                            var _reply$22 = Litereum$parse$type$(_world$1)(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $350 = self.err;
                                                    var self = $348;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $352 = self.value;
                                                            var $353 = Parser$Reply$error$(Parser$Error$combine$($352, $350));
                                                            var $351 = $353;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $354 = Parser$Reply$error$($350);
                                                            var $351 = $354;
                                                            break;
                                                    };
                                                    var $349 = $351;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $355 = self.pst;
                                                    var $356 = self.val;
                                                    var self = $355;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $358 = self.err;
                                                            var $359 = self.nam;
                                                            var $360 = self.ini;
                                                            var $361 = self.idx;
                                                            var $362 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($348, $358), $359, $360, $361, $362);
                                                            var $363 = Parser$Reply$value$(_reply$pst$30, Litereum$Type$effe$($356));
                                                            var $357 = $363;
                                                            break;
                                                    };
                                                    var $349 = $357;
                                                    break;
                                            };
                                            var $347 = $349;
                                            break;
                                    };
                                    var $341 = $347;
                                    break;
                            };
                            var $334 = $341;
                            break;
                    };
                    var $332 = $334;
                    break;
            };
            return $332;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $365 = self.err;
                    var _reply$8 = Litereum$parse$text$("#word", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $367 = self.err;
                            var self = $365;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $369 = self.value;
                                    var $370 = Parser$Reply$error$(Parser$Error$combine$($369, $367));
                                    var $368 = $370;
                                    break;
                                case 'Maybe.none':
                                    var $371 = Parser$Reply$error$($367);
                                    var $368 = $371;
                                    break;
                            };
                            var $366 = $368;
                            break;
                        case 'Parser.Reply.value':
                            var $372 = self.pst;
                            var self = $372;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $374 = self.err;
                                    var $375 = self.nam;
                                    var $376 = self.ini;
                                    var $377 = self.idx;
                                    var $378 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($365, $374), $375, $376, $377, $378);
                                    var $379 = Parser$Reply$value$(_reply$pst$16, Litereum$Type$word);
                                    var $373 = $379;
                                    break;
                            };
                            var $366 = $373;
                            break;
                    };
                    var $364 = $366;
                    break;
            };
            return $364;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $381 = self.err;
                    var _reply$8 = Litereum$parse$name$(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $383 = self.err;
                            var self = $381;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $385 = self.value;
                                    var $386 = Parser$Reply$error$(Parser$Error$combine$($385, $383));
                                    var $384 = $386;
                                    break;
                                case 'Maybe.none':
                                    var $387 = Parser$Reply$error$($383);
                                    var $384 = $387;
                                    break;
                            };
                            var $382 = $384;
                            break;
                        case 'Parser.Reply.value':
                            var $388 = self.pst;
                            var $389 = self.val;
                            var self = $388;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $391 = self.err;
                                    var $392 = self.nam;
                                    var $393 = self.ini;
                                    var $394 = self.idx;
                                    var $395 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($381, $391), $392, $393, $394, $395);
                                    var $396 = Parser$Reply$value$(_reply$pst$16, Litereum$Type$data$($389));
                                    var $390 = $396;
                                    break;
                            };
                            var $382 = $390;
                            break;
                    };
                    var $380 = $382;
                    break;
            };
            return $380;
        }), List$nil))));
        return $331;
    };
    const Litereum$parse$type = x0 => Litereum$parse$type$(x0);

    function Pair$new$(_fst$3, _snd$4) {
        var $397 = ({
            _: 'Pair.new',
            'fst': _fst$3,
            'snd': _snd$4
        });
        return $397;
    };
    const Pair$new = x0 => x1 => Pair$new$(x0, x1);

    function Litereum$parse$ann$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $399 = self.err;
                var _reply$8 = Parser$maybe$(Litereum$parse$text(","), _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $401 = self.err;
                        var self = $399;
                        switch (self._) {
                            case 'Maybe.some':
                                var $403 = self.value;
                                var $404 = Parser$Reply$error$(Parser$Error$combine$($403, $401));
                                var $402 = $404;
                                break;
                            case 'Maybe.none':
                                var $405 = Parser$Reply$error$($401);
                                var $402 = $405;
                                break;
                        };
                        var $400 = $402;
                        break;
                    case 'Parser.Reply.value':
                        var $406 = self.pst;
                        var self = $406;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $408 = self.err;
                                var $409 = self.nam;
                                var $410 = self.ini;
                                var $411 = self.idx;
                                var $412 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($399, $408), $409, $410, $411, $412);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $414 = self.err;
                                        var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $416 = self.err;
                                                var self = $414;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $418 = self.value;
                                                        var $419 = Parser$Reply$error$(Parser$Error$combine$($418, $416));
                                                        var $417 = $419;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $420 = Parser$Reply$error$($416);
                                                        var $417 = $420;
                                                        break;
                                                };
                                                var $415 = $417;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $421 = self.pst;
                                                var $422 = self.val;
                                                var self = $421;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $424 = self.err;
                                                        var $425 = self.nam;
                                                        var $426 = self.ini;
                                                        var $427 = self.idx;
                                                        var $428 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($414, $424), $425, $426, $427, $428);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $430 = self.err;
                                                                var _reply$36 = Litereum$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $432 = self.err;
                                                                        var self = $430;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $434 = self.value;
                                                                                var $435 = Parser$Reply$error$(Parser$Error$combine$($434, $432));
                                                                                var $433 = $435;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $436 = Parser$Reply$error$($432);
                                                                                var $433 = $436;
                                                                                break;
                                                                        };
                                                                        var $431 = $433;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $437 = self.pst;
                                                                        var self = $437;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $439 = self.err;
                                                                                var $440 = self.nam;
                                                                                var $441 = self.ini;
                                                                                var $442 = self.idx;
                                                                                var $443 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($430, $439), $440, $441, $442, $443);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $445 = self.err;
                                                                                        var _reply$50 = Litereum$parse$type$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $447 = self.err;
                                                                                                var self = $445;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $449 = self.value;
                                                                                                        var $450 = Parser$Reply$error$(Parser$Error$combine$($449, $447));
                                                                                                        var $448 = $450;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $451 = Parser$Reply$error$($447);
                                                                                                        var $448 = $451;
                                                                                                        break;
                                                                                                };
                                                                                                var $446 = $448;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $452 = self.pst;
                                                                                                var $453 = self.val;
                                                                                                var self = $452;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $455 = self.err;
                                                                                                        var $456 = self.nam;
                                                                                                        var $457 = self.ini;
                                                                                                        var $458 = self.idx;
                                                                                                        var $459 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($445, $455), $456, $457, $458, $459);
                                                                                                        var $460 = Parser$Reply$value$(_reply$pst$58, Pair$new$($422, $453));
                                                                                                        var $454 = $460;
                                                                                                        break;
                                                                                                };
                                                                                                var $446 = $454;
                                                                                                break;
                                                                                        };
                                                                                        var $444 = $446;
                                                                                        break;
                                                                                };
                                                                                var $438 = $444;
                                                                                break;
                                                                        };
                                                                        var $431 = $438;
                                                                        break;
                                                                };
                                                                var $429 = $431;
                                                                break;
                                                        };
                                                        var $423 = $429;
                                                        break;
                                                };
                                                var $415 = $423;
                                                break;
                                        };
                                        var $413 = $415;
                                        break;
                                };
                                var $407 = $413;
                                break;
                        };
                        var $400 = $407;
                        break;
                };
                var $398 = $400;
                break;
        };
        return $398;
    };
    const Litereum$parse$ann = x0 => x1 => Litereum$parse$ann$(x0, x1);

    function List$mapped$(_as$2, _f$4) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $462 = self.head;
                var $463 = self.tail;
                var $464 = List$cons$(_f$4($462), List$mapped$($463, _f$4));
                var $461 = $464;
                break;
            case 'List.nil':
                var $465 = List$nil;
                var $461 = $465;
                break;
        };
        return $461;
    };
    const List$mapped = x0 => x1 => List$mapped$(x0, x1);

    function Litereum$Constructor$new$(_name$1, _field_names$2, _field_types$3) {
        var $466 = ({
            _: 'Litereum.Constructor.new',
            'name': _name$1,
            'field_names': _field_names$2,
            'field_types': _field_types$3
        });
        return $466;
    };
    const Litereum$Constructor$new = x0 => x1 => x2 => Litereum$Constructor$new$(x0, x1, x2);

    function Litereum$parse$constructor$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $468 = self.err;
                var _reply$8 = Litereum$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $470 = self.err;
                        var self = $468;
                        switch (self._) {
                            case 'Maybe.some':
                                var $472 = self.value;
                                var $473 = Parser$Reply$error$(Parser$Error$combine$($472, $470));
                                var $471 = $473;
                                break;
                            case 'Maybe.none':
                                var $474 = Parser$Reply$error$($470);
                                var $471 = $474;
                                break;
                        };
                        var $469 = $471;
                        break;
                    case 'Parser.Reply.value':
                        var $475 = self.pst;
                        var $476 = self.val;
                        var self = $475;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $478 = self.err;
                                var $479 = self.nam;
                                var $480 = self.ini;
                                var $481 = self.idx;
                                var $482 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($468, $478), $479, $480, $481, $482);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $484 = self.err;
                                        var _reply$22 = Parser$wrap$(Litereum$parse$text("{"), Litereum$parse$ann(_world$1), Litereum$parse$text("}"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $486 = self.err;
                                                var self = $484;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $488 = self.value;
                                                        var $489 = Parser$Reply$error$(Parser$Error$combine$($488, $486));
                                                        var $487 = $489;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $490 = Parser$Reply$error$($486);
                                                        var $487 = $490;
                                                        break;
                                                };
                                                var $485 = $487;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $491 = self.pst;
                                                var $492 = self.val;
                                                var self = $491;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $494 = self.err;
                                                        var $495 = self.nam;
                                                        var $496 = self.ini;
                                                        var $497 = self.idx;
                                                        var $498 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($484, $494), $495, $496, $497, $498);
                                                        var _nams$31 = List$mapped$($492, (_x$31 => {
                                                            var self = _x$31;
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $501 = self.fst;
                                                                    var $502 = $501;
                                                                    var $500 = $502;
                                                                    break;
                                                            };
                                                            return $500;
                                                        }));
                                                        var _typs$32 = List$mapped$($492, (_x$32 => {
                                                            var self = _x$32;
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $504 = self.snd;
                                                                    var $505 = $504;
                                                                    var $503 = $505;
                                                                    break;
                                                            };
                                                            return $503;
                                                        }));
                                                        var $499 = Parser$Reply$value$(_reply$pst$30, Litereum$Constructor$new$($476, _nams$31, _typs$32));
                                                        var $493 = $499;
                                                        break;
                                                };
                                                var $485 = $493;
                                                break;
                                        };
                                        var $483 = $485;
                                        break;
                                };
                                var $477 = $483;
                                break;
                        };
                        var $469 = $477;
                        break;
                };
                var $467 = $469;
                break;
        };
        return $467;
    };
    const Litereum$parse$constructor = x0 => x1 => Litereum$parse$constructor$(x0, x1);

    function Litereum$Data$new$(_name$1, _constructors$2) {
        var $506 = ({
            _: 'Litereum.Data.new',
            'name': _name$1,
            'constructors': _constructors$2
        });
        return $506;
    };
    const Litereum$Data$new = x0 => x1 => Litereum$Data$new$(x0, x1);

    function Litereum$parse$data$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $508 = self.err;
                var _reply$8 = Litereum$parse$text$("type", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $510 = self.err;
                        var self = $508;
                        switch (self._) {
                            case 'Maybe.some':
                                var $512 = self.value;
                                var $513 = Parser$Reply$error$(Parser$Error$combine$($512, $510));
                                var $511 = $513;
                                break;
                            case 'Maybe.none':
                                var $514 = Parser$Reply$error$($510);
                                var $511 = $514;
                                break;
                        };
                        var $509 = $511;
                        break;
                    case 'Parser.Reply.value':
                        var $515 = self.pst;
                        var self = $515;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $517 = self.err;
                                var $518 = self.nam;
                                var $519 = self.ini;
                                var $520 = self.idx;
                                var $521 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($508, $517), $518, $519, $520, $521);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $523 = self.err;
                                        var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $525 = self.err;
                                                var self = $523;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $527 = self.value;
                                                        var $528 = Parser$Reply$error$(Parser$Error$combine$($527, $525));
                                                        var $526 = $528;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $529 = Parser$Reply$error$($525);
                                                        var $526 = $529;
                                                        break;
                                                };
                                                var $524 = $526;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $530 = self.pst;
                                                var $531 = self.val;
                                                var self = $530;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $533 = self.err;
                                                        var $534 = self.nam;
                                                        var $535 = self.ini;
                                                        var $536 = self.idx;
                                                        var $537 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($523, $533), $534, $535, $536, $537);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $539 = self.err;
                                                                var _reply$36 = Parser$wrap$(Litereum$parse$text("{"), (_pst$36 => {
                                                                    var self = _pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $542 = self.err;
                                                                            var _reply$42 = Parser$maybe$(Litereum$parse$text(","), _pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $544 = self.err;
                                                                                    var self = $542;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $546 = self.value;
                                                                                            var $547 = Parser$Reply$error$(Parser$Error$combine$($546, $544));
                                                                                            var $545 = $547;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $548 = Parser$Reply$error$($544);
                                                                                            var $545 = $548;
                                                                                            break;
                                                                                    };
                                                                                    var $543 = $545;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $549 = self.pst;
                                                                                    var self = $549;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $551 = self.err;
                                                                                            var $552 = self.nam;
                                                                                            var $553 = self.ini;
                                                                                            var $554 = self.idx;
                                                                                            var $555 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($542, $551), $552, $553, $554, $555);
                                                                                            var $556 = Litereum$parse$constructor$(_world$1, _reply$pst$50);
                                                                                            var $550 = $556;
                                                                                            break;
                                                                                    };
                                                                                    var $543 = $550;
                                                                                    break;
                                                                            };
                                                                            var $541 = $543;
                                                                            break;
                                                                    };
                                                                    return $541;
                                                                }), Litereum$parse$text("}"), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $557 = self.err;
                                                                        var self = $539;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $559 = self.value;
                                                                                var $560 = Parser$Reply$error$(Parser$Error$combine$($559, $557));
                                                                                var $558 = $560;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $561 = Parser$Reply$error$($557);
                                                                                var $558 = $561;
                                                                                break;
                                                                        };
                                                                        var $540 = $558;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $562 = self.pst;
                                                                        var $563 = self.val;
                                                                        var self = $562;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $565 = self.err;
                                                                                var $566 = self.nam;
                                                                                var $567 = self.ini;
                                                                                var $568 = self.idx;
                                                                                var $569 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($539, $565), $566, $567, $568, $569);
                                                                                var $570 = Parser$Reply$value$(_reply$pst$44, Litereum$Data$new$($531, $563));
                                                                                var $564 = $570;
                                                                                break;
                                                                        };
                                                                        var $540 = $564;
                                                                        break;
                                                                };
                                                                var $538 = $540;
                                                                break;
                                                        };
                                                        var $532 = $538;
                                                        break;
                                                };
                                                var $524 = $532;
                                                break;
                                        };
                                        var $522 = $524;
                                        break;
                                };
                                var $516 = $522;
                                break;
                        };
                        var $509 = $516;
                        break;
                };
                var $507 = $509;
                break;
        };
        return $507;
    };
    const Litereum$parse$data = x0 => x1 => Litereum$parse$data$(x0, x1);

    function Litereum$Transaction$new_data$(_data$1) {
        var $571 = ({
            _: 'Litereum.Transaction.new_data',
            'data': _data$1
        });
        return $571;
    };
    const Litereum$Transaction$new_data = x0 => Litereum$Transaction$new_data$(x0);

    function Litereum$Term$let$(_name$1, _type$2, _expr$3, _body$4) {
        var $572 = ({
            _: 'Litereum.Term.let',
            'name': _name$1,
            'type': _type$2,
            'expr': _expr$3,
            'body': _body$4
        });
        return $572;
    };
    const Litereum$Term$let = x0 => x1 => x2 => x3 => Litereum$Term$let$(x0, x1, x2, x3);

    function Litereum$parse$term$let$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $574 = self.err;
                var _reply$8 = Litereum$parse$text$("let", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $576 = self.err;
                        var self = $574;
                        switch (self._) {
                            case 'Maybe.some':
                                var $578 = self.value;
                                var $579 = Parser$Reply$error$(Parser$Error$combine$($578, $576));
                                var $577 = $579;
                                break;
                            case 'Maybe.none':
                                var $580 = Parser$Reply$error$($576);
                                var $577 = $580;
                                break;
                        };
                        var $575 = $577;
                        break;
                    case 'Parser.Reply.value':
                        var $581 = self.pst;
                        var self = $581;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $583 = self.err;
                                var $584 = self.nam;
                                var $585 = self.ini;
                                var $586 = self.idx;
                                var $587 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($574, $583), $584, $585, $586, $587);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $589 = self.err;
                                        var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $591 = self.err;
                                                var self = $589;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $593 = self.value;
                                                        var $594 = Parser$Reply$error$(Parser$Error$combine$($593, $591));
                                                        var $592 = $594;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $595 = Parser$Reply$error$($591);
                                                        var $592 = $595;
                                                        break;
                                                };
                                                var $590 = $592;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $596 = self.pst;
                                                var $597 = self.val;
                                                var self = $596;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $599 = self.err;
                                                        var $600 = self.nam;
                                                        var $601 = self.ini;
                                                        var $602 = self.idx;
                                                        var $603 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($589, $599), $600, $601, $602, $603);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $605 = self.err;
                                                                var _reply$36 = Litereum$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $607 = self.err;
                                                                        var self = $605;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $609 = self.value;
                                                                                var $610 = Parser$Reply$error$(Parser$Error$combine$($609, $607));
                                                                                var $608 = $610;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $611 = Parser$Reply$error$($607);
                                                                                var $608 = $611;
                                                                                break;
                                                                        };
                                                                        var $606 = $608;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $612 = self.pst;
                                                                        var self = $612;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $614 = self.err;
                                                                                var $615 = self.nam;
                                                                                var $616 = self.ini;
                                                                                var $617 = self.idx;
                                                                                var $618 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($605, $614), $615, $616, $617, $618);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $620 = self.err;
                                                                                        var _reply$50 = Litereum$parse$type$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $622 = self.err;
                                                                                                var self = $620;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $624 = self.value;
                                                                                                        var $625 = Parser$Reply$error$(Parser$Error$combine$($624, $622));
                                                                                                        var $623 = $625;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $626 = Parser$Reply$error$($622);
                                                                                                        var $623 = $626;
                                                                                                        break;
                                                                                                };
                                                                                                var $621 = $623;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $627 = self.pst;
                                                                                                var $628 = self.val;
                                                                                                var self = $627;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $630 = self.err;
                                                                                                        var $631 = self.nam;
                                                                                                        var $632 = self.ini;
                                                                                                        var $633 = self.idx;
                                                                                                        var $634 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($620, $630), $631, $632, $633, $634);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $636 = self.err;
                                                                                                                var _reply$64 = Litereum$parse$text$("=", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $638 = self.err;
                                                                                                                        var self = $636;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $640 = self.value;
                                                                                                                                var $641 = Parser$Reply$error$(Parser$Error$combine$($640, $638));
                                                                                                                                var $639 = $641;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $642 = Parser$Reply$error$($638);
                                                                                                                                var $639 = $642;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $637 = $639;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $643 = self.pst;
                                                                                                                        var self = $643;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $645 = self.err;
                                                                                                                                var $646 = self.nam;
                                                                                                                                var $647 = self.ini;
                                                                                                                                var $648 = self.idx;
                                                                                                                                var $649 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($636, $645), $646, $647, $648, $649);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $651 = self.err;
                                                                                                                                        var _reply$78 = Litereum$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $653 = self.err;
                                                                                                                                                var self = $651;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $655 = self.value;
                                                                                                                                                        var $656 = Parser$Reply$error$(Parser$Error$combine$($655, $653));
                                                                                                                                                        var $654 = $656;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $657 = Parser$Reply$error$($653);
                                                                                                                                                        var $654 = $657;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $652 = $654;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $658 = self.pst;
                                                                                                                                                var $659 = self.val;
                                                                                                                                                var self = $658;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $661 = self.err;
                                                                                                                                                        var $662 = self.nam;
                                                                                                                                                        var $663 = self.ini;
                                                                                                                                                        var $664 = self.idx;
                                                                                                                                                        var $665 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($651, $661), $662, $663, $664, $665);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $667 = self.err;
                                                                                                                                                                var _reply$92 = Parser$maybe$(Litereum$parse$text(";"), _reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $669 = self.err;
                                                                                                                                                                        var self = $667;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $671 = self.value;
                                                                                                                                                                                var $672 = Parser$Reply$error$(Parser$Error$combine$($671, $669));
                                                                                                                                                                                var $670 = $672;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $673 = Parser$Reply$error$($669);
                                                                                                                                                                                var $670 = $673;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $668 = $670;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $674 = self.pst;
                                                                                                                                                                        var self = $674;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $676 = self.err;
                                                                                                                                                                                var $677 = self.nam;
                                                                                                                                                                                var $678 = self.ini;
                                                                                                                                                                                var $679 = self.idx;
                                                                                                                                                                                var $680 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($667, $676), $677, $678, $679, $680);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $682 = self.err;
                                                                                                                                                                                        var _reply$106 = Litereum$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $684 = self.err;
                                                                                                                                                                                                var self = $682;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $686 = self.value;
                                                                                                                                                                                                        var $687 = Parser$Reply$error$(Parser$Error$combine$($686, $684));
                                                                                                                                                                                                        var $685 = $687;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $688 = Parser$Reply$error$($684);
                                                                                                                                                                                                        var $685 = $688;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $683 = $685;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $689 = self.pst;
                                                                                                                                                                                                var $690 = self.val;
                                                                                                                                                                                                var self = $689;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $692 = self.err;
                                                                                                                                                                                                        var $693 = self.nam;
                                                                                                                                                                                                        var $694 = self.ini;
                                                                                                                                                                                                        var $695 = self.idx;
                                                                                                                                                                                                        var $696 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($682, $692), $693, $694, $695, $696);
                                                                                                                                                                                                        var $697 = Parser$Reply$value$(_reply$pst$114, Litereum$Term$let$($597, $628, $659, $690));
                                                                                                                                                                                                        var $691 = $697;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $683 = $691;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $681 = $683;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $675 = $681;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $668 = $675;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $666 = $668;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $660 = $666;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $652 = $660;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $650 = $652;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $644 = $650;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $637 = $644;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $635 = $637;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $629 = $635;
                                                                                                        break;
                                                                                                };
                                                                                                var $621 = $629;
                                                                                                break;
                                                                                        };
                                                                                        var $619 = $621;
                                                                                        break;
                                                                                };
                                                                                var $613 = $619;
                                                                                break;
                                                                        };
                                                                        var $606 = $613;
                                                                        break;
                                                                };
                                                                var $604 = $606;
                                                                break;
                                                        };
                                                        var $598 = $604;
                                                        break;
                                                };
                                                var $590 = $598;
                                                break;
                                        };
                                        var $588 = $590;
                                        break;
                                };
                                var $582 = $588;
                                break;
                        };
                        var $575 = $582;
                        break;
                };
                var $573 = $575;
                break;
        };
        return $573;
    };
    const Litereum$parse$term$let = x0 => x1 => Litereum$parse$term$let$(x0, x1);

    function Litereum$Term$create$(_ctor$1, _vals$2) {
        var $698 = ({
            _: 'Litereum.Term.create',
            'ctor': _ctor$1,
            'vals': _vals$2
        });
        return $698;
    };
    const Litereum$Term$create = x0 => x1 => Litereum$Term$create$(x0, x1);

    function Litereum$parse$term$create$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $700 = self.err;
                var _reply$8 = Litereum$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $702 = self.err;
                        var self = $700;
                        switch (self._) {
                            case 'Maybe.some':
                                var $704 = self.value;
                                var $705 = Parser$Reply$error$(Parser$Error$combine$($704, $702));
                                var $703 = $705;
                                break;
                            case 'Maybe.none':
                                var $706 = Parser$Reply$error$($702);
                                var $703 = $706;
                                break;
                        };
                        var $701 = $703;
                        break;
                    case 'Parser.Reply.value':
                        var $707 = self.pst;
                        var $708 = self.val;
                        var self = $707;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $710 = self.err;
                                var $711 = self.nam;
                                var $712 = self.ini;
                                var $713 = self.idx;
                                var $714 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($700, $710), $711, $712, $713, $714);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $716 = self.err;
                                        var _reply$22 = Parser$wrap$(Litereum$parse$text("{"), Litereum$parse$term$(_world$1), Litereum$parse$text("}"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $718 = self.err;
                                                var self = $716;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $720 = self.value;
                                                        var $721 = Parser$Reply$error$(Parser$Error$combine$($720, $718));
                                                        var $719 = $721;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $722 = Parser$Reply$error$($718);
                                                        var $719 = $722;
                                                        break;
                                                };
                                                var $717 = $719;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $723 = self.pst;
                                                var $724 = self.val;
                                                var self = $723;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $726 = self.err;
                                                        var $727 = self.nam;
                                                        var $728 = self.ini;
                                                        var $729 = self.idx;
                                                        var $730 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($716, $726), $727, $728, $729, $730);
                                                        var $731 = Parser$Reply$value$(_reply$pst$30, Litereum$Term$create$($708, $724));
                                                        var $725 = $731;
                                                        break;
                                                };
                                                var $717 = $725;
                                                break;
                                        };
                                        var $715 = $717;
                                        break;
                                };
                                var $709 = $715;
                                break;
                        };
                        var $701 = $709;
                        break;
                };
                var $699 = $701;
                break;
        };
        return $699;
    };
    const Litereum$parse$term$create = x0 => x1 => Litereum$parse$term$create$(x0, x1);

    function Maybe$bind$(_m$3, _f$4) {
        var self = _m$3;
        switch (self._) {
            case 'Maybe.some':
                var $733 = self.value;
                var $734 = _f$4($733);
                var $732 = $734;
                break;
            case 'Maybe.none':
                var $735 = Maybe$none;
                var $732 = $735;
                break;
        };
        return $732;
    };
    const Maybe$bind = x0 => x1 => Maybe$bind$(x0, x1);

    function Maybe$monad$(_new$2) {
        var $736 = _new$2(Maybe$bind)(Maybe$some);
        return $736;
    };
    const Maybe$monad = x0 => Maybe$monad$(x0);

    function BBT$lookup$(_cmp$3, _key$4, _map$5) {
        var BBT$lookup$ = (_cmp$3, _key$4, _map$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _key$4, _map$5]
        });
        var BBT$lookup = _cmp$3 => _key$4 => _map$5 => BBT$lookup$(_cmp$3, _key$4, _map$5);
        var arg = [_cmp$3, _key$4, _map$5];
        while (true) {
            let [_cmp$3, _key$4, _map$5] = arg;
            var R = (() => {
                var self = _map$5;
                switch (self._) {
                    case 'BBT.bin':
                        var $737 = self.key;
                        var $738 = self.val;
                        var $739 = self.left;
                        var $740 = self.right;
                        var self = _cmp$3(_key$4)($737);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $742 = BBT$lookup$(_cmp$3, _key$4, $739);
                                var $741 = $742;
                                break;
                            case 'Cmp.eql':
                                var $743 = Maybe$some$($738);
                                var $741 = $743;
                                break;
                            case 'Cmp.gtn':
                                var $744 = BBT$lookup$(_cmp$3, _key$4, $740);
                                var $741 = $744;
                                break;
                        };
                        return $741;
                    case 'BBT.tip':
                        var $745 = Maybe$none;
                        return $745;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$lookup = x0 => x1 => x2 => BBT$lookup$(x0, x1, x2);

    function Cmp$as_ltn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $747 = Bool$true;
                var $746 = $747;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $748 = Bool$false;
                var $746 = $748;
                break;
        };
        return $746;
    };
    const Cmp$as_ltn = x0 => Cmp$as_ltn$(x0);

    function Word$ltn$(_a$2, _b$3) {
        var $749 = Cmp$as_ltn$(Word$cmp$(_a$2, _b$3));
        return $749;
    };
    const Word$ltn = x0 => x1 => Word$ltn$(x0, x1);
    const U16$ltn = a0 => a1 => (a0 < a1);

    function U16$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $751 = Cmp$ltn;
            var $750 = $751;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $753 = Cmp$eql;
                var $752 = $753;
            } else {
                var $754 = Cmp$gtn;
                var $752 = $754;
            };
            var $750 = $752;
        };
        return $750;
    };
    const U16$cmp = x0 => x1 => U16$cmp$(x0, x1);

    function String$cmp$(_a$1, _b$2) {
        var String$cmp$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var String$cmp = _a$1 => _b$2 => String$cmp$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                if (self.length === 0) {
                    var self = _b$2;
                    if (self.length === 0) {
                        var $756 = Cmp$eql;
                        var $755 = $756;
                    } else {
                        var $757 = self.charCodeAt(0);
                        var $758 = self.slice(1);
                        var $759 = Cmp$ltn;
                        var $755 = $759;
                    };
                    return $755;
                } else {
                    var $760 = self.charCodeAt(0);
                    var $761 = self.slice(1);
                    var self = _b$2;
                    if (self.length === 0) {
                        var $763 = Cmp$gtn;
                        var $762 = $763;
                    } else {
                        var $764 = self.charCodeAt(0);
                        var $765 = self.slice(1);
                        var self = U16$cmp$($760, $764);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $767 = Cmp$ltn;
                                var $766 = $767;
                                break;
                            case 'Cmp.eql':
                                var $768 = String$cmp$($761, $765);
                                var $766 = $768;
                                break;
                            case 'Cmp.gtn':
                                var $769 = Cmp$gtn;
                                var $766 = $769;
                                break;
                        };
                        var $762 = $766;
                    };
                    return $762;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$cmp = x0 => x1 => String$cmp$(x0, x1);

    function Map$get$(_key$2, _map$3) {
        var $770 = BBT$lookup$(String$cmp, _key$2, _map$3);
        return $770;
    };
    const Map$get = x0 => x1 => Map$get$(x0, x1);

    function Litereum$get_data$(_world$1, _name$2) {
        var self = _world$1;
        switch (self._) {
            case 'Litereum.World.new':
                var $772 = self.entry;
                var $773 = Maybe$monad$((_m$bind$4 => _m$pure$5 => {
                    var $774 = _m$bind$4;
                    return $774;
                }))(Map$get$(_name$2, $772))((_entry$4 => {
                    var self = _entry$4;
                    switch (self._) {
                        case 'Litereum.Entry.data':
                            var $776 = self.value;
                            var $777 = Maybe$some$($776);
                            var $775 = $777;
                            break;
                        case 'Litereum.Entry.bond':
                        case 'Litereum.Entry.file':
                            var $778 = Maybe$none;
                            var $775 = $778;
                            break;
                    };
                    return $775;
                }));
                var $771 = $773;
                break;
        };
        return $771;
    };
    const Litereum$get_data = x0 => x1 => Litereum$get_data$(x0, x1);

    function Parser$fail$(_error$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $780 = self.nam;
                var $781 = self.ini;
                var $782 = self.idx;
                var $783 = Parser$Reply$fail$($780, $781, $782, _error$2);
                var $779 = $783;
                break;
        };
        return $779;
    };
    const Parser$fail = x0 => x1 => Parser$fail$(x0, x1);

    function Litereum$parse$term$match$cases$(_world$1, _constructors$2) {
        var self = _constructors$2;
        switch (self._) {
            case 'List.cons':
                var $785 = self.head;
                var $786 = self.tail;
                var _ctor$5 = $785;
                var self = _ctor$5;
                switch (self._) {
                    case 'Litereum.Constructor.new':
                        var $788 = self.name;
                        var $789 = (_pst$9 => {
                            var self = _pst$9;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $791 = self.err;
                                    var _reply$15 = Litereum$parse$text$($788, _pst$9);
                                    var self = _reply$15;
                                    switch (self._) {
                                        case 'Parser.Reply.error':
                                            var $793 = self.err;
                                            var self = $791;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $795 = self.value;
                                                    var $796 = Parser$Reply$error$(Parser$Error$combine$($795, $793));
                                                    var $794 = $796;
                                                    break;
                                                case 'Maybe.none':
                                                    var $797 = Parser$Reply$error$($793);
                                                    var $794 = $797;
                                                    break;
                                            };
                                            var $792 = $794;
                                            break;
                                        case 'Parser.Reply.value':
                                            var $798 = self.pst;
                                            var self = $798;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $800 = self.err;
                                                    var $801 = self.nam;
                                                    var $802 = self.ini;
                                                    var $803 = self.idx;
                                                    var $804 = self.str;
                                                    var _reply$pst$23 = Parser$State$new$(Parser$Error$maybe_combine$($791, $800), $801, $802, $803, $804);
                                                    var self = _reply$pst$23;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $806 = self.err;
                                                            var _reply$29 = Litereum$parse$text$(":", _reply$pst$23);
                                                            var self = _reply$29;
                                                            switch (self._) {
                                                                case 'Parser.Reply.error':
                                                                    var $808 = self.err;
                                                                    var self = $806;
                                                                    switch (self._) {
                                                                        case 'Maybe.some':
                                                                            var $810 = self.value;
                                                                            var $811 = Parser$Reply$error$(Parser$Error$combine$($810, $808));
                                                                            var $809 = $811;
                                                                            break;
                                                                        case 'Maybe.none':
                                                                            var $812 = Parser$Reply$error$($808);
                                                                            var $809 = $812;
                                                                            break;
                                                                    };
                                                                    var $807 = $809;
                                                                    break;
                                                                case 'Parser.Reply.value':
                                                                    var $813 = self.pst;
                                                                    var self = $813;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $815 = self.err;
                                                                            var $816 = self.nam;
                                                                            var $817 = self.ini;
                                                                            var $818 = self.idx;
                                                                            var $819 = self.str;
                                                                            var _reply$pst$37 = Parser$State$new$(Parser$Error$maybe_combine$($806, $815), $816, $817, $818, $819);
                                                                            var self = _reply$pst$37;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $821 = self.err;
                                                                                    var _reply$43 = Litereum$parse$term$(_world$1)(_reply$pst$37);
                                                                                    var self = _reply$43;
                                                                                    switch (self._) {
                                                                                        case 'Parser.Reply.error':
                                                                                            var $823 = self.err;
                                                                                            var self = $821;
                                                                                            switch (self._) {
                                                                                                case 'Maybe.some':
                                                                                                    var $825 = self.value;
                                                                                                    var $826 = Parser$Reply$error$(Parser$Error$combine$($825, $823));
                                                                                                    var $824 = $826;
                                                                                                    break;
                                                                                                case 'Maybe.none':
                                                                                                    var $827 = Parser$Reply$error$($823);
                                                                                                    var $824 = $827;
                                                                                                    break;
                                                                                            };
                                                                                            var $822 = $824;
                                                                                            break;
                                                                                        case 'Parser.Reply.value':
                                                                                            var $828 = self.pst;
                                                                                            var $829 = self.val;
                                                                                            var self = $828;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $831 = self.err;
                                                                                                    var $832 = self.nam;
                                                                                                    var $833 = self.ini;
                                                                                                    var $834 = self.idx;
                                                                                                    var $835 = self.str;
                                                                                                    var _reply$pst$51 = Parser$State$new$(Parser$Error$maybe_combine$($821, $831), $832, $833, $834, $835);
                                                                                                    var self = _reply$pst$51;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $837 = self.err;
                                                                                                            var _reply$57 = Parser$maybe$(Litereum$parse$text(","), _reply$pst$51);
                                                                                                            var self = _reply$57;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.Reply.error':
                                                                                                                    var $839 = self.err;
                                                                                                                    var self = $837;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Maybe.some':
                                                                                                                            var $841 = self.value;
                                                                                                                            var $842 = Parser$Reply$error$(Parser$Error$combine$($841, $839));
                                                                                                                            var $840 = $842;
                                                                                                                            break;
                                                                                                                        case 'Maybe.none':
                                                                                                                            var $843 = Parser$Reply$error$($839);
                                                                                                                            var $840 = $843;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $838 = $840;
                                                                                                                    break;
                                                                                                                case 'Parser.Reply.value':
                                                                                                                    var $844 = self.pst;
                                                                                                                    var self = $844;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.State.new':
                                                                                                                            var $846 = self.err;
                                                                                                                            var $847 = self.nam;
                                                                                                                            var $848 = self.ini;
                                                                                                                            var $849 = self.idx;
                                                                                                                            var $850 = self.str;
                                                                                                                            var _reply$pst$65 = Parser$State$new$(Parser$Error$maybe_combine$($837, $846), $847, $848, $849, $850);
                                                                                                                            var self = _reply$pst$65;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $852 = self.err;
                                                                                                                                    var _reply$71 = Litereum$parse$term$match$cases$(_world$1, $786)(_reply$pst$65);
                                                                                                                                    var self = _reply$71;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                            var $854 = self.err;
                                                                                                                                            var self = $852;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Maybe.some':
                                                                                                                                                    var $856 = self.value;
                                                                                                                                                    var $857 = Parser$Reply$error$(Parser$Error$combine$($856, $854));
                                                                                                                                                    var $855 = $857;
                                                                                                                                                    break;
                                                                                                                                                case 'Maybe.none':
                                                                                                                                                    var $858 = Parser$Reply$error$($854);
                                                                                                                                                    var $855 = $858;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $853 = $855;
                                                                                                                                            break;
                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                            var $859 = self.pst;
                                                                                                                                            var $860 = self.val;
                                                                                                                                            var self = $859;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $862 = self.err;
                                                                                                                                                    var $863 = self.nam;
                                                                                                                                                    var $864 = self.ini;
                                                                                                                                                    var $865 = self.idx;
                                                                                                                                                    var $866 = self.str;
                                                                                                                                                    var _reply$pst$79 = Parser$State$new$(Parser$Error$maybe_combine$($852, $862), $863, $864, $865, $866);
                                                                                                                                                    var $867 = Parser$Reply$value$(_reply$pst$79, List$cons$($829, $860));
                                                                                                                                                    var $861 = $867;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $853 = $861;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $851 = $853;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $845 = $851;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $838 = $845;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $836 = $838;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $830 = $836;
                                                                                                    break;
                                                                                            };
                                                                                            var $822 = $830;
                                                                                            break;
                                                                                    };
                                                                                    var $820 = $822;
                                                                                    break;
                                                                            };
                                                                            var $814 = $820;
                                                                            break;
                                                                    };
                                                                    var $807 = $814;
                                                                    break;
                                                            };
                                                            var $805 = $807;
                                                            break;
                                                    };
                                                    var $799 = $805;
                                                    break;
                                            };
                                            var $792 = $799;
                                            break;
                                    };
                                    var $790 = $792;
                                    break;
                            };
                            return $790;
                        });
                        var $787 = $789;
                        break;
                };
                var $784 = $787;
                break;
            case 'List.nil':
                var $868 = (_pst$3 => {
                    var $869 = Parser$Reply$value$(_pst$3, List$nil);
                    return $869;
                });
                var $784 = $868;
                break;
        };
        return $784;
    };
    const Litereum$parse$term$match$cases = x0 => x1 => Litereum$parse$term$match$cases$(x0, x1);

    function Litereum$Term$match$(_name$1, _data$2, _cses$3) {
        var $870 = ({
            _: 'Litereum.Term.match',
            'name': _name$1,
            'data': _data$2,
            'cses': _cses$3
        });
        return $870;
    };
    const Litereum$Term$match = x0 => x1 => x2 => Litereum$Term$match$(x0, x1, x2);

    function Litereum$parse$term$match$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $872 = self.err;
                var _reply$8 = Litereum$parse$text$("case ", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $874 = self.err;
                        var self = $872;
                        switch (self._) {
                            case 'Maybe.some':
                                var $876 = self.value;
                                var $877 = Parser$Reply$error$(Parser$Error$combine$($876, $874));
                                var $875 = $877;
                                break;
                            case 'Maybe.none':
                                var $878 = Parser$Reply$error$($874);
                                var $875 = $878;
                                break;
                        };
                        var $873 = $875;
                        break;
                    case 'Parser.Reply.value':
                        var $879 = self.pst;
                        var self = $879;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $881 = self.err;
                                var $882 = self.nam;
                                var $883 = self.ini;
                                var $884 = self.idx;
                                var $885 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($872, $881), $882, $883, $884, $885);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $887 = self.err;
                                        var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $889 = self.err;
                                                var self = $887;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $891 = self.value;
                                                        var $892 = Parser$Reply$error$(Parser$Error$combine$($891, $889));
                                                        var $890 = $892;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $893 = Parser$Reply$error$($889);
                                                        var $890 = $893;
                                                        break;
                                                };
                                                var $888 = $890;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $894 = self.pst;
                                                var $895 = self.val;
                                                var self = $894;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $897 = self.err;
                                                        var $898 = self.nam;
                                                        var $899 = self.ini;
                                                        var $900 = self.idx;
                                                        var $901 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($887, $897), $898, $899, $900, $901);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $903 = self.err;
                                                                var _reply$36 = Litereum$parse$text$(":", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $905 = self.err;
                                                                        var self = $903;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $907 = self.value;
                                                                                var $908 = Parser$Reply$error$(Parser$Error$combine$($907, $905));
                                                                                var $906 = $908;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $909 = Parser$Reply$error$($905);
                                                                                var $906 = $909;
                                                                                break;
                                                                        };
                                                                        var $904 = $906;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $910 = self.pst;
                                                                        var self = $910;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $912 = self.err;
                                                                                var $913 = self.nam;
                                                                                var $914 = self.ini;
                                                                                var $915 = self.idx;
                                                                                var $916 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($903, $912), $913, $914, $915, $916);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $918 = self.err;
                                                                                        var _reply$50 = Litereum$parse$name$(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $920 = self.err;
                                                                                                var self = $918;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $922 = self.value;
                                                                                                        var $923 = Parser$Reply$error$(Parser$Error$combine$($922, $920));
                                                                                                        var $921 = $923;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $924 = Parser$Reply$error$($920);
                                                                                                        var $921 = $924;
                                                                                                        break;
                                                                                                };
                                                                                                var $919 = $921;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $925 = self.pst;
                                                                                                var $926 = self.val;
                                                                                                var self = $925;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $928 = self.err;
                                                                                                        var $929 = self.nam;
                                                                                                        var $930 = self.ini;
                                                                                                        var $931 = self.idx;
                                                                                                        var $932 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($918, $928), $929, $930, $931, $932);
                                                                                                        var self = Litereum$get_data$(_world$1, $926);
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $934 = self.value;
                                                                                                                var _data$60 = $934;
                                                                                                                var self = _data$60;
                                                                                                                switch (self._) {
                                                                                                                    case 'Litereum.Data.new':
                                                                                                                        var $936 = self.constructors;
                                                                                                                        var $937 = (_pst$63 => {
                                                                                                                            var self = _pst$63;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $939 = self.err;
                                                                                                                                    var _reply$69 = Litereum$parse$text$("{", _pst$63);
                                                                                                                                    var self = _reply$69;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                            var $941 = self.err;
                                                                                                                                            var self = $939;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Maybe.some':
                                                                                                                                                    var $943 = self.value;
                                                                                                                                                    var $944 = Parser$Reply$error$(Parser$Error$combine$($943, $941));
                                                                                                                                                    var $942 = $944;
                                                                                                                                                    break;
                                                                                                                                                case 'Maybe.none':
                                                                                                                                                    var $945 = Parser$Reply$error$($941);
                                                                                                                                                    var $942 = $945;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $940 = $942;
                                                                                                                                            break;
                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                            var $946 = self.pst;
                                                                                                                                            var self = $946;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $948 = self.err;
                                                                                                                                                    var $949 = self.nam;
                                                                                                                                                    var $950 = self.ini;
                                                                                                                                                    var $951 = self.idx;
                                                                                                                                                    var $952 = self.str;
                                                                                                                                                    var _reply$pst$77 = Parser$State$new$(Parser$Error$maybe_combine$($939, $948), $949, $950, $951, $952);
                                                                                                                                                    var self = _reply$pst$77;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $954 = self.err;
                                                                                                                                                            var _reply$83 = Litereum$parse$term$match$cases$(_world$1, $936)(_reply$pst$77);
                                                                                                                                                            var self = _reply$83;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                    var $956 = self.err;
                                                                                                                                                                    var self = $954;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                            var $958 = self.value;
                                                                                                                                                                            var $959 = Parser$Reply$error$(Parser$Error$combine$($958, $956));
                                                                                                                                                                            var $957 = $959;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                            var $960 = Parser$Reply$error$($956);
                                                                                                                                                                            var $957 = $960;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $955 = $957;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                    var $961 = self.pst;
                                                                                                                                                                    var $962 = self.val;
                                                                                                                                                                    var self = $961;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $964 = self.err;
                                                                                                                                                                            var $965 = self.nam;
                                                                                                                                                                            var $966 = self.ini;
                                                                                                                                                                            var $967 = self.idx;
                                                                                                                                                                            var $968 = self.str;
                                                                                                                                                                            var _reply$pst$91 = Parser$State$new$(Parser$Error$maybe_combine$($954, $964), $965, $966, $967, $968);
                                                                                                                                                                            var self = _reply$pst$91;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $970 = self.err;
                                                                                                                                                                                    var _reply$97 = Litereum$parse$text$("}", _reply$pst$91);
                                                                                                                                                                                    var self = _reply$97;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                            var $972 = self.err;
                                                                                                                                                                                            var self = $970;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                    var $974 = self.value;
                                                                                                                                                                                                    var $975 = Parser$Reply$error$(Parser$Error$combine$($974, $972));
                                                                                                                                                                                                    var $973 = $975;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                    var $976 = Parser$Reply$error$($972);
                                                                                                                                                                                                    var $973 = $976;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $971 = $973;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                            var $977 = self.pst;
                                                                                                                                                                                            var self = $977;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                    var $979 = self.err;
                                                                                                                                                                                                    var $980 = self.nam;
                                                                                                                                                                                                    var $981 = self.ini;
                                                                                                                                                                                                    var $982 = self.idx;
                                                                                                                                                                                                    var $983 = self.str;
                                                                                                                                                                                                    var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($970, $979), $980, $981, $982, $983);
                                                                                                                                                                                                    var $984 = Parser$Reply$value$(_reply$pst$105, Litereum$Term$match$($895, $926, $962));
                                                                                                                                                                                                    var $978 = $984;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $971 = $978;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $969 = $971;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $963 = $969;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $955 = $963;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $953 = $955;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $947 = $953;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $940 = $947;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $938 = $940;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            return $938;
                                                                                                                        });
                                                                                                                        var $935 = $937;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $933 = $935;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $985 = Parser$fail("Type not found.");
                                                                                                                var $933 = $985;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $933 = $933(_reply$pst$58);
                                                                                                        var $927 = $933;
                                                                                                        break;
                                                                                                };
                                                                                                var $919 = $927;
                                                                                                break;
                                                                                        };
                                                                                        var $917 = $919;
                                                                                        break;
                                                                                };
                                                                                var $911 = $917;
                                                                                break;
                                                                        };
                                                                        var $904 = $911;
                                                                        break;
                                                                };
                                                                var $902 = $904;
                                                                break;
                                                        };
                                                        var $896 = $902;
                                                        break;
                                                };
                                                var $888 = $896;
                                                break;
                                        };
                                        var $886 = $888;
                                        break;
                                };
                                var $880 = $886;
                                break;
                        };
                        var $873 = $880;
                        break;
                };
                var $871 = $873;
                break;
        };
        return $871;
    };
    const Litereum$parse$term$match = x0 => x1 => Litereum$parse$term$match$(x0, x1);

    function Parser$many1$(_parser$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $987 = self.err;
                var _reply$9 = _parser$2(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $989 = self.err;
                        var self = $987;
                        switch (self._) {
                            case 'Maybe.some':
                                var $991 = self.value;
                                var $992 = Parser$Reply$error$(Parser$Error$combine$($991, $989));
                                var $990 = $992;
                                break;
                            case 'Maybe.none':
                                var $993 = Parser$Reply$error$($989);
                                var $990 = $993;
                                break;
                        };
                        var $988 = $990;
                        break;
                    case 'Parser.Reply.value':
                        var $994 = self.pst;
                        var $995 = self.val;
                        var self = $994;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $997 = self.err;
                                var $998 = self.nam;
                                var $999 = self.ini;
                                var $1000 = self.idx;
                                var $1001 = self.str;
                                var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($987, $997), $998, $999, $1000, $1001);
                                var self = _reply$pst$17;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1003 = self.err;
                                        var _reply$23 = Parser$many$(_parser$2)(_reply$pst$17);
                                        var self = _reply$23;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1005 = self.err;
                                                var self = $1003;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1007 = self.value;
                                                        var $1008 = Parser$Reply$error$(Parser$Error$combine$($1007, $1005));
                                                        var $1006 = $1008;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1009 = Parser$Reply$error$($1005);
                                                        var $1006 = $1009;
                                                        break;
                                                };
                                                var $1004 = $1006;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1010 = self.pst;
                                                var $1011 = self.val;
                                                var self = $1010;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1013 = self.err;
                                                        var $1014 = self.nam;
                                                        var $1015 = self.ini;
                                                        var $1016 = self.idx;
                                                        var $1017 = self.str;
                                                        var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($1003, $1013), $1014, $1015, $1016, $1017);
                                                        var $1018 = Parser$Reply$value$(_reply$pst$31, List$cons$($995, $1011));
                                                        var $1012 = $1018;
                                                        break;
                                                };
                                                var $1004 = $1012;
                                                break;
                                        };
                                        var $1002 = $1004;
                                        break;
                                };
                                var $996 = $1002;
                                break;
                        };
                        var $988 = $996;
                        break;
                };
                var $986 = $988;
                break;
        };
        return $986;
    };
    const Parser$many1 = x0 => x1 => Parser$many1$(x0, x1);

    function Parser$digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1020 = self.err;
                var $1021 = self.nam;
                var $1022 = self.ini;
                var $1023 = self.idx;
                var $1024 = self.str;
                var self = $1024;
                if (self.length === 0) {
                    var $1026 = Parser$Reply$fail$($1021, $1022, $1023, "Not a digit.");
                    var $1025 = $1026;
                } else {
                    var $1027 = self.charCodeAt(0);
                    var $1028 = self.slice(1);
                    var _pst$9 = Parser$State$new$($1020, $1021, $1022, Nat$succ$($1023), $1028);
                    var self = ($1027 === 48);
                    if (self) {
                        var $1030 = Parser$Reply$value$(_pst$9, 0n);
                        var $1029 = $1030;
                    } else {
                        var self = ($1027 === 49);
                        if (self) {
                            var $1032 = Parser$Reply$value$(_pst$9, 1n);
                            var $1031 = $1032;
                        } else {
                            var self = ($1027 === 50);
                            if (self) {
                                var $1034 = Parser$Reply$value$(_pst$9, 2n);
                                var $1033 = $1034;
                            } else {
                                var self = ($1027 === 51);
                                if (self) {
                                    var $1036 = Parser$Reply$value$(_pst$9, 3n);
                                    var $1035 = $1036;
                                } else {
                                    var self = ($1027 === 52);
                                    if (self) {
                                        var $1038 = Parser$Reply$value$(_pst$9, 4n);
                                        var $1037 = $1038;
                                    } else {
                                        var self = ($1027 === 53);
                                        if (self) {
                                            var $1040 = Parser$Reply$value$(_pst$9, 5n);
                                            var $1039 = $1040;
                                        } else {
                                            var self = ($1027 === 54);
                                            if (self) {
                                                var $1042 = Parser$Reply$value$(_pst$9, 6n);
                                                var $1041 = $1042;
                                            } else {
                                                var self = ($1027 === 55);
                                                if (self) {
                                                    var $1044 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $1043 = $1044;
                                                } else {
                                                    var self = ($1027 === 56);
                                                    if (self) {
                                                        var $1046 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $1045 = $1046;
                                                    } else {
                                                        var self = ($1027 === 57);
                                                        if (self) {
                                                            var $1048 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $1047 = $1048;
                                                        } else {
                                                            var $1049 = Parser$Reply$fail$($1021, $1022, $1023, "Not a digit.");
                                                            var $1047 = $1049;
                                                        };
                                                        var $1045 = $1047;
                                                    };
                                                    var $1043 = $1045;
                                                };
                                                var $1041 = $1043;
                                            };
                                            var $1039 = $1041;
                                        };
                                        var $1037 = $1039;
                                    };
                                    var $1035 = $1037;
                                };
                                var $1033 = $1035;
                            };
                            var $1031 = $1033;
                        };
                        var $1029 = $1031;
                    };
                    var $1025 = $1029;
                };
                var $1019 = $1025;
                break;
        };
        return $1019;
    };
    const Parser$digit = x0 => Parser$digit$(x0);
    const Nat$add = a0 => a1 => (a0 + a1);
    const Nat$mul = a0 => a1 => (a0 * a1);

    function Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4) {
        var Nat$from_base$go$ = (_b$1, _ds$2, _p$3, _res$4) => ({
            ctr: 'TCO',
            arg: [_b$1, _ds$2, _p$3, _res$4]
        });
        var Nat$from_base$go = _b$1 => _ds$2 => _p$3 => _res$4 => Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4);
        var arg = [_b$1, _ds$2, _p$3, _res$4];
        while (true) {
            let [_b$1, _ds$2, _p$3, _res$4] = arg;
            var R = (() => {
                var self = _ds$2;
                switch (self._) {
                    case 'List.cons':
                        var $1050 = self.head;
                        var $1051 = self.tail;
                        var $1052 = Nat$from_base$go$(_b$1, $1051, (_b$1 * _p$3), (($1050 * _p$3) + _res$4));
                        return $1052;
                    case 'List.nil':
                        var $1053 = _res$4;
                        return $1053;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$from_base$go = x0 => x1 => x2 => x3 => Nat$from_base$go$(x0, x1, x2, x3);

    function Nat$from_base$(_base$1, _ds$2) {
        var $1054 = Nat$from_base$go$(_base$1, List$reverse$(_ds$2), 1n, 0n);
        return $1054;
    };
    const Nat$from_base = x0 => x1 => Nat$from_base$(x0, x1);

    function Parser$nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1056 = self.err;
                var _reply$7 = Parser$many1$(Parser$digit, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1058 = self.err;
                        var self = $1056;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1060 = self.value;
                                var $1061 = Parser$Reply$error$(Parser$Error$combine$($1060, $1058));
                                var $1059 = $1061;
                                break;
                            case 'Maybe.none':
                                var $1062 = Parser$Reply$error$($1058);
                                var $1059 = $1062;
                                break;
                        };
                        var $1057 = $1059;
                        break;
                    case 'Parser.Reply.value':
                        var $1063 = self.pst;
                        var $1064 = self.val;
                        var self = $1063;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1066 = self.err;
                                var $1067 = self.nam;
                                var $1068 = self.ini;
                                var $1069 = self.idx;
                                var $1070 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1056, $1066), $1067, $1068, $1069, $1070);
                                var $1071 = Parser$Reply$value$(_reply$pst$15, Nat$from_base$(10n, $1064));
                                var $1065 = $1071;
                                break;
                        };
                        var $1057 = $1065;
                        break;
                };
                var $1055 = $1057;
                break;
        };
        return $1055;
    };
    const Parser$nat = x0 => Parser$nat$(x0);
    const Nat$gte = a0 => a1 => (a0 >= a1);

    function Nat$pow$aux$(_x$1, _y$2, _aux$3) {
        var Nat$pow$aux$ = (_x$1, _y$2, _aux$3) => ({
            ctr: 'TCO',
            arg: [_x$1, _y$2, _aux$3]
        });
        var Nat$pow$aux = _x$1 => _y$2 => _aux$3 => Nat$pow$aux$(_x$1, _y$2, _aux$3);
        var arg = [_x$1, _y$2, _aux$3];
        while (true) {
            let [_x$1, _y$2, _aux$3] = arg;
            var R = (() => {
                var self = _y$2;
                if (self === 0n) {
                    var $1072 = _x$1;
                    return $1072;
                } else {
                    var $1073 = (self - 1n);
                    var $1074 = Nat$pow$aux$(_x$1, $1073, (_aux$3 * 2n));
                    return $1074;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$pow$aux = x0 => x1 => x2 => Nat$pow$aux$(x0, x1, x2);
    const Nat$pow = a0 => a1 => (a0 ** a1);

    function Litereum$Term$word$(_numb$1) {
        var $1075 = ({
            _: 'Litereum.Term.word',
            'numb': _numb$1
        });
        return $1075;
    };
    const Litereum$Term$word = x0 => Litereum$Term$word$(x0);

    function U64$new$(_value$1) {
        var $1076 = word_to_u64(_value$1);
        return $1076;
    };
    const U64$new = x0 => U64$new$(x0);

    function Nat$apply$(_n$2, _f$3, _x$4) {
        var Nat$apply$ = (_n$2, _f$3, _x$4) => ({
            ctr: 'TCO',
            arg: [_n$2, _f$3, _x$4]
        });
        var Nat$apply = _n$2 => _f$3 => _x$4 => Nat$apply$(_n$2, _f$3, _x$4);
        var arg = [_n$2, _f$3, _x$4];
        while (true) {
            let [_n$2, _f$3, _x$4] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $1077 = _x$4;
                    return $1077;
                } else {
                    var $1078 = (self - 1n);
                    var $1079 = Nat$apply$($1078, _f$3, _f$3(_x$4));
                    return $1079;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$apply = x0 => x1 => x2 => Nat$apply$(x0, x1, x2);

    function Word$(_size$1) {
        var $1080 = null;
        return $1080;
    };
    const Word = x0 => Word$(x0);
    const Word$e = ({
        _: 'Word.e'
    });

    function Word$i$(_pred$2) {
        var $1081 = ({
            _: 'Word.i',
            'pred': _pred$2
        });
        return $1081;
    };
    const Word$i = x0 => Word$i$(x0);

    function Word$o$(_pred$2) {
        var $1082 = ({
            _: 'Word.o',
            'pred': _pred$2
        });
        return $1082;
    };
    const Word$o = x0 => Word$o$(x0);

    function Word$inc$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $1084 = self.pred;
                var $1085 = Word$i$($1084);
                var $1083 = $1085;
                break;
            case 'Word.i':
                var $1086 = self.pred;
                var $1087 = Word$o$(Word$inc$($1086));
                var $1083 = $1087;
                break;
            case 'Word.e':
                var $1088 = Word$e;
                var $1083 = $1088;
                break;
        };
        return $1083;
    };
    const Word$inc = x0 => Word$inc$(x0);

    function Word$zero$(_size$1) {
        var self = _size$1;
        if (self === 0n) {
            var $1090 = Word$e;
            var $1089 = $1090;
        } else {
            var $1091 = (self - 1n);
            var $1092 = Word$o$(Word$zero$($1091));
            var $1089 = $1092;
        };
        return $1089;
    };
    const Word$zero = x0 => Word$zero$(x0);

    function Nat$to_word$(_size$1, _n$2) {
        var $1093 = Nat$apply$(_n$2, Word$inc, Word$zero$(_size$1));
        return $1093;
    };
    const Nat$to_word = x0 => x1 => Nat$to_word$(x0, x1);
    const Nat$to_u64 = a0 => (a0 & 0xFFFFFFFFFFFFFFFFn);

    function Litereum$parse$term$word$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1095 = self.err;
                var _reply$8 = Litereum$parse$text$("#", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1097 = self.err;
                        var self = $1095;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1099 = self.value;
                                var $1100 = Parser$Reply$error$(Parser$Error$combine$($1099, $1097));
                                var $1098 = $1100;
                                break;
                            case 'Maybe.none':
                                var $1101 = Parser$Reply$error$($1097);
                                var $1098 = $1101;
                                break;
                        };
                        var $1096 = $1098;
                        break;
                    case 'Parser.Reply.value':
                        var $1102 = self.pst;
                        var self = $1102;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1104 = self.err;
                                var $1105 = self.nam;
                                var $1106 = self.ini;
                                var $1107 = self.idx;
                                var $1108 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1095, $1104), $1105, $1106, $1107, $1108);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1110 = self.err;
                                        var _reply$22 = Parser$nat$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1112 = self.err;
                                                var self = $1110;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1114 = self.value;
                                                        var $1115 = Parser$Reply$error$(Parser$Error$combine$($1114, $1112));
                                                        var $1113 = $1115;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1116 = Parser$Reply$error$($1112);
                                                        var $1113 = $1116;
                                                        break;
                                                };
                                                var $1111 = $1113;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1117 = self.pst;
                                                var $1118 = self.val;
                                                var self = $1117;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1120 = self.err;
                                                        var $1121 = self.nam;
                                                        var $1122 = self.ini;
                                                        var $1123 = self.idx;
                                                        var $1124 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1110, $1120), $1121, $1122, $1123, $1124);
                                                        var self = ($1118 >= (2n ** 64n));
                                                        if (self) {
                                                            var $1126 = Parser$fail("Number out of bound");
                                                            var $1125 = $1126;
                                                        } else {
                                                            var $1127 = (_pst$31 => {
                                                                var $1128 = Parser$Reply$value$(_pst$31, Litereum$Term$word$(($1118 & 0xFFFFFFFFFFFFFFFFn)));
                                                                return $1128;
                                                            });
                                                            var $1125 = $1127;
                                                        };
                                                        var $1125 = $1125(_reply$pst$30);
                                                        var $1119 = $1125;
                                                        break;
                                                };
                                                var $1111 = $1119;
                                                break;
                                        };
                                        var $1109 = $1111;
                                        break;
                                };
                                var $1103 = $1109;
                                break;
                        };
                        var $1096 = $1103;
                        break;
                };
                var $1094 = $1096;
                break;
        };
        return $1094;
    };
    const Litereum$parse$term$word = x0 => x1 => Litereum$parse$term$word$(x0, x1);

    function Litereum$Term$compare$(_val0$1, _val1$2, _iflt$3, _ifeq$4, _ifgt$5) {
        var $1129 = ({
            _: 'Litereum.Term.compare',
            'val0': _val0$1,
            'val1': _val1$2,
            'iflt': _iflt$3,
            'ifeq': _ifeq$4,
            'ifgt': _ifgt$5
        });
        return $1129;
    };
    const Litereum$Term$compare = x0 => x1 => x2 => x3 => x4 => Litereum$Term$compare$(x0, x1, x2, x3, x4);

    function Litereum$parse$term$compare$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1131 = self.err;
                var _reply$8 = Litereum$parse$text$("compare", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1133 = self.err;
                        var self = $1131;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1135 = self.value;
                                var $1136 = Parser$Reply$error$(Parser$Error$combine$($1135, $1133));
                                var $1134 = $1136;
                                break;
                            case 'Maybe.none':
                                var $1137 = Parser$Reply$error$($1133);
                                var $1134 = $1137;
                                break;
                        };
                        var $1132 = $1134;
                        break;
                    case 'Parser.Reply.value':
                        var $1138 = self.pst;
                        var self = $1138;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1140 = self.err;
                                var $1141 = self.nam;
                                var $1142 = self.ini;
                                var $1143 = self.idx;
                                var $1144 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1131, $1140), $1141, $1142, $1143, $1144);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1146 = self.err;
                                        var _reply$22 = Litereum$parse$term$(_world$1)(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1148 = self.err;
                                                var self = $1146;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1150 = self.value;
                                                        var $1151 = Parser$Reply$error$(Parser$Error$combine$($1150, $1148));
                                                        var $1149 = $1151;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1152 = Parser$Reply$error$($1148);
                                                        var $1149 = $1152;
                                                        break;
                                                };
                                                var $1147 = $1149;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1153 = self.pst;
                                                var $1154 = self.val;
                                                var self = $1153;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1156 = self.err;
                                                        var $1157 = self.nam;
                                                        var $1158 = self.ini;
                                                        var $1159 = self.idx;
                                                        var $1160 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1146, $1156), $1157, $1158, $1159, $1160);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1162 = self.err;
                                                                var _reply$36 = Litereum$parse$term$(_world$1)(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1164 = self.err;
                                                                        var self = $1162;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1166 = self.value;
                                                                                var $1167 = Parser$Reply$error$(Parser$Error$combine$($1166, $1164));
                                                                                var $1165 = $1167;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1168 = Parser$Reply$error$($1164);
                                                                                var $1165 = $1168;
                                                                                break;
                                                                        };
                                                                        var $1163 = $1165;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1169 = self.pst;
                                                                        var $1170 = self.val;
                                                                        var self = $1169;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1172 = self.err;
                                                                                var $1173 = self.nam;
                                                                                var $1174 = self.ini;
                                                                                var $1175 = self.idx;
                                                                                var $1176 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1162, $1172), $1173, $1174, $1175, $1176);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1178 = self.err;
                                                                                        var _reply$50 = Litereum$parse$text$("{", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1180 = self.err;
                                                                                                var self = $1178;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1182 = self.value;
                                                                                                        var $1183 = Parser$Reply$error$(Parser$Error$combine$($1182, $1180));
                                                                                                        var $1181 = $1183;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1184 = Parser$Reply$error$($1180);
                                                                                                        var $1181 = $1184;
                                                                                                        break;
                                                                                                };
                                                                                                var $1179 = $1181;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1185 = self.pst;
                                                                                                var self = $1185;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1187 = self.err;
                                                                                                        var $1188 = self.nam;
                                                                                                        var $1189 = self.ini;
                                                                                                        var $1190 = self.idx;
                                                                                                        var $1191 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1178, $1187), $1188, $1189, $1190, $1191);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1193 = self.err;
                                                                                                                var _reply$64 = Litereum$parse$text$("_<_:", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1195 = self.err;
                                                                                                                        var self = $1193;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1197 = self.value;
                                                                                                                                var $1198 = Parser$Reply$error$(Parser$Error$combine$($1197, $1195));
                                                                                                                                var $1196 = $1198;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1199 = Parser$Reply$error$($1195);
                                                                                                                                var $1196 = $1199;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1194 = $1196;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1200 = self.pst;
                                                                                                                        var self = $1200;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1202 = self.err;
                                                                                                                                var $1203 = self.nam;
                                                                                                                                var $1204 = self.ini;
                                                                                                                                var $1205 = self.idx;
                                                                                                                                var $1206 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1193, $1202), $1203, $1204, $1205, $1206);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1208 = self.err;
                                                                                                                                        var _reply$78 = Litereum$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1210 = self.err;
                                                                                                                                                var self = $1208;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1212 = self.value;
                                                                                                                                                        var $1213 = Parser$Reply$error$(Parser$Error$combine$($1212, $1210));
                                                                                                                                                        var $1211 = $1213;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1214 = Parser$Reply$error$($1210);
                                                                                                                                                        var $1211 = $1214;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1209 = $1211;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1215 = self.pst;
                                                                                                                                                var $1216 = self.val;
                                                                                                                                                var self = $1215;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1218 = self.err;
                                                                                                                                                        var $1219 = self.nam;
                                                                                                                                                        var $1220 = self.ini;
                                                                                                                                                        var $1221 = self.idx;
                                                                                                                                                        var $1222 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1208, $1218), $1219, $1220, $1221, $1222);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $1224 = self.err;
                                                                                                                                                                var _reply$92 = Litereum$parse$text$("_=_:", _reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $1226 = self.err;
                                                                                                                                                                        var self = $1224;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $1228 = self.value;
                                                                                                                                                                                var $1229 = Parser$Reply$error$(Parser$Error$combine$($1228, $1226));
                                                                                                                                                                                var $1227 = $1229;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $1230 = Parser$Reply$error$($1226);
                                                                                                                                                                                var $1227 = $1230;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $1225 = $1227;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $1231 = self.pst;
                                                                                                                                                                        var self = $1231;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $1233 = self.err;
                                                                                                                                                                                var $1234 = self.nam;
                                                                                                                                                                                var $1235 = self.ini;
                                                                                                                                                                                var $1236 = self.idx;
                                                                                                                                                                                var $1237 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($1224, $1233), $1234, $1235, $1236, $1237);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $1239 = self.err;
                                                                                                                                                                                        var _reply$106 = Litereum$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $1241 = self.err;
                                                                                                                                                                                                var self = $1239;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $1243 = self.value;
                                                                                                                                                                                                        var $1244 = Parser$Reply$error$(Parser$Error$combine$($1243, $1241));
                                                                                                                                                                                                        var $1242 = $1244;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $1245 = Parser$Reply$error$($1241);
                                                                                                                                                                                                        var $1242 = $1245;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $1240 = $1242;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $1246 = self.pst;
                                                                                                                                                                                                var $1247 = self.val;
                                                                                                                                                                                                var self = $1246;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $1249 = self.err;
                                                                                                                                                                                                        var $1250 = self.nam;
                                                                                                                                                                                                        var $1251 = self.ini;
                                                                                                                                                                                                        var $1252 = self.idx;
                                                                                                                                                                                                        var $1253 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($1239, $1249), $1250, $1251, $1252, $1253);
                                                                                                                                                                                                        var self = _reply$pst$114;
                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                var $1255 = self.err;
                                                                                                                                                                                                                var _reply$120 = Litereum$parse$text$("_>_:", _reply$pst$114);
                                                                                                                                                                                                                var self = _reply$120;
                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                        var $1257 = self.err;
                                                                                                                                                                                                                        var self = $1255;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                var $1259 = self.value;
                                                                                                                                                                                                                                var $1260 = Parser$Reply$error$(Parser$Error$combine$($1259, $1257));
                                                                                                                                                                                                                                var $1258 = $1260;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                var $1261 = Parser$Reply$error$($1257);
                                                                                                                                                                                                                                var $1258 = $1261;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $1256 = $1258;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                        var $1262 = self.pst;
                                                                                                                                                                                                                        var self = $1262;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                var $1264 = self.err;
                                                                                                                                                                                                                                var $1265 = self.nam;
                                                                                                                                                                                                                                var $1266 = self.ini;
                                                                                                                                                                                                                                var $1267 = self.idx;
                                                                                                                                                                                                                                var $1268 = self.str;
                                                                                                                                                                                                                                var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($1255, $1264), $1265, $1266, $1267, $1268);
                                                                                                                                                                                                                                var self = _reply$pst$128;
                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                        var $1270 = self.err;
                                                                                                                                                                                                                                        var _reply$134 = Litereum$parse$term$(_world$1)(_reply$pst$128);
                                                                                                                                                                                                                                        var self = _reply$134;
                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                var $1272 = self.err;
                                                                                                                                                                                                                                                var self = $1270;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                        var $1274 = self.value;
                                                                                                                                                                                                                                                        var $1275 = Parser$Reply$error$(Parser$Error$combine$($1274, $1272));
                                                                                                                                                                                                                                                        var $1273 = $1275;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                        var $1276 = Parser$Reply$error$($1272);
                                                                                                                                                                                                                                                        var $1273 = $1276;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $1271 = $1273;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                var $1277 = self.pst;
                                                                                                                                                                                                                                                var $1278 = self.val;
                                                                                                                                                                                                                                                var self = $1277;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                        var $1280 = self.err;
                                                                                                                                                                                                                                                        var $1281 = self.nam;
                                                                                                                                                                                                                                                        var $1282 = self.ini;
                                                                                                                                                                                                                                                        var $1283 = self.idx;
                                                                                                                                                                                                                                                        var $1284 = self.str;
                                                                                                                                                                                                                                                        var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($1270, $1280), $1281, $1282, $1283, $1284);
                                                                                                                                                                                                                                                        var self = _reply$pst$142;
                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                var $1286 = self.err;
                                                                                                                                                                                                                                                                var _reply$148 = Litereum$parse$text$("}", _reply$pst$142);
                                                                                                                                                                                                                                                                var self = _reply$148;
                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                        var $1288 = self.err;
                                                                                                                                                                                                                                                                        var self = $1286;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                                                                var $1290 = self.value;
                                                                                                                                                                                                                                                                                var $1291 = Parser$Reply$error$(Parser$Error$combine$($1290, $1288));
                                                                                                                                                                                                                                                                                var $1289 = $1291;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                                                                var $1292 = Parser$Reply$error$($1288);
                                                                                                                                                                                                                                                                                var $1289 = $1292;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $1287 = $1289;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                        var $1293 = self.pst;
                                                                                                                                                                                                                                                                        var self = $1293;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                                var $1295 = self.err;
                                                                                                                                                                                                                                                                                var $1296 = self.nam;
                                                                                                                                                                                                                                                                                var $1297 = self.ini;
                                                                                                                                                                                                                                                                                var $1298 = self.idx;
                                                                                                                                                                                                                                                                                var $1299 = self.str;
                                                                                                                                                                                                                                                                                var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($1286, $1295), $1296, $1297, $1298, $1299);
                                                                                                                                                                                                                                                                                var $1300 = Parser$Reply$value$(_reply$pst$156, Litereum$Term$compare$($1154, $1170, $1216, $1247, $1278));
                                                                                                                                                                                                                                                                                var $1294 = $1300;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $1287 = $1294;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                var $1285 = $1287;
                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                        var $1279 = $1285;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $1271 = $1279;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                        var $1269 = $1271;
                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                var $1263 = $1269;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $1256 = $1263;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                };
                                                                                                                                                                                                                var $1254 = $1256;
                                                                                                                                                                                                                break;
                                                                                                                                                                                                        };
                                                                                                                                                                                                        var $1248 = $1254;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $1240 = $1248;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $1238 = $1240;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $1232 = $1238;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $1225 = $1232;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $1223 = $1225;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $1217 = $1223;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1209 = $1217;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1207 = $1209;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1201 = $1207;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1194 = $1201;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1192 = $1194;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1186 = $1192;
                                                                                                        break;
                                                                                                };
                                                                                                var $1179 = $1186;
                                                                                                break;
                                                                                        };
                                                                                        var $1177 = $1179;
                                                                                        break;
                                                                                };
                                                                                var $1171 = $1177;
                                                                                break;
                                                                        };
                                                                        var $1163 = $1171;
                                                                        break;
                                                                };
                                                                var $1161 = $1163;
                                                                break;
                                                        };
                                                        var $1155 = $1161;
                                                        break;
                                                };
                                                var $1147 = $1155;
                                                break;
                                        };
                                        var $1145 = $1147;
                                        break;
                                };
                                var $1139 = $1145;
                                break;
                        };
                        var $1132 = $1139;
                        break;
                };
                var $1130 = $1132;
                break;
        };
        return $1130;
    };
    const Litereum$parse$term$compare = x0 => x1 => Litereum$parse$term$compare$(x0, x1);
    const Litereum$Operation$add = ({
        _: 'Litereum.Operation.add'
    });
    const Litereum$Operation$sub = ({
        _: 'Litereum.Operation.sub'
    });
    const Litereum$Operation$mul = ({
        _: 'Litereum.Operation.mul'
    });
    const Litereum$Operation$div = ({
        _: 'Litereum.Operation.div'
    });
    const Litereum$Operation$mod = ({
        _: 'Litereum.Operation.mod'
    });
    const Litereum$Operation$or = ({
        _: 'Litereum.Operation.or'
    });
    const Litereum$Operation$and = ({
        _: 'Litereum.Operation.and'
    });
    const Litereum$Operation$xor = ({
        _: 'Litereum.Operation.xor'
    });
    const Litereum$parse$term$operation = Parser$choice(List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1302 = self.err;
                var _reply$7 = Litereum$parse$text$("+", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1304 = self.err;
                        var self = $1302;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1306 = self.value;
                                var $1307 = Parser$Reply$error$(Parser$Error$combine$($1306, $1304));
                                var $1305 = $1307;
                                break;
                            case 'Maybe.none':
                                var $1308 = Parser$Reply$error$($1304);
                                var $1305 = $1308;
                                break;
                        };
                        var $1303 = $1305;
                        break;
                    case 'Parser.Reply.value':
                        var $1309 = self.pst;
                        var self = $1309;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1311 = self.err;
                                var $1312 = self.nam;
                                var $1313 = self.ini;
                                var $1314 = self.idx;
                                var $1315 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1302, $1311), $1312, $1313, $1314, $1315);
                                var $1316 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$add));
                                var $1310 = $1316;
                                break;
                        };
                        var $1303 = $1310;
                        break;
                };
                var $1301 = $1303;
                break;
        };
        return $1301;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1318 = self.err;
                var _reply$7 = Litereum$parse$text$("-", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1320 = self.err;
                        var self = $1318;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1322 = self.value;
                                var $1323 = Parser$Reply$error$(Parser$Error$combine$($1322, $1320));
                                var $1321 = $1323;
                                break;
                            case 'Maybe.none':
                                var $1324 = Parser$Reply$error$($1320);
                                var $1321 = $1324;
                                break;
                        };
                        var $1319 = $1321;
                        break;
                    case 'Parser.Reply.value':
                        var $1325 = self.pst;
                        var self = $1325;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1327 = self.err;
                                var $1328 = self.nam;
                                var $1329 = self.ini;
                                var $1330 = self.idx;
                                var $1331 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1318, $1327), $1328, $1329, $1330, $1331);
                                var $1332 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$sub));
                                var $1326 = $1332;
                                break;
                        };
                        var $1319 = $1326;
                        break;
                };
                var $1317 = $1319;
                break;
        };
        return $1317;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1334 = self.err;
                var _reply$7 = Litereum$parse$text$("*", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1336 = self.err;
                        var self = $1334;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1338 = self.value;
                                var $1339 = Parser$Reply$error$(Parser$Error$combine$($1338, $1336));
                                var $1337 = $1339;
                                break;
                            case 'Maybe.none':
                                var $1340 = Parser$Reply$error$($1336);
                                var $1337 = $1340;
                                break;
                        };
                        var $1335 = $1337;
                        break;
                    case 'Parser.Reply.value':
                        var $1341 = self.pst;
                        var self = $1341;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1343 = self.err;
                                var $1344 = self.nam;
                                var $1345 = self.ini;
                                var $1346 = self.idx;
                                var $1347 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1334, $1343), $1344, $1345, $1346, $1347);
                                var $1348 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$mul));
                                var $1342 = $1348;
                                break;
                        };
                        var $1335 = $1342;
                        break;
                };
                var $1333 = $1335;
                break;
        };
        return $1333;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1350 = self.err;
                var _reply$7 = Litereum$parse$text$("/", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1352 = self.err;
                        var self = $1350;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1354 = self.value;
                                var $1355 = Parser$Reply$error$(Parser$Error$combine$($1354, $1352));
                                var $1353 = $1355;
                                break;
                            case 'Maybe.none':
                                var $1356 = Parser$Reply$error$($1352);
                                var $1353 = $1356;
                                break;
                        };
                        var $1351 = $1353;
                        break;
                    case 'Parser.Reply.value':
                        var $1357 = self.pst;
                        var self = $1357;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1359 = self.err;
                                var $1360 = self.nam;
                                var $1361 = self.ini;
                                var $1362 = self.idx;
                                var $1363 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1350, $1359), $1360, $1361, $1362, $1363);
                                var $1364 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$div));
                                var $1358 = $1364;
                                break;
                        };
                        var $1351 = $1358;
                        break;
                };
                var $1349 = $1351;
                break;
        };
        return $1349;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1366 = self.err;
                var _reply$7 = Litereum$parse$text$("%", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1368 = self.err;
                        var self = $1366;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1370 = self.value;
                                var $1371 = Parser$Reply$error$(Parser$Error$combine$($1370, $1368));
                                var $1369 = $1371;
                                break;
                            case 'Maybe.none':
                                var $1372 = Parser$Reply$error$($1368);
                                var $1369 = $1372;
                                break;
                        };
                        var $1367 = $1369;
                        break;
                    case 'Parser.Reply.value':
                        var $1373 = self.pst;
                        var self = $1373;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1375 = self.err;
                                var $1376 = self.nam;
                                var $1377 = self.ini;
                                var $1378 = self.idx;
                                var $1379 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1366, $1375), $1376, $1377, $1378, $1379);
                                var $1380 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$mod));
                                var $1374 = $1380;
                                break;
                        };
                        var $1367 = $1374;
                        break;
                };
                var $1365 = $1367;
                break;
        };
        return $1365;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1382 = self.err;
                var _reply$7 = Litereum$parse$text$("|", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1384 = self.err;
                        var self = $1382;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1386 = self.value;
                                var $1387 = Parser$Reply$error$(Parser$Error$combine$($1386, $1384));
                                var $1385 = $1387;
                                break;
                            case 'Maybe.none':
                                var $1388 = Parser$Reply$error$($1384);
                                var $1385 = $1388;
                                break;
                        };
                        var $1383 = $1385;
                        break;
                    case 'Parser.Reply.value':
                        var $1389 = self.pst;
                        var self = $1389;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1391 = self.err;
                                var $1392 = self.nam;
                                var $1393 = self.ini;
                                var $1394 = self.idx;
                                var $1395 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1382, $1391), $1392, $1393, $1394, $1395);
                                var $1396 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$or));
                                var $1390 = $1396;
                                break;
                        };
                        var $1383 = $1390;
                        break;
                };
                var $1381 = $1383;
                break;
        };
        return $1381;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1398 = self.err;
                var _reply$7 = Litereum$parse$text$("&", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1400 = self.err;
                        var self = $1398;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1402 = self.value;
                                var $1403 = Parser$Reply$error$(Parser$Error$combine$($1402, $1400));
                                var $1401 = $1403;
                                break;
                            case 'Maybe.none':
                                var $1404 = Parser$Reply$error$($1400);
                                var $1401 = $1404;
                                break;
                        };
                        var $1399 = $1401;
                        break;
                    case 'Parser.Reply.value':
                        var $1405 = self.pst;
                        var self = $1405;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1407 = self.err;
                                var $1408 = self.nam;
                                var $1409 = self.ini;
                                var $1410 = self.idx;
                                var $1411 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1398, $1407), $1408, $1409, $1410, $1411);
                                var $1412 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$and));
                                var $1406 = $1412;
                                break;
                        };
                        var $1399 = $1406;
                        break;
                };
                var $1397 = $1399;
                break;
        };
        return $1397;
    }), List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1414 = self.err;
                var _reply$7 = Litereum$parse$text$("^", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1416 = self.err;
                        var self = $1414;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1418 = self.value;
                                var $1419 = Parser$Reply$error$(Parser$Error$combine$($1418, $1416));
                                var $1417 = $1419;
                                break;
                            case 'Maybe.none':
                                var $1420 = Parser$Reply$error$($1416);
                                var $1417 = $1420;
                                break;
                        };
                        var $1415 = $1417;
                        break;
                    case 'Parser.Reply.value':
                        var $1421 = self.pst;
                        var self = $1421;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1423 = self.err;
                                var $1424 = self.nam;
                                var $1425 = self.ini;
                                var $1426 = self.idx;
                                var $1427 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1414, $1423), $1424, $1425, $1426, $1427);
                                var $1428 = Parser$Reply$value$(_reply$pst$15, Maybe$some$(Litereum$Operation$xor));
                                var $1422 = $1428;
                                break;
                        };
                        var $1415 = $1422;
                        break;
                };
                var $1413 = $1415;
                break;
        };
        return $1413;
    }), List$cons$((_pst$1 => {
        var $1429 = Parser$Reply$value$(_pst$1, Maybe$none);
        return $1429;
    }), List$nil))))))))));

    function Litereum$Term$operate$(_oper$1, _val0$2, _val1$3) {
        var $1430 = ({
            _: 'Litereum.Term.operate',
            'oper': _oper$1,
            'val0': _val0$2,
            'val1': _val1$3
        });
        return $1430;
    };
    const Litereum$Term$operate = x0 => x1 => x2 => Litereum$Term$operate$(x0, x1, x2);

    function Litereum$parse$term$operate$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1432 = self.err;
                var _reply$8 = Litereum$parse$term$operation(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1434 = self.err;
                        var self = $1432;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1436 = self.value;
                                var $1437 = Parser$Reply$error$(Parser$Error$combine$($1436, $1434));
                                var $1435 = $1437;
                                break;
                            case 'Maybe.none':
                                var $1438 = Parser$Reply$error$($1434);
                                var $1435 = $1438;
                                break;
                        };
                        var $1433 = $1435;
                        break;
                    case 'Parser.Reply.value':
                        var $1439 = self.pst;
                        var $1440 = self.val;
                        var self = $1439;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1442 = self.err;
                                var $1443 = self.nam;
                                var $1444 = self.ini;
                                var $1445 = self.idx;
                                var $1446 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1432, $1442), $1443, $1444, $1445, $1446);
                                var self = $1440;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $1448 = self.value;
                                        var $1449 = (_pst$18 => {
                                            var self = _pst$18;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $1451 = self.err;
                                                    var _reply$24 = Litereum$parse$text$("(", _pst$18);
                                                    var self = _reply$24;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $1453 = self.err;
                                                            var self = $1451;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $1455 = self.value;
                                                                    var $1456 = Parser$Reply$error$(Parser$Error$combine$($1455, $1453));
                                                                    var $1454 = $1456;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $1457 = Parser$Reply$error$($1453);
                                                                    var $1454 = $1457;
                                                                    break;
                                                            };
                                                            var $1452 = $1454;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $1458 = self.pst;
                                                            var self = $1458;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1460 = self.err;
                                                                    var $1461 = self.nam;
                                                                    var $1462 = self.ini;
                                                                    var $1463 = self.idx;
                                                                    var $1464 = self.str;
                                                                    var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($1451, $1460), $1461, $1462, $1463, $1464);
                                                                    var self = _reply$pst$32;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $1466 = self.err;
                                                                            var _reply$38 = Litereum$parse$term$(_world$1)(_reply$pst$32);
                                                                            var self = _reply$38;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $1468 = self.err;
                                                                                    var self = $1466;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $1470 = self.value;
                                                                                            var $1471 = Parser$Reply$error$(Parser$Error$combine$($1470, $1468));
                                                                                            var $1469 = $1471;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $1472 = Parser$Reply$error$($1468);
                                                                                            var $1469 = $1472;
                                                                                            break;
                                                                                    };
                                                                                    var $1467 = $1469;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $1473 = self.pst;
                                                                                    var $1474 = self.val;
                                                                                    var self = $1473;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1476 = self.err;
                                                                                            var $1477 = self.nam;
                                                                                            var $1478 = self.ini;
                                                                                            var $1479 = self.idx;
                                                                                            var $1480 = self.str;
                                                                                            var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($1466, $1476), $1477, $1478, $1479, $1480);
                                                                                            var self = _reply$pst$46;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $1482 = self.err;
                                                                                                    var _reply$52 = Parser$maybe$(Litereum$parse$text(","), _reply$pst$46);
                                                                                                    var self = _reply$52;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $1484 = self.err;
                                                                                                            var self = $1482;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $1486 = self.value;
                                                                                                                    var $1487 = Parser$Reply$error$(Parser$Error$combine$($1486, $1484));
                                                                                                                    var $1485 = $1487;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $1488 = Parser$Reply$error$($1484);
                                                                                                                    var $1485 = $1488;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1483 = $1485;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $1489 = self.pst;
                                                                                                            var self = $1489;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $1491 = self.err;
                                                                                                                    var $1492 = self.nam;
                                                                                                                    var $1493 = self.ini;
                                                                                                                    var $1494 = self.idx;
                                                                                                                    var $1495 = self.str;
                                                                                                                    var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($1482, $1491), $1492, $1493, $1494, $1495);
                                                                                                                    var self = _reply$pst$60;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.State.new':
                                                                                                                            var $1497 = self.err;
                                                                                                                            var _reply$66 = Litereum$parse$term$(_world$1)(_reply$pst$60);
                                                                                                                            var self = _reply$66;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                    var $1499 = self.err;
                                                                                                                                    var self = $1497;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Maybe.some':
                                                                                                                                            var $1501 = self.value;
                                                                                                                                            var $1502 = Parser$Reply$error$(Parser$Error$combine$($1501, $1499));
                                                                                                                                            var $1500 = $1502;
                                                                                                                                            break;
                                                                                                                                        case 'Maybe.none':
                                                                                                                                            var $1503 = Parser$Reply$error$($1499);
                                                                                                                                            var $1500 = $1503;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1498 = $1500;
                                                                                                                                    break;
                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                    var $1504 = self.pst;
                                                                                                                                    var $1505 = self.val;
                                                                                                                                    var self = $1504;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $1507 = self.err;
                                                                                                                                            var $1508 = self.nam;
                                                                                                                                            var $1509 = self.ini;
                                                                                                                                            var $1510 = self.idx;
                                                                                                                                            var $1511 = self.str;
                                                                                                                                            var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($1497, $1507), $1508, $1509, $1510, $1511);
                                                                                                                                            var self = _reply$pst$74;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $1513 = self.err;
                                                                                                                                                    var _reply$80 = Litereum$parse$text$(")", _reply$pst$74);
                                                                                                                                                    var self = _reply$80;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $1515 = self.err;
                                                                                                                                                            var self = $1513;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $1517 = self.value;
                                                                                                                                                                    var $1518 = Parser$Reply$error$(Parser$Error$combine$($1517, $1515));
                                                                                                                                                                    var $1516 = $1518;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $1519 = Parser$Reply$error$($1515);
                                                                                                                                                                    var $1516 = $1519;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1514 = $1516;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $1520 = self.pst;
                                                                                                                                                            var self = $1520;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $1522 = self.err;
                                                                                                                                                                    var $1523 = self.nam;
                                                                                                                                                                    var $1524 = self.ini;
                                                                                                                                                                    var $1525 = self.idx;
                                                                                                                                                                    var $1526 = self.str;
                                                                                                                                                                    var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($1513, $1522), $1523, $1524, $1525, $1526);
                                                                                                                                                                    var $1527 = Parser$Reply$value$(_reply$pst$88, Litereum$Term$operate$($1448, $1474, $1505));
                                                                                                                                                                    var $1521 = $1527;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1514 = $1521;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1512 = $1514;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1506 = $1512;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1498 = $1506;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1496 = $1498;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1490 = $1496;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1483 = $1490;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1481 = $1483;
                                                                                                    break;
                                                                                            };
                                                                                            var $1475 = $1481;
                                                                                            break;
                                                                                    };
                                                                                    var $1467 = $1475;
                                                                                    break;
                                                                            };
                                                                            var $1465 = $1467;
                                                                            break;
                                                                    };
                                                                    var $1459 = $1465;
                                                                    break;
                                                            };
                                                            var $1452 = $1459;
                                                            break;
                                                    };
                                                    var $1450 = $1452;
                                                    break;
                                            };
                                            return $1450;
                                        });
                                        var $1447 = $1449;
                                        break;
                                    case 'Maybe.none':
                                        var $1528 = Parser$fail("Not an operation.");
                                        var $1447 = $1528;
                                        break;
                                };
                                var $1447 = $1447(_reply$pst$16);
                                var $1441 = $1447;
                                break;
                        };
                        var $1433 = $1441;
                        break;
                };
                var $1431 = $1433;
                break;
        };
        return $1431;
    };
    const Litereum$parse$term$operate = x0 => x1 => Litereum$parse$term$operate$(x0, x1);

    function Litereum$Term$set$(_file$1, _expr$2, _body$3) {
        var $1529 = ({
            _: 'Litereum.Term.set',
            'file': _file$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $1529;
    };
    const Litereum$Term$set = x0 => x1 => x2 => Litereum$Term$set$(x0, x1, x2);

    function Litereum$parse$term$set$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1531 = self.err;
                var _reply$8 = Litereum$parse$text$("set", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1533 = self.err;
                        var self = $1531;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1535 = self.value;
                                var $1536 = Parser$Reply$error$(Parser$Error$combine$($1535, $1533));
                                var $1534 = $1536;
                                break;
                            case 'Maybe.none':
                                var $1537 = Parser$Reply$error$($1533);
                                var $1534 = $1537;
                                break;
                        };
                        var $1532 = $1534;
                        break;
                    case 'Parser.Reply.value':
                        var $1538 = self.pst;
                        var self = $1538;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1540 = self.err;
                                var $1541 = self.nam;
                                var $1542 = self.ini;
                                var $1543 = self.idx;
                                var $1544 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1531, $1540), $1541, $1542, $1543, $1544);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1546 = self.err;
                                        var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1548 = self.err;
                                                var self = $1546;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1550 = self.value;
                                                        var $1551 = Parser$Reply$error$(Parser$Error$combine$($1550, $1548));
                                                        var $1549 = $1551;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1552 = Parser$Reply$error$($1548);
                                                        var $1549 = $1552;
                                                        break;
                                                };
                                                var $1547 = $1549;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1553 = self.pst;
                                                var $1554 = self.val;
                                                var self = $1553;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1556 = self.err;
                                                        var $1557 = self.nam;
                                                        var $1558 = self.ini;
                                                        var $1559 = self.idx;
                                                        var $1560 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1546, $1556), $1557, $1558, $1559, $1560);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1562 = self.err;
                                                                var _reply$36 = Litereum$parse$text$("=", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1564 = self.err;
                                                                        var self = $1562;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1566 = self.value;
                                                                                var $1567 = Parser$Reply$error$(Parser$Error$combine$($1566, $1564));
                                                                                var $1565 = $1567;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1568 = Parser$Reply$error$($1564);
                                                                                var $1565 = $1568;
                                                                                break;
                                                                        };
                                                                        var $1563 = $1565;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1569 = self.pst;
                                                                        var self = $1569;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1571 = self.err;
                                                                                var $1572 = self.nam;
                                                                                var $1573 = self.ini;
                                                                                var $1574 = self.idx;
                                                                                var $1575 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1562, $1571), $1572, $1573, $1574, $1575);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1577 = self.err;
                                                                                        var _reply$50 = Litereum$parse$term$(_world$1)(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1579 = self.err;
                                                                                                var self = $1577;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1581 = self.value;
                                                                                                        var $1582 = Parser$Reply$error$(Parser$Error$combine$($1581, $1579));
                                                                                                        var $1580 = $1582;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1583 = Parser$Reply$error$($1579);
                                                                                                        var $1580 = $1583;
                                                                                                        break;
                                                                                                };
                                                                                                var $1578 = $1580;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1584 = self.pst;
                                                                                                var $1585 = self.val;
                                                                                                var self = $1584;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1587 = self.err;
                                                                                                        var $1588 = self.nam;
                                                                                                        var $1589 = self.ini;
                                                                                                        var $1590 = self.idx;
                                                                                                        var $1591 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1577, $1587), $1588, $1589, $1590, $1591);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1593 = self.err;
                                                                                                                var _reply$64 = Parser$maybe$(Litereum$parse$text(";"), _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1595 = self.err;
                                                                                                                        var self = $1593;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1597 = self.value;
                                                                                                                                var $1598 = Parser$Reply$error$(Parser$Error$combine$($1597, $1595));
                                                                                                                                var $1596 = $1598;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1599 = Parser$Reply$error$($1595);
                                                                                                                                var $1596 = $1599;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1594 = $1596;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1600 = self.pst;
                                                                                                                        var self = $1600;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1602 = self.err;
                                                                                                                                var $1603 = self.nam;
                                                                                                                                var $1604 = self.ini;
                                                                                                                                var $1605 = self.idx;
                                                                                                                                var $1606 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1593, $1602), $1603, $1604, $1605, $1606);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1608 = self.err;
                                                                                                                                        var _reply$78 = Litereum$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1610 = self.err;
                                                                                                                                                var self = $1608;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1612 = self.value;
                                                                                                                                                        var $1613 = Parser$Reply$error$(Parser$Error$combine$($1612, $1610));
                                                                                                                                                        var $1611 = $1613;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1614 = Parser$Reply$error$($1610);
                                                                                                                                                        var $1611 = $1614;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1609 = $1611;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1615 = self.pst;
                                                                                                                                                var $1616 = self.val;
                                                                                                                                                var self = $1615;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1618 = self.err;
                                                                                                                                                        var $1619 = self.nam;
                                                                                                                                                        var $1620 = self.ini;
                                                                                                                                                        var $1621 = self.idx;
                                                                                                                                                        var $1622 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1608, $1618), $1619, $1620, $1621, $1622);
                                                                                                                                                        var $1623 = Parser$Reply$value$(_reply$pst$86, Litereum$Term$set$($1554, $1585, $1616));
                                                                                                                                                        var $1617 = $1623;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1609 = $1617;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1607 = $1609;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1601 = $1607;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1594 = $1601;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1592 = $1594;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1586 = $1592;
                                                                                                        break;
                                                                                                };
                                                                                                var $1578 = $1586;
                                                                                                break;
                                                                                        };
                                                                                        var $1576 = $1578;
                                                                                        break;
                                                                                };
                                                                                var $1570 = $1576;
                                                                                break;
                                                                        };
                                                                        var $1563 = $1570;
                                                                        break;
                                                                };
                                                                var $1561 = $1563;
                                                                break;
                                                        };
                                                        var $1555 = $1561;
                                                        break;
                                                };
                                                var $1547 = $1555;
                                                break;
                                        };
                                        var $1545 = $1547;
                                        break;
                                };
                                var $1539 = $1545;
                                break;
                        };
                        var $1532 = $1539;
                        break;
                };
                var $1530 = $1532;
                break;
        };
        return $1530;
    };
    const Litereum$parse$term$set = x0 => x1 => Litereum$parse$term$set$(x0, x1);

    function Litereum$Term$get$(_name$1, _file$2, _body$3) {
        var $1624 = ({
            _: 'Litereum.Term.get',
            'name': _name$1,
            'file': _file$2,
            'body': _body$3
        });
        return $1624;
    };
    const Litereum$Term$get = x0 => x1 => x2 => Litereum$Term$get$(x0, x1, x2);

    function Litereum$parse$term$get$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1626 = self.err;
                var _reply$8 = Litereum$parse$text$("get", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1628 = self.err;
                        var self = $1626;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1630 = self.value;
                                var $1631 = Parser$Reply$error$(Parser$Error$combine$($1630, $1628));
                                var $1629 = $1631;
                                break;
                            case 'Maybe.none':
                                var $1632 = Parser$Reply$error$($1628);
                                var $1629 = $1632;
                                break;
                        };
                        var $1627 = $1629;
                        break;
                    case 'Parser.Reply.value':
                        var $1633 = self.pst;
                        var self = $1633;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1635 = self.err;
                                var $1636 = self.nam;
                                var $1637 = self.ini;
                                var $1638 = self.idx;
                                var $1639 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1626, $1635), $1636, $1637, $1638, $1639);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1641 = self.err;
                                        var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1643 = self.err;
                                                var self = $1641;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1645 = self.value;
                                                        var $1646 = Parser$Reply$error$(Parser$Error$combine$($1645, $1643));
                                                        var $1644 = $1646;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1647 = Parser$Reply$error$($1643);
                                                        var $1644 = $1647;
                                                        break;
                                                };
                                                var $1642 = $1644;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1648 = self.pst;
                                                var $1649 = self.val;
                                                var self = $1648;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1651 = self.err;
                                                        var $1652 = self.nam;
                                                        var $1653 = self.ini;
                                                        var $1654 = self.idx;
                                                        var $1655 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1641, $1651), $1652, $1653, $1654, $1655);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1657 = self.err;
                                                                var _reply$36 = Litereum$parse$text$("=", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1659 = self.err;
                                                                        var self = $1657;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1661 = self.value;
                                                                                var $1662 = Parser$Reply$error$(Parser$Error$combine$($1661, $1659));
                                                                                var $1660 = $1662;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1663 = Parser$Reply$error$($1659);
                                                                                var $1660 = $1663;
                                                                                break;
                                                                        };
                                                                        var $1658 = $1660;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1664 = self.pst;
                                                                        var self = $1664;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1666 = self.err;
                                                                                var $1667 = self.nam;
                                                                                var $1668 = self.ini;
                                                                                var $1669 = self.idx;
                                                                                var $1670 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1657, $1666), $1667, $1668, $1669, $1670);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1672 = self.err;
                                                                                        var _reply$50 = Litereum$parse$name$(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1674 = self.err;
                                                                                                var self = $1672;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1676 = self.value;
                                                                                                        var $1677 = Parser$Reply$error$(Parser$Error$combine$($1676, $1674));
                                                                                                        var $1675 = $1677;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1678 = Parser$Reply$error$($1674);
                                                                                                        var $1675 = $1678;
                                                                                                        break;
                                                                                                };
                                                                                                var $1673 = $1675;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1679 = self.pst;
                                                                                                var $1680 = self.val;
                                                                                                var self = $1679;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1682 = self.err;
                                                                                                        var $1683 = self.nam;
                                                                                                        var $1684 = self.ini;
                                                                                                        var $1685 = self.idx;
                                                                                                        var $1686 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1672, $1682), $1683, $1684, $1685, $1686);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1688 = self.err;
                                                                                                                var _reply$64 = Parser$maybe$(Litereum$parse$text(";"), _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1690 = self.err;
                                                                                                                        var self = $1688;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1692 = self.value;
                                                                                                                                var $1693 = Parser$Reply$error$(Parser$Error$combine$($1692, $1690));
                                                                                                                                var $1691 = $1693;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1694 = Parser$Reply$error$($1690);
                                                                                                                                var $1691 = $1694;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1689 = $1691;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1695 = self.pst;
                                                                                                                        var self = $1695;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1697 = self.err;
                                                                                                                                var $1698 = self.nam;
                                                                                                                                var $1699 = self.ini;
                                                                                                                                var $1700 = self.idx;
                                                                                                                                var $1701 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1688, $1697), $1698, $1699, $1700, $1701);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1703 = self.err;
                                                                                                                                        var _reply$78 = Litereum$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1705 = self.err;
                                                                                                                                                var self = $1703;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1707 = self.value;
                                                                                                                                                        var $1708 = Parser$Reply$error$(Parser$Error$combine$($1707, $1705));
                                                                                                                                                        var $1706 = $1708;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1709 = Parser$Reply$error$($1705);
                                                                                                                                                        var $1706 = $1709;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1704 = $1706;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1710 = self.pst;
                                                                                                                                                var $1711 = self.val;
                                                                                                                                                var self = $1710;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1713 = self.err;
                                                                                                                                                        var $1714 = self.nam;
                                                                                                                                                        var $1715 = self.ini;
                                                                                                                                                        var $1716 = self.idx;
                                                                                                                                                        var $1717 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1703, $1713), $1714, $1715, $1716, $1717);
                                                                                                                                                        var $1718 = Parser$Reply$value$(_reply$pst$86, Litereum$Term$get$($1649, $1680, $1711));
                                                                                                                                                        var $1712 = $1718;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1704 = $1712;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1702 = $1704;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1696 = $1702;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1689 = $1696;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1687 = $1689;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1681 = $1687;
                                                                                                        break;
                                                                                                };
                                                                                                var $1673 = $1681;
                                                                                                break;
                                                                                        };
                                                                                        var $1671 = $1673;
                                                                                        break;
                                                                                };
                                                                                var $1665 = $1671;
                                                                                break;
                                                                        };
                                                                        var $1658 = $1665;
                                                                        break;
                                                                };
                                                                var $1656 = $1658;
                                                                break;
                                                        };
                                                        var $1650 = $1656;
                                                        break;
                                                };
                                                var $1642 = $1650;
                                                break;
                                        };
                                        var $1640 = $1642;
                                        break;
                                };
                                var $1634 = $1640;
                                break;
                        };
                        var $1627 = $1634;
                        break;
                };
                var $1625 = $1627;
                break;
        };
        return $1625;
    };
    const Litereum$parse$term$get = x0 => x1 => Litereum$parse$term$get$(x0, x1);

    function Litereum$Term$bind$(_name$1, _type$2, _expr$3, _body$4) {
        var $1719 = ({
            _: 'Litereum.Term.bind',
            'name': _name$1,
            'type': _type$2,
            'expr': _expr$3,
            'body': _body$4
        });
        return $1719;
    };
    const Litereum$Term$bind = x0 => x1 => x2 => x3 => Litereum$Term$bind$(x0, x1, x2, x3);

    function Litereum$parse$term$bind$(_world$1) {
        var $1720 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1722 = self.err;
                    var _reply$8 = Litereum$parse$text$("run", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1724 = self.err;
                            var self = $1722;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1726 = self.value;
                                    var $1727 = Parser$Reply$error$(Parser$Error$combine$($1726, $1724));
                                    var $1725 = $1727;
                                    break;
                                case 'Maybe.none':
                                    var $1728 = Parser$Reply$error$($1724);
                                    var $1725 = $1728;
                                    break;
                            };
                            var $1723 = $1725;
                            break;
                        case 'Parser.Reply.value':
                            var $1729 = self.pst;
                            var self = $1729;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1731 = self.err;
                                    var $1732 = self.nam;
                                    var $1733 = self.ini;
                                    var $1734 = self.idx;
                                    var $1735 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1722, $1731), $1732, $1733, $1734, $1735);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1737 = self.err;
                                            var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1739 = self.err;
                                                    var self = $1737;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1741 = self.value;
                                                            var $1742 = Parser$Reply$error$(Parser$Error$combine$($1741, $1739));
                                                            var $1740 = $1742;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1743 = Parser$Reply$error$($1739);
                                                            var $1740 = $1743;
                                                            break;
                                                    };
                                                    var $1738 = $1740;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1744 = self.pst;
                                                    var $1745 = self.val;
                                                    var self = $1744;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1747 = self.err;
                                                            var $1748 = self.nam;
                                                            var $1749 = self.ini;
                                                            var $1750 = self.idx;
                                                            var $1751 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1737, $1747), $1748, $1749, $1750, $1751);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1753 = self.err;
                                                                    var _reply$36 = Litereum$parse$text$(":", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1755 = self.err;
                                                                            var self = $1753;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1757 = self.value;
                                                                                    var $1758 = Parser$Reply$error$(Parser$Error$combine$($1757, $1755));
                                                                                    var $1756 = $1758;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1759 = Parser$Reply$error$($1755);
                                                                                    var $1756 = $1759;
                                                                                    break;
                                                                            };
                                                                            var $1754 = $1756;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1760 = self.pst;
                                                                            var self = $1760;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1762 = self.err;
                                                                                    var $1763 = self.nam;
                                                                                    var $1764 = self.ini;
                                                                                    var $1765 = self.idx;
                                                                                    var $1766 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1753, $1762), $1763, $1764, $1765, $1766);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1768 = self.err;
                                                                                            var _reply$50 = Litereum$parse$type$(_world$1)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $1770 = self.err;
                                                                                                    var self = $1768;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $1772 = self.value;
                                                                                                            var $1773 = Parser$Reply$error$(Parser$Error$combine$($1772, $1770));
                                                                                                            var $1771 = $1773;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $1774 = Parser$Reply$error$($1770);
                                                                                                            var $1771 = $1774;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1769 = $1771;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $1775 = self.pst;
                                                                                                    var $1776 = self.val;
                                                                                                    var self = $1775;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $1778 = self.err;
                                                                                                            var $1779 = self.nam;
                                                                                                            var $1780 = self.ini;
                                                                                                            var $1781 = self.idx;
                                                                                                            var $1782 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1768, $1778), $1779, $1780, $1781, $1782);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $1784 = self.err;
                                                                                                                    var _reply$64 = Litereum$parse$text$("=", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $1786 = self.err;
                                                                                                                            var self = $1784;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $1788 = self.value;
                                                                                                                                    var $1789 = Parser$Reply$error$(Parser$Error$combine$($1788, $1786));
                                                                                                                                    var $1787 = $1789;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $1790 = Parser$Reply$error$($1786);
                                                                                                                                    var $1787 = $1790;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1785 = $1787;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $1791 = self.pst;
                                                                                                                            var self = $1791;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $1793 = self.err;
                                                                                                                                    var $1794 = self.nam;
                                                                                                                                    var $1795 = self.ini;
                                                                                                                                    var $1796 = self.idx;
                                                                                                                                    var $1797 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1784, $1793), $1794, $1795, $1796, $1797);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $1799 = self.err;
                                                                                                                                            var _reply$78 = Litereum$parse$term$(_world$1)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $1801 = self.err;
                                                                                                                                                    var self = $1799;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $1803 = self.value;
                                                                                                                                                            var $1804 = Parser$Reply$error$(Parser$Error$combine$($1803, $1801));
                                                                                                                                                            var $1802 = $1804;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $1805 = Parser$Reply$error$($1801);
                                                                                                                                                            var $1802 = $1805;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1800 = $1802;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $1806 = self.pst;
                                                                                                                                                    var $1807 = self.val;
                                                                                                                                                    var self = $1806;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $1809 = self.err;
                                                                                                                                                            var $1810 = self.nam;
                                                                                                                                                            var $1811 = self.ini;
                                                                                                                                                            var $1812 = self.idx;
                                                                                                                                                            var $1813 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($1799, $1809), $1810, $1811, $1812, $1813);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $1815 = self.err;
                                                                                                                                                                    var _reply$92 = Parser$maybe$(Litereum$parse$text(";"), _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $1817 = self.err;
                                                                                                                                                                            var self = $1815;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $1819 = self.value;
                                                                                                                                                                                    var $1820 = Parser$Reply$error$(Parser$Error$combine$($1819, $1817));
                                                                                                                                                                                    var $1818 = $1820;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $1821 = Parser$Reply$error$($1817);
                                                                                                                                                                                    var $1818 = $1821;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1816 = $1818;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $1822 = self.pst;
                                                                                                                                                                            var self = $1822;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $1824 = self.err;
                                                                                                                                                                                    var $1825 = self.nam;
                                                                                                                                                                                    var $1826 = self.ini;
                                                                                                                                                                                    var $1827 = self.idx;
                                                                                                                                                                                    var $1828 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($1815, $1824), $1825, $1826, $1827, $1828);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $1830 = self.err;
                                                                                                                                                                                            var _reply$106 = Litereum$parse$term$(_world$1)(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $1832 = self.err;
                                                                                                                                                                                                    var self = $1830;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $1834 = self.value;
                                                                                                                                                                                                            var $1835 = Parser$Reply$error$(Parser$Error$combine$($1834, $1832));
                                                                                                                                                                                                            var $1833 = $1835;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $1836 = Parser$Reply$error$($1832);
                                                                                                                                                                                                            var $1833 = $1836;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $1831 = $1833;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $1837 = self.pst;
                                                                                                                                                                                                    var $1838 = self.val;
                                                                                                                                                                                                    var self = $1837;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $1840 = self.err;
                                                                                                                                                                                                            var $1841 = self.nam;
                                                                                                                                                                                                            var $1842 = self.ini;
                                                                                                                                                                                                            var $1843 = self.idx;
                                                                                                                                                                                                            var $1844 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($1830, $1840), $1841, $1842, $1843, $1844);
                                                                                                                                                                                                            var $1845 = Parser$Reply$value$(_reply$pst$114, Litereum$Term$bind$($1745, $1776, $1807, $1838));
                                                                                                                                                                                                            var $1839 = $1845;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $1831 = $1839;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $1829 = $1831;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $1823 = $1829;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $1816 = $1823;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $1814 = $1816;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $1808 = $1814;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $1800 = $1808;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $1798 = $1800;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $1792 = $1798;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $1785 = $1792;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $1783 = $1785;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $1777 = $1783;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1769 = $1777;
                                                                                                    break;
                                                                                            };
                                                                                            var $1767 = $1769;
                                                                                            break;
                                                                                    };
                                                                                    var $1761 = $1767;
                                                                                    break;
                                                                            };
                                                                            var $1754 = $1761;
                                                                            break;
                                                                    };
                                                                    var $1752 = $1754;
                                                                    break;
                                                            };
                                                            var $1746 = $1752;
                                                            break;
                                                    };
                                                    var $1738 = $1746;
                                                    break;
                                            };
                                            var $1736 = $1738;
                                            break;
                                    };
                                    var $1730 = $1736;
                                    break;
                            };
                            var $1723 = $1730;
                            break;
                    };
                    var $1721 = $1723;
                    break;
            };
            return $1721;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1847 = self.err;
                    var _reply$8 = Litereum$parse$text$("run", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1849 = self.err;
                            var self = $1847;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1851 = self.value;
                                    var $1852 = Parser$Reply$error$(Parser$Error$combine$($1851, $1849));
                                    var $1850 = $1852;
                                    break;
                                case 'Maybe.none':
                                    var $1853 = Parser$Reply$error$($1849);
                                    var $1850 = $1853;
                                    break;
                            };
                            var $1848 = $1850;
                            break;
                        case 'Parser.Reply.value':
                            var $1854 = self.pst;
                            var self = $1854;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1856 = self.err;
                                    var $1857 = self.nam;
                                    var $1858 = self.ini;
                                    var $1859 = self.idx;
                                    var $1860 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1847, $1856), $1857, $1858, $1859, $1860);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1862 = self.err;
                                            var _reply$22 = Litereum$parse$term$(_world$1)(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1864 = self.err;
                                                    var self = $1862;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1866 = self.value;
                                                            var $1867 = Parser$Reply$error$(Parser$Error$combine$($1866, $1864));
                                                            var $1865 = $1867;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1868 = Parser$Reply$error$($1864);
                                                            var $1865 = $1868;
                                                            break;
                                                    };
                                                    var $1863 = $1865;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1869 = self.pst;
                                                    var $1870 = self.val;
                                                    var self = $1869;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1872 = self.err;
                                                            var $1873 = self.nam;
                                                            var $1874 = self.ini;
                                                            var $1875 = self.idx;
                                                            var $1876 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1862, $1872), $1873, $1874, $1875, $1876);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1878 = self.err;
                                                                    var _reply$36 = Parser$maybe$(Litereum$parse$text(";"), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1880 = self.err;
                                                                            var self = $1878;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1882 = self.value;
                                                                                    var $1883 = Parser$Reply$error$(Parser$Error$combine$($1882, $1880));
                                                                                    var $1881 = $1883;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1884 = Parser$Reply$error$($1880);
                                                                                    var $1881 = $1884;
                                                                                    break;
                                                                            };
                                                                            var $1879 = $1881;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1885 = self.pst;
                                                                            var self = $1885;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1887 = self.err;
                                                                                    var $1888 = self.nam;
                                                                                    var $1889 = self.ini;
                                                                                    var $1890 = self.idx;
                                                                                    var $1891 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($1878, $1887), $1888, $1889, $1890, $1891);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $1893 = self.err;
                                                                                            var _reply$50 = Litereum$parse$term$(_world$1)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $1895 = self.err;
                                                                                                    var self = $1893;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $1897 = self.value;
                                                                                                            var $1898 = Parser$Reply$error$(Parser$Error$combine$($1897, $1895));
                                                                                                            var $1896 = $1898;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $1899 = Parser$Reply$error$($1895);
                                                                                                            var $1896 = $1899;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1894 = $1896;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $1900 = self.pst;
                                                                                                    var $1901 = self.val;
                                                                                                    var self = $1900;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $1903 = self.err;
                                                                                                            var $1904 = self.nam;
                                                                                                            var $1905 = self.ini;
                                                                                                            var $1906 = self.idx;
                                                                                                            var $1907 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($1893, $1903), $1904, $1905, $1906, $1907);
                                                                                                            var $1908 = Parser$Reply$value$(_reply$pst$58, Litereum$Term$bind$("", Litereum$Type$word, $1870, $1901));
                                                                                                            var $1902 = $1908;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $1894 = $1902;
                                                                                                    break;
                                                                                            };
                                                                                            var $1892 = $1894;
                                                                                            break;
                                                                                    };
                                                                                    var $1886 = $1892;
                                                                                    break;
                                                                            };
                                                                            var $1879 = $1886;
                                                                            break;
                                                                    };
                                                                    var $1877 = $1879;
                                                                    break;
                                                            };
                                                            var $1871 = $1877;
                                                            break;
                                                    };
                                                    var $1863 = $1871;
                                                    break;
                                            };
                                            var $1861 = $1863;
                                            break;
                                    };
                                    var $1855 = $1861;
                                    break;
                            };
                            var $1848 = $1855;
                            break;
                    };
                    var $1846 = $1848;
                    break;
            };
            return $1846;
        }), List$nil)));
        return $1720;
    };
    const Litereum$parse$term$bind = x0 => Litereum$parse$term$bind$(x0);

    function Litereum$Term$return$(_expr$1) {
        var $1909 = ({
            _: 'Litereum.Term.return',
            'expr': _expr$1
        });
        return $1909;
    };
    const Litereum$Term$return = x0 => Litereum$Term$return$(x0);

    function Litereum$parse$term$return$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1911 = self.err;
                var _reply$8 = Litereum$parse$text$("return", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1913 = self.err;
                        var self = $1911;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1915 = self.value;
                                var $1916 = Parser$Reply$error$(Parser$Error$combine$($1915, $1913));
                                var $1914 = $1916;
                                break;
                            case 'Maybe.none':
                                var $1917 = Parser$Reply$error$($1913);
                                var $1914 = $1917;
                                break;
                        };
                        var $1912 = $1914;
                        break;
                    case 'Parser.Reply.value':
                        var $1918 = self.pst;
                        var self = $1918;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1920 = self.err;
                                var $1921 = self.nam;
                                var $1922 = self.ini;
                                var $1923 = self.idx;
                                var $1924 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1911, $1920), $1921, $1922, $1923, $1924);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1926 = self.err;
                                        var _reply$22 = Litereum$parse$term$(_world$1)(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1928 = self.err;
                                                var self = $1926;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1930 = self.value;
                                                        var $1931 = Parser$Reply$error$(Parser$Error$combine$($1930, $1928));
                                                        var $1929 = $1931;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1932 = Parser$Reply$error$($1928);
                                                        var $1929 = $1932;
                                                        break;
                                                };
                                                var $1927 = $1929;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1933 = self.pst;
                                                var $1934 = self.val;
                                                var self = $1933;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1936 = self.err;
                                                        var $1937 = self.nam;
                                                        var $1938 = self.ini;
                                                        var $1939 = self.idx;
                                                        var $1940 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1926, $1936), $1937, $1938, $1939, $1940);
                                                        var $1941 = Parser$Reply$value$(_reply$pst$30, Litereum$Term$return$($1934));
                                                        var $1935 = $1941;
                                                        break;
                                                };
                                                var $1927 = $1935;
                                                break;
                                        };
                                        var $1925 = $1927;
                                        break;
                                };
                                var $1919 = $1925;
                                break;
                        };
                        var $1912 = $1919;
                        break;
                };
                var $1910 = $1912;
                break;
        };
        return $1910;
    };
    const Litereum$parse$term$return = x0 => x1 => Litereum$parse$term$return$(x0, x1);

    function Litereum$Term$call$(_bond$1, _args$2) {
        var $1942 = ({
            _: 'Litereum.Term.call',
            'bond': _bond$1,
            'args': _args$2
        });
        return $1942;
    };
    const Litereum$Term$call = x0 => x1 => Litereum$Term$call$(x0, x1);

    function Litereum$parse$term$call$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1944 = self.err;
                var _reply$8 = Litereum$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1946 = self.err;
                        var self = $1944;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1948 = self.value;
                                var $1949 = Parser$Reply$error$(Parser$Error$combine$($1948, $1946));
                                var $1947 = $1949;
                                break;
                            case 'Maybe.none':
                                var $1950 = Parser$Reply$error$($1946);
                                var $1947 = $1950;
                                break;
                        };
                        var $1945 = $1947;
                        break;
                    case 'Parser.Reply.value':
                        var $1951 = self.pst;
                        var $1952 = self.val;
                        var self = $1951;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1954 = self.err;
                                var $1955 = self.nam;
                                var $1956 = self.ini;
                                var $1957 = self.idx;
                                var $1958 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1944, $1954), $1955, $1956, $1957, $1958);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1960 = self.err;
                                        var _reply$22 = Parser$wrap$(Litereum$parse$text("("), (_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $1963 = self.err;
                                                    var _reply$28 = Parser$maybe$(Litereum$parse$text(","), _pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $1965 = self.err;
                                                            var self = $1963;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $1967 = self.value;
                                                                    var $1968 = Parser$Reply$error$(Parser$Error$combine$($1967, $1965));
                                                                    var $1966 = $1968;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $1969 = Parser$Reply$error$($1965);
                                                                    var $1966 = $1969;
                                                                    break;
                                                            };
                                                            var $1964 = $1966;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $1970 = self.pst;
                                                            var self = $1970;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1972 = self.err;
                                                                    var $1973 = self.nam;
                                                                    var $1974 = self.ini;
                                                                    var $1975 = self.idx;
                                                                    var $1976 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($1963, $1972), $1973, $1974, $1975, $1976);
                                                                    var $1977 = Litereum$parse$term$(_world$1)(_reply$pst$36);
                                                                    var $1971 = $1977;
                                                                    break;
                                                            };
                                                            var $1964 = $1971;
                                                            break;
                                                    };
                                                    var $1962 = $1964;
                                                    break;
                                            };
                                            return $1962;
                                        }), Litereum$parse$text(")"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1978 = self.err;
                                                var self = $1960;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1980 = self.value;
                                                        var $1981 = Parser$Reply$error$(Parser$Error$combine$($1980, $1978));
                                                        var $1979 = $1981;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1982 = Parser$Reply$error$($1978);
                                                        var $1979 = $1982;
                                                        break;
                                                };
                                                var $1961 = $1979;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1983 = self.pst;
                                                var $1984 = self.val;
                                                var self = $1983;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1986 = self.err;
                                                        var $1987 = self.nam;
                                                        var $1988 = self.ini;
                                                        var $1989 = self.idx;
                                                        var $1990 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1960, $1986), $1987, $1988, $1989, $1990);
                                                        var $1991 = Parser$Reply$value$(_reply$pst$30, Litereum$Term$call$($1952, $1984));
                                                        var $1985 = $1991;
                                                        break;
                                                };
                                                var $1961 = $1985;
                                                break;
                                        };
                                        var $1959 = $1961;
                                        break;
                                };
                                var $1953 = $1959;
                                break;
                        };
                        var $1945 = $1953;
                        break;
                };
                var $1943 = $1945;
                break;
        };
        return $1943;
    };
    const Litereum$parse$term$call = x0 => x1 => Litereum$parse$term$call$(x0, x1);

    function Litereum$Term$var$(_name$1) {
        var $1992 = ({
            _: 'Litereum.Term.var',
            'name': _name$1
        });
        return $1992;
    };
    const Litereum$Term$var = x0 => Litereum$Term$var$(x0);

    function Litereum$parse$term$var$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1994 = self.err;
                var _reply$8 = Litereum$parse$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1996 = self.err;
                        var self = $1994;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1998 = self.value;
                                var $1999 = Parser$Reply$error$(Parser$Error$combine$($1998, $1996));
                                var $1997 = $1999;
                                break;
                            case 'Maybe.none':
                                var $2000 = Parser$Reply$error$($1996);
                                var $1997 = $2000;
                                break;
                        };
                        var $1995 = $1997;
                        break;
                    case 'Parser.Reply.value':
                        var $2001 = self.pst;
                        var $2002 = self.val;
                        var self = $2001;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2004 = self.err;
                                var $2005 = self.nam;
                                var $2006 = self.ini;
                                var $2007 = self.idx;
                                var $2008 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1994, $2004), $2005, $2006, $2007, $2008);
                                var $2009 = Parser$Reply$value$(_reply$pst$16, Litereum$Term$var$($2002));
                                var $2003 = $2009;
                                break;
                        };
                        var $1995 = $2003;
                        break;
                };
                var $1993 = $1995;
                break;
        };
        return $1993;
    };
    const Litereum$parse$term$var = x0 => x1 => Litereum$parse$term$var$(x0, x1);

    function Litereum$parse$term$(_world$1) {
        var $2010 = Parser$choice(List$cons$(Litereum$parse$term$let(_world$1), List$cons$(Litereum$parse$term$create(_world$1), List$cons$(Litereum$parse$term$match(_world$1), List$cons$(Litereum$parse$term$word(_world$1), List$cons$(Litereum$parse$term$compare(_world$1), List$cons$(Litereum$parse$term$operate(_world$1), List$cons$(Litereum$parse$term$set(_world$1), List$cons$(Litereum$parse$term$get(_world$1), List$cons$(Litereum$parse$term$bind$(_world$1), List$cons$(Litereum$parse$term$return(_world$1), List$cons$(Litereum$parse$term$call(_world$1), List$cons$(Litereum$parse$term$var(_world$1), List$nil)))))))))))));
        return $2010;
    };
    const Litereum$parse$term = x0 => Litereum$parse$term$(x0);

    function Litereum$Bond$new$(_name$1, _input_names$2, _input_types$3, _output_type$4, _main$5) {
        var $2011 = ({
            _: 'Litereum.Bond.new',
            'name': _name$1,
            'input_names': _input_names$2,
            'input_types': _input_types$3,
            'output_type': _output_type$4,
            'main': _main$5
        });
        return $2011;
    };
    const Litereum$Bond$new = x0 => x1 => x2 => x3 => x4 => Litereum$Bond$new$(x0, x1, x2, x3, x4);

    function Litereum$parse$bond$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2013 = self.err;
                var _reply$8 = Litereum$parse$text$("bond", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2015 = self.err;
                        var self = $2013;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2017 = self.value;
                                var $2018 = Parser$Reply$error$(Parser$Error$combine$($2017, $2015));
                                var $2016 = $2018;
                                break;
                            case 'Maybe.none':
                                var $2019 = Parser$Reply$error$($2015);
                                var $2016 = $2019;
                                break;
                        };
                        var $2014 = $2016;
                        break;
                    case 'Parser.Reply.value':
                        var $2020 = self.pst;
                        var self = $2020;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2022 = self.err;
                                var $2023 = self.nam;
                                var $2024 = self.ini;
                                var $2025 = self.idx;
                                var $2026 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2013, $2022), $2023, $2024, $2025, $2026);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2028 = self.err;
                                        var _reply$22 = Litereum$parse$name$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2030 = self.err;
                                                var self = $2028;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2032 = self.value;
                                                        var $2033 = Parser$Reply$error$(Parser$Error$combine$($2032, $2030));
                                                        var $2031 = $2033;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2034 = Parser$Reply$error$($2030);
                                                        var $2031 = $2034;
                                                        break;
                                                };
                                                var $2029 = $2031;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2035 = self.pst;
                                                var $2036 = self.val;
                                                var self = $2035;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2038 = self.err;
                                                        var $2039 = self.nam;
                                                        var $2040 = self.ini;
                                                        var $2041 = self.idx;
                                                        var $2042 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2028, $2038), $2039, $2040, $2041, $2042);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2044 = self.err;
                                                                var _reply$36 = Parser$wrap$(Litereum$parse$text("("), Litereum$parse$ann(_world$1), Litereum$parse$text(")"), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2046 = self.err;
                                                                        var self = $2044;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2048 = self.value;
                                                                                var $2049 = Parser$Reply$error$(Parser$Error$combine$($2048, $2046));
                                                                                var $2047 = $2049;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2050 = Parser$Reply$error$($2046);
                                                                                var $2047 = $2050;
                                                                                break;
                                                                        };
                                                                        var $2045 = $2047;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2051 = self.pst;
                                                                        var $2052 = self.val;
                                                                        var self = $2051;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2054 = self.err;
                                                                                var $2055 = self.nam;
                                                                                var $2056 = self.ini;
                                                                                var $2057 = self.idx;
                                                                                var $2058 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2044, $2054), $2055, $2056, $2057, $2058);
                                                                                var _iarg$45 = List$mapped$($2052, (_x$45 => {
                                                                                    var self = _x$45;
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $2061 = self.fst;
                                                                                            var $2062 = $2061;
                                                                                            var $2060 = $2062;
                                                                                            break;
                                                                                    };
                                                                                    return $2060;
                                                                                }));
                                                                                var _ityp$46 = List$mapped$($2052, (_x$46 => {
                                                                                    var self = _x$46;
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $2064 = self.snd;
                                                                                            var $2065 = $2064;
                                                                                            var $2063 = $2065;
                                                                                            break;
                                                                                    };
                                                                                    return $2063;
                                                                                }));
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2066 = self.err;
                                                                                        var _reply$52 = Litereum$parse$text$(":", _reply$pst$44);
                                                                                        var self = _reply$52;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2068 = self.err;
                                                                                                var self = $2066;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2070 = self.value;
                                                                                                        var $2071 = Parser$Reply$error$(Parser$Error$combine$($2070, $2068));
                                                                                                        var $2069 = $2071;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2072 = Parser$Reply$error$($2068);
                                                                                                        var $2069 = $2072;
                                                                                                        break;
                                                                                                };
                                                                                                var $2067 = $2069;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2073 = self.pst;
                                                                                                var self = $2073;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2075 = self.err;
                                                                                                        var $2076 = self.nam;
                                                                                                        var $2077 = self.ini;
                                                                                                        var $2078 = self.idx;
                                                                                                        var $2079 = self.str;
                                                                                                        var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($2066, $2075), $2076, $2077, $2078, $2079);
                                                                                                        var self = _reply$pst$60;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2081 = self.err;
                                                                                                                var _reply$66 = Litereum$parse$type$(_world$1)(_reply$pst$60);
                                                                                                                var self = _reply$66;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2083 = self.err;
                                                                                                                        var self = $2081;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2085 = self.value;
                                                                                                                                var $2086 = Parser$Reply$error$(Parser$Error$combine$($2085, $2083));
                                                                                                                                var $2084 = $2086;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2087 = Parser$Reply$error$($2083);
                                                                                                                                var $2084 = $2087;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2082 = $2084;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2088 = self.pst;
                                                                                                                        var $2089 = self.val;
                                                                                                                        var self = $2088;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2091 = self.err;
                                                                                                                                var $2092 = self.nam;
                                                                                                                                var $2093 = self.ini;
                                                                                                                                var $2094 = self.idx;
                                                                                                                                var $2095 = self.str;
                                                                                                                                var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($2081, $2091), $2092, $2093, $2094, $2095);
                                                                                                                                var self = _reply$pst$74;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2097 = self.err;
                                                                                                                                        var _reply$80 = Litereum$parse$text$("{", _reply$pst$74);
                                                                                                                                        var self = _reply$80;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2099 = self.err;
                                                                                                                                                var self = $2097;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2101 = self.value;
                                                                                                                                                        var $2102 = Parser$Reply$error$(Parser$Error$combine$($2101, $2099));
                                                                                                                                                        var $2100 = $2102;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2103 = Parser$Reply$error$($2099);
                                                                                                                                                        var $2100 = $2103;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2098 = $2100;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2104 = self.pst;
                                                                                                                                                var self = $2104;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2106 = self.err;
                                                                                                                                                        var $2107 = self.nam;
                                                                                                                                                        var $2108 = self.ini;
                                                                                                                                                        var $2109 = self.idx;
                                                                                                                                                        var $2110 = self.str;
                                                                                                                                                        var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($2097, $2106), $2107, $2108, $2109, $2110);
                                                                                                                                                        var self = _reply$pst$88;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $2112 = self.err;
                                                                                                                                                                var _reply$94 = Litereum$parse$term$(_world$1)(_reply$pst$88);
                                                                                                                                                                var self = _reply$94;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $2114 = self.err;
                                                                                                                                                                        var self = $2112;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $2116 = self.value;
                                                                                                                                                                                var $2117 = Parser$Reply$error$(Parser$Error$combine$($2116, $2114));
                                                                                                                                                                                var $2115 = $2117;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $2118 = Parser$Reply$error$($2114);
                                                                                                                                                                                var $2115 = $2118;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2113 = $2115;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $2119 = self.pst;
                                                                                                                                                                        var $2120 = self.val;
                                                                                                                                                                        var self = $2119;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $2122 = self.err;
                                                                                                                                                                                var $2123 = self.nam;
                                                                                                                                                                                var $2124 = self.ini;
                                                                                                                                                                                var $2125 = self.idx;
                                                                                                                                                                                var $2126 = self.str;
                                                                                                                                                                                var _reply$pst$102 = Parser$State$new$(Parser$Error$maybe_combine$($2112, $2122), $2123, $2124, $2125, $2126);
                                                                                                                                                                                var self = _reply$pst$102;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $2128 = self.err;
                                                                                                                                                                                        var _reply$108 = Litereum$parse$text$("}", _reply$pst$102);
                                                                                                                                                                                        var self = _reply$108;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $2130 = self.err;
                                                                                                                                                                                                var self = $2128;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $2132 = self.value;
                                                                                                                                                                                                        var $2133 = Parser$Reply$error$(Parser$Error$combine$($2132, $2130));
                                                                                                                                                                                                        var $2131 = $2133;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $2134 = Parser$Reply$error$($2130);
                                                                                                                                                                                                        var $2131 = $2134;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $2129 = $2131;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $2135 = self.pst;
                                                                                                                                                                                                var self = $2135;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $2137 = self.err;
                                                                                                                                                                                                        var $2138 = self.nam;
                                                                                                                                                                                                        var $2139 = self.ini;
                                                                                                                                                                                                        var $2140 = self.idx;
                                                                                                                                                                                                        var $2141 = self.str;
                                                                                                                                                                                                        var _reply$pst$116 = Parser$State$new$(Parser$Error$maybe_combine$($2128, $2137), $2138, $2139, $2140, $2141);
                                                                                                                                                                                                        var $2142 = Parser$Reply$value$(_reply$pst$116, Litereum$Bond$new$($2036, _iarg$45, _ityp$46, $2089, $2120));
                                                                                                                                                                                                        var $2136 = $2142;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $2129 = $2136;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $2127 = $2129;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $2121 = $2127;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2113 = $2121;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $2111 = $2113;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $2105 = $2111;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2098 = $2105;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2096 = $2098;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2090 = $2096;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2082 = $2090;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2080 = $2082;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2074 = $2080;
                                                                                                        break;
                                                                                                };
                                                                                                var $2067 = $2074;
                                                                                                break;
                                                                                        };
                                                                                        var $2059 = $2067;
                                                                                        break;
                                                                                };
                                                                                var $2053 = $2059;
                                                                                break;
                                                                        };
                                                                        var $2045 = $2053;
                                                                        break;
                                                                };
                                                                var $2043 = $2045;
                                                                break;
                                                        };
                                                        var $2037 = $2043;
                                                        break;
                                                };
                                                var $2029 = $2037;
                                                break;
                                        };
                                        var $2027 = $2029;
                                        break;
                                };
                                var $2021 = $2027;
                                break;
                        };
                        var $2014 = $2021;
                        break;
                };
                var $2012 = $2014;
                break;
        };
        return $2012;
    };
    const Litereum$parse$bond = x0 => x1 => Litereum$parse$bond$(x0, x1);

    function Litereum$Transaction$new_bond$(_bond$1) {
        var $2143 = ({
            _: 'Litereum.Transaction.new_bond',
            'bond': _bond$1
        });
        return $2143;
    };
    const Litereum$Transaction$new_bond = x0 => Litereum$Transaction$new_bond$(x0);

    function Litereum$File$new$(_name$1, _ownr$2, _type$3, _expr$4) {
        var $2144 = ({
            _: 'Litereum.File.new',
            'name': _name$1,
            'ownr': _ownr$2,
            'type': _type$3,
            'expr': _expr$4
        });
        return $2144;
    };
    const Litereum$File$new = x0 => x1 => x2 => x3 => Litereum$File$new$(x0, x1, x2, x3);

    function Litereum$parse$file$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2146 = self.err;
                var _reply$8 = Litereum$parse$text$("file", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2148 = self.err;
                        var self = $2146;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2150 = self.value;
                                var $2151 = Parser$Reply$error$(Parser$Error$combine$($2150, $2148));
                                var $2149 = $2151;
                                break;
                            case 'Maybe.none':
                                var $2152 = Parser$Reply$error$($2148);
                                var $2149 = $2152;
                                break;
                        };
                        var $2147 = $2149;
                        break;
                    case 'Parser.Reply.value':
                        var $2153 = self.pst;
                        var self = $2153;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2155 = self.err;
                                var $2156 = self.nam;
                                var $2157 = self.ini;
                                var $2158 = self.idx;
                                var $2159 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2146, $2155), $2156, $2157, $2158, $2159);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2161 = self.err;
                                        var _reply$22 = Parser$many$((_pst$22 => {
                                            var self = _pst$22;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $2164 = self.err;
                                                    var _reply$28 = Litereum$parse$name$(_pst$22);
                                                    var self = _reply$28;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $2166 = self.err;
                                                            var self = $2164;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $2168 = self.value;
                                                                    var $2169 = Parser$Reply$error$(Parser$Error$combine$($2168, $2166));
                                                                    var $2167 = $2169;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $2170 = Parser$Reply$error$($2166);
                                                                    var $2167 = $2170;
                                                                    break;
                                                            };
                                                            var $2165 = $2167;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $2171 = self.pst;
                                                            var $2172 = self.val;
                                                            var self = $2171;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2174 = self.err;
                                                                    var $2175 = self.nam;
                                                                    var $2176 = self.ini;
                                                                    var $2177 = self.idx;
                                                                    var $2178 = self.str;
                                                                    var _reply$pst$36 = Parser$State$new$(Parser$Error$maybe_combine$($2164, $2174), $2175, $2176, $2177, $2178);
                                                                    var self = _reply$pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $2180 = self.err;
                                                                            var _reply$42 = Litereum$parse$text$("@", _reply$pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $2182 = self.err;
                                                                                    var self = $2180;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $2184 = self.value;
                                                                                            var $2185 = Parser$Reply$error$(Parser$Error$combine$($2184, $2182));
                                                                                            var $2183 = $2185;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $2186 = Parser$Reply$error$($2182);
                                                                                            var $2183 = $2186;
                                                                                            break;
                                                                                    };
                                                                                    var $2181 = $2183;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $2187 = self.pst;
                                                                                    var self = $2187;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2189 = self.err;
                                                                                            var $2190 = self.nam;
                                                                                            var $2191 = self.ini;
                                                                                            var $2192 = self.idx;
                                                                                            var $2193 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($2180, $2189), $2190, $2191, $2192, $2193);
                                                                                            var $2194 = Parser$Reply$value$(_reply$pst$50, $2172);
                                                                                            var $2188 = $2194;
                                                                                            break;
                                                                                    };
                                                                                    var $2181 = $2188;
                                                                                    break;
                                                                            };
                                                                            var $2179 = $2181;
                                                                            break;
                                                                    };
                                                                    var $2173 = $2179;
                                                                    break;
                                                            };
                                                            var $2165 = $2173;
                                                            break;
                                                    };
                                                    var $2163 = $2165;
                                                    break;
                                            };
                                            return $2163;
                                        }))(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2195 = self.err;
                                                var self = $2161;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2197 = self.value;
                                                        var $2198 = Parser$Reply$error$(Parser$Error$combine$($2197, $2195));
                                                        var $2196 = $2198;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2199 = Parser$Reply$error$($2195);
                                                        var $2196 = $2199;
                                                        break;
                                                };
                                                var $2162 = $2196;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2200 = self.pst;
                                                var $2201 = self.val;
                                                var self = $2200;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2203 = self.err;
                                                        var $2204 = self.nam;
                                                        var $2205 = self.ini;
                                                        var $2206 = self.idx;
                                                        var $2207 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2161, $2203), $2204, $2205, $2206, $2207);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2209 = self.err;
                                                                var _reply$36 = Litereum$parse$name$(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2211 = self.err;
                                                                        var self = $2209;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2213 = self.value;
                                                                                var $2214 = Parser$Reply$error$(Parser$Error$combine$($2213, $2211));
                                                                                var $2212 = $2214;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2215 = Parser$Reply$error$($2211);
                                                                                var $2212 = $2215;
                                                                                break;
                                                                        };
                                                                        var $2210 = $2212;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2216 = self.pst;
                                                                        var $2217 = self.val;
                                                                        var self = $2216;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2219 = self.err;
                                                                                var $2220 = self.nam;
                                                                                var $2221 = self.ini;
                                                                                var $2222 = self.idx;
                                                                                var $2223 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2209, $2219), $2220, $2221, $2222, $2223);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2225 = self.err;
                                                                                        var _reply$50 = Litereum$parse$text$(":", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2227 = self.err;
                                                                                                var self = $2225;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2229 = self.value;
                                                                                                        var $2230 = Parser$Reply$error$(Parser$Error$combine$($2229, $2227));
                                                                                                        var $2228 = $2230;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2231 = Parser$Reply$error$($2227);
                                                                                                        var $2228 = $2231;
                                                                                                        break;
                                                                                                };
                                                                                                var $2226 = $2228;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2232 = self.pst;
                                                                                                var self = $2232;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2234 = self.err;
                                                                                                        var $2235 = self.nam;
                                                                                                        var $2236 = self.ini;
                                                                                                        var $2237 = self.idx;
                                                                                                        var $2238 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2225, $2234), $2235, $2236, $2237, $2238);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2240 = self.err;
                                                                                                                var _reply$64 = Litereum$parse$type$(_world$1)(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2242 = self.err;
                                                                                                                        var self = $2240;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2244 = self.value;
                                                                                                                                var $2245 = Parser$Reply$error$(Parser$Error$combine$($2244, $2242));
                                                                                                                                var $2243 = $2245;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2246 = Parser$Reply$error$($2242);
                                                                                                                                var $2243 = $2246;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2241 = $2243;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2247 = self.pst;
                                                                                                                        var $2248 = self.val;
                                                                                                                        var self = $2247;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2250 = self.err;
                                                                                                                                var $2251 = self.nam;
                                                                                                                                var $2252 = self.ini;
                                                                                                                                var $2253 = self.idx;
                                                                                                                                var $2254 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2240, $2250), $2251, $2252, $2253, $2254);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2256 = self.err;
                                                                                                                                        var _reply$78 = Litereum$parse$text$("=", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2258 = self.err;
                                                                                                                                                var self = $2256;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2260 = self.value;
                                                                                                                                                        var $2261 = Parser$Reply$error$(Parser$Error$combine$($2260, $2258));
                                                                                                                                                        var $2259 = $2261;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2262 = Parser$Reply$error$($2258);
                                                                                                                                                        var $2259 = $2262;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2257 = $2259;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2263 = self.pst;
                                                                                                                                                var self = $2263;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2265 = self.err;
                                                                                                                                                        var $2266 = self.nam;
                                                                                                                                                        var $2267 = self.ini;
                                                                                                                                                        var $2268 = self.idx;
                                                                                                                                                        var $2269 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2256, $2265), $2266, $2267, $2268, $2269);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $2271 = self.err;
                                                                                                                                                                var _reply$92 = Litereum$parse$term$(_world$1)(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $2273 = self.err;
                                                                                                                                                                        var self = $2271;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $2275 = self.value;
                                                                                                                                                                                var $2276 = Parser$Reply$error$(Parser$Error$combine$($2275, $2273));
                                                                                                                                                                                var $2274 = $2276;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $2277 = Parser$Reply$error$($2273);
                                                                                                                                                                                var $2274 = $2277;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2272 = $2274;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $2278 = self.pst;
                                                                                                                                                                        var $2279 = self.val;
                                                                                                                                                                        var self = $2278;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $2281 = self.err;
                                                                                                                                                                                var $2282 = self.nam;
                                                                                                                                                                                var $2283 = self.ini;
                                                                                                                                                                                var $2284 = self.idx;
                                                                                                                                                                                var $2285 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2271, $2281), $2282, $2283, $2284, $2285);
                                                                                                                                                                                var $2286 = Parser$Reply$value$(_reply$pst$100, Litereum$File$new$($2217, $2201, $2248, $2279));
                                                                                                                                                                                var $2280 = $2286;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $2272 = $2280;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $2270 = $2272;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $2264 = $2270;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2257 = $2264;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2255 = $2257;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2249 = $2255;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2241 = $2249;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2239 = $2241;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2233 = $2239;
                                                                                                        break;
                                                                                                };
                                                                                                var $2226 = $2233;
                                                                                                break;
                                                                                        };
                                                                                        var $2224 = $2226;
                                                                                        break;
                                                                                };
                                                                                var $2218 = $2224;
                                                                                break;
                                                                        };
                                                                        var $2210 = $2218;
                                                                        break;
                                                                };
                                                                var $2208 = $2210;
                                                                break;
                                                        };
                                                        var $2202 = $2208;
                                                        break;
                                                };
                                                var $2162 = $2202;
                                                break;
                                        };
                                        var $2160 = $2162;
                                        break;
                                };
                                var $2154 = $2160;
                                break;
                        };
                        var $2147 = $2154;
                        break;
                };
                var $2145 = $2147;
                break;
        };
        return $2145;
    };
    const Litereum$parse$file = x0 => x1 => Litereum$parse$file$(x0, x1);

    function Litereum$Transaction$new_file$(_file$1) {
        var $2287 = ({
            _: 'Litereum.Transaction.new_file',
            'file': _file$1
        });
        return $2287;
    };
    const Litereum$Transaction$new_file = x0 => Litereum$Transaction$new_file$(x0);

    function Litereum$Eval$new$(_term$1, _type$2) {
        var $2288 = ({
            _: 'Litereum.Eval.new',
            'term': _term$1,
            'type': _type$2
        });
        return $2288;
    };
    const Litereum$Eval$new = x0 => x1 => Litereum$Eval$new$(x0, x1);

    function Litereum$parse$eval$(_world$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $2290 = self.err;
                var _reply$8 = Litereum$parse$text$("eval", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2292 = self.err;
                        var self = $2290;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2294 = self.value;
                                var $2295 = Parser$Reply$error$(Parser$Error$combine$($2294, $2292));
                                var $2293 = $2295;
                                break;
                            case 'Maybe.none':
                                var $2296 = Parser$Reply$error$($2292);
                                var $2293 = $2296;
                                break;
                        };
                        var $2291 = $2293;
                        break;
                    case 'Parser.Reply.value':
                        var $2297 = self.pst;
                        var self = $2297;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2299 = self.err;
                                var $2300 = self.nam;
                                var $2301 = self.ini;
                                var $2302 = self.idx;
                                var $2303 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2290, $2299), $2300, $2301, $2302, $2303);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2305 = self.err;
                                        var _reply$22 = Litereum$parse$text$("{", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2307 = self.err;
                                                var self = $2305;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2309 = self.value;
                                                        var $2310 = Parser$Reply$error$(Parser$Error$combine$($2309, $2307));
                                                        var $2308 = $2310;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2311 = Parser$Reply$error$($2307);
                                                        var $2308 = $2311;
                                                        break;
                                                };
                                                var $2306 = $2308;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2312 = self.pst;
                                                var self = $2312;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2314 = self.err;
                                                        var $2315 = self.nam;
                                                        var $2316 = self.ini;
                                                        var $2317 = self.idx;
                                                        var $2318 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2305, $2314), $2315, $2316, $2317, $2318);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2320 = self.err;
                                                                var _reply$36 = Litereum$parse$term$(_world$1)(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2322 = self.err;
                                                                        var self = $2320;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2324 = self.value;
                                                                                var $2325 = Parser$Reply$error$(Parser$Error$combine$($2324, $2322));
                                                                                var $2323 = $2325;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2326 = Parser$Reply$error$($2322);
                                                                                var $2323 = $2326;
                                                                                break;
                                                                        };
                                                                        var $2321 = $2323;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2327 = self.pst;
                                                                        var $2328 = self.val;
                                                                        var self = $2327;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2330 = self.err;
                                                                                var $2331 = self.nam;
                                                                                var $2332 = self.ini;
                                                                                var $2333 = self.idx;
                                                                                var $2334 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2320, $2330), $2331, $2332, $2333, $2334);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $2336 = self.err;
                                                                                        var _reply$50 = Litereum$parse$text$("}", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $2338 = self.err;
                                                                                                var self = $2336;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $2340 = self.value;
                                                                                                        var $2341 = Parser$Reply$error$(Parser$Error$combine$($2340, $2338));
                                                                                                        var $2339 = $2341;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $2342 = Parser$Reply$error$($2338);
                                                                                                        var $2339 = $2342;
                                                                                                        break;
                                                                                                };
                                                                                                var $2337 = $2339;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $2343 = self.pst;
                                                                                                var self = $2343;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $2345 = self.err;
                                                                                                        var $2346 = self.nam;
                                                                                                        var $2347 = self.ini;
                                                                                                        var $2348 = self.idx;
                                                                                                        var $2349 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2336, $2345), $2346, $2347, $2348, $2349);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $2351 = self.err;
                                                                                                                var _reply$64 = Litereum$parse$text$(":", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $2353 = self.err;
                                                                                                                        var self = $2351;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $2355 = self.value;
                                                                                                                                var $2356 = Parser$Reply$error$(Parser$Error$combine$($2355, $2353));
                                                                                                                                var $2354 = $2356;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $2357 = Parser$Reply$error$($2353);
                                                                                                                                var $2354 = $2357;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2352 = $2354;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $2358 = self.pst;
                                                                                                                        var self = $2358;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $2360 = self.err;
                                                                                                                                var $2361 = self.nam;
                                                                                                                                var $2362 = self.ini;
                                                                                                                                var $2363 = self.idx;
                                                                                                                                var $2364 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2351, $2360), $2361, $2362, $2363, $2364);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $2366 = self.err;
                                                                                                                                        var _reply$78 = Litereum$parse$type$(_world$1)(_reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $2368 = self.err;
                                                                                                                                                var self = $2366;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $2370 = self.value;
                                                                                                                                                        var $2371 = Parser$Reply$error$(Parser$Error$combine$($2370, $2368));
                                                                                                                                                        var $2369 = $2371;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $2372 = Parser$Reply$error$($2368);
                                                                                                                                                        var $2369 = $2372;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2367 = $2369;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $2373 = self.pst;
                                                                                                                                                var $2374 = self.val;
                                                                                                                                                var self = $2373;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $2376 = self.err;
                                                                                                                                                        var $2377 = self.nam;
                                                                                                                                                        var $2378 = self.ini;
                                                                                                                                                        var $2379 = self.idx;
                                                                                                                                                        var $2380 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2366, $2376), $2377, $2378, $2379, $2380);
                                                                                                                                                        var $2381 = Parser$Reply$value$(_reply$pst$86, Litereum$Eval$new$($2328, $2374));
                                                                                                                                                        var $2375 = $2381;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $2367 = $2375;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $2365 = $2367;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $2359 = $2365;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $2352 = $2359;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $2350 = $2352;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $2344 = $2350;
                                                                                                        break;
                                                                                                };
                                                                                                var $2337 = $2344;
                                                                                                break;
                                                                                        };
                                                                                        var $2335 = $2337;
                                                                                        break;
                                                                                };
                                                                                var $2329 = $2335;
                                                                                break;
                                                                        };
                                                                        var $2321 = $2329;
                                                                        break;
                                                                };
                                                                var $2319 = $2321;
                                                                break;
                                                        };
                                                        var $2313 = $2319;
                                                        break;
                                                };
                                                var $2306 = $2313;
                                                break;
                                        };
                                        var $2304 = $2306;
                                        break;
                                };
                                var $2298 = $2304;
                                break;
                        };
                        var $2291 = $2298;
                        break;
                };
                var $2289 = $2291;
                break;
        };
        return $2289;
    };
    const Litereum$parse$eval = x0 => x1 => Litereum$parse$eval$(x0, x1);

    function Litereum$Transaction$new_eval$(_eval$1) {
        var $2382 = ({
            _: 'Litereum.Transaction.new_eval',
            'eval': _eval$1
        });
        return $2382;
    };
    const Litereum$Transaction$new_eval = x0 => Litereum$Transaction$new_eval$(x0);

    function Litereum$parse$transaction$(_world$1) {
        var $2383 = Parser$choice(List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2385 = self.err;
                    var _reply$8 = Litereum$parse$data$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2387 = self.err;
                            var self = $2385;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2389 = self.value;
                                    var $2390 = Parser$Reply$error$(Parser$Error$combine$($2389, $2387));
                                    var $2388 = $2390;
                                    break;
                                case 'Maybe.none':
                                    var $2391 = Parser$Reply$error$($2387);
                                    var $2388 = $2391;
                                    break;
                            };
                            var $2386 = $2388;
                            break;
                        case 'Parser.Reply.value':
                            var $2392 = self.pst;
                            var $2393 = self.val;
                            var self = $2392;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2395 = self.err;
                                    var $2396 = self.nam;
                                    var $2397 = self.ini;
                                    var $2398 = self.idx;
                                    var $2399 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2385, $2395), $2396, $2397, $2398, $2399);
                                    var $2400 = Parser$Reply$value$(_reply$pst$16, Litereum$Transaction$new_data$($2393));
                                    var $2394 = $2400;
                                    break;
                            };
                            var $2386 = $2394;
                            break;
                    };
                    var $2384 = $2386;
                    break;
            };
            return $2384;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2402 = self.err;
                    var _reply$8 = Litereum$parse$bond$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2404 = self.err;
                            var self = $2402;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2406 = self.value;
                                    var $2407 = Parser$Reply$error$(Parser$Error$combine$($2406, $2404));
                                    var $2405 = $2407;
                                    break;
                                case 'Maybe.none':
                                    var $2408 = Parser$Reply$error$($2404);
                                    var $2405 = $2408;
                                    break;
                            };
                            var $2403 = $2405;
                            break;
                        case 'Parser.Reply.value':
                            var $2409 = self.pst;
                            var $2410 = self.val;
                            var self = $2409;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2412 = self.err;
                                    var $2413 = self.nam;
                                    var $2414 = self.ini;
                                    var $2415 = self.idx;
                                    var $2416 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2402, $2412), $2413, $2414, $2415, $2416);
                                    var $2417 = Parser$Reply$value$(_reply$pst$16, Litereum$Transaction$new_bond$($2410));
                                    var $2411 = $2417;
                                    break;
                            };
                            var $2403 = $2411;
                            break;
                    };
                    var $2401 = $2403;
                    break;
            };
            return $2401;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2419 = self.err;
                    var _reply$8 = Litereum$parse$file$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2421 = self.err;
                            var self = $2419;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2423 = self.value;
                                    var $2424 = Parser$Reply$error$(Parser$Error$combine$($2423, $2421));
                                    var $2422 = $2424;
                                    break;
                                case 'Maybe.none':
                                    var $2425 = Parser$Reply$error$($2421);
                                    var $2422 = $2425;
                                    break;
                            };
                            var $2420 = $2422;
                            break;
                        case 'Parser.Reply.value':
                            var $2426 = self.pst;
                            var $2427 = self.val;
                            var self = $2426;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2429 = self.err;
                                    var $2430 = self.nam;
                                    var $2431 = self.ini;
                                    var $2432 = self.idx;
                                    var $2433 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2419, $2429), $2430, $2431, $2432, $2433);
                                    var $2434 = Parser$Reply$value$(_reply$pst$16, Litereum$Transaction$new_file$($2427));
                                    var $2428 = $2434;
                                    break;
                            };
                            var $2420 = $2428;
                            break;
                    };
                    var $2418 = $2420;
                    break;
            };
            return $2418;
        }), List$cons$((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2436 = self.err;
                    var _reply$8 = Litereum$parse$eval$(_world$1, _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2438 = self.err;
                            var self = $2436;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2440 = self.value;
                                    var $2441 = Parser$Reply$error$(Parser$Error$combine$($2440, $2438));
                                    var $2439 = $2441;
                                    break;
                                case 'Maybe.none':
                                    var $2442 = Parser$Reply$error$($2438);
                                    var $2439 = $2442;
                                    break;
                            };
                            var $2437 = $2439;
                            break;
                        case 'Parser.Reply.value':
                            var $2443 = self.pst;
                            var $2444 = self.val;
                            var self = $2443;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2446 = self.err;
                                    var $2447 = self.nam;
                                    var $2448 = self.ini;
                                    var $2449 = self.idx;
                                    var $2450 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2436, $2446), $2447, $2448, $2449, $2450);
                                    var $2451 = Parser$Reply$value$(_reply$pst$16, Litereum$Transaction$new_eval$($2444));
                                    var $2445 = $2451;
                                    break;
                            };
                            var $2437 = $2445;
                            break;
                    };
                    var $2435 = $2437;
                    break;
            };
            return $2435;
        }), List$nil)))));
        return $2383;
    };
    const Litereum$parse$transaction = x0 => Litereum$parse$transaction$(x0);

    function Litereum$parse$block$(_world$1) {
        var $2452 = Parser$until$(Litereum$parse$text("save"), Litereum$parse$transaction$(_world$1));
        return $2452;
    };
    const Litereum$parse$block = x0 => Litereum$parse$block$(x0);

    function IO$(_A$1) {
        var $2453 = null;
        return $2453;
    };
    const IO = x0 => IO$(x0);
    const Nat$ltn = a0 => a1 => (a0 < a1);

    function String$length$go$(_xs$1, _n$2) {
        var String$length$go$ = (_xs$1, _n$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _n$2]
        });
        var String$length$go = _xs$1 => _n$2 => String$length$go$(_xs$1, _n$2);
        var arg = [_xs$1, _n$2];
        while (true) {
            let [_xs$1, _n$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $2454 = _n$2;
                    return $2454;
                } else {
                    var $2455 = self.charCodeAt(0);
                    var $2456 = self.slice(1);
                    var $2457 = String$length$go$($2456, Nat$succ$(_n$2));
                    return $2457;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$length$go = x0 => x1 => String$length$go$(x0, x1);

    function String$length$(_xs$1) {
        var $2458 = String$length$go$(_xs$1, 0n);
        return $2458;
    };
    const String$length = x0 => String$length$(x0);

    function String$flatten$go$(_xs$1, _res$2) {
        var String$flatten$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$flatten$go = _xs$1 => _res$2 => String$flatten$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                switch (self._) {
                    case 'List.cons':
                        var $2459 = self.head;
                        var $2460 = self.tail;
                        var $2461 = String$flatten$go$($2460, (_res$2 + $2459));
                        return $2461;
                    case 'List.nil':
                        var $2462 = _res$2;
                        return $2462;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$flatten$go = x0 => x1 => String$flatten$go$(x0, x1);

    function String$flatten$(_xs$1) {
        var $2463 = String$flatten$go$(_xs$1, "");
        return $2463;
    };
    const String$flatten = x0 => String$flatten$(x0);

    function String$join$go$(_sep$1, _list$2, _fst$3) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $2465 = self.head;
                var $2466 = self.tail;
                var $2467 = String$flatten$(List$cons$((() => {
                    var self = _fst$3;
                    if (self) {
                        var $2468 = "";
                        return $2468;
                    } else {
                        var $2469 = _sep$1;
                        return $2469;
                    };
                })(), List$cons$($2465, List$cons$(String$join$go$(_sep$1, $2466, Bool$false), List$nil))));
                var $2464 = $2467;
                break;
            case 'List.nil':
                var $2470 = "";
                var $2464 = $2470;
                break;
        };
        return $2464;
    };
    const String$join$go = x0 => x1 => x2 => String$join$go$(x0, x1, x2);

    function String$join$(_sep$1, _list$2) {
        var $2471 = String$join$go$(_sep$1, _list$2, Bool$true);
        return $2471;
    };
    const String$join = x0 => x1 => String$join$(x0, x1);

    function Kind$Code$highlight$end$(_col$1, _row$2, _res$3) {
        var $2472 = String$join$("\u{a}", _res$3);
        return $2472;
    };
    const Kind$Code$highlight$end = x0 => x1 => x2 => Kind$Code$highlight$end$(x0, x1, x2);

    function Maybe$extract$(_m$2, _a$4, _f$5) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $2474 = self.value;
                var $2475 = _f$5($2474);
                var $2473 = $2475;
                break;
            case 'Maybe.none':
                var $2476 = _a$4;
                var $2473 = $2476;
                break;
        };
        return $2473;
    };
    const Maybe$extract = x0 => x1 => x2 => Maybe$extract$(x0, x1, x2);

    function Nat$is_zero$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2478 = Bool$true;
            var $2477 = $2478;
        } else {
            var $2479 = (self - 1n);
            var $2480 = Bool$false;
            var $2477 = $2480;
        };
        return $2477;
    };
    const Nat$is_zero = x0 => Nat$is_zero$(x0);

    function Nat$double$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2482 = Nat$zero;
            var $2481 = $2482;
        } else {
            var $2483 = (self - 1n);
            var $2484 = Nat$succ$(Nat$succ$(Nat$double$($2483)));
            var $2481 = $2484;
        };
        return $2481;
    };
    const Nat$double = x0 => Nat$double$(x0);

    function Nat$pred$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $2486 = Nat$zero;
            var $2485 = $2486;
        } else {
            var $2487 = (self - 1n);
            var $2488 = $2487;
            var $2485 = $2488;
        };
        return $2485;
    };
    const Nat$pred = x0 => Nat$pred$(x0);

    function String$reverse$go$(_xs$1, _res$2) {
        var String$reverse$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$reverse$go = _xs$1 => _res$2 => String$reverse$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $2489 = _res$2;
                    return $2489;
                } else {
                    var $2490 = self.charCodeAt(0);
                    var $2491 = self.slice(1);
                    var $2492 = String$reverse$go$($2491, String$cons$($2490, _res$2));
                    return $2492;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$reverse$go = x0 => x1 => String$reverse$go$(x0, x1);

    function String$reverse$(_xs$1) {
        var $2493 = String$reverse$go$(_xs$1, String$nil);
        return $2493;
    };
    const String$reverse = x0 => String$reverse$(x0);

    function String$pad_right$(_size$1, _chr$2, _str$3) {
        var self = _size$1;
        if (self === 0n) {
            var $2495 = _str$3;
            var $2494 = $2495;
        } else {
            var $2496 = (self - 1n);
            var self = _str$3;
            if (self.length === 0) {
                var $2498 = String$cons$(_chr$2, String$pad_right$($2496, _chr$2, ""));
                var $2497 = $2498;
            } else {
                var $2499 = self.charCodeAt(0);
                var $2500 = self.slice(1);
                var $2501 = String$cons$($2499, String$pad_right$($2496, _chr$2, $2500));
                var $2497 = $2501;
            };
            var $2494 = $2497;
        };
        return $2494;
    };
    const String$pad_right = x0 => x1 => x2 => String$pad_right$(x0, x1, x2);

    function String$pad_left$(_size$1, _chr$2, _str$3) {
        var $2502 = String$reverse$(String$pad_right$(_size$1, _chr$2, String$reverse$(_str$3)));
        return $2502;
    };
    const String$pad_left = x0 => x1 => x2 => String$pad_left$(x0, x1, x2);

    function Either$(_A$1, _B$2) {
        var $2503 = null;
        return $2503;
    };
    const Either = x0 => x1 => Either$(x0, x1);

    function Either$left$(_value$3) {
        var $2504 = ({
            _: 'Either.left',
            'value': _value$3
        });
        return $2504;
    };
    const Either$left = x0 => Either$left$(x0);

    function Either$right$(_value$3) {
        var $2505 = ({
            _: 'Either.right',
            'value': _value$3
        });
        return $2505;
    };
    const Either$right = x0 => Either$right$(x0);

    function Nat$sub_rem$(_n$1, _m$2) {
        var Nat$sub_rem$ = (_n$1, _m$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2]
        });
        var Nat$sub_rem = _n$1 => _m$2 => Nat$sub_rem$(_n$1, _m$2);
        var arg = [_n$1, _m$2];
        while (true) {
            let [_n$1, _m$2] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $2506 = Either$left$(_n$1);
                    return $2506;
                } else {
                    var $2507 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $2509 = Either$right$(Nat$succ$($2507));
                        var $2508 = $2509;
                    } else {
                        var $2510 = (self - 1n);
                        var $2511 = Nat$sub_rem$($2510, $2507);
                        var $2508 = $2511;
                    };
                    return $2508;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$sub_rem = x0 => x1 => Nat$sub_rem$(x0, x1);

    function Nat$div_mod$go$(_n$1, _m$2, _d$3) {
        var Nat$div_mod$go$ = (_n$1, _m$2, _d$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _d$3]
        });
        var Nat$div_mod$go = _n$1 => _m$2 => _d$3 => Nat$div_mod$go$(_n$1, _m$2, _d$3);
        var arg = [_n$1, _m$2, _d$3];
        while (true) {
            let [_n$1, _m$2, _d$3] = arg;
            var R = (() => {
                var self = Nat$sub_rem$(_n$1, _m$2);
                switch (self._) {
                    case 'Either.left':
                        var $2512 = self.value;
                        var $2513 = Nat$div_mod$go$($2512, _m$2, Nat$succ$(_d$3));
                        return $2513;
                    case 'Either.right':
                        var $2514 = Pair$new$(_d$3, _n$1);
                        return $2514;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$div_mod$go = x0 => x1 => x2 => Nat$div_mod$go$(x0, x1, x2);
    const Nat$div_mod = a0 => a1 => (({
        _: 'Pair.new',
        'fst': a0 / a1,
        'snd': a0 % a1
    }));

    function Nat$to_base$go$(_base$1, _nat$2, _res$3) {
        var Nat$to_base$go$ = (_base$1, _nat$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_base$1, _nat$2, _res$3]
        });
        var Nat$to_base$go = _base$1 => _nat$2 => _res$3 => Nat$to_base$go$(_base$1, _nat$2, _res$3);
        var arg = [_base$1, _nat$2, _res$3];
        while (true) {
            let [_base$1, _nat$2, _res$3] = arg;
            var R = (() => {
                var self = (({
                    _: 'Pair.new',
                    'fst': _nat$2 / _base$1,
                    'snd': _nat$2 % _base$1
                }));
                switch (self._) {
                    case 'Pair.new':
                        var $2515 = self.fst;
                        var $2516 = self.snd;
                        var self = $2515;
                        if (self === 0n) {
                            var $2518 = List$cons$($2516, _res$3);
                            var $2517 = $2518;
                        } else {
                            var $2519 = (self - 1n);
                            var $2520 = Nat$to_base$go$(_base$1, $2515, List$cons$($2516, _res$3));
                            var $2517 = $2520;
                        };
                        return $2517;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$to_base$go = x0 => x1 => x2 => Nat$to_base$go$(x0, x1, x2);

    function Nat$to_base$(_base$1, _nat$2) {
        var $2521 = Nat$to_base$go$(_base$1, _nat$2, List$nil);
        return $2521;
    };
    const Nat$to_base = x0 => x1 => Nat$to_base$(x0, x1);

    function Nat$mod$go$(_n$1, _m$2, _r$3) {
        var Nat$mod$go$ = (_n$1, _m$2, _r$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _r$3]
        });
        var Nat$mod$go = _n$1 => _m$2 => _r$3 => Nat$mod$go$(_n$1, _m$2, _r$3);
        var arg = [_n$1, _m$2, _r$3];
        while (true) {
            let [_n$1, _m$2, _r$3] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $2522 = Nat$mod$go$(_n$1, _r$3, _m$2);
                    return $2522;
                } else {
                    var $2523 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $2525 = _r$3;
                        var $2524 = $2525;
                    } else {
                        var $2526 = (self - 1n);
                        var $2527 = Nat$mod$go$($2526, $2523, Nat$succ$(_r$3));
                        var $2524 = $2527;
                    };
                    return $2524;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$mod$go = x0 => x1 => x2 => Nat$mod$go$(x0, x1, x2);
    const Nat$mod = a0 => a1 => (a0 % a1);
    const Nat$lte = a0 => a1 => (a0 <= a1);

    function List$at$(_index$2, _list$3) {
        var List$at$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$at = _index$2 => _list$3 => List$at$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $2528 = self.head;
                        var $2529 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $2531 = Maybe$some$($2528);
                            var $2530 = $2531;
                        } else {
                            var $2532 = (self - 1n);
                            var $2533 = List$at$($2532, $2529);
                            var $2530 = $2533;
                        };
                        return $2530;
                    case 'List.nil':
                        var $2534 = Maybe$none;
                        return $2534;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$at = x0 => x1 => List$at$(x0, x1);

    function Nat$show_digit$(_base$1, _n$2) {
        var _m$3 = (_n$2 % _base$1);
        var _base64$4 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$cons$(97, List$cons$(98, List$cons$(99, List$cons$(100, List$cons$(101, List$cons$(102, List$cons$(103, List$cons$(104, List$cons$(105, List$cons$(106, List$cons$(107, List$cons$(108, List$cons$(109, List$cons$(110, List$cons$(111, List$cons$(112, List$cons$(113, List$cons$(114, List$cons$(115, List$cons$(116, List$cons$(117, List$cons$(118, List$cons$(119, List$cons$(120, List$cons$(121, List$cons$(122, List$cons$(65, List$cons$(66, List$cons$(67, List$cons$(68, List$cons$(69, List$cons$(70, List$cons$(71, List$cons$(72, List$cons$(73, List$cons$(74, List$cons$(75, List$cons$(76, List$cons$(77, List$cons$(78, List$cons$(79, List$cons$(80, List$cons$(81, List$cons$(82, List$cons$(83, List$cons$(84, List$cons$(85, List$cons$(86, List$cons$(87, List$cons$(88, List$cons$(89, List$cons$(90, List$cons$(43, List$cons$(47, List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
        var self = ((_base$1 > 0n) && (_base$1 <= 64n));
        if (self) {
            var self = List$at$(_m$3, _base64$4);
            switch (self._) {
                case 'Maybe.some':
                    var $2537 = self.value;
                    var $2538 = $2537;
                    var $2536 = $2538;
                    break;
                case 'Maybe.none':
                    var $2539 = 35;
                    var $2536 = $2539;
                    break;
            };
            var $2535 = $2536;
        } else {
            var $2540 = 35;
            var $2535 = $2540;
        };
        return $2535;
    };
    const Nat$show_digit = x0 => x1 => Nat$show_digit$(x0, x1);

    function Nat$to_string_base$(_base$1, _nat$2) {
        var $2541 = List$fold$(Nat$to_base$(_base$1, _nat$2), String$nil, (_n$3 => _str$4 => {
            var $2542 = String$cons$(Nat$show_digit$(_base$1, _n$3), _str$4);
            return $2542;
        }));
        return $2541;
    };
    const Nat$to_string_base = x0 => x1 => Nat$to_string_base$(x0, x1);

    function Nat$show$(_n$1) {
        var $2543 = Nat$to_string_base$(10n, _n$1);
        return $2543;
    };
    const Nat$show = x0 => Nat$show$(x0);
    const Bool$not = a0 => (!a0);

    function U16$new$(_value$1) {
        var $2544 = word_to_u16(_value$1);
        return $2544;
    };
    const U16$new = x0 => U16$new$(x0);
    const Nat$to_u16 = a0 => (Number(a0) & 0xFFFF);

    function Kind$Code$color$(_col$1, _str$2) {
        var $2545 = String$cons$(27, ("[" + (_col$1 + ("m" + (_str$2 + String$cons$(27, "[0m"))))));
        return $2545;
    };
    const Kind$Code$color = x0 => x1 => Kind$Code$color$(x0, x1);
    const Nat$eql = a0 => a1 => (a0 === a1);

    function List$take$(_n$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $2547 = self.head;
                var $2548 = self.tail;
                var self = _n$2;
                if (self === 0n) {
                    var $2550 = List$nil;
                    var $2549 = $2550;
                } else {
                    var $2551 = (self - 1n);
                    var $2552 = List$cons$($2547, List$take$($2551, $2548));
                    var $2549 = $2552;
                };
                var $2546 = $2549;
                break;
            case 'List.nil':
                var $2553 = List$nil;
                var $2546 = $2553;
                break;
        };
        return $2546;
    };
    const List$take = x0 => x1 => List$take$(x0, x1);

    function Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) {
        var Kind$Code$highlight$go$ = (_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) => ({
            ctr: 'TCO',
            arg: [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9]
        });
        var Kind$Code$highlight$go = _code$1 => _ixi$2 => _ix0$3 => _ix1$4 => _col$5 => _row$6 => _lft$7 => _lin$8 => _res$9 => Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9);
        var arg = [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9];
        while (true) {
            let [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9] = arg;
            var R = (() => {
                var _spa$10 = 3n;
                var self = _code$1;
                if (self.length === 0) {
                    var $2555 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                    var $2554 = $2555;
                } else {
                    var $2556 = self.charCodeAt(0);
                    var $2557 = self.slice(1);
                    var self = ($2556 === 10);
                    if (self) {
                        var _stp$13 = Maybe$extract$(_lft$7, Bool$false, Nat$is_zero);
                        var self = _stp$13;
                        if (self) {
                            var $2560 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                            var $2559 = $2560;
                        } else {
                            var _siz$14 = Nat$succ$(Nat$double$(_spa$10));
                            var self = _ix1$4;
                            if (self === 0n) {
                                var self = _lft$7;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $2563 = self.value;
                                        var $2564 = Maybe$some$(Nat$pred$($2563));
                                        var $2562 = $2564;
                                        break;
                                    case 'Maybe.none':
                                        var $2565 = Maybe$some$(_spa$10);
                                        var $2562 = $2565;
                                        break;
                                };
                                var _lft$15 = $2562;
                            } else {
                                var $2566 = (self - 1n);
                                var $2567 = _lft$7;
                                var _lft$15 = $2567;
                            };
                            var _ixi$16 = Nat$pred$(_ixi$2);
                            var _ix0$17 = Nat$pred$(_ix0$3);
                            var _ix1$18 = Nat$pred$(_ix1$4);
                            var _col$19 = 0n;
                            var _row$20 = Nat$succ$(_row$6);
                            var _res$21 = List$cons$(String$reverse$(_lin$8), _res$9);
                            var _lin$22 = String$reverse$(String$flatten$(List$cons$(String$pad_left$(4n, 32, Nat$show$(_row$20)), List$cons$(" | ", List$nil))));
                            var $2561 = Kind$Code$highlight$go$($2557, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$20, _lft$15, _lin$22, _res$21);
                            var $2559 = $2561;
                        };
                        var $2558 = $2559;
                    } else {
                        var _chr$13 = String$cons$($2556, String$nil);
                        var self = (Nat$is_zero$(_ix0$3) && (!Nat$is_zero$(_ix1$4)));
                        if (self) {
                            var $2569 = String$reverse$(Kind$Code$color$("41", Kind$Code$color$("37", _chr$13)));
                            var _chr$14 = $2569;
                        } else {
                            var self = (Nat$is_zero$(_ixi$2) && (!Nat$is_zero$(_ix1$4)));
                            if (self) {
                                var $2571 = String$reverse$(Kind$Code$color$("31", Kind$Code$color$("4", _chr$13)));
                                var $2570 = $2571;
                            } else {
                                var $2572 = _chr$13;
                                var $2570 = $2572;
                            };
                            var _chr$14 = $2570;
                        };
                        var self = (_ix0$3 === 1n);
                        if (self) {
                            var $2573 = List$take$(_spa$10, _res$9);
                            var _res$15 = $2573;
                        } else {
                            var $2574 = _res$9;
                            var _res$15 = $2574;
                        };
                        var _ixi$16 = Nat$pred$(_ixi$2);
                        var _ix0$17 = Nat$pred$(_ix0$3);
                        var _ix1$18 = Nat$pred$(_ix1$4);
                        var _col$19 = Nat$succ$(_col$5);
                        var _lin$20 = String$flatten$(List$cons$(_chr$14, List$cons$(_lin$8, List$nil)));
                        var $2568 = Kind$Code$highlight$go$($2557, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$6, _lft$7, _lin$20, _res$15);
                        var $2558 = $2568;
                    };
                    var $2554 = $2558;
                };
                return $2554;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$highlight$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Code$highlight$go$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Code$highlight$(_code$1, _init$2, _idx0$3, _idx1$4) {
        var $2575 = Kind$Code$highlight$go$((_code$1 + " \u{a}"), _init$2, _idx0$3, _idx1$4, 0n, 1n, Maybe$none, String$reverse$("   1 | "), List$nil);
        return $2575;
    };
    const Kind$Code$highlight = x0 => x1 => x2 => x3 => Kind$Code$highlight$(x0, x1, x2, x3);

    function IO$ask$(_query$2, _param$3, _then$4) {
        var $2576 = ({
            _: 'IO.ask',
            'query': _query$2,
            'param': _param$3,
            'then': _then$4
        });
        return $2576;
    };
    const IO$ask = x0 => x1 => x2 => IO$ask$(x0, x1, x2);

    function IO$bind$(_a$3, _f$4) {
        var self = _a$3;
        switch (self._) {
            case 'IO.end':
                var $2578 = self.value;
                var $2579 = _f$4($2578);
                var $2577 = $2579;
                break;
            case 'IO.ask':
                var $2580 = self.query;
                var $2581 = self.param;
                var $2582 = self.then;
                var $2583 = IO$ask$($2580, $2581, (_x$8 => {
                    var $2584 = IO$bind$($2582(_x$8), _f$4);
                    return $2584;
                }));
                var $2577 = $2583;
                break;
        };
        return $2577;
    };
    const IO$bind = x0 => x1 => IO$bind$(x0, x1);

    function IO$end$(_value$2) {
        var $2585 = ({
            _: 'IO.end',
            'value': _value$2
        });
        return $2585;
    };
    const IO$end = x0 => IO$end$(x0);

    function IO$monad$(_new$2) {
        var $2586 = _new$2(IO$bind)(IO$end);
        return $2586;
    };
    const IO$monad = x0 => IO$monad$(x0);

    function IO$put_string$(_text$1) {
        var $2587 = IO$ask$("put_string", _text$1, (_skip$2 => {
            var $2588 = IO$end$(Unit$new);
            return $2588;
        }));
        return $2587;
    };
    const IO$put_string = x0 => IO$put_string$(x0);

    function IO$print$(_text$1) {
        var $2589 = IO$put_string$((_text$1 + "\u{a}"));
        return $2589;
    };
    const IO$print = x0 => IO$print$(x0);
    const Bits$e = '';
    const Bits$o = a0 => (a0 + '0');

    function Word$subber$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $2591 = self.pred;
                var $2592 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2594 = self.pred;
                            var $2595 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2597 = Word$i$(Word$subber$(_a$pred$10, $2594, Bool$true));
                                    var $2596 = $2597;
                                } else {
                                    var $2598 = Word$o$(Word$subber$(_a$pred$10, $2594, Bool$false));
                                    var $2596 = $2598;
                                };
                                return $2596;
                            });
                            var $2593 = $2595;
                            break;
                        case 'Word.i':
                            var $2599 = self.pred;
                            var $2600 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2602 = Word$o$(Word$subber$(_a$pred$10, $2599, Bool$true));
                                    var $2601 = $2602;
                                } else {
                                    var $2603 = Word$i$(Word$subber$(_a$pred$10, $2599, Bool$true));
                                    var $2601 = $2603;
                                };
                                return $2601;
                            });
                            var $2593 = $2600;
                            break;
                        case 'Word.e':
                            var $2604 = (_a$pred$8 => {
                                var $2605 = Word$e;
                                return $2605;
                            });
                            var $2593 = $2604;
                            break;
                    };
                    var $2593 = $2593($2591);
                    return $2593;
                });
                var $2590 = $2592;
                break;
            case 'Word.i':
                var $2606 = self.pred;
                var $2607 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2609 = self.pred;
                            var $2610 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2612 = Word$o$(Word$subber$(_a$pred$10, $2609, Bool$false));
                                    var $2611 = $2612;
                                } else {
                                    var $2613 = Word$i$(Word$subber$(_a$pred$10, $2609, Bool$false));
                                    var $2611 = $2613;
                                };
                                return $2611;
                            });
                            var $2608 = $2610;
                            break;
                        case 'Word.i':
                            var $2614 = self.pred;
                            var $2615 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2617 = Word$i$(Word$subber$(_a$pred$10, $2614, Bool$true));
                                    var $2616 = $2617;
                                } else {
                                    var $2618 = Word$o$(Word$subber$(_a$pred$10, $2614, Bool$false));
                                    var $2616 = $2618;
                                };
                                return $2616;
                            });
                            var $2608 = $2615;
                            break;
                        case 'Word.e':
                            var $2619 = (_a$pred$8 => {
                                var $2620 = Word$e;
                                return $2620;
                            });
                            var $2608 = $2619;
                            break;
                    };
                    var $2608 = $2608($2606);
                    return $2608;
                });
                var $2590 = $2607;
                break;
            case 'Word.e':
                var $2621 = (_b$5 => {
                    var $2622 = Word$e;
                    return $2622;
                });
                var $2590 = $2621;
                break;
        };
        var $2590 = $2590(_b$3);
        return $2590;
    };
    const Word$subber = x0 => x1 => x2 => Word$subber$(x0, x1, x2);

    function Word$sub$(_a$2, _b$3) {
        var $2623 = Word$subber$(_a$2, _b$3, Bool$false);
        return $2623;
    };
    const Word$sub = x0 => x1 => Word$sub$(x0, x1);
    const U16$sub = a0 => a1 => ((a0 - a1) & 0xFFFF);

    function Word$adder$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $2625 = self.pred;
                var $2626 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2628 = self.pred;
                            var $2629 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2631 = Word$i$(Word$adder$(_a$pred$10, $2628, Bool$false));
                                    var $2630 = $2631;
                                } else {
                                    var $2632 = Word$o$(Word$adder$(_a$pred$10, $2628, Bool$false));
                                    var $2630 = $2632;
                                };
                                return $2630;
                            });
                            var $2627 = $2629;
                            break;
                        case 'Word.i':
                            var $2633 = self.pred;
                            var $2634 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2636 = Word$o$(Word$adder$(_a$pred$10, $2633, Bool$true));
                                    var $2635 = $2636;
                                } else {
                                    var $2637 = Word$i$(Word$adder$(_a$pred$10, $2633, Bool$false));
                                    var $2635 = $2637;
                                };
                                return $2635;
                            });
                            var $2627 = $2634;
                            break;
                        case 'Word.e':
                            var $2638 = (_a$pred$8 => {
                                var $2639 = Word$e;
                                return $2639;
                            });
                            var $2627 = $2638;
                            break;
                    };
                    var $2627 = $2627($2625);
                    return $2627;
                });
                var $2624 = $2626;
                break;
            case 'Word.i':
                var $2640 = self.pred;
                var $2641 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $2643 = self.pred;
                            var $2644 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2646 = Word$o$(Word$adder$(_a$pred$10, $2643, Bool$true));
                                    var $2645 = $2646;
                                } else {
                                    var $2647 = Word$i$(Word$adder$(_a$pred$10, $2643, Bool$false));
                                    var $2645 = $2647;
                                };
                                return $2645;
                            });
                            var $2642 = $2644;
                            break;
                        case 'Word.i':
                            var $2648 = self.pred;
                            var $2649 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $2651 = Word$i$(Word$adder$(_a$pred$10, $2648, Bool$true));
                                    var $2650 = $2651;
                                } else {
                                    var $2652 = Word$o$(Word$adder$(_a$pred$10, $2648, Bool$true));
                                    var $2650 = $2652;
                                };
                                return $2650;
                            });
                            var $2642 = $2649;
                            break;
                        case 'Word.e':
                            var $2653 = (_a$pred$8 => {
                                var $2654 = Word$e;
                                return $2654;
                            });
                            var $2642 = $2653;
                            break;
                    };
                    var $2642 = $2642($2640);
                    return $2642;
                });
                var $2624 = $2641;
                break;
            case 'Word.e':
                var $2655 = (_b$5 => {
                    var $2656 = Word$e;
                    return $2656;
                });
                var $2624 = $2655;
                break;
        };
        var $2624 = $2624(_b$3);
        return $2624;
    };
    const Word$adder = x0 => x1 => x2 => Word$adder$(x0, x1, x2);

    function Word$add$(_a$2, _b$3) {
        var $2657 = Word$adder$(_a$2, _b$3, Bool$false);
        return $2657;
    };
    const Word$add = x0 => x1 => Word$add$(x0, x1);
    const U16$add = a0 => a1 => ((a0 + a1) & 0xFFFF);

    function Pair$fst$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $2659 = self.fst;
                var $2660 = $2659;
                var $2658 = $2660;
                break;
        };
        return $2658;
    };
    const Pair$fst = x0 => Pair$fst$(x0);
    const Nat$div = a0 => a1 => (a0 / a1);
    const Bits$i = a0 => (a0 + '1');

    function Litereum$serialize$fixlen$(_size$1, _value$2) {
        var self = _size$1;
        if (self === 0n) {
            var $2662 = Bits$e;
            var $2661 = $2662;
        } else {
            var $2663 = (self - 1n);
            var self = ((_value$2 % 2n) === 0n);
            if (self) {
                var $2665 = (Litereum$serialize$fixlen$($2663, (_value$2 / 2n)) + '0');
                var $2664 = $2665;
            } else {
                var $2666 = (Litereum$serialize$fixlen$($2663, (_value$2 / 2n)) + '1');
                var $2664 = $2666;
            };
            var $2661 = $2664;
        };
        return $2661;
    };
    const Litereum$serialize$fixlen = x0 => x1 => Litereum$serialize$fixlen$(x0, x1);

    function Word$fold$(_nil$3, _w0$4, _w1$5, _word$6) {
        var self = _word$6;
        switch (self._) {
            case 'Word.o':
                var $2668 = self.pred;
                var $2669 = _w0$4(Word$fold$(_nil$3, _w0$4, _w1$5, $2668));
                var $2667 = $2669;
                break;
            case 'Word.i':
                var $2670 = self.pred;
                var $2671 = _w1$5(Word$fold$(_nil$3, _w0$4, _w1$5, $2670));
                var $2667 = $2671;
                break;
            case 'Word.e':
                var $2672 = _nil$3;
                var $2667 = $2672;
                break;
        };
        return $2667;
    };
    const Word$fold = x0 => x1 => x2 => x3 => Word$fold$(x0, x1, x2, x3);

    function Word$to_nat$(_word$2) {
        var $2673 = Word$fold$(0n, a1 => (2n * a1), (_x$4 => {
            var $2674 = Nat$succ$((2n * _x$4));
            return $2674;
        }), _word$2);
        return $2673;
    };
    const Word$to_nat = x0 => Word$to_nat$(x0);
    const U16$to_nat = a0 => (BigInt(a0));
    const Bits$concat = a0 => a1 => (a1 + a0);

    function Litereum$serialize$name$(_name$1) {
        var self = _name$1;
        if (self.length === 0) {
            var $2676 = (Bits$e + '0');
            var $2675 = $2676;
        } else {
            var $2677 = self.charCodeAt(0);
            var $2678 = self.slice(1);
            var self = U16$btw$(48, $2677, 57);
            if (self) {
                var $2680 = (($2677 - 48) & 0xFFFF);
                var _numb$4 = $2680;
            } else {
                var self = U16$btw$(65, $2677, 90);
                if (self) {
                    var $2682 = (((($2677 - 65) & 0xFFFF) + 10) & 0xFFFF);
                    var $2681 = $2682;
                } else {
                    var self = U16$btw$(97, $2677, 122);
                    if (self) {
                        var $2684 = (((($2677 - 97) & 0xFFFF) + 36) & 0xFFFF);
                        var $2683 = $2684;
                    } else {
                        var self = U16$btw$(95, $2677, 95);
                        if (self) {
                            var $2686 = 62;
                            var $2685 = $2686;
                        } else {
                            var $2687 = 63;
                            var $2685 = $2687;
                        };
                        var $2683 = $2685;
                    };
                    var $2681 = $2683;
                };
                var _numb$4 = $2681;
            };
            var _head$5 = Litereum$serialize$fixlen$(6n, (BigInt(_numb$4)));
            var _tail$6 = Litereum$serialize$name$($2678);
            var $2679 = ((_tail$6 + _head$5) + '1');
            var $2675 = $2679;
        };
        return $2675;
    };
    const Litereum$serialize$name = x0 => Litereum$serialize$name$(x0);

    function Litereum$serialize$list$(_item$2, _list$3) {
        var self = _list$3;
        switch (self._) {
            case 'List.cons':
                var $2689 = self.head;
                var $2690 = self.tail;
                var $2691 = ((Litereum$serialize$list$(_item$2, $2690) + _item$2($2689)) + '1');
                var $2688 = $2691;
                break;
            case 'List.nil':
                var $2692 = (Bits$e + '0');
                var $2688 = $2692;
                break;
        };
        return $2688;
    };
    const Litereum$serialize$list = x0 => x1 => Litereum$serialize$list$(x0, x1);

    function Litereum$serialize$type$(_world$1, _typ$2) {
        var self = _typ$2;
        switch (self._) {
            case 'Litereum.Type.data':
                var $2694 = self.name;
                var $2695 = ((Litereum$serialize$name$($2694) + '0') + '1');
                var $2693 = $2695;
                break;
            case 'Litereum.Type.effe':
                var $2696 = self.rety;
                var $2697 = ((Litereum$serialize$type$(_world$1, $2696) + '1') + '0');
                var $2693 = $2697;
                break;
            case 'Litereum.Type.word':
                var $2698 = ((Bits$e + '0') + '0');
                var $2693 = $2698;
                break;
        };
        return $2693;
    };
    const Litereum$serialize$type = x0 => x1 => Litereum$serialize$type$(x0, x1);

    function Litereum$serialize$constructor$(_world$1, _ctor$2) {
        var self = _ctor$2;
        switch (self._) {
            case 'Litereum.Constructor.new':
                var $2700 = self.name;
                var $2701 = self.field_names;
                var $2702 = self.field_types;
                var _name$6 = Litereum$serialize$name$($2700);
                var _nams$7 = Litereum$serialize$list$(Litereum$serialize$name, $2701);
                var _typs$8 = Litereum$serialize$list$(Litereum$serialize$type(_world$1), $2702);
                var $2703 = ((_typs$8 + _nams$7) + _name$6);
                var $2699 = $2703;
                break;
        };
        return $2699;
    };
    const Litereum$serialize$constructor = x0 => x1 => Litereum$serialize$constructor$(x0, x1);

    function Litereum$serialize$data$(_world$1, _data$2) {
        var self = _data$2;
        switch (self._) {
            case 'Litereum.Data.new':
                var $2705 = self.name;
                var $2706 = self.constructors;
                var _name$5 = Litereum$serialize$name$($2705);
                var _ctrs$6 = Litereum$serialize$list$(Litereum$serialize$constructor(_world$1), $2706);
                var $2707 = (_ctrs$6 + _name$5);
                var $2704 = $2707;
                break;
        };
        return $2704;
    };
    const Litereum$serialize$data = x0 => x1 => Litereum$serialize$data$(x0, x1);

    function List$find_index$go$(_xs$2, _f$3, _i$4) {
        var List$find_index$go$ = (_xs$2, _f$3, _i$4) => ({
            ctr: 'TCO',
            arg: [_xs$2, _f$3, _i$4]
        });
        var List$find_index$go = _xs$2 => _f$3 => _i$4 => List$find_index$go$(_xs$2, _f$3, _i$4);
        var arg = [_xs$2, _f$3, _i$4];
        while (true) {
            let [_xs$2, _f$3, _i$4] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $2708 = self.head;
                        var $2709 = self.tail;
                        var self = _f$3($2708);
                        if (self) {
                            var $2711 = Maybe$some$(_i$4);
                            var $2710 = $2711;
                        } else {
                            var $2712 = List$find_index$go$($2709, _f$3, Nat$succ$(_i$4));
                            var $2710 = $2712;
                        };
                        return $2710;
                    case 'List.nil':
                        var $2713 = Maybe$none;
                        return $2713;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$find_index$go = x0 => x1 => x2 => List$find_index$go$(x0, x1, x2);

    function List$find_index$(_xs$2, _f$3) {
        var $2714 = List$find_index$go$(_xs$2, _f$3, Nat$zero);
        return $2714;
    };
    const List$find_index = x0 => x1 => List$find_index$(x0, x1);
    const String$eql = a0 => a1 => (a0 === a1);

    function Litereum$serialize$varlen$go$(_value$1) {
        var self = _value$1;
        if (self === 0n) {
            var $2716 = Bits$e;
            var $2715 = $2716;
        } else {
            var $2717 = (self - 1n);
            var self = (_value$1 === 1n);
            if (self) {
                var $2719 = (Bits$e + '0');
                var $2718 = $2719;
            } else {
                var self = ((_value$1 % 2n) === 0n);
                if (self) {
                    var $2721 = ((Litereum$serialize$varlen$go$((_value$1 / 2n)) + '0') + '1');
                    var $2720 = $2721;
                } else {
                    var $2722 = ((Litereum$serialize$varlen$go$((_value$1 / 2n)) + '1') + '1');
                    var $2720 = $2722;
                };
                var $2718 = $2720;
            };
            var $2715 = $2718;
        };
        return $2715;
    };
    const Litereum$serialize$varlen$go = x0 => Litereum$serialize$varlen$go$(x0);

    function Litereum$serialize$varlen$(_value$1) {
        var $2723 = Litereum$serialize$varlen$go$((_value$1 + 1n));
        return $2723;
    };
    const Litereum$serialize$varlen = x0 => Litereum$serialize$varlen$(x0);

    function Litereum$serialize$name$local$(_world$1, _vars$2, _name$3) {
        var self = List$find_index$(_vars$2, a1 => (_name$3 === a1));
        switch (self._) {
            case 'Maybe.some':
                var $2725 = self.value;
                var $2726 = Litereum$serialize$varlen$($2725);
                var $2724 = $2726;
                break;
            case 'Maybe.none':
                var $2727 = Bits$e;
                var $2724 = $2727;
                break;
        };
        return $2724;
    };
    const Litereum$serialize$name$local = x0 => x1 => x2 => Litereum$serialize$name$local$(x0, x1, x2);

    function List$map$(_f$3, _as$4) {
        var self = _as$4;
        switch (self._) {
            case 'List.cons':
                var $2729 = self.head;
                var $2730 = self.tail;
                var $2731 = List$cons$(_f$3($2729), List$map$(_f$3, $2730));
                var $2728 = $2731;
                break;
            case 'List.nil':
                var $2732 = List$nil;
                var $2728 = $2732;
                break;
        };
        return $2728;
    };
    const List$map = x0 => x1 => List$map$(x0, x1);

    function List$concat$(_as$2, _bs$3) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $2734 = self.head;
                var $2735 = self.tail;
                var $2736 = List$cons$($2734, List$concat$($2735, _bs$3));
                var $2733 = $2736;
                break;
            case 'List.nil':
                var $2737 = _bs$3;
                var $2733 = $2737;
                break;
        };
        return $2733;
    };
    const List$concat = x0 => x1 => List$concat$(x0, x1);

    function Litereum$serialize$cases$(_world$1, _vars$2, _name$3, _ctors$4, _cases$5) {
        var self = _ctors$4;
        switch (self._) {
            case 'List.cons':
                var $2739 = self.head;
                var $2740 = self.tail;
                var self = _cases$5;
                switch (self._) {
                    case 'List.cons':
                        var $2742 = self.head;
                        var $2743 = self.tail;
                        var _flds$10 = List$map$(a1 => ((_name$3 + ".") + a1), (() => {
                            var self = $2739;
                            switch (self._) {
                                case 'Litereum.Constructor.new':
                                    var $2745 = self.field_names;
                                    var $2746 = $2745;
                                    return $2746;
                            };
                        })());
                        var _head$11 = Litereum$serialize$term$(_world$1, List$concat$(List$reverse$(_flds$10), _vars$2), $2742);
                        var _tail$12 = Litereum$serialize$cases$(_world$1, _vars$2, _name$3, $2740, $2743);
                        var $2744 = (_tail$12 + _head$11);
                        var $2741 = $2744;
                        break;
                    case 'List.nil':
                        var $2747 = Bits$e;
                        var $2741 = $2747;
                        break;
                };
                var $2738 = $2741;
                break;
            case 'List.nil':
                var self = _cases$5;
                switch (self._) {
                    case 'List.nil':
                    case 'List.cons':
                        var $2749 = Bits$e;
                        var $2748 = $2749;
                        break;
                };
                var $2738 = $2748;
                break;
        };
        return $2738;
    };
    const Litereum$serialize$cases = x0 => x1 => x2 => x3 => x4 => Litereum$serialize$cases$(x0, x1, x2, x3, x4);

    function Maybe$default$(_m$2, _a$3) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $2751 = self.value;
                var $2752 = $2751;
                var $2750 = $2752;
                break;
            case 'Maybe.none':
                var $2753 = _a$3;
                var $2750 = $2753;
                break;
        };
        return $2750;
    };
    const Maybe$default = x0 => x1 => Maybe$default$(x0, x1);

    function Litereum$get_constructors$(_world$1, _name$2) {
        var self = Litereum$get_data$(_world$1, _name$2);
        switch (self._) {
            case 'Maybe.some':
                var $2755 = self.value;
                var $2756 = Maybe$some$((() => {
                    var self = $2755;
                    switch (self._) {
                        case 'Litereum.Data.new':
                            var $2757 = self.constructors;
                            var $2758 = $2757;
                            return $2758;
                    };
                })());
                var $2754 = $2756;
                break;
            case 'Maybe.none':
                var $2759 = Maybe$none;
                var $2754 = $2759;
                break;
        };
        return $2754;
    };
    const Litereum$get_constructors = x0 => x1 => Litereum$get_constructors$(x0, x1);
    const U64$to_nat = a0 => (a0);

    function Litereum$serialize$term$(_world$1, _vars$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Litereum.Term.var':
                var $2761 = self.name;
                var $2762 = (Litereum$serialize$name$local$(_world$1, _vars$2, $2761) + '0');
                var $2760 = $2762;
                break;
            case 'Litereum.Term.call':
                var $2763 = self.bond;
                var $2764 = self.args;
                var _bond$6 = Litereum$serialize$name$($2763);
                var _args$7 = Litereum$serialize$list$(Litereum$serialize$term(_world$1)(_vars$2), $2764);
                var $2765 = (((((_args$7 + _bond$6) + '0') + '0') + '1') + '1');
                var $2760 = $2765;
                break;
            case 'Litereum.Term.let':
                var $2766 = self.name;
                var $2767 = self.type;
                var $2768 = self.expr;
                var $2769 = self.body;
                var _name$8 = Litereum$serialize$name$($2766);
                var _type$9 = Litereum$serialize$type$(_world$1, $2767);
                var _expr$10 = Litereum$serialize$term$(_world$1, _vars$2, $2768);
                var _body$11 = Litereum$serialize$term$(_world$1, List$cons$($2766, _vars$2), $2769);
                var $2770 = (((((((_body$11 + _expr$10) + _type$9) + _name$8) + '0') + '0') + '0') + '1');
                var $2760 = $2770;
                break;
            case 'Litereum.Term.create':
                var $2771 = self.ctor;
                var $2772 = self.vals;
                var _ctor$6 = Litereum$serialize$name$($2771);
                var _vals$7 = Litereum$serialize$list$(Litereum$serialize$term(_world$1)(_vars$2), $2772);
                var $2773 = (((((_vals$7 + _ctor$6) + '0') + '1') + '0') + '1');
                var $2760 = $2773;
                break;
            case 'Litereum.Term.match':
                var $2774 = self.name;
                var $2775 = self.data;
                var $2776 = self.cses;
                var _name$7 = Litereum$serialize$name$local$(_world$1, _vars$2, $2774);
                var _data$8 = Litereum$serialize$name$($2775);
                var _cses$9 = Litereum$serialize$cases$(_world$1, _vars$2, $2774, Maybe$default$(Litereum$get_constructors$(_world$1, $2775), List$nil), $2776);
                var $2777 = ((((((_cses$9 + _data$8) + _name$7) + '0') + '1') + '1') + '1');
                var $2760 = $2777;
                break;
            case 'Litereum.Term.word':
                var $2778 = self.numb;
                var _numb$5 = Litereum$serialize$fixlen$(64n, ($2778));
                var $2779 = ((((_numb$5 + '1') + '0') + '0') + '1');
                var $2760 = $2779;
                break;
            case 'Litereum.Term.compare':
                var $2780 = self.val0;
                var $2781 = self.val1;
                var $2782 = self.iflt;
                var $2783 = self.ifeq;
                var $2784 = self.ifgt;
                var _val0$9 = Litereum$serialize$term$(_world$1, _vars$2, $2780);
                var _val1$10 = Litereum$serialize$term$(_world$1, _vars$2, $2781);
                var _iflt$11 = Litereum$serialize$term$(_world$1, _vars$2, $2782);
                var _ifeq$12 = Litereum$serialize$term$(_world$1, _vars$2, $2783);
                var _ifgt$13 = Litereum$serialize$term$(_world$1, _vars$2, $2784);
                var $2785 = ((((((((_ifgt$13 + _ifeq$12) + _iflt$11) + _val1$10) + _val0$9) + '1') + '0') + '1') + '1');
                var $2760 = $2785;
                break;
            case 'Litereum.Term.operate':
                var $2786 = self.oper;
                var $2787 = self.val0;
                var $2788 = self.val1;
                var _oper$7 = Litereum$serialize$fixlen$(3n, (() => {
                    var self = $2786;
                    switch (self._) {
                        case 'Litereum.Operation.add':
                            var $2790 = 0n;
                            return $2790;
                        case 'Litereum.Operation.sub':
                            var $2791 = 1n;
                            return $2791;
                        case 'Litereum.Operation.mul':
                            var $2792 = 2n;
                            return $2792;
                        case 'Litereum.Operation.div':
                            var $2793 = 3n;
                            return $2793;
                        case 'Litereum.Operation.mod':
                            var $2794 = 4n;
                            return $2794;
                        case 'Litereum.Operation.or':
                            var $2795 = 5n;
                            return $2795;
                        case 'Litereum.Operation.and':
                            var $2796 = 6n;
                            return $2796;
                        case 'Litereum.Operation.xor':
                            var $2797 = 7n;
                            return $2797;
                    };
                })());
                var _val0$8 = Litereum$serialize$term$(_world$1, _vars$2, $2787);
                var _val1$9 = Litereum$serialize$term$(_world$1, _vars$2, $2788);
                var $2789 = ((((((_val1$9 + _val0$8) + _oper$7) + '1') + '1') + '0') + '1');
                var $2760 = $2789;
                break;
            case 'Litereum.Term.set':
                var $2798 = self.file;
                var $2799 = self.expr;
                var $2800 = self.body;
                var _slit$7 = Litereum$serialize$name$($2798);
                var _expr$8 = Litereum$serialize$term$(_world$1, _vars$2, $2799);
                var _body$9 = Litereum$serialize$term$(_world$1, _vars$2, $2800);
                var $2801 = ((((((((_body$9 + _expr$8) + _slit$7) + '0') + '0') + '1') + '1') + '1') + '1');
                var $2760 = $2801;
                break;
            case 'Litereum.Term.get':
                var $2802 = self.name;
                var $2803 = self.file;
                var $2804 = self.body;
                var _slit$7 = Litereum$serialize$name$($2803);
                var _name$8 = Litereum$serialize$name$($2802);
                var _body$9 = Litereum$serialize$term$(_world$1, List$cons$($2802, _vars$2), $2804);
                var $2805 = ((((((((_body$9 + _name$8) + _slit$7) + '0') + '1') + '1') + '1') + '1') + '1');
                var $2760 = $2805;
                break;
            case 'Litereum.Term.bind':
                var $2806 = self.name;
                var $2807 = self.type;
                var $2808 = self.expr;
                var $2809 = self.body;
                var _name$8 = Litereum$serialize$name$($2806);
                var _type$9 = Litereum$serialize$type$(_world$1, $2807);
                var _expr$10 = Litereum$serialize$term$(_world$1, _vars$2, $2808);
                var _body$11 = Litereum$serialize$term$(_world$1, List$cons$($2806, _vars$2), $2809);
                var $2810 = (((((((((_body$11 + _expr$10) + _type$9) + _name$8) + '1') + '0') + '1') + '1') + '1') + '1');
                var $2760 = $2810;
                break;
            case 'Litereum.Term.return':
                var $2811 = self.expr;
                var _expr$5 = Litereum$serialize$term$(_world$1, _vars$2, $2811);
                var $2812 = ((((((_expr$5 + '1') + '1') + '1') + '1') + '1') + '1');
                var $2760 = $2812;
                break;
        };
        return $2760;
    };
    const Litereum$serialize$term = x0 => x1 => x2 => Litereum$serialize$term$(x0, x1, x2);

    function Litereum$serialize$bond$(_world$1, _bond$2) {
        var self = _bond$2;
        switch (self._) {
            case 'Litereum.Bond.new':
                var $2814 = self.name;
                var $2815 = self.input_names;
                var $2816 = self.input_types;
                var $2817 = self.output_type;
                var $2818 = self.main;
                var _name$8 = Litereum$serialize$name$($2814);
                var _input_names$9 = Litereum$serialize$list$(Litereum$serialize$name, $2815);
                var _input_types$10 = Litereum$serialize$list$(Litereum$serialize$type(_world$1), $2816);
                var _output_type$11 = Litereum$serialize$type$(_world$1, $2817);
                var _main$12 = Litereum$serialize$term$(_world$1, List$reverse$($2815), $2818);
                var $2819 = ((((_main$12 + _output_type$11) + _input_types$10) + _input_names$9) + _name$8);
                var $2813 = $2819;
                break;
        };
        return $2813;
    };
    const Litereum$serialize$bond = x0 => x1 => Litereum$serialize$bond$(x0, x1);

    function Litereum$serialize$file$(_world$1, _file$2) {
        var self = _file$2;
        switch (self._) {
            case 'Litereum.File.new':
                var $2821 = self.name;
                var $2822 = self.ownr;
                var $2823 = self.type;
                var $2824 = self.expr;
                var _name$7 = Litereum$serialize$name$($2821);
                var _ownr$8 = Litereum$serialize$list$(Litereum$serialize$name, $2822);
                var _type$9 = Litereum$serialize$type$(_world$1, $2823);
                var _expr$10 = Litereum$serialize$term$(_world$1, List$nil, $2824);
                var $2825 = (((_expr$10 + _type$9) + _ownr$8) + _name$7);
                var $2820 = $2825;
                break;
        };
        return $2820;
    };
    const Litereum$serialize$file = x0 => x1 => Litereum$serialize$file$(x0, x1);

    function Litereum$serialize$eval$(_world$1, _eval$2) {
        var self = _eval$2;
        switch (self._) {
            case 'Litereum.Eval.new':
                var $2827 = self.term;
                var $2828 = self.type;
                var _term$5 = Litereum$serialize$term$(_world$1, List$nil, $2827);
                var _type$6 = Litereum$serialize$type$(_world$1, $2828);
                var $2829 = (_type$6 + _term$5);
                var $2826 = $2829;
                break;
        };
        return $2826;
    };
    const Litereum$serialize$eval = x0 => x1 => Litereum$serialize$eval$(x0, x1);

    function Litereum$serialize$transaction$(_world$1, _transaction$2) {
        var self = _transaction$2;
        switch (self._) {
            case 'Litereum.Transaction.new_data':
                var $2831 = self.data;
                var _data$4 = Litereum$serialize$data$(_world$1, $2831);
                var $2832 = ((_data$4 + '0') + '0');
                var $2830 = $2832;
                break;
            case 'Litereum.Transaction.new_bond':
                var $2833 = self.bond;
                var _bond$4 = Litereum$serialize$bond$(_world$1, $2833);
                var $2834 = ((_bond$4 + '0') + '1');
                var $2830 = $2834;
                break;
            case 'Litereum.Transaction.new_file':
                var $2835 = self.file;
                var _file$4 = Litereum$serialize$file$(_world$1, $2835);
                var $2836 = ((_file$4 + '1') + '0');
                var $2830 = $2836;
                break;
            case 'Litereum.Transaction.new_eval':
                var $2837 = self.eval;
                var _term$4 = Litereum$serialize$eval$(_world$1, $2837);
                var $2838 = ((_term$4 + '1') + '1');
                var $2830 = $2838;
                break;
        };
        return $2830;
    };
    const Litereum$serialize$transaction = x0 => x1 => Litereum$serialize$transaction$(x0, x1);

    function Litereum$serialize$block$(_world$1, _block$2) {
        var self = _block$2;
        switch (self._) {
            case 'List.cons':
                var $2840 = self.head;
                var $2841 = self.tail;
                var _head$5 = Litereum$serialize$transaction$(_world$1, $2840);
                var _tail$6 = Litereum$serialize$block$(_world$1, $2841);
                var $2842 = (_tail$6 + _head$5);
                var $2839 = $2842;
                break;
            case 'List.nil':
                var $2843 = Bits$e;
                var $2839 = $2843;
                break;
        };
        return $2839;
    };
    const Litereum$serialize$block = x0 => x1 => Litereum$serialize$block$(x0, x1);

    function Bits$is_empty$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'e':
                var $2845 = Bool$true;
                var $2844 = $2845;
                break;
            case 'o':
            case 'i':
                var $2846 = Bool$false;
                var $2844 = $2846;
                break;
        };
        return $2844;
    };
    const Bits$is_empty = x0 => Bits$is_empty$(x0);

    function Litereum$deserialize$fixlen$(_size$1, _bits$2) {
        var self = _size$1;
        if (self === 0n) {
            var $2848 = Pair$new$(_bits$2, 0n);
            var $2847 = $2848;
        } else {
            var $2849 = (self - 1n);
            var self = _bits$2;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $2851 = self.slice(0, -1);
                    var self = Litereum$deserialize$fixlen$($2849, $2851);
                    switch (self._) {
                        case 'Pair.new':
                            var $2853 = self.fst;
                            var $2854 = self.snd;
                            var $2855 = Pair$new$($2853, ($2854 * 2n));
                            var $2852 = $2855;
                            break;
                    };
                    var $2850 = $2852;
                    break;
                case 'i':
                    var $2856 = self.slice(0, -1);
                    var self = Litereum$deserialize$fixlen$($2849, $2856);
                    switch (self._) {
                        case 'Pair.new':
                            var $2858 = self.fst;
                            var $2859 = self.snd;
                            var $2860 = Pair$new$($2858, (($2859 * 2n) + 1n));
                            var $2857 = $2860;
                            break;
                    };
                    var $2850 = $2857;
                    break;
                case 'e':
                    var $2861 = Pair$new$(Bits$e, 0n);
                    var $2850 = $2861;
                    break;
            };
            var $2847 = $2850;
        };
        return $2847;
    };
    const Litereum$deserialize$fixlen = x0 => x1 => Litereum$deserialize$fixlen$(x0, x1);
    const U16$from_nat = a0 => (Number(a0) & 0xFFFF);

    function Litereum$deserialize$name$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2863 = self.slice(0, -1);
                var $2864 = Pair$new$($2863, "");
                var $2862 = $2864;
                break;
            case 'i':
                var $2865 = self.slice(0, -1);
                var self = Litereum$deserialize$fixlen$(6n, $2865);
                switch (self._) {
                    case 'Pair.new':
                        var $2867 = self.fst;
                        var $2868 = self.snd;
                        var self = Litereum$deserialize$name$($2867);
                        switch (self._) {
                            case 'Pair.new':
                                var $2870 = self.fst;
                                var $2871 = self.snd;
                                var _numb$7 = (Number($2868) & 0xFFFF);
                                var self = U16$btw$(0, _numb$7, 9);
                                if (self) {
                                    var $2873 = ((_numb$7 + 48) & 0xFFFF);
                                    var _head$8 = $2873;
                                } else {
                                    var self = U16$btw$(10, _numb$7, 35);
                                    if (self) {
                                        var $2875 = ((((_numb$7 - 10) & 0xFFFF) + 65) & 0xFFFF);
                                        var $2874 = $2875;
                                    } else {
                                        var self = U16$btw$(36, _numb$7, 61);
                                        if (self) {
                                            var $2877 = ((((_numb$7 - 36) & 0xFFFF) + 97) & 0xFFFF);
                                            var $2876 = $2877;
                                        } else {
                                            var self = U16$btw$(62, _numb$7, 62);
                                            if (self) {
                                                var $2879 = 95;
                                                var $2878 = $2879;
                                            } else {
                                                var $2880 = 46;
                                                var $2878 = $2880;
                                            };
                                            var $2876 = $2878;
                                        };
                                        var $2874 = $2876;
                                    };
                                    var _head$8 = $2874;
                                };
                                var $2872 = Pair$new$($2870, String$cons$(_head$8, $2871));
                                var $2869 = $2872;
                                break;
                        };
                        var $2866 = $2869;
                        break;
                };
                var $2862 = $2866;
                break;
            case 'e':
                var $2881 = Pair$new$(Bits$e, "");
                var $2862 = $2881;
                break;
        };
        return $2862;
    };
    const Litereum$deserialize$name = x0 => Litereum$deserialize$name$(x0);

    function Litereum$deserialize$list$(_item$2, _bits$3) {
        var self = _bits$3;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2883 = self.slice(0, -1);
                var $2884 = Pair$new$($2883, List$nil);
                var $2882 = $2884;
                break;
            case 'i':
                var $2885 = self.slice(0, -1);
                var self = _item$2($2885);
                switch (self._) {
                    case 'Pair.new':
                        var $2887 = self.fst;
                        var $2888 = self.snd;
                        var self = Litereum$deserialize$list$(_item$2, $2887);
                        switch (self._) {
                            case 'Pair.new':
                                var $2890 = self.fst;
                                var $2891 = self.snd;
                                var $2892 = Pair$new$($2890, List$cons$($2888, $2891));
                                var $2889 = $2892;
                                break;
                        };
                        var $2886 = $2889;
                        break;
                };
                var $2882 = $2886;
                break;
            case 'e':
                var $2893 = Pair$new$(Bits$e, List$nil);
                var $2882 = $2893;
                break;
        };
        return $2882;
    };
    const Litereum$deserialize$list = x0 => x1 => Litereum$deserialize$list$(x0, x1);

    function Litereum$deserialize$type$(_world$1, _bits$2) {
        var self = Litereum$deserialize$fixlen$(2n, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $2895 = self.fst;
                var $2896 = self.snd;
                var self = ($2896 === 0n);
                if (self) {
                    var $2898 = Pair$new$($2895, Litereum$Type$word);
                    var $2897 = $2898;
                } else {
                    var self = ($2896 === 1n);
                    if (self) {
                        var self = Litereum$deserialize$name$($2895);
                        switch (self._) {
                            case 'Pair.new':
                                var $2901 = self.fst;
                                var $2902 = self.snd;
                                var $2903 = Pair$new$($2901, Litereum$Type$data$($2902));
                                var $2900 = $2903;
                                break;
                        };
                        var $2899 = $2900;
                    } else {
                        var self = ($2896 === 2n);
                        if (self) {
                            var self = Litereum$deserialize$type$(_world$1, $2895);
                            switch (self._) {
                                case 'Pair.new':
                                    var $2906 = self.fst;
                                    var $2907 = self.snd;
                                    var $2908 = Pair$new$($2906, Litereum$Type$effe$($2907));
                                    var $2905 = $2908;
                                    break;
                            };
                            var $2904 = $2905;
                        } else {
                            var $2909 = Pair$new$($2895, Litereum$Type$word);
                            var $2904 = $2909;
                        };
                        var $2899 = $2904;
                    };
                    var $2897 = $2899;
                };
                var $2894 = $2897;
                break;
        };
        return $2894;
    };
    const Litereum$deserialize$type = x0 => x1 => Litereum$deserialize$type$(x0, x1);

    function Litereum$deserialize$constructor$(_world$1, _bits$2) {
        var self = Litereum$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $2911 = self.fst;
                var $2912 = self.snd;
                var self = Litereum$deserialize$list$(Litereum$deserialize$name, $2911);
                switch (self._) {
                    case 'Pair.new':
                        var $2914 = self.fst;
                        var $2915 = self.snd;
                        var self = Litereum$deserialize$list$(Litereum$deserialize$type(_world$1), $2914);
                        switch (self._) {
                            case 'Pair.new':
                                var $2917 = self.fst;
                                var $2918 = self.snd;
                                var $2919 = Pair$new$($2917, Litereum$Constructor$new$($2912, $2915, $2918));
                                var $2916 = $2919;
                                break;
                        };
                        var $2913 = $2916;
                        break;
                };
                var $2910 = $2913;
                break;
        };
        return $2910;
    };
    const Litereum$deserialize$constructor = x0 => x1 => Litereum$deserialize$constructor$(x0, x1);

    function Litereum$deserialize$data$(_world$1, _bits$2) {
        var self = Litereum$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $2921 = self.fst;
                var $2922 = self.snd;
                var self = Litereum$deserialize$list$(Litereum$deserialize$constructor(_world$1), $2921);
                switch (self._) {
                    case 'Pair.new':
                        var $2924 = self.fst;
                        var $2925 = self.snd;
                        var $2926 = Pair$new$($2924, Litereum$Data$new$($2922, $2925));
                        var $2923 = $2926;
                        break;
                };
                var $2920 = $2923;
                break;
        };
        return $2920;
    };
    const Litereum$deserialize$data = x0 => x1 => Litereum$deserialize$data$(x0, x1);
    const U64$from_nat = a0 => (a0 & 0xFFFFFFFFFFFFFFFFn);

    function Litereum$deserialize$varlen$go$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2928 = self.slice(0, -1);
                var $2929 = Pair$new$($2928, 1n);
                var $2927 = $2929;
                break;
            case 'i':
                var $2930 = self.slice(0, -1);
                var self = $2930;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $2932 = self.slice(0, -1);
                        var self = Litereum$deserialize$varlen$go$($2932);
                        switch (self._) {
                            case 'Pair.new':
                                var $2934 = self.fst;
                                var $2935 = self.snd;
                                var $2936 = Pair$new$($2934, ($2935 * 2n));
                                var $2933 = $2936;
                                break;
                        };
                        var $2931 = $2933;
                        break;
                    case 'i':
                        var $2937 = self.slice(0, -1);
                        var self = Litereum$deserialize$varlen$go$($2937);
                        switch (self._) {
                            case 'Pair.new':
                                var $2939 = self.fst;
                                var $2940 = self.snd;
                                var $2941 = Pair$new$($2939, (($2940 * 2n) + 1n));
                                var $2938 = $2941;
                                break;
                        };
                        var $2931 = $2938;
                        break;
                    case 'e':
                        var $2942 = Pair$new$($2930, 0n);
                        var $2931 = $2942;
                        break;
                };
                var $2927 = $2931;
                break;
            case 'e':
                var $2943 = Pair$new$(Bits$e, 0n);
                var $2927 = $2943;
                break;
        };
        return $2927;
    };
    const Litereum$deserialize$varlen$go = x0 => Litereum$deserialize$varlen$go$(x0);
    const Nat$sub = a0 => a1 => (a0 - a1 <= 0n ? 0n : a0 - a1);

    function Litereum$deserialize$varlen$(_bits$1) {
        var self = Litereum$deserialize$varlen$go$(_bits$1);
        switch (self._) {
            case 'Pair.new':
                var $2945 = self.fst;
                var $2946 = self.snd;
                var $2947 = Pair$new$($2945, ($2946 - 1n <= 0n ? 0n : $2946 - 1n));
                var $2944 = $2947;
                break;
        };
        return $2944;
    };
    const Litereum$deserialize$varlen = x0 => Litereum$deserialize$varlen$(x0);

    function List$get$(_index$2, _list$3) {
        var List$get$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$get = _index$2 => _list$3 => List$get$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $2948 = self.head;
                        var $2949 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $2951 = Maybe$some$($2948);
                            var $2950 = $2951;
                        } else {
                            var $2952 = (self - 1n);
                            var $2953 = List$get$($2952, $2949);
                            var $2950 = $2953;
                        };
                        return $2950;
                    case 'List.nil':
                        var $2954 = Maybe$none;
                        return $2954;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$get = x0 => x1 => List$get$(x0, x1);

    function Litereum$deserialize$name$local$(_world$1, _vars$2, _bits$3) {
        var self = Litereum$deserialize$varlen$(_bits$3);
        switch (self._) {
            case 'Pair.new':
                var $2956 = self.fst;
                var $2957 = self.snd;
                var $2958 = Pair$new$($2956, Maybe$default$(List$get$($2957, _vars$2), ""));
                var $2955 = $2958;
                break;
        };
        return $2955;
    };
    const Litereum$deserialize$name$local = x0 => x1 => x2 => Litereum$deserialize$name$local$(x0, x1, x2);

    function Litereum$deserialize$cases$(_world$1, _vars$2, _name$3, _ctors$4, _bits$5) {
        var self = _ctors$4;
        switch (self._) {
            case 'List.cons':
                var $2960 = self.head;
                var $2961 = self.tail;
                var _flds$8 = List$map$(a1 => ((_name$3 + ".") + a1), (() => {
                    var self = $2960;
                    switch (self._) {
                        case 'Litereum.Constructor.new':
                            var $2963 = self.field_names;
                            var $2964 = $2963;
                            return $2964;
                    };
                })());
                var self = Litereum$deserialize$term$(_world$1, List$concat$(List$reverse$(_flds$8), _vars$2), _bits$5);
                switch (self._) {
                    case 'Pair.new':
                        var $2965 = self.fst;
                        var $2966 = self.snd;
                        var self = Litereum$deserialize$cases$(_world$1, _vars$2, _name$3, $2961, $2965);
                        switch (self._) {
                            case 'Pair.new':
                                var $2968 = self.fst;
                                var $2969 = self.snd;
                                var $2970 = Pair$new$($2968, List$cons$($2966, $2969));
                                var $2967 = $2970;
                                break;
                        };
                        var $2962 = $2967;
                        break;
                };
                var $2959 = $2962;
                break;
            case 'List.nil':
                var $2971 = Pair$new$(_bits$5, List$nil);
                var $2959 = $2971;
                break;
        };
        return $2959;
    };
    const Litereum$deserialize$cases = x0 => x1 => x2 => x3 => x4 => Litereum$deserialize$cases$(x0, x1, x2, x3, x4);

    function Litereum$deserialize$term$(_world$1, _vars$2, _bits$3) {
        var self = _bits$3;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $2973 = self.slice(0, -1);
                var self = Litereum$deserialize$name$local$(_world$1, _vars$2, $2973);
                switch (self._) {
                    case 'Pair.new':
                        var $2975 = self.fst;
                        var $2976 = self.snd;
                        var $2977 = Pair$new$($2975, Litereum$Term$var$($2976));
                        var $2974 = $2977;
                        break;
                };
                var $2972 = $2974;
                break;
            case 'i':
                var $2978 = self.slice(0, -1);
                var self = Litereum$deserialize$fixlen$(3n, $2978);
                switch (self._) {
                    case 'Pair.new':
                        var $2980 = self.fst;
                        var $2981 = self.snd;
                        var self = ($2981 === 0n);
                        if (self) {
                            var self = Litereum$deserialize$name$($2980);
                            switch (self._) {
                                case 'Pair.new':
                                    var $2984 = self.fst;
                                    var $2985 = self.snd;
                                    var self = Litereum$deserialize$type$(_world$1, $2984);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $2987 = self.fst;
                                            var $2988 = self.snd;
                                            var self = Litereum$deserialize$term$(_world$1, _vars$2, $2987);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $2990 = self.fst;
                                                    var $2991 = self.snd;
                                                    var self = Litereum$deserialize$term$(_world$1, List$cons$($2985, _vars$2), $2990);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $2993 = self.fst;
                                                            var $2994 = self.snd;
                                                            var $2995 = Pair$new$($2993, Litereum$Term$let$($2985, $2988, $2991, $2994));
                                                            var $2992 = $2995;
                                                            break;
                                                    };
                                                    var $2989 = $2992;
                                                    break;
                                            };
                                            var $2986 = $2989;
                                            break;
                                    };
                                    var $2983 = $2986;
                                    break;
                            };
                            var $2982 = $2983;
                        } else {
                            var self = ($2981 === 1n);
                            if (self) {
                                var self = Litereum$deserialize$name$($2980);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $2998 = self.fst;
                                        var $2999 = self.snd;
                                        var self = Litereum$deserialize$list$(Litereum$deserialize$term(_world$1)(_vars$2), $2998);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3001 = self.fst;
                                                var $3002 = self.snd;
                                                var $3003 = Pair$new$($3001, Litereum$Term$call$($2999, $3002));
                                                var $3000 = $3003;
                                                break;
                                        };
                                        var $2997 = $3000;
                                        break;
                                };
                                var $2996 = $2997;
                            } else {
                                var self = ($2981 === 2n);
                                if (self) {
                                    var self = Litereum$deserialize$name$($2980);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $3006 = self.fst;
                                            var $3007 = self.snd;
                                            var self = Litereum$deserialize$list$(Litereum$deserialize$term(_world$1)(_vars$2), $3006);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3009 = self.fst;
                                                    var $3010 = self.snd;
                                                    var $3011 = Pair$new$($3009, Litereum$Term$create$($3007, $3010));
                                                    var $3008 = $3011;
                                                    break;
                                            };
                                            var $3005 = $3008;
                                            break;
                                    };
                                    var $3004 = $3005;
                                } else {
                                    var self = ($2981 === 3n);
                                    if (self) {
                                        var self = Litereum$deserialize$name$local$(_world$1, _vars$2, $2980);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3014 = self.fst;
                                                var $3015 = self.snd;
                                                var self = Litereum$deserialize$name$($3014);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3017 = self.fst;
                                                        var $3018 = self.snd;
                                                        var self = Litereum$deserialize$cases$(_world$1, _vars$2, $3015, Maybe$default$(Litereum$get_constructors$(_world$1, $3018), List$nil), $3017);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3020 = self.fst;
                                                                var $3021 = self.snd;
                                                                var $3022 = Pair$new$($3020, Litereum$Term$match$($3015, $3018, $3021));
                                                                var $3019 = $3022;
                                                                break;
                                                        };
                                                        var $3016 = $3019;
                                                        break;
                                                };
                                                var $3013 = $3016;
                                                break;
                                        };
                                        var $3012 = $3013;
                                    } else {
                                        var self = ($2981 === 4n);
                                        if (self) {
                                            var self = Litereum$deserialize$fixlen$(64n, $2980);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $3025 = self.fst;
                                                    var $3026 = self.snd;
                                                    var $3027 = Pair$new$($3025, Litereum$Term$word$(($3026 & 0xFFFFFFFFFFFFFFFFn)));
                                                    var $3024 = $3027;
                                                    break;
                                            };
                                            var $3023 = $3024;
                                        } else {
                                            var self = ($2981 === 5n);
                                            if (self) {
                                                var self = Litereum$deserialize$term$(_world$1, _vars$2, $2980);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3030 = self.fst;
                                                        var $3031 = self.snd;
                                                        var self = Litereum$deserialize$term$(_world$1, _vars$2, $3030);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3033 = self.fst;
                                                                var $3034 = self.snd;
                                                                var self = Litereum$deserialize$term$(_world$1, _vars$2, $3033);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $3036 = self.fst;
                                                                        var $3037 = self.snd;
                                                                        var self = Litereum$deserialize$term$(_world$1, _vars$2, $3036);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3039 = self.fst;
                                                                                var $3040 = self.snd;
                                                                                var self = Litereum$deserialize$term$(_world$1, _vars$2, $3039);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3042 = self.fst;
                                                                                        var $3043 = self.snd;
                                                                                        var $3044 = Pair$new$($3042, Litereum$Term$compare$($3031, $3034, $3037, $3040, $3043));
                                                                                        var $3041 = $3044;
                                                                                        break;
                                                                                };
                                                                                var $3038 = $3041;
                                                                                break;
                                                                        };
                                                                        var $3035 = $3038;
                                                                        break;
                                                                };
                                                                var $3032 = $3035;
                                                                break;
                                                        };
                                                        var $3029 = $3032;
                                                        break;
                                                };
                                                var $3028 = $3029;
                                            } else {
                                                var self = ($2981 === 6n);
                                                if (self) {
                                                    var self = Litereum$deserialize$fixlen$(3n, $2980);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $3047 = self.fst;
                                                            var $3048 = self.snd;
                                                            var self = Litereum$deserialize$term$(_world$1, _vars$2, $3047);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $3050 = self.fst;
                                                                    var $3051 = self.snd;
                                                                    var self = Litereum$deserialize$term$(_world$1, _vars$2, $3050);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $3053 = self.fst;
                                                                            var $3054 = self.snd;
                                                                            var self = ($3048 === 0n);
                                                                            if (self) {
                                                                                var $3056 = Litereum$Operation$add;
                                                                                var _oper$13 = $3056;
                                                                            } else {
                                                                                var self = ($3048 === 1n);
                                                                                if (self) {
                                                                                    var $3058 = Litereum$Operation$sub;
                                                                                    var $3057 = $3058;
                                                                                } else {
                                                                                    var self = ($3048 === 2n);
                                                                                    if (self) {
                                                                                        var $3060 = Litereum$Operation$mul;
                                                                                        var $3059 = $3060;
                                                                                    } else {
                                                                                        var self = ($3048 === 3n);
                                                                                        if (self) {
                                                                                            var $3062 = Litereum$Operation$div;
                                                                                            var $3061 = $3062;
                                                                                        } else {
                                                                                            var self = ($3048 === 4n);
                                                                                            if (self) {
                                                                                                var $3064 = Litereum$Operation$mod;
                                                                                                var $3063 = $3064;
                                                                                            } else {
                                                                                                var self = ($3048 === 5n);
                                                                                                if (self) {
                                                                                                    var $3066 = Litereum$Operation$or;
                                                                                                    var $3065 = $3066;
                                                                                                } else {
                                                                                                    var self = ($3048 === 6n);
                                                                                                    if (self) {
                                                                                                        var $3068 = Litereum$Operation$and;
                                                                                                        var $3067 = $3068;
                                                                                                    } else {
                                                                                                        var self = ($3048 === 7n);
                                                                                                        if (self) {
                                                                                                            var $3070 = Litereum$Operation$xor;
                                                                                                            var $3069 = $3070;
                                                                                                        } else {
                                                                                                            var $3071 = Litereum$Operation$add;
                                                                                                            var $3069 = $3071;
                                                                                                        };
                                                                                                        var $3067 = $3069;
                                                                                                    };
                                                                                                    var $3065 = $3067;
                                                                                                };
                                                                                                var $3063 = $3065;
                                                                                            };
                                                                                            var $3061 = $3063;
                                                                                        };
                                                                                        var $3059 = $3061;
                                                                                    };
                                                                                    var $3057 = $3059;
                                                                                };
                                                                                var _oper$13 = $3057;
                                                                            };
                                                                            var $3055 = Pair$new$($3053, Litereum$Term$operate$(_oper$13, $3051, $3054));
                                                                            var $3052 = $3055;
                                                                            break;
                                                                    };
                                                                    var $3049 = $3052;
                                                                    break;
                                                            };
                                                            var $3046 = $3049;
                                                            break;
                                                    };
                                                    var $3045 = $3046;
                                                } else {
                                                    var self = ($2981 === 7n);
                                                    if (self) {
                                                        var self = Litereum$deserialize$fixlen$(2n, $2980);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3074 = self.fst;
                                                                var $3075 = self.snd;
                                                                var self = ($3075 === 0n);
                                                                if (self) {
                                                                    var self = Litereum$deserialize$name$($3074);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $3078 = self.fst;
                                                                            var $3079 = self.snd;
                                                                            var self = Litereum$deserialize$term$(_world$1, _vars$2, $3078);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $3081 = self.fst;
                                                                                    var $3082 = self.snd;
                                                                                    var self = Litereum$deserialize$term$(_world$1, _vars$2, $3081);
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $3084 = self.fst;
                                                                                            var $3085 = self.snd;
                                                                                            var $3086 = Pair$new$($3084, Litereum$Term$set$($3079, $3082, $3085));
                                                                                            var $3083 = $3086;
                                                                                            break;
                                                                                    };
                                                                                    var $3080 = $3083;
                                                                                    break;
                                                                            };
                                                                            var $3077 = $3080;
                                                                            break;
                                                                    };
                                                                    var $3076 = $3077;
                                                                } else {
                                                                    var self = ($3075 === 1n);
                                                                    if (self) {
                                                                        var self = Litereum$deserialize$name$($3074);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $3089 = self.fst;
                                                                                var $3090 = self.snd;
                                                                                var self = Litereum$deserialize$name$($3089);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3092 = self.fst;
                                                                                        var $3093 = self.snd;
                                                                                        var self = Litereum$deserialize$term$(_world$1, List$cons$($3093, _vars$2), $3092);
                                                                                        switch (self._) {
                                                                                            case 'Pair.new':
                                                                                                var $3095 = self.fst;
                                                                                                var $3096 = self.snd;
                                                                                                var $3097 = Pair$new$($3095, Litereum$Term$get$($3093, $3090, $3096));
                                                                                                var $3094 = $3097;
                                                                                                break;
                                                                                        };
                                                                                        var $3091 = $3094;
                                                                                        break;
                                                                                };
                                                                                var $3088 = $3091;
                                                                                break;
                                                                        };
                                                                        var $3087 = $3088;
                                                                    } else {
                                                                        var self = ($3075 === 2n);
                                                                        if (self) {
                                                                            var self = Litereum$deserialize$name$($3074);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $3100 = self.fst;
                                                                                    var $3101 = self.snd;
                                                                                    var self = Litereum$deserialize$type$(_world$1, $3100);
                                                                                    switch (self._) {
                                                                                        case 'Pair.new':
                                                                                            var $3103 = self.fst;
                                                                                            var $3104 = self.snd;
                                                                                            var self = Litereum$deserialize$term$(_world$1, _vars$2, $3103);
                                                                                            switch (self._) {
                                                                                                case 'Pair.new':
                                                                                                    var $3106 = self.fst;
                                                                                                    var $3107 = self.snd;
                                                                                                    var self = Litereum$deserialize$term$(_world$1, List$cons$($3101, _vars$2), $3106);
                                                                                                    switch (self._) {
                                                                                                        case 'Pair.new':
                                                                                                            var $3109 = self.fst;
                                                                                                            var $3110 = self.snd;
                                                                                                            var $3111 = Pair$new$($3109, Litereum$Term$bind$($3101, $3104, $3107, $3110));
                                                                                                            var $3108 = $3111;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3105 = $3108;
                                                                                                    break;
                                                                                            };
                                                                                            var $3102 = $3105;
                                                                                            break;
                                                                                    };
                                                                                    var $3099 = $3102;
                                                                                    break;
                                                                            };
                                                                            var $3098 = $3099;
                                                                        } else {
                                                                            var self = ($3075 === 3n);
                                                                            if (self) {
                                                                                var self = Litereum$deserialize$term$(_world$1, _vars$2, $3074);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3114 = self.fst;
                                                                                        var $3115 = self.snd;
                                                                                        var $3116 = Pair$new$($3114, Litereum$Term$return$($3115));
                                                                                        var $3113 = $3116;
                                                                                        break;
                                                                                };
                                                                                var $3112 = $3113;
                                                                            } else {
                                                                                var $3117 = Pair$new$($3074, Litereum$Term$word$(0n));
                                                                                var $3112 = $3117;
                                                                            };
                                                                            var $3098 = $3112;
                                                                        };
                                                                        var $3087 = $3098;
                                                                    };
                                                                    var $3076 = $3087;
                                                                };
                                                                var $3073 = $3076;
                                                                break;
                                                        };
                                                        var $3072 = $3073;
                                                    } else {
                                                        var $3118 = Pair$new$($2980, Litereum$Term$word$(0n));
                                                        var $3072 = $3118;
                                                    };
                                                    var $3045 = $3072;
                                                };
                                                var $3028 = $3045;
                                            };
                                            var $3023 = $3028;
                                        };
                                        var $3012 = $3023;
                                    };
                                    var $3004 = $3012;
                                };
                                var $2996 = $3004;
                            };
                            var $2982 = $2996;
                        };
                        var $2979 = $2982;
                        break;
                };
                var $2972 = $2979;
                break;
            case 'e':
                var $3119 = Pair$new$(_bits$3, Litereum$Term$word$(0n));
                var $2972 = $3119;
                break;
        };
        return $2972;
    };
    const Litereum$deserialize$term = x0 => x1 => x2 => Litereum$deserialize$term$(x0, x1, x2);

    function Litereum$deserialize$bond$(_world$1, _bits$2) {
        var self = Litereum$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3121 = self.fst;
                var $3122 = self.snd;
                var self = Litereum$deserialize$list$(Litereum$deserialize$name, $3121);
                switch (self._) {
                    case 'Pair.new':
                        var $3124 = self.fst;
                        var $3125 = self.snd;
                        var self = Litereum$deserialize$list$(Litereum$deserialize$type(_world$1), $3124);
                        switch (self._) {
                            case 'Pair.new':
                                var $3127 = self.fst;
                                var $3128 = self.snd;
                                var self = Litereum$deserialize$type$(_world$1, $3127);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3130 = self.fst;
                                        var $3131 = self.snd;
                                        var self = Litereum$deserialize$term$(_world$1, List$reverse$($3125), $3130);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3133 = self.fst;
                                                var $3134 = self.snd;
                                                var $3135 = Pair$new$($3133, Litereum$Bond$new$($3122, $3125, $3128, $3131, $3134));
                                                var $3132 = $3135;
                                                break;
                                        };
                                        var $3129 = $3132;
                                        break;
                                };
                                var $3126 = $3129;
                                break;
                        };
                        var $3123 = $3126;
                        break;
                };
                var $3120 = $3123;
                break;
        };
        return $3120;
    };
    const Litereum$deserialize$bond = x0 => x1 => Litereum$deserialize$bond$(x0, x1);

    function Litereum$deserialize$file$(_world$1, _bits$2) {
        var self = Litereum$deserialize$name$(_bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3137 = self.fst;
                var $3138 = self.snd;
                var self = Litereum$deserialize$list$(Litereum$deserialize$name, $3137);
                switch (self._) {
                    case 'Pair.new':
                        var $3140 = self.fst;
                        var $3141 = self.snd;
                        var self = Litereum$deserialize$type$(_world$1, $3140);
                        switch (self._) {
                            case 'Pair.new':
                                var $3143 = self.fst;
                                var $3144 = self.snd;
                                var self = Litereum$deserialize$term$(_world$1, List$nil, $3143);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3146 = self.fst;
                                        var $3147 = self.snd;
                                        var $3148 = Pair$new$($3146, Litereum$File$new$($3138, $3141, $3144, $3147));
                                        var $3145 = $3148;
                                        break;
                                };
                                var $3142 = $3145;
                                break;
                        };
                        var $3139 = $3142;
                        break;
                };
                var $3136 = $3139;
                break;
        };
        return $3136;
    };
    const Litereum$deserialize$file = x0 => x1 => Litereum$deserialize$file$(x0, x1);

    function Litereum$deserialize$eval$(_world$1, _bits$2) {
        var self = Litereum$deserialize$term$(_world$1, List$nil, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3150 = self.fst;
                var $3151 = self.snd;
                var self = Litereum$deserialize$type$(_world$1, $3150);
                switch (self._) {
                    case 'Pair.new':
                        var $3153 = self.fst;
                        var $3154 = self.snd;
                        var $3155 = Pair$new$($3153, Litereum$Eval$new$($3151, $3154));
                        var $3152 = $3155;
                        break;
                };
                var $3149 = $3152;
                break;
        };
        return $3149;
    };
    const Litereum$deserialize$eval = x0 => x1 => Litereum$deserialize$eval$(x0, x1);

    function Litereum$deserialize$transaction$(_world$1, _bits$2) {
        var self = Litereum$deserialize$fixlen$(2n, _bits$2);
        switch (self._) {
            case 'Pair.new':
                var $3157 = self.fst;
                var $3158 = self.snd;
                var self = ($3158 === 0n);
                if (self) {
                    var self = Litereum$deserialize$data$(_world$1, $3157);
                    switch (self._) {
                        case 'Pair.new':
                            var $3161 = self.fst;
                            var $3162 = self.snd;
                            var $3163 = Pair$new$($3161, Litereum$Transaction$new_data$($3162));
                            var $3160 = $3163;
                            break;
                    };
                    var $3159 = $3160;
                } else {
                    var self = ($3158 === 1n);
                    if (self) {
                        var self = Litereum$deserialize$bond$(_world$1, $3157);
                        switch (self._) {
                            case 'Pair.new':
                                var $3166 = self.fst;
                                var $3167 = self.snd;
                                var $3168 = Pair$new$($3166, Litereum$Transaction$new_bond$($3167));
                                var $3165 = $3168;
                                break;
                        };
                        var $3164 = $3165;
                    } else {
                        var self = ($3158 === 2n);
                        if (self) {
                            var self = Litereum$deserialize$file$(_world$1, $3157);
                            switch (self._) {
                                case 'Pair.new':
                                    var $3171 = self.fst;
                                    var $3172 = self.snd;
                                    var $3173 = Pair$new$($3171, Litereum$Transaction$new_file$($3172));
                                    var $3170 = $3173;
                                    break;
                            };
                            var $3169 = $3170;
                        } else {
                            var self = ($3158 === 3n);
                            if (self) {
                                var self = Litereum$deserialize$eval$(_world$1, $3157);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3176 = self.fst;
                                        var $3177 = self.snd;
                                        var $3178 = Pair$new$($3176, Litereum$Transaction$new_eval$($3177));
                                        var $3175 = $3178;
                                        break;
                                };
                                var $3174 = $3175;
                            } else {
                                var $3179 = Pair$new$($3157, Litereum$Transaction$new_data$(Litereum$Data$new$("", List$nil)));
                                var $3174 = $3179;
                            };
                            var $3169 = $3174;
                        };
                        var $3164 = $3169;
                    };
                    var $3159 = $3164;
                };
                var $3156 = $3159;
                break;
        };
        return $3156;
    };
    const Litereum$deserialize$transaction = x0 => x1 => Litereum$deserialize$transaction$(x0, x1);

    function Litereum$deserialize$block$(_world$1, _bits$2) {
        var self = Bits$is_empty$(_bits$2);
        if (self) {
            var $3181 = Pair$new$(Bits$e, List$nil);
            var $3180 = $3181;
        } else {
            var self = Litereum$deserialize$transaction$(_world$1, _bits$2);
            switch (self._) {
                case 'Pair.new':
                    var $3183 = self.fst;
                    var $3184 = self.snd;
                    var self = Litereum$deserialize$block$(_world$1, $3183);
                    switch (self._) {
                        case 'Pair.new':
                            var $3186 = self.fst;
                            var $3187 = self.snd;
                            var $3188 = Pair$new$($3186, List$cons$($3184, $3187));
                            var $3185 = $3188;
                            break;
                    };
                    var $3182 = $3185;
                    break;
            };
            var $3180 = $3182;
        };
        return $3180;
    };
    const Litereum$deserialize$block = x0 => x1 => Litereum$deserialize$block$(x0, x1);

    function Bits$hex$encode$(_x$1) {
        var self = _x$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $3190 = self.slice(0, -1);
                var self = $3190;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3192 = self.slice(0, -1);
                        var self = $3192;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3194 = self.slice(0, -1);
                                var self = $3194;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3196 = self.slice(0, -1);
                                        var $3197 = ("0" + Bits$hex$encode$($3196));
                                        var $3195 = $3197;
                                        break;
                                    case 'i':
                                        var $3198 = self.slice(0, -1);
                                        var $3199 = ("8" + Bits$hex$encode$($3198));
                                        var $3195 = $3199;
                                        break;
                                    case 'e':
                                        var $3200 = "0";
                                        var $3195 = $3200;
                                        break;
                                };
                                var $3193 = $3195;
                                break;
                            case 'i':
                                var $3201 = self.slice(0, -1);
                                var self = $3201;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3203 = self.slice(0, -1);
                                        var $3204 = ("4" + Bits$hex$encode$($3203));
                                        var $3202 = $3204;
                                        break;
                                    case 'i':
                                        var $3205 = self.slice(0, -1);
                                        var $3206 = ("c" + Bits$hex$encode$($3205));
                                        var $3202 = $3206;
                                        break;
                                    case 'e':
                                        var $3207 = "4";
                                        var $3202 = $3207;
                                        break;
                                };
                                var $3193 = $3202;
                                break;
                            case 'e':
                                var $3208 = "0";
                                var $3193 = $3208;
                                break;
                        };
                        var $3191 = $3193;
                        break;
                    case 'i':
                        var $3209 = self.slice(0, -1);
                        var self = $3209;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3211 = self.slice(0, -1);
                                var self = $3211;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3213 = self.slice(0, -1);
                                        var $3214 = ("2" + Bits$hex$encode$($3213));
                                        var $3212 = $3214;
                                        break;
                                    case 'i':
                                        var $3215 = self.slice(0, -1);
                                        var $3216 = ("a" + Bits$hex$encode$($3215));
                                        var $3212 = $3216;
                                        break;
                                    case 'e':
                                        var $3217 = "2";
                                        var $3212 = $3217;
                                        break;
                                };
                                var $3210 = $3212;
                                break;
                            case 'i':
                                var $3218 = self.slice(0, -1);
                                var self = $3218;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3220 = self.slice(0, -1);
                                        var $3221 = ("6" + Bits$hex$encode$($3220));
                                        var $3219 = $3221;
                                        break;
                                    case 'i':
                                        var $3222 = self.slice(0, -1);
                                        var $3223 = ("e" + Bits$hex$encode$($3222));
                                        var $3219 = $3223;
                                        break;
                                    case 'e':
                                        var $3224 = "6";
                                        var $3219 = $3224;
                                        break;
                                };
                                var $3210 = $3219;
                                break;
                            case 'e':
                                var $3225 = "2";
                                var $3210 = $3225;
                                break;
                        };
                        var $3191 = $3210;
                        break;
                    case 'e':
                        var $3226 = "0";
                        var $3191 = $3226;
                        break;
                };
                var $3189 = $3191;
                break;
            case 'i':
                var $3227 = self.slice(0, -1);
                var self = $3227;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $3229 = self.slice(0, -1);
                        var self = $3229;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3231 = self.slice(0, -1);
                                var self = $3231;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3233 = self.slice(0, -1);
                                        var $3234 = ("1" + Bits$hex$encode$($3233));
                                        var $3232 = $3234;
                                        break;
                                    case 'i':
                                        var $3235 = self.slice(0, -1);
                                        var $3236 = ("9" + Bits$hex$encode$($3235));
                                        var $3232 = $3236;
                                        break;
                                    case 'e':
                                        var $3237 = "1";
                                        var $3232 = $3237;
                                        break;
                                };
                                var $3230 = $3232;
                                break;
                            case 'i':
                                var $3238 = self.slice(0, -1);
                                var self = $3238;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3240 = self.slice(0, -1);
                                        var $3241 = ("5" + Bits$hex$encode$($3240));
                                        var $3239 = $3241;
                                        break;
                                    case 'i':
                                        var $3242 = self.slice(0, -1);
                                        var $3243 = ("d" + Bits$hex$encode$($3242));
                                        var $3239 = $3243;
                                        break;
                                    case 'e':
                                        var $3244 = "5";
                                        var $3239 = $3244;
                                        break;
                                };
                                var $3230 = $3239;
                                break;
                            case 'e':
                                var $3245 = "1";
                                var $3230 = $3245;
                                break;
                        };
                        var $3228 = $3230;
                        break;
                    case 'i':
                        var $3246 = self.slice(0, -1);
                        var self = $3246;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $3248 = self.slice(0, -1);
                                var self = $3248;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3250 = self.slice(0, -1);
                                        var $3251 = ("3" + Bits$hex$encode$($3250));
                                        var $3249 = $3251;
                                        break;
                                    case 'i':
                                        var $3252 = self.slice(0, -1);
                                        var $3253 = ("b" + Bits$hex$encode$($3252));
                                        var $3249 = $3253;
                                        break;
                                    case 'e':
                                        var $3254 = "3";
                                        var $3249 = $3254;
                                        break;
                                };
                                var $3247 = $3249;
                                break;
                            case 'i':
                                var $3255 = self.slice(0, -1);
                                var self = $3255;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $3257 = self.slice(0, -1);
                                        var $3258 = ("7" + Bits$hex$encode$($3257));
                                        var $3256 = $3258;
                                        break;
                                    case 'i':
                                        var $3259 = self.slice(0, -1);
                                        var $3260 = ("f" + Bits$hex$encode$($3259));
                                        var $3256 = $3260;
                                        break;
                                    case 'e':
                                        var $3261 = "7";
                                        var $3256 = $3261;
                                        break;
                                };
                                var $3247 = $3256;
                                break;
                            case 'e':
                                var $3262 = "3";
                                var $3247 = $3262;
                                break;
                        };
                        var $3228 = $3247;
                        break;
                    case 'e':
                        var $3263 = "1";
                        var $3228 = $3263;
                        break;
                };
                var $3189 = $3228;
                break;
            case 'e':
                var $3264 = "";
                var $3189 = $3264;
                break;
        };
        return $3189;
    };
    const Bits$hex$encode = x0 => Bits$hex$encode$(x0);
    const Bits$eql = a0 => a1 => (a1 === a0);

    function Litereum$World$new$(_entry$1) {
        var $3265 = ({
            _: 'Litereum.World.new',
            'entry': _entry$1
        });
        return $3265;
    };
    const Litereum$World$new = x0 => Litereum$World$new$(x0);

    function BBT$(_K$1, _V$2) {
        var $3266 = null;
        return $3266;
    };
    const BBT = x0 => x1 => BBT$(x0, x1);

    function BBT$bin$(_size$3, _key$4, _val$5, _left$6, _right$7) {
        var $3267 = ({
            _: 'BBT.bin',
            'size': _size$3,
            'key': _key$4,
            'val': _val$5,
            'left': _left$6,
            'right': _right$7
        });
        return $3267;
    };
    const BBT$bin = x0 => x1 => x2 => x3 => x4 => BBT$bin$(x0, x1, x2, x3, x4);

    function U32$new$(_value$1) {
        var $3268 = word_to_u32(_value$1);
        return $3268;
    };
    const U32$new = x0 => U32$new$(x0);
    const Nat$to_u32 = a0 => (Number(a0) >>> 0);
    const BBT$tip = ({
        _: 'BBT.tip'
    });

    function BBT$singleton$(_key$3, _val$4) {
        var $3269 = BBT$bin$(1, _key$3, _val$4, BBT$tip, BBT$tip);
        return $3269;
    };
    const BBT$singleton = x0 => x1 => BBT$singleton$(x0, x1);

    function BBT$size$(_map$3) {
        var self = _map$3;
        switch (self._) {
            case 'BBT.bin':
                var $3271 = self.size;
                var $3272 = $3271;
                var $3270 = $3272;
                break;
            case 'BBT.tip':
                var $3273 = 0;
                var $3270 = $3273;
                break;
        };
        return $3270;
    };
    const BBT$size = x0 => BBT$size$(x0);
    const U32$add = a0 => a1 => ((a0 + a1) >>> 0);

    function Word$shift_left$one$go$(_word$2, _prev$3) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3275 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $3277 = Word$i$(Word$shift_left$one$go$($3275, Bool$false));
                    var $3276 = $3277;
                } else {
                    var $3278 = Word$o$(Word$shift_left$one$go$($3275, Bool$false));
                    var $3276 = $3278;
                };
                var $3274 = $3276;
                break;
            case 'Word.i':
                var $3279 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $3281 = Word$i$(Word$shift_left$one$go$($3279, Bool$true));
                    var $3280 = $3281;
                } else {
                    var $3282 = Word$o$(Word$shift_left$one$go$($3279, Bool$true));
                    var $3280 = $3282;
                };
                var $3274 = $3280;
                break;
            case 'Word.e':
                var $3283 = Word$e;
                var $3274 = $3283;
                break;
        };
        return $3274;
    };
    const Word$shift_left$one$go = x0 => x1 => Word$shift_left$one$go$(x0, x1);

    function Word$shift_left$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3285 = self.pred;
                var $3286 = Word$o$(Word$shift_left$one$go$($3285, Bool$false));
                var $3284 = $3286;
                break;
            case 'Word.i':
                var $3287 = self.pred;
                var $3288 = Word$o$(Word$shift_left$one$go$($3287, Bool$true));
                var $3284 = $3288;
                break;
            case 'Word.e':
                var $3289 = Word$e;
                var $3284 = $3289;
                break;
        };
        return $3284;
    };
    const Word$shift_left$one = x0 => Word$shift_left$one$(x0);

    function Word$shift_left$(_value$2, _n$3) {
        var Word$shift_left$ = (_value$2, _n$3) => ({
            ctr: 'TCO',
            arg: [_value$2, _n$3]
        });
        var Word$shift_left = _value$2 => _n$3 => Word$shift_left$(_value$2, _n$3);
        var arg = [_value$2, _n$3];
        while (true) {
            let [_value$2, _n$3] = arg;
            var R = (() => {
                var self = _n$3;
                if (self === 0n) {
                    var $3290 = _value$2;
                    return $3290;
                } else {
                    var $3291 = (self - 1n);
                    var $3292 = Word$shift_left$(Word$shift_left$one$(_value$2), $3291);
                    return $3292;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_left = x0 => x1 => Word$shift_left$(x0, x1);

    function Word$mul$go$(_a$3, _b$4, _acc$5) {
        var Word$mul$go$ = (_a$3, _b$4, _acc$5) => ({
            ctr: 'TCO',
            arg: [_a$3, _b$4, _acc$5]
        });
        var Word$mul$go = _a$3 => _b$4 => _acc$5 => Word$mul$go$(_a$3, _b$4, _acc$5);
        var arg = [_a$3, _b$4, _acc$5];
        while (true) {
            let [_a$3, _b$4, _acc$5] = arg;
            var R = (() => {
                var self = _a$3;
                switch (self._) {
                    case 'Word.o':
                        var $3293 = self.pred;
                        var $3294 = Word$mul$go$($3293, Word$shift_left$(_b$4, 1n), _acc$5);
                        return $3294;
                    case 'Word.i':
                        var $3295 = self.pred;
                        var $3296 = Word$mul$go$($3295, Word$shift_left$(_b$4, 1n), Word$add$(_b$4, _acc$5));
                        return $3296;
                    case 'Word.e':
                        var $3297 = _acc$5;
                        return $3297;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$mul$go = x0 => x1 => x2 => Word$mul$go$(x0, x1, x2);

    function Word$to_zero$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3299 = self.pred;
                var $3300 = Word$o$(Word$to_zero$($3299));
                var $3298 = $3300;
                break;
            case 'Word.i':
                var $3301 = self.pred;
                var $3302 = Word$o$(Word$to_zero$($3301));
                var $3298 = $3302;
                break;
            case 'Word.e':
                var $3303 = Word$e;
                var $3298 = $3303;
                break;
        };
        return $3298;
    };
    const Word$to_zero = x0 => Word$to_zero$(x0);

    function Word$mul$(_a$2, _b$3) {
        var $3304 = Word$mul$go$(_a$2, _b$3, Word$to_zero$(_a$2));
        return $3304;
    };
    const Word$mul = x0 => x1 => Word$mul$(x0, x1);
    const U32$mul = a0 => a1 => ((a0 * a1) >>> 0);
    const BBT$w = 3;
    const U32$ltn = a0 => a1 => (a0 < a1);
    const U32$from_nat = a0 => (Number(a0) >>> 0);

    function BBT$node$(_key$3, _val$4, _left$5, _right$6) {
        var _size_left$7 = BBT$size$(_left$5);
        var _size_right$8 = BBT$size$(_right$6);
        var _new_size$9 = ((1 + ((_size_left$7 + _size_right$8) >>> 0)) >>> 0);
        var $3305 = BBT$bin$(_new_size$9, _key$3, _val$4, _left$5, _right$6);
        return $3305;
    };
    const BBT$node = x0 => x1 => x2 => x3 => BBT$node$(x0, x1, x2, x3);

    function Cmp$as_gtn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $3307 = Bool$false;
                var $3306 = $3307;
                break;
            case 'Cmp.gtn':
                var $3308 = Bool$true;
                var $3306 = $3308;
                break;
        };
        return $3306;
    };
    const Cmp$as_gtn = x0 => Cmp$as_gtn$(x0);

    function Word$gtn$(_a$2, _b$3) {
        var $3309 = Cmp$as_gtn$(Word$cmp$(_a$2, _b$3));
        return $3309;
    };
    const Word$gtn = x0 => x1 => Word$gtn$(x0, x1);
    const U32$gtn = a0 => a1 => (a0 > a1);

    function BBT$balance$(_k$3, _v$4, _l$5, _r$6) {
        var _size_l$7 = BBT$size$(_l$5);
        var _size_r$8 = BBT$size$(_r$6);
        var _size_l_plus_size_r$9 = ((_size_l$7 + _size_r$8) >>> 0);
        var _w_x_size_l$10 = ((BBT$w * _size_l$7) >>> 0);
        var _w_x_size_r$11 = ((BBT$w * _size_r$8) >>> 0);
        var self = (_size_l_plus_size_r$9 < 2);
        if (self) {
            var $3311 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
            var $3310 = $3311;
        } else {
            var self = (_size_r$8 > _w_x_size_l$10);
            if (self) {
                var self = _r$6;
                switch (self._) {
                    case 'BBT.bin':
                        var $3314 = self.key;
                        var $3315 = self.val;
                        var $3316 = self.left;
                        var $3317 = self.right;
                        var _size_rl$17 = BBT$size$($3316);
                        var _size_rr$18 = BBT$size$($3317);
                        var self = (_size_rl$17 < _size_rr$18);
                        if (self) {
                            var _new_key$19 = $3314;
                            var _new_val$20 = $3315;
                            var _new_left$21 = BBT$node$(_k$3, _v$4, _l$5, $3316);
                            var _new_right$22 = $3317;
                            var $3319 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                            var $3318 = $3319;
                        } else {
                            var self = $3316;
                            switch (self._) {
                                case 'BBT.bin':
                                    var $3321 = self.key;
                                    var $3322 = self.val;
                                    var $3323 = self.left;
                                    var $3324 = self.right;
                                    var _new_key$24 = $3321;
                                    var _new_val$25 = $3322;
                                    var _new_left$26 = BBT$node$(_k$3, _v$4, _l$5, $3323);
                                    var _new_right$27 = BBT$node$($3314, $3315, $3324, $3317);
                                    var $3325 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                    var $3320 = $3325;
                                    break;
                                case 'BBT.tip':
                                    var $3326 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                    var $3320 = $3326;
                                    break;
                            };
                            var $3318 = $3320;
                        };
                        var $3313 = $3318;
                        break;
                    case 'BBT.tip':
                        var $3327 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                        var $3313 = $3327;
                        break;
                };
                var $3312 = $3313;
            } else {
                var self = (_size_l$7 > _w_x_size_r$11);
                if (self) {
                    var self = _l$5;
                    switch (self._) {
                        case 'BBT.bin':
                            var $3330 = self.key;
                            var $3331 = self.val;
                            var $3332 = self.left;
                            var $3333 = self.right;
                            var _size_ll$17 = BBT$size$($3332);
                            var _size_lr$18 = BBT$size$($3333);
                            var self = (_size_lr$18 < _size_ll$17);
                            if (self) {
                                var _new_key$19 = $3330;
                                var _new_val$20 = $3331;
                                var _new_left$21 = $3332;
                                var _new_right$22 = BBT$node$(_k$3, _v$4, $3333, _r$6);
                                var $3335 = BBT$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                                var $3334 = $3335;
                            } else {
                                var self = $3333;
                                switch (self._) {
                                    case 'BBT.bin':
                                        var $3337 = self.key;
                                        var $3338 = self.val;
                                        var $3339 = self.left;
                                        var $3340 = self.right;
                                        var _new_key$24 = $3337;
                                        var _new_val$25 = $3338;
                                        var _new_left$26 = BBT$node$($3330, $3331, $3332, $3339);
                                        var _new_right$27 = BBT$node$(_k$3, _v$4, $3340, _r$6);
                                        var $3341 = BBT$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                        var $3336 = $3341;
                                        break;
                                    case 'BBT.tip':
                                        var $3342 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                                        var $3336 = $3342;
                                        break;
                                };
                                var $3334 = $3336;
                            };
                            var $3329 = $3334;
                            break;
                        case 'BBT.tip':
                            var $3343 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                            var $3329 = $3343;
                            break;
                    };
                    var $3328 = $3329;
                } else {
                    var $3344 = BBT$node$(_k$3, _v$4, _l$5, _r$6);
                    var $3328 = $3344;
                };
                var $3312 = $3328;
            };
            var $3310 = $3312;
        };
        return $3310;
    };
    const BBT$balance = x0 => x1 => x2 => x3 => BBT$balance$(x0, x1, x2, x3);

    function BBT$insert$(_cmp$3, _key$4, _val$5, _map$6) {
        var self = _map$6;
        switch (self._) {
            case 'BBT.bin':
                var $3346 = self.key;
                var $3347 = self.val;
                var $3348 = self.left;
                var $3349 = self.right;
                var self = _cmp$3(_key$4)($3346);
                switch (self._) {
                    case 'Cmp.ltn':
                        var _new_key$12 = $3346;
                        var _new_val$13 = $3347;
                        var _new_left$14 = BBT$insert$(_cmp$3, _key$4, _val$5, $3348);
                        var _new_right$15 = $3349;
                        var $3351 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $3350 = $3351;
                        break;
                    case 'Cmp.eql':
                        var $3352 = BBT$node$(_key$4, _val$5, $3348, $3349);
                        var $3350 = $3352;
                        break;
                    case 'Cmp.gtn':
                        var _new_key$12 = $3346;
                        var _new_val$13 = $3347;
                        var _new_left$14 = $3348;
                        var _new_right$15 = BBT$insert$(_cmp$3, _key$4, _val$5, $3349);
                        var $3353 = BBT$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $3350 = $3353;
                        break;
                };
                var $3345 = $3350;
                break;
            case 'BBT.tip':
                var $3354 = BBT$singleton$(_key$4, _val$5);
                var $3345 = $3354;
                break;
        };
        return $3345;
    };
    const BBT$insert = x0 => x1 => x2 => x3 => BBT$insert$(x0, x1, x2, x3);

    function Map$set$(_key$2, _val$3, _map$4) {
        var $3355 = BBT$insert$(String$cmp, _key$2, _val$3, _map$4);
        return $3355;
    };
    const Map$set = x0 => x1 => x2 => Map$set$(x0, x1, x2);

    function Litereum$Entry$data$(_value$1) {
        var $3356 = ({
            _: 'Litereum.Entry.data',
            'value': _value$1
        });
        return $3356;
    };
    const Litereum$Entry$data = x0 => Litereum$Entry$data$(x0);

    function Litereum$Entry$bond$(_value$1) {
        var $3357 = ({
            _: 'Litereum.Entry.bond',
            'value': _value$1
        });
        return $3357;
    };
    const Litereum$Entry$bond = x0 => Litereum$Entry$bond$(x0);

    function Map$(_V$1) {
        var $3358 = null;
        return $3358;
    };
    const Map = x0 => Map$(x0);

    function Litereum$extend$(_map$2, _keys$3, _vals$4) {
        var Litereum$extend$ = (_map$2, _keys$3, _vals$4) => ({
            ctr: 'TCO',
            arg: [_map$2, _keys$3, _vals$4]
        });
        var Litereum$extend = _map$2 => _keys$3 => _vals$4 => Litereum$extend$(_map$2, _keys$3, _vals$4);
        var arg = [_map$2, _keys$3, _vals$4];
        while (true) {
            let [_map$2, _keys$3, _vals$4] = arg;
            var R = (() => {
                var self = _keys$3;
                switch (self._) {
                    case 'List.cons':
                        var $3359 = self.head;
                        var $3360 = self.tail;
                        var self = _vals$4;
                        switch (self._) {
                            case 'List.cons':
                                var $3362 = self.head;
                                var $3363 = self.tail;
                                var $3364 = Litereum$extend$(Map$set$($3359, $3362, _map$2), $3360, $3363);
                                var $3361 = $3364;
                                break;
                            case 'List.nil':
                                var $3365 = _map$2;
                                var $3361 = $3365;
                                break;
                        };
                        return $3361;
                    case 'List.nil':
                        var self = _vals$4;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $3367 = _map$2;
                                var $3366 = $3367;
                                break;
                        };
                        return $3366;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Litereum$extend = x0 => x1 => x2 => Litereum$extend$(x0, x1, x2);

    function Pair$snd$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $3369 = self.snd;
                var $3370 = $3369;
                var $3368 = $3370;
                break;
        };
        return $3368;
    };
    const Pair$snd = x0 => Pair$snd$(x0);

    function BBT$from_list$go$(_cmp$3, _acc$4, _xs$5) {
        var BBT$from_list$go$ = (_cmp$3, _acc$4, _xs$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _acc$4, _xs$5]
        });
        var BBT$from_list$go = _cmp$3 => _acc$4 => _xs$5 => BBT$from_list$go$(_cmp$3, _acc$4, _xs$5);
        var arg = [_cmp$3, _acc$4, _xs$5];
        while (true) {
            let [_cmp$3, _acc$4, _xs$5] = arg;
            var R = (() => {
                var self = _xs$5;
                switch (self._) {
                    case 'List.cons':
                        var $3371 = self.head;
                        var $3372 = self.tail;
                        var _key$8 = Pair$fst$($3371);
                        var _val$9 = Pair$snd$($3371);
                        var _new_acc$10 = BBT$insert$(_cmp$3, _key$8, _val$9, _acc$4);
                        var $3373 = BBT$from_list$go$(_cmp$3, _new_acc$10, $3372);
                        return $3373;
                    case 'List.nil':
                        var $3374 = _acc$4;
                        return $3374;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BBT$from_list$go = x0 => x1 => x2 => BBT$from_list$go$(x0, x1, x2);

    function BBT$from_list$(_cmp$3, _xs$4) {
        var $3375 = BBT$from_list$go$(_cmp$3, BBT$tip, _xs$4);
        return $3375;
    };
    const BBT$from_list = x0 => x1 => BBT$from_list$(x0, x1);

    function Map$from_list$(_xs$2) {
        var $3376 = BBT$from_list$(String$cmp, _xs$2);
        return $3376;
    };
    const Map$from_list = x0 => Map$from_list$(x0);

    function Litereum$equal$(_a$1, _b$2) {
        var Litereum$equal$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var Litereum$equal = _a$1 => _b$2 => Litereum$equal$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                switch (self._) {
                    case 'Litereum.Type.data':
                        var $3377 = self.name;
                        var self = _b$2;
                        switch (self._) {
                            case 'Litereum.Type.data':
                                var $3379 = self.name;
                                var $3380 = ($3377 === $3379);
                                var $3378 = $3380;
                                break;
                            case 'Litereum.Type.word':
                            case 'Litereum.Type.effe':
                                var $3381 = Bool$false;
                                var $3378 = $3381;
                                break;
                        };
                        return $3378;
                    case 'Litereum.Type.effe':
                        var $3382 = self.rety;
                        var self = _b$2;
                        switch (self._) {
                            case 'Litereum.Type.effe':
                                var $3384 = self.rety;
                                var $3385 = Litereum$equal$($3382, $3384);
                                var $3383 = $3385;
                                break;
                            case 'Litereum.Type.word':
                            case 'Litereum.Type.data':
                                var $3386 = Bool$false;
                                var $3383 = $3386;
                                break;
                        };
                        return $3383;
                    case 'Litereum.Type.word':
                        var self = _b$2;
                        switch (self._) {
                            case 'Litereum.Type.word':
                                var $3388 = Bool$true;
                                var $3387 = $3388;
                                break;
                            case 'Litereum.Type.data':
                            case 'Litereum.Type.effe':
                                var $3389 = Bool$false;
                                var $3387 = $3389;
                                break;
                        };
                        return $3387;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Litereum$equal = x0 => x1 => Litereum$equal$(x0, x1);

    function Litereum$get_bond$(_world$1, _name$2) {
        var self = _world$1;
        switch (self._) {
            case 'Litereum.World.new':
                var $3391 = self.entry;
                var $3392 = Maybe$monad$((_m$bind$4 => _m$pure$5 => {
                    var $3393 = _m$bind$4;
                    return $3393;
                }))(Map$get$(_name$2, $3391))((_entry$4 => {
                    var self = _entry$4;
                    switch (self._) {
                        case 'Litereum.Entry.bond':
                            var $3395 = self.value;
                            var $3396 = Maybe$some$($3395);
                            var $3394 = $3396;
                            break;
                        case 'Litereum.Entry.data':
                        case 'Litereum.Entry.file':
                            var $3397 = Maybe$none;
                            var $3394 = $3397;
                            break;
                    };
                    return $3394;
                }));
                var $3390 = $3392;
                break;
        };
        return $3390;
    };
    const Litereum$get_bond = x0 => x1 => Litereum$get_bond$(x0, x1);

    function List$zip$(_as$3, _bs$4) {
        var self = _as$3;
        switch (self._) {
            case 'List.cons':
                var $3399 = self.head;
                var $3400 = self.tail;
                var self = _bs$4;
                switch (self._) {
                    case 'List.cons':
                        var $3402 = self.head;
                        var $3403 = self.tail;
                        var $3404 = List$cons$(Pair$new$($3399, $3402), List$zip$($3400, $3403));
                        var $3401 = $3404;
                        break;
                    case 'List.nil':
                        var $3405 = List$nil;
                        var $3401 = $3405;
                        break;
                };
                var $3398 = $3401;
                break;
            case 'List.nil':
                var $3406 = List$nil;
                var $3398 = $3406;
                break;
        };
        return $3398;
    };
    const List$zip = x0 => x1 => List$zip$(x0, x1);

    function List$all$(_cond$2, _list$3) {
        var List$all$ = (_cond$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _list$3]
        });
        var List$all = _cond$2 => _list$3 => List$all$(_cond$2, _list$3);
        var arg = [_cond$2, _list$3];
        while (true) {
            let [_cond$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $3407 = self.head;
                        var $3408 = self.tail;
                        var self = _cond$2($3407);
                        if (self) {
                            var $3410 = List$all$(_cond$2, $3408);
                            var $3409 = $3410;
                        } else {
                            var $3411 = Bool$false;
                            var $3409 = $3411;
                        };
                        return $3409;
                    case 'List.nil':
                        var $3412 = Bool$true;
                        return $3412;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$all = x0 => x1 => List$all$(x0, x1);

    function Maybe$mapped$(_m$2, _f$4) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $3414 = self.value;
                var $3415 = Maybe$some$(_f$4($3414));
                var $3413 = $3415;
                break;
            case 'Maybe.none':
                var $3416 = Maybe$none;
                var $3413 = $3416;
                break;
        };
        return $3413;
    };
    const Maybe$mapped = x0 => x1 => Maybe$mapped$(x0, x1);

    function List$ifind$go$(_xs$2, _f$3, _i$4) {
        var List$ifind$go$ = (_xs$2, _f$3, _i$4) => ({
            ctr: 'TCO',
            arg: [_xs$2, _f$3, _i$4]
        });
        var List$ifind$go = _xs$2 => _f$3 => _i$4 => List$ifind$go$(_xs$2, _f$3, _i$4);
        var arg = [_xs$2, _f$3, _i$4];
        while (true) {
            let [_xs$2, _f$3, _i$4] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $3417 = self.head;
                        var $3418 = self.tail;
                        var self = _f$3(_i$4)($3417);
                        if (self) {
                            var $3420 = Maybe$some$(Pair$new$(_i$4, $3417));
                            var $3419 = $3420;
                        } else {
                            var $3421 = List$ifind$go$($3418, _f$3, Nat$succ$(_i$4));
                            var $3419 = $3421;
                        };
                        return $3419;
                    case 'List.nil':
                        var $3422 = Maybe$none;
                        return $3422;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$ifind$go = x0 => x1 => x2 => List$ifind$go$(x0, x1, x2);

    function List$ifind$(_f$2, _xs$3) {
        var $3423 = List$ifind$go$(_xs$3, _f$2, Nat$zero);
        return $3423;
    };
    const List$ifind = x0 => x1 => List$ifind$(x0, x1);

    function Litereum$get_constructor_value$(_data$1, _name$2) {
        var $3424 = Maybe$mapped$(List$ifind$((_i$3 => _ctr$4 => {
            var $3425 = ((() => {
                var self = _ctr$4;
                switch (self._) {
                    case 'Litereum.Constructor.new':
                        var $3426 = self.name;
                        var $3427 = $3426;
                        return $3427;
                };
            })() === _name$2);
            return $3425;
        }), (() => {
            var self = _data$1;
            switch (self._) {
                case 'Litereum.Data.new':
                    var $3428 = self.constructors;
                    var $3429 = $3428;
                    return $3429;
            };
        })()), (_x$3 => {
            var self = _x$3;
            switch (self._) {
                case 'Pair.new':
                    var $3431 = self.snd;
                    var $3432 = $3431;
                    var $3430 = $3432;
                    break;
            };
            return $3430;
        }));
        return $3424;
    };
    const Litereum$get_constructor_value = x0 => x1 => Litereum$get_constructor_value$(x0, x1);
    const List$length = a0 => (list_length(a0));

    function List$zip_with$(_f$4, _as$5, _bs$6) {
        var self = _as$5;
        switch (self._) {
            case 'List.cons':
                var $3434 = self.head;
                var $3435 = self.tail;
                var self = _bs$6;
                switch (self._) {
                    case 'List.cons':
                        var $3437 = self.head;
                        var $3438 = self.tail;
                        var $3439 = List$cons$(_f$4($3434)($3437), List$zip_with$(_f$4, $3435, $3438));
                        var $3436 = $3439;
                        break;
                    case 'List.nil':
                        var $3440 = List$nil;
                        var $3436 = $3440;
                        break;
                };
                var $3433 = $3436;
                break;
            case 'List.nil':
                var $3441 = List$nil;
                var $3433 = $3441;
                break;
        };
        return $3433;
    };
    const List$zip_with = x0 => x1 => x2 => List$zip_with$(x0, x1, x2);

    function List$zipped_with$(_as$3, _bs$4, _f$6) {
        var $3442 = List$zip_with$(_f$6, _as$3, _bs$4);
        return $3442;
    };
    const List$zipped_with = x0 => x1 => x2 => List$zipped_with$(x0, x1, x2);

    function List$and$(_list$1) {
        var $3443 = List$all$((_x$2 => {
            var $3444 = _x$2;
            return $3444;
        }), _list$1);
        return $3443;
    };
    const List$and = x0 => List$and$(x0);

    function Litereum$get_file$(_world$1, _name$2) {
        var self = _world$1;
        switch (self._) {
            case 'Litereum.World.new':
                var $3446 = self.entry;
                var $3447 = Maybe$monad$((_m$bind$4 => _m$pure$5 => {
                    var $3448 = _m$bind$4;
                    return $3448;
                }))(Map$get$(_name$2, $3446))((_entry$4 => {
                    var self = _entry$4;
                    switch (self._) {
                        case 'Litereum.Entry.file':
                            var $3450 = self.value;
                            var $3451 = Maybe$some$($3450);
                            var $3449 = $3451;
                            break;
                        case 'Litereum.Entry.data':
                        case 'Litereum.Entry.bond':
                            var $3452 = Maybe$none;
                            var $3449 = $3452;
                            break;
                    };
                    return $3449;
                }));
                var $3445 = $3447;
                break;
        };
        return $3445;
    };
    const Litereum$get_file = x0 => x1 => Litereum$get_file$(x0, x1);

    function Litereum$check$(_context$1, _world$2, _term$3, _type$4) {
        var self = _context$1;
        switch (self._) {
            case 'BBT.tip':
                var self = _world$2;
                switch (self._) {
                    case 'Litereum.World.new':
                        var self = _term$3;
                        switch (self._) {
                            case 'Litereum.Term.var':
                                var $3456 = self.name;
                                var self = Map$get$($3456, _context$1);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3458 = self.value;
                                        var $3459 = Litereum$equal$($3458, _type$4);
                                        var $3457 = $3459;
                                        break;
                                    case 'Maybe.none':
                                        var $3460 = Bool$false;
                                        var $3457 = $3460;
                                        break;
                                };
                                var $3455 = $3457;
                                break;
                            case 'Litereum.Term.call':
                                var $3461 = self.bond;
                                var $3462 = self.args;
                                var self = Litereum$get_bond$(_world$2, $3461);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3464 = self.value;
                                        var _bond$9 = $3464;
                                        var self = _bond$9;
                                        switch (self._) {
                                            case 'Litereum.Bond.new':
                                                var $3466 = self.input_types;
                                                var $3467 = self.output_type;
                                                var _otyp$15 = Litereum$equal$($3467, _type$4);
                                                var _args$16 = List$zip$($3462, $3466);
                                                var _args$17 = List$all$((_x$17 => {
                                                    var $3469 = Litereum$check$(_context$1, _world$2, (() => {
                                                        var self = _x$17;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3470 = self.fst;
                                                                var $3471 = $3470;
                                                                return $3471;
                                                        };
                                                    })(), (() => {
                                                        var self = _x$17;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3472 = self.snd;
                                                                var $3473 = $3472;
                                                                return $3473;
                                                        };
                                                    })());
                                                    return $3469;
                                                }), _args$16);
                                                var $3468 = (_otyp$15 && _args$17);
                                                var $3465 = $3468;
                                                break;
                                        };
                                        var $3463 = $3465;
                                        break;
                                    case 'Maybe.none':
                                        var $3474 = Bool$false;
                                        var $3463 = $3474;
                                        break;
                                };
                                var $3455 = $3463;
                                break;
                            case 'Litereum.Term.let':
                                var $3475 = self.name;
                                var $3476 = self.type;
                                var $3477 = self.expr;
                                var $3478 = self.body;
                                var _expr$10 = Litereum$check$(_context$1, _world$2, $3477, $3476);
                                var _ctx2$11 = Map$set$($3475, $3476, _context$1);
                                var _body$12 = Litereum$check$(_ctx2$11, _world$2, $3478, _type$4);
                                var $3479 = (_expr$10 && _body$12);
                                var $3455 = $3479;
                                break;
                            case 'Litereum.Term.create':
                                var $3480 = self.ctor;
                                var $3481 = self.vals;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.data':
                                        var $3483 = self.name;
                                        var self = Litereum$get_data$(_world$2, $3483);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3485 = self.value;
                                                var _data$10 = $3485;
                                                var self = _data$10;
                                                switch (self._) {
                                                    case 'Litereum.Data.new':
                                                        var self = Litereum$get_constructor_value$(_data$10, $3480);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $3488 = self.value;
                                                                var _ctor$14 = $3488;
                                                                var self = _ctor$14;
                                                                switch (self._) {
                                                                    case 'Litereum.Constructor.new':
                                                                        var $3490 = self.field_types;
                                                                        var _size$18 = ((list_length($3481)) === (list_length($3490)));
                                                                        var _vals$19 = List$zip$($3481, $3490);
                                                                        var _vals$20 = List$all$((_x$20 => {
                                                                            var $3492 = Litereum$check$(_context$1, _world$2, (() => {
                                                                                var self = _x$20;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3493 = self.fst;
                                                                                        var $3494 = $3493;
                                                                                        return $3494;
                                                                                };
                                                                            })(), (() => {
                                                                                var self = _x$20;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3495 = self.snd;
                                                                                        var $3496 = $3495;
                                                                                        return $3496;
                                                                                };
                                                                            })());
                                                                            return $3492;
                                                                        }), _vals$19);
                                                                        var $3491 = (_size$18 && _vals$20);
                                                                        var $3489 = $3491;
                                                                        break;
                                                                };
                                                                var $3487 = $3489;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $3497 = Bool$false;
                                                                var $3487 = $3497;
                                                                break;
                                                        };
                                                        var $3486 = $3487;
                                                        break;
                                                };
                                                var $3484 = $3486;
                                                break;
                                            case 'Maybe.none':
                                                var $3498 = Bool$false;
                                                var $3484 = $3498;
                                                break;
                                        };
                                        var $3482 = $3484;
                                        break;
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.effe':
                                        var $3499 = Bool$false;
                                        var $3482 = $3499;
                                        break;
                                };
                                var $3455 = $3482;
                                break;
                            case 'Litereum.Term.match':
                                var $3500 = self.name;
                                var $3501 = self.data;
                                var $3502 = self.cses;
                                var self = Litereum$get_data$(_world$2, $3501);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3504 = self.value;
                                        var _data$10 = $3504;
                                        var self = _data$10;
                                        switch (self._) {
                                            case 'Litereum.Data.new':
                                                var $3506 = self.constructors;
                                                var _size$13 = ((list_length($3502)) === (list_length($3506)));
                                                var _expr$14 = Litereum$check$(_context$1, _world$2, Litereum$Term$var$($3500), Litereum$Type$data$($3501));
                                                var _cses$15 = List$zipped_with$($3502, $3506, (_case_body$15 => _case_ctor$16 => {
                                                    var _nams$17 = List$map$(a1 => (($3500 + ".") + a1), (() => {
                                                        var self = _case_ctor$16;
                                                        switch (self._) {
                                                            case 'Litereum.Constructor.new':
                                                                var $3509 = self.field_names;
                                                                var $3510 = $3509;
                                                                return $3510;
                                                        };
                                                    })());
                                                    var self = _case_ctor$16;
                                                    switch (self._) {
                                                        case 'Litereum.Constructor.new':
                                                            var $3511 = self.field_types;
                                                            var $3512 = $3511;
                                                            var _typs$18 = $3512;
                                                            break;
                                                    };
                                                    var _ctx2$19 = Litereum$extend$(_context$1, _nams$17, _typs$18);
                                                    var $3508 = Litereum$check$(_ctx2$19, _world$2, _case_body$15, _type$4);
                                                    return $3508;
                                                }));
                                                var $3507 = (_size$13 && List$and$(_cses$15));
                                                var $3505 = $3507;
                                                break;
                                        };
                                        var $3503 = $3505;
                                        break;
                                    case 'Maybe.none':
                                        var $3513 = Bool$false;
                                        var $3503 = $3513;
                                        break;
                                };
                                var $3455 = $3503;
                                break;
                            case 'Litereum.Term.compare':
                                var $3514 = self.val0;
                                var $3515 = self.iflt;
                                var $3516 = self.ifeq;
                                var $3517 = self.ifgt;
                                var _val0$11 = Litereum$check$(_context$1, _world$2, $3514, Litereum$Type$word);
                                var _val1$12 = Litereum$check$(_context$1, _world$2, $3514, Litereum$Type$word);
                                var _iflt$13 = Litereum$check$(_context$1, _world$2, $3515, _type$4);
                                var _ifeq$14 = Litereum$check$(_context$1, _world$2, $3516, _type$4);
                                var _ifgt$15 = Litereum$check$(_context$1, _world$2, $3517, _type$4);
                                var $3518 = (_val0$11 && (_val1$12 && (_iflt$13 && (_ifeq$14 && _ifgt$15))));
                                var $3455 = $3518;
                                break;
                            case 'Litereum.Term.operate':
                                var $3519 = self.val0;
                                var $3520 = self.val1;
                                var _val0$9 = Litereum$check$(_context$1, _world$2, $3519, Litereum$Type$word);
                                var _val1$10 = Litereum$check$(_context$1, _world$2, $3520, Litereum$Type$word);
                                var $3521 = (_val0$9 && _val1$10);
                                var $3455 = $3521;
                                break;
                            case 'Litereum.Term.set':
                                var $3522 = self.file;
                                var $3523 = self.expr;
                                var $3524 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3526 = Bool$false;
                                        var $3525 = $3526;
                                        break;
                                    case 'Litereum.Type.effe':
                                        var self = Litereum$get_file$(_world$2, $3522);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3528 = self.value;
                                                var _file$11 = $3528;
                                                var self = _file$11;
                                                switch (self._) {
                                                    case 'Litereum.File.new':
                                                        var $3530 = self.type;
                                                        var _expr$16 = Litereum$check$(_context$1, _world$2, $3523, $3530);
                                                        var _body$17 = Litereum$check$(_context$1, _world$2, $3524, _type$4);
                                                        var $3531 = (_expr$16 && _body$17);
                                                        var $3529 = $3531;
                                                        break;
                                                };
                                                var $3527 = $3529;
                                                break;
                                            case 'Maybe.none':
                                                var $3532 = Bool$false;
                                                var $3527 = $3532;
                                                break;
                                        };
                                        var $3525 = $3527;
                                        break;
                                };
                                var $3455 = $3525;
                                break;
                            case 'Litereum.Term.get':
                                var $3533 = self.name;
                                var $3534 = self.file;
                                var $3535 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3537 = Bool$false;
                                        var $3536 = $3537;
                                        break;
                                    case 'Litereum.Type.effe':
                                        var self = Litereum$get_file$(_world$2, $3534);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3539 = self.value;
                                                var _file$11 = $3539;
                                                var self = _file$11;
                                                switch (self._) {
                                                    case 'Litereum.File.new':
                                                        var $3541 = self.type;
                                                        var _ctx2$16 = Litereum$extend$(_context$1, List$cons$($3533, List$nil), List$cons$($3541, List$nil));
                                                        var _body$17 = Litereum$check$(_ctx2$16, _world$2, $3535, _type$4);
                                                        var $3542 = _body$17;
                                                        var $3540 = $3542;
                                                        break;
                                                };
                                                var $3538 = $3540;
                                                break;
                                            case 'Maybe.none':
                                                var $3543 = Bool$false;
                                                var $3538 = $3543;
                                                break;
                                        };
                                        var $3536 = $3538;
                                        break;
                                };
                                var $3455 = $3536;
                                break;
                            case 'Litereum.Term.bind':
                                var $3544 = self.name;
                                var $3545 = self.type;
                                var $3546 = self.expr;
                                var $3547 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3549 = Bool$false;
                                        var $3548 = $3549;
                                        break;
                                    case 'Litereum.Type.effe':
                                        var _expr$11 = Litereum$check$(_context$1, _world$2, $3546, Litereum$Type$effe$($3545));
                                        var _ctx2$12 = Map$set$($3544, $3545, _context$1);
                                        var _body$13 = Litereum$check$(_ctx2$12, _world$2, $3547, _type$4);
                                        var $3550 = (_expr$11 && _body$13);
                                        var $3548 = $3550;
                                        break;
                                };
                                var $3455 = $3548;
                                break;
                            case 'Litereum.Term.return':
                                var $3551 = self.expr;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.effe':
                                        var $3553 = self.rety;
                                        var $3554 = Litereum$check$(_context$1, _world$2, $3551, $3553);
                                        var $3552 = $3554;
                                        break;
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3555 = Bool$false;
                                        var $3552 = $3555;
                                        break;
                                };
                                var $3455 = $3552;
                                break;
                            case 'Litereum.Term.word':
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                        var $3557 = Bool$true;
                                        var $3556 = $3557;
                                        break;
                                    case 'Litereum.Type.data':
                                    case 'Litereum.Type.effe':
                                        var $3558 = Bool$false;
                                        var $3556 = $3558;
                                        break;
                                };
                                var $3455 = $3556;
                                break;
                        };
                        var $3454 = $3455;
                        break;
                };
                var $3453 = $3454;
                break;
            case 'BBT.bin':
                var self = _world$2;
                switch (self._) {
                    case 'Litereum.World.new':
                        var self = _term$3;
                        switch (self._) {
                            case 'Litereum.Term.var':
                                var $3561 = self.name;
                                var self = Map$get$($3561, _context$1);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3563 = self.value;
                                        var $3564 = Litereum$equal$($3563, _type$4);
                                        var $3562 = $3564;
                                        break;
                                    case 'Maybe.none':
                                        var $3565 = Bool$false;
                                        var $3562 = $3565;
                                        break;
                                };
                                var $3560 = $3562;
                                break;
                            case 'Litereum.Term.call':
                                var $3566 = self.bond;
                                var $3567 = self.args;
                                var self = Litereum$get_bond$(_world$2, $3566);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3569 = self.value;
                                        var _bond$14 = $3569;
                                        var self = _bond$14;
                                        switch (self._) {
                                            case 'Litereum.Bond.new':
                                                var $3571 = self.input_types;
                                                var $3572 = self.output_type;
                                                var _otyp$20 = Litereum$equal$($3572, _type$4);
                                                var _args$21 = List$zip$($3567, $3571);
                                                var _args$22 = List$all$((_x$22 => {
                                                    var $3574 = Litereum$check$(_context$1, _world$2, (() => {
                                                        var self = _x$22;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3575 = self.fst;
                                                                var $3576 = $3575;
                                                                return $3576;
                                                        };
                                                    })(), (() => {
                                                        var self = _x$22;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $3577 = self.snd;
                                                                var $3578 = $3577;
                                                                return $3578;
                                                        };
                                                    })());
                                                    return $3574;
                                                }), _args$21);
                                                var $3573 = (_otyp$20 && _args$22);
                                                var $3570 = $3573;
                                                break;
                                        };
                                        var $3568 = $3570;
                                        break;
                                    case 'Maybe.none':
                                        var $3579 = Bool$false;
                                        var $3568 = $3579;
                                        break;
                                };
                                var $3560 = $3568;
                                break;
                            case 'Litereum.Term.let':
                                var $3580 = self.name;
                                var $3581 = self.type;
                                var $3582 = self.expr;
                                var $3583 = self.body;
                                var _expr$15 = Litereum$check$(_context$1, _world$2, $3582, $3581);
                                var _ctx2$16 = Map$set$($3580, $3581, _context$1);
                                var _body$17 = Litereum$check$(_ctx2$16, _world$2, $3583, _type$4);
                                var $3584 = (_expr$15 && _body$17);
                                var $3560 = $3584;
                                break;
                            case 'Litereum.Term.create':
                                var $3585 = self.ctor;
                                var $3586 = self.vals;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.data':
                                        var $3588 = self.name;
                                        var self = Litereum$get_data$(_world$2, $3588);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3590 = self.value;
                                                var _data$15 = $3590;
                                                var self = _data$15;
                                                switch (self._) {
                                                    case 'Litereum.Data.new':
                                                        var self = Litereum$get_constructor_value$(_data$15, $3585);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $3593 = self.value;
                                                                var _ctor$19 = $3593;
                                                                var self = _ctor$19;
                                                                switch (self._) {
                                                                    case 'Litereum.Constructor.new':
                                                                        var $3595 = self.field_types;
                                                                        var _size$23 = ((list_length($3586)) === (list_length($3595)));
                                                                        var _vals$24 = List$zip$($3586, $3595);
                                                                        var _vals$25 = List$all$((_x$25 => {
                                                                            var $3597 = Litereum$check$(_context$1, _world$2, (() => {
                                                                                var self = _x$25;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3598 = self.fst;
                                                                                        var $3599 = $3598;
                                                                                        return $3599;
                                                                                };
                                                                            })(), (() => {
                                                                                var self = _x$25;
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $3600 = self.snd;
                                                                                        var $3601 = $3600;
                                                                                        return $3601;
                                                                                };
                                                                            })());
                                                                            return $3597;
                                                                        }), _vals$24);
                                                                        var $3596 = (_size$23 && _vals$25);
                                                                        var $3594 = $3596;
                                                                        break;
                                                                };
                                                                var $3592 = $3594;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $3602 = Bool$false;
                                                                var $3592 = $3602;
                                                                break;
                                                        };
                                                        var $3591 = $3592;
                                                        break;
                                                };
                                                var $3589 = $3591;
                                                break;
                                            case 'Maybe.none':
                                                var $3603 = Bool$false;
                                                var $3589 = $3603;
                                                break;
                                        };
                                        var $3587 = $3589;
                                        break;
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.effe':
                                        var $3604 = Bool$false;
                                        var $3587 = $3604;
                                        break;
                                };
                                var $3560 = $3587;
                                break;
                            case 'Litereum.Term.match':
                                var $3605 = self.name;
                                var $3606 = self.data;
                                var $3607 = self.cses;
                                var self = Litereum$get_data$(_world$2, $3606);
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $3609 = self.value;
                                        var _data$15 = $3609;
                                        var self = _data$15;
                                        switch (self._) {
                                            case 'Litereum.Data.new':
                                                var $3611 = self.constructors;
                                                var _size$18 = ((list_length($3607)) === (list_length($3611)));
                                                var _expr$19 = Litereum$check$(_context$1, _world$2, Litereum$Term$var$($3605), Litereum$Type$data$($3606));
                                                var _cses$20 = List$zipped_with$($3607, $3611, (_case_body$20 => _case_ctor$21 => {
                                                    var _nams$22 = List$map$(a1 => (($3605 + ".") + a1), (() => {
                                                        var self = _case_ctor$21;
                                                        switch (self._) {
                                                            case 'Litereum.Constructor.new':
                                                                var $3614 = self.field_names;
                                                                var $3615 = $3614;
                                                                return $3615;
                                                        };
                                                    })());
                                                    var self = _case_ctor$21;
                                                    switch (self._) {
                                                        case 'Litereum.Constructor.new':
                                                            var $3616 = self.field_types;
                                                            var $3617 = $3616;
                                                            var _typs$23 = $3617;
                                                            break;
                                                    };
                                                    var _ctx2$24 = Litereum$extend$(_context$1, _nams$22, _typs$23);
                                                    var $3613 = Litereum$check$(_ctx2$24, _world$2, _case_body$20, _type$4);
                                                    return $3613;
                                                }));
                                                var $3612 = (_size$18 && List$and$(_cses$20));
                                                var $3610 = $3612;
                                                break;
                                        };
                                        var $3608 = $3610;
                                        break;
                                    case 'Maybe.none':
                                        var $3618 = Bool$false;
                                        var $3608 = $3618;
                                        break;
                                };
                                var $3560 = $3608;
                                break;
                            case 'Litereum.Term.compare':
                                var $3619 = self.val0;
                                var $3620 = self.iflt;
                                var $3621 = self.ifeq;
                                var $3622 = self.ifgt;
                                var _val0$16 = Litereum$check$(_context$1, _world$2, $3619, Litereum$Type$word);
                                var _val1$17 = Litereum$check$(_context$1, _world$2, $3619, Litereum$Type$word);
                                var _iflt$18 = Litereum$check$(_context$1, _world$2, $3620, _type$4);
                                var _ifeq$19 = Litereum$check$(_context$1, _world$2, $3621, _type$4);
                                var _ifgt$20 = Litereum$check$(_context$1, _world$2, $3622, _type$4);
                                var $3623 = (_val0$16 && (_val1$17 && (_iflt$18 && (_ifeq$19 && _ifgt$20))));
                                var $3560 = $3623;
                                break;
                            case 'Litereum.Term.operate':
                                var $3624 = self.val0;
                                var $3625 = self.val1;
                                var _val0$14 = Litereum$check$(_context$1, _world$2, $3624, Litereum$Type$word);
                                var _val1$15 = Litereum$check$(_context$1, _world$2, $3625, Litereum$Type$word);
                                var $3626 = (_val0$14 && _val1$15);
                                var $3560 = $3626;
                                break;
                            case 'Litereum.Term.set':
                                var $3627 = self.file;
                                var $3628 = self.expr;
                                var $3629 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3631 = Bool$false;
                                        var $3630 = $3631;
                                        break;
                                    case 'Litereum.Type.effe':
                                        var self = Litereum$get_file$(_world$2, $3627);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3633 = self.value;
                                                var _file$16 = $3633;
                                                var self = _file$16;
                                                switch (self._) {
                                                    case 'Litereum.File.new':
                                                        var $3635 = self.type;
                                                        var _expr$21 = Litereum$check$(_context$1, _world$2, $3628, $3635);
                                                        var _body$22 = Litereum$check$(_context$1, _world$2, $3629, _type$4);
                                                        var $3636 = (_expr$21 && _body$22);
                                                        var $3634 = $3636;
                                                        break;
                                                };
                                                var $3632 = $3634;
                                                break;
                                            case 'Maybe.none':
                                                var $3637 = Bool$false;
                                                var $3632 = $3637;
                                                break;
                                        };
                                        var $3630 = $3632;
                                        break;
                                };
                                var $3560 = $3630;
                                break;
                            case 'Litereum.Term.get':
                                var $3638 = self.name;
                                var $3639 = self.file;
                                var $3640 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3642 = Bool$false;
                                        var $3641 = $3642;
                                        break;
                                    case 'Litereum.Type.effe':
                                        var self = Litereum$get_file$(_world$2, $3639);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $3644 = self.value;
                                                var _file$16 = $3644;
                                                var self = _file$16;
                                                switch (self._) {
                                                    case 'Litereum.File.new':
                                                        var $3646 = self.type;
                                                        var _ctx2$21 = Litereum$extend$(_context$1, List$cons$($3638, List$nil), List$cons$($3646, List$nil));
                                                        var _body$22 = Litereum$check$(_ctx2$21, _world$2, $3640, _type$4);
                                                        var $3647 = _body$22;
                                                        var $3645 = $3647;
                                                        break;
                                                };
                                                var $3643 = $3645;
                                                break;
                                            case 'Maybe.none':
                                                var $3648 = Bool$false;
                                                var $3643 = $3648;
                                                break;
                                        };
                                        var $3641 = $3643;
                                        break;
                                };
                                var $3560 = $3641;
                                break;
                            case 'Litereum.Term.bind':
                                var $3649 = self.name;
                                var $3650 = self.type;
                                var $3651 = self.expr;
                                var $3652 = self.body;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3654 = Bool$false;
                                        var $3653 = $3654;
                                        break;
                                    case 'Litereum.Type.effe':
                                        var _expr$16 = Litereum$check$(_context$1, _world$2, $3651, Litereum$Type$effe$($3650));
                                        var _ctx2$17 = Map$set$($3649, $3650, _context$1);
                                        var _body$18 = Litereum$check$(_ctx2$17, _world$2, $3652, _type$4);
                                        var $3655 = (_expr$16 && _body$18);
                                        var $3653 = $3655;
                                        break;
                                };
                                var $3560 = $3653;
                                break;
                            case 'Litereum.Term.return':
                                var $3656 = self.expr;
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.effe':
                                        var $3658 = self.rety;
                                        var $3659 = Litereum$check$(_context$1, _world$2, $3656, $3658);
                                        var $3657 = $3659;
                                        break;
                                    case 'Litereum.Type.word':
                                    case 'Litereum.Type.data':
                                        var $3660 = Bool$false;
                                        var $3657 = $3660;
                                        break;
                                };
                                var $3560 = $3657;
                                break;
                            case 'Litereum.Term.word':
                                var self = _type$4;
                                switch (self._) {
                                    case 'Litereum.Type.word':
                                        var $3662 = Bool$true;
                                        var $3661 = $3662;
                                        break;
                                    case 'Litereum.Type.data':
                                    case 'Litereum.Type.effe':
                                        var $3663 = Bool$false;
                                        var $3661 = $3663;
                                        break;
                                };
                                var $3560 = $3661;
                                break;
                        };
                        var $3559 = $3560;
                        break;
                };
                var $3453 = $3559;
                break;
        };
        return $3453;
    };
    const Litereum$check = x0 => x1 => x2 => x3 => Litereum$check$(x0, x1, x2, x3);

    function Litereum$Entry$file$(_value$1) {
        var $3664 = ({
            _: 'Litereum.Entry.file',
            'value': _value$1
        });
        return $3664;
    };
    const Litereum$Entry$file = x0 => Litereum$Entry$file$(x0);

    function Litereum$sanitize$many$(_world$1, _table$2, _fresh$3, _terms$4) {
        var self = _terms$4;
        switch (self._) {
            case 'List.cons':
                var $3666 = self.head;
                var $3667 = self.tail;
                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3666);
                switch (self._) {
                    case 'Pair.new':
                        var $3669 = self.fst;
                        var $3670 = self.snd;
                        var self = Litereum$sanitize$many$(_world$1, _table$2, $3669, $3667);
                        switch (self._) {
                            case 'Pair.new':
                                var $3672 = self.fst;
                                var $3673 = self.snd;
                                var $3674 = Pair$new$($3672, List$cons$($3670, $3673));
                                var $3671 = $3674;
                                break;
                        };
                        var $3668 = $3671;
                        break;
                };
                var $3665 = $3668;
                break;
            case 'List.nil':
                var $3675 = Pair$new$(_fresh$3, List$nil);
                var $3665 = $3675;
                break;
        };
        return $3665;
    };
    const Litereum$sanitize$many = x0 => x1 => x2 => x3 => Litereum$sanitize$many$(x0, x1, x2, x3);

    function Triple$new$(_fst$4, _snd$5, _trd$6) {
        var $3676 = ({
            _: 'Triple.new',
            'fst': _fst$4,
            'snd': _snd$5,
            'trd': _trd$6
        });
        return $3676;
    };
    const Triple$new = x0 => x1 => x2 => Triple$new$(x0, x1, x2);

    function Litereum$rename$(_table$1, _fresh$2, _old_name$3) {
        var _new_name$4 = ("$" + Nat$show$(_fresh$2));
        var _table$5 = Map$set$(_old_name$3, _new_name$4, _table$1);
        var _fresh$6 = Nat$succ$(_fresh$2);
        var $3677 = Triple$new$(_table$5, _fresh$6, _new_name$4);
        return $3677;
    };
    const Litereum$rename = x0 => x1 => x2 => Litereum$rename$(x0, x1, x2);
    const List$for = a0 => a1 => a2 => (list_for(a0)(a1)(a2));

    function Litereum$sanitize$cases$(_world$1, _table$2, _fresh$3, _old_name$4, _new_name$5, _ctrs$6, _cses$7) {
        var self = _ctrs$6;
        switch (self._) {
            case 'List.cons':
                var $3679 = self.head;
                var $3680 = self.tail;
                var self = _cses$7;
                switch (self._) {
                    case 'List.cons':
                        var $3682 = self.head;
                        var $3683 = self.tail;
                        var _new_table$12 = _table$2;
                        var _new_table$13 = (() => {
                            var $3686 = _new_table$12;
                            var self = $3679;
                            switch (self._) {
                                case 'Litereum.Constructor.new':
                                    var $3688 = self.field_names;
                                    var $3689 = $3688;
                                    var $3687 = $3689;
                                    break;
                            };
                            let _new_table$14 = $3686;
                            let _field$13;
                            while ($3687._ === 'List.cons') {
                                _field$13 = $3687.head;
                                var $3686 = Map$set$((_old_name$4 + ("." + _field$13)), (_new_name$5 + ("." + _field$13)), _new_table$14);
                                _new_table$14 = $3686;
                                $3687 = $3687.tail;
                            }
                            return _new_table$14;
                        })();
                        var self = Litereum$sanitize$(_world$1, _new_table$13, _fresh$3, $3682);
                        switch (self._) {
                            case 'Pair.new':
                                var $3690 = self.fst;
                                var $3691 = self.snd;
                                var self = Litereum$sanitize$cases$(_world$1, _table$2, $3690, _old_name$4, _new_name$5, $3680, $3683);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3693 = self.fst;
                                        var $3694 = self.snd;
                                        var $3695 = Pair$new$($3693, List$cons$($3691, $3694));
                                        var $3692 = $3695;
                                        break;
                                };
                                var $3684 = $3692;
                                break;
                        };
                        var $3681 = $3684;
                        break;
                    case 'List.nil':
                        var $3696 = Pair$new$(_fresh$3, List$nil);
                        var $3681 = $3696;
                        break;
                };
                var $3678 = $3681;
                break;
            case 'List.nil':
                var self = _cses$7;
                switch (self._) {
                    case 'List.nil':
                    case 'List.cons':
                        var $3698 = Pair$new$(_fresh$3, List$nil);
                        var $3697 = $3698;
                        break;
                };
                var $3678 = $3697;
                break;
        };
        return $3678;
    };
    const Litereum$sanitize$cases = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Litereum$sanitize$cases$(x0, x1, x2, x3, x4, x5, x6);

    function Litereum$sanitize$(_world$1, _table$2, _fresh$3, _term$4) {
        var self = _term$4;
        switch (self._) {
            case 'Litereum.Term.var':
                var $3700 = self.name;
                var _term$6 = Litereum$Term$var$(Maybe$default$(Map$get$($3700, _table$2), $3700));
                var $3701 = Pair$new$(_fresh$3, _term$6);
                var $3699 = $3701;
                break;
            case 'Litereum.Term.call':
                var $3702 = self.bond;
                var $3703 = self.args;
                var self = Litereum$sanitize$many$(_world$1, _table$2, _fresh$3, $3703);
                switch (self._) {
                    case 'Pair.new':
                        var $3705 = self.fst;
                        var $3706 = self.snd;
                        var $3707 = Pair$new$($3705, Litereum$Term$call$($3702, $3706));
                        var $3704 = $3707;
                        break;
                };
                var $3699 = $3704;
                break;
            case 'Litereum.Term.let':
                var $3708 = self.name;
                var $3709 = self.type;
                var $3710 = self.expr;
                var $3711 = self.body;
                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3710);
                switch (self._) {
                    case 'Pair.new':
                        var $3713 = self.fst;
                        var $3714 = self.snd;
                        var self = Litereum$rename$(_table$2, $3713, $3708);
                        switch (self._) {
                            case 'Triple.new':
                                var $3716 = self.fst;
                                var $3717 = self.snd;
                                var $3718 = self.trd;
                                var self = Litereum$sanitize$(_world$1, $3716, $3717, $3711);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3720 = self.fst;
                                        var $3721 = self.snd;
                                        var $3722 = Pair$new$($3720, Litereum$Term$let$($3718, $3709, $3714, $3721));
                                        var $3719 = $3722;
                                        break;
                                };
                                var $3715 = $3719;
                                break;
                        };
                        var $3712 = $3715;
                        break;
                };
                var $3699 = $3712;
                break;
            case 'Litereum.Term.create':
                var $3723 = self.ctor;
                var $3724 = self.vals;
                var self = Litereum$sanitize$many$(_world$1, _table$2, _fresh$3, $3724);
                switch (self._) {
                    case 'Pair.new':
                        var $3726 = self.fst;
                        var $3727 = self.snd;
                        var $3728 = Pair$new$($3726, Litereum$Term$create$($3723, $3727));
                        var $3725 = $3728;
                        break;
                };
                var $3699 = $3725;
                break;
            case 'Litereum.Term.match':
                var $3729 = self.name;
                var $3730 = self.data;
                var $3731 = self.cses;
                var _ctrs$8 = Maybe$default$(Litereum$get_constructors$(_world$1, $3730), List$nil);
                var _old_name$9 = $3729;
                var _new_name$10 = Maybe$default$(Map$get$($3729, _table$2), $3729);
                var self = Litereum$sanitize$cases$(_world$1, _table$2, _fresh$3, _old_name$9, _new_name$10, _ctrs$8, $3731);
                switch (self._) {
                    case 'Pair.new':
                        var $3733 = self.fst;
                        var $3734 = self.snd;
                        var $3735 = Pair$new$($3733, Litereum$Term$match$(_new_name$10, $3730, $3734));
                        var $3732 = $3735;
                        break;
                };
                var $3699 = $3732;
                break;
            case 'Litereum.Term.word':
                var $3736 = self.numb;
                var $3737 = Pair$new$(_fresh$3, Litereum$Term$word$($3736));
                var $3699 = $3737;
                break;
            case 'Litereum.Term.compare':
                var $3738 = self.val0;
                var $3739 = self.val1;
                var $3740 = self.iflt;
                var $3741 = self.ifeq;
                var $3742 = self.ifgt;
                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3738);
                switch (self._) {
                    case 'Pair.new':
                        var $3744 = self.fst;
                        var $3745 = self.snd;
                        var self = Litereum$sanitize$(_world$1, _table$2, $3744, $3739);
                        switch (self._) {
                            case 'Pair.new':
                                var $3747 = self.fst;
                                var $3748 = self.snd;
                                var self = Litereum$sanitize$(_world$1, _table$2, $3747, $3740);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3750 = self.fst;
                                        var $3751 = self.snd;
                                        var self = Litereum$sanitize$(_world$1, _table$2, $3750, $3741);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3753 = self.fst;
                                                var $3754 = self.snd;
                                                var self = Litereum$sanitize$(_world$1, _table$2, $3753, $3742);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3756 = self.fst;
                                                        var $3757 = self.snd;
                                                        var $3758 = Pair$new$($3756, Litereum$Term$compare$($3745, $3748, $3751, $3754, $3757));
                                                        var $3755 = $3758;
                                                        break;
                                                };
                                                var $3752 = $3755;
                                                break;
                                        };
                                        var $3749 = $3752;
                                        break;
                                };
                                var $3746 = $3749;
                                break;
                        };
                        var $3743 = $3746;
                        break;
                };
                var $3699 = $3743;
                break;
            case 'Litereum.Term.operate':
                var $3759 = self.oper;
                var $3760 = self.val0;
                var $3761 = self.val1;
                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3760);
                switch (self._) {
                    case 'Pair.new':
                        var $3763 = self.fst;
                        var $3764 = self.snd;
                        var self = Litereum$sanitize$(_world$1, _table$2, $3763, $3761);
                        switch (self._) {
                            case 'Pair.new':
                                var $3766 = self.fst;
                                var $3767 = self.snd;
                                var $3768 = Pair$new$($3766, Litereum$Term$operate$($3759, $3764, $3767));
                                var $3765 = $3768;
                                break;
                        };
                        var $3762 = $3765;
                        break;
                };
                var $3699 = $3762;
                break;
            case 'Litereum.Term.set':
                var $3769 = self.file;
                var $3770 = self.expr;
                var $3771 = self.body;
                var self = Litereum$get_file$(_world$1, $3769);
                switch (self._) {
                    case 'Maybe.some':
                        var $3773 = self.value;
                        var _file$9 = $3773;
                        var self = _file$9;
                        switch (self._) {
                            case 'Litereum.File.new':
                                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3770);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3776 = self.fst;
                                        var $3777 = self.snd;
                                        var self = Litereum$sanitize$(_world$1, _table$2, $3776, $3771);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3779 = self.fst;
                                                var $3780 = self.snd;
                                                var $3781 = Pair$new$($3779, Litereum$Term$set$($3769, $3777, $3780));
                                                var $3778 = $3781;
                                                break;
                                        };
                                        var $3775 = $3778;
                                        break;
                                };
                                var $3774 = $3775;
                                break;
                        };
                        var $3772 = $3774;
                        break;
                    case 'Maybe.none':
                        var $3782 = Pair$new$(_fresh$3, _term$4);
                        var $3772 = $3782;
                        break;
                };
                var $3699 = $3772;
                break;
            case 'Litereum.Term.get':
                var $3783 = self.name;
                var $3784 = self.file;
                var $3785 = self.body;
                var self = Litereum$get_file$(_world$1, $3784);
                switch (self._) {
                    case 'Maybe.some':
                        var $3787 = self.value;
                        var _file$9 = $3787;
                        var self = _file$9;
                        switch (self._) {
                            case 'Litereum.File.new':
                                var self = Litereum$rename$(_table$2, _fresh$3, $3783);
                                switch (self._) {
                                    case 'Triple.new':
                                        var $3790 = self.fst;
                                        var $3791 = self.snd;
                                        var $3792 = self.trd;
                                        var self = Litereum$sanitize$(_world$1, $3790, $3791, $3785);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $3794 = self.fst;
                                                var $3795 = self.snd;
                                                var $3796 = Pair$new$($3794, Litereum$Term$get$($3792, $3784, $3795));
                                                var $3793 = $3796;
                                                break;
                                        };
                                        var $3789 = $3793;
                                        break;
                                };
                                var $3788 = $3789;
                                break;
                        };
                        var $3786 = $3788;
                        break;
                    case 'Maybe.none':
                        var $3797 = Pair$new$(_fresh$3, _term$4);
                        var $3786 = $3797;
                        break;
                };
                var $3699 = $3786;
                break;
            case 'Litereum.Term.bind':
                var $3798 = self.name;
                var $3799 = self.type;
                var $3800 = self.expr;
                var $3801 = self.body;
                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3800);
                switch (self._) {
                    case 'Pair.new':
                        var $3803 = self.fst;
                        var $3804 = self.snd;
                        var self = Litereum$rename$(_table$2, $3803, $3798);
                        switch (self._) {
                            case 'Triple.new':
                                var $3806 = self.fst;
                                var $3807 = self.snd;
                                var $3808 = self.trd;
                                var self = Litereum$sanitize$(_world$1, $3806, $3807, $3801);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $3810 = self.fst;
                                        var $3811 = self.snd;
                                        var $3812 = Pair$new$($3810, Litereum$Term$bind$($3808, $3799, $3804, $3811));
                                        var $3809 = $3812;
                                        break;
                                };
                                var $3805 = $3809;
                                break;
                        };
                        var $3802 = $3805;
                        break;
                };
                var $3699 = $3802;
                break;
            case 'Litereum.Term.return':
                var $3813 = self.expr;
                var self = Litereum$sanitize$(_world$1, _table$2, _fresh$3, $3813);
                switch (self._) {
                    case 'Pair.new':
                        var $3815 = self.fst;
                        var $3816 = self.snd;
                        var $3817 = Pair$new$($3815, Litereum$Term$return$($3816));
                        var $3814 = $3817;
                        break;
                };
                var $3699 = $3814;
                break;
        };
        return $3699;
    };
    const Litereum$sanitize = x0 => x1 => x2 => x3 => Litereum$sanitize$(x0, x1, x2, x3);

    function Litereum$Runtime$(_A$1) {
        var $3818 = null;
        return $3818;
    };
    const Litereum$Runtime = x0 => Litereum$Runtime$(x0);

    function Litereum$Runtime$new$(_world$2, _subst$3, _fresh$4, _gas$5, _term$6) {
        var $3819 = ({
            _: 'Litereum.Runtime.new',
            'world': _world$2,
            'subst': _subst$3,
            'fresh': _fresh$4,
            'gas': _gas$5,
            'term': _term$6
        });
        return $3819;
    };
    const Litereum$Runtime$new = x0 => x1 => x2 => x3 => x4 => Litereum$Runtime$new$(x0, x1, x2, x3, x4);

    function Triple$(_A$1, _B$2, _C$3) {
        var $3820 = null;
        return $3820;
    };
    const Triple = x0 => x1 => x2 => Triple$(x0, x1, x2);

    function Litereum$rename$many$(_table$1, _fresh$2, _names$3) {
        var self = _names$3;
        switch (self._) {
            case 'List.cons':
                var $3822 = self.head;
                var $3823 = self.tail;
                var self = Litereum$rename$(_table$1, _fresh$2, $3822);
                switch (self._) {
                    case 'Triple.new':
                        var $3825 = self.fst;
                        var $3826 = self.snd;
                        var $3827 = self.trd;
                        var self = Litereum$rename$many$($3825, $3826, $3823);
                        switch (self._) {
                            case 'Triple.new':
                                var $3829 = self.fst;
                                var $3830 = self.snd;
                                var $3831 = self.trd;
                                var $3832 = Triple$new$($3829, $3830, List$cons$($3827, $3831));
                                var $3828 = $3832;
                                break;
                        };
                        var $3824 = $3828;
                        break;
                };
                var $3821 = $3824;
                break;
            case 'List.nil':
                var $3833 = Triple$new$(_table$1, _fresh$2, List$nil);
                var $3821 = $3833;
                break;
        };
        return $3821;
    };
    const Litereum$rename$many = x0 => x1 => x2 => Litereum$rename$many$(x0, x1, x2);

    function Litereum$get_constructor_index$(_data$1, _name$2) {
        var $3834 = Maybe$mapped$(List$ifind$((_i$3 => _ctr$4 => {
            var $3835 = ((() => {
                var self = _ctr$4;
                switch (self._) {
                    case 'Litereum.Constructor.new':
                        var $3836 = self.name;
                        var $3837 = $3836;
                        return $3837;
                };
            })() === _name$2);
            return $3835;
        }), (() => {
            var self = _data$1;
            switch (self._) {
                case 'Litereum.Data.new':
                    var $3838 = self.constructors;
                    var $3839 = $3838;
                    return $3839;
            };
        })()), (_x$3 => {
            var self = _x$3;
            switch (self._) {
                case 'Pair.new':
                    var $3841 = self.fst;
                    var $3842 = $3841;
                    var $3840 = $3842;
                    break;
            };
            return $3840;
        }));
        return $3834;
    };
    const Litereum$get_constructor_index = x0 => x1 => Litereum$get_constructor_index$(x0, x1);
    const U64$ltn = a0 => a1 => (a0 < a1);
    const U64$eql = a0 => a1 => (a0 === a1);

    function U64$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $3844 = Cmp$ltn;
            var $3843 = $3844;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $3846 = Cmp$eql;
                var $3845 = $3846;
            } else {
                var $3847 = Cmp$gtn;
                var $3845 = $3847;
            };
            var $3843 = $3845;
        };
        return $3843;
    };
    const U64$cmp = x0 => x1 => U64$cmp$(x0, x1);
    const U64$add = a0 => a1 => ((a0 + a1) & 0xFFFFFFFFFFFFFFFFn);
    const U64$sub = a0 => a1 => ((a0 - a1) & 0xFFFFFFFFFFFFFFFFn);
    const U64$mul = a0 => a1 => ((a0 * a1) & 0xFFFFFFFFFFFFFFFFn);

    function Word$bit_length$go$(_word$2, _c$3, _n$4) {
        var Word$bit_length$go$ = (_word$2, _c$3, _n$4) => ({
            ctr: 'TCO',
            arg: [_word$2, _c$3, _n$4]
        });
        var Word$bit_length$go = _word$2 => _c$3 => _n$4 => Word$bit_length$go$(_word$2, _c$3, _n$4);
        var arg = [_word$2, _c$3, _n$4];
        while (true) {
            let [_word$2, _c$3, _n$4] = arg;
            var R = (() => {
                var self = _word$2;
                switch (self._) {
                    case 'Word.o':
                        var $3848 = self.pred;
                        var $3849 = Word$bit_length$go$($3848, Nat$succ$(_c$3), _n$4);
                        return $3849;
                    case 'Word.i':
                        var $3850 = self.pred;
                        var $3851 = Word$bit_length$go$($3850, Nat$succ$(_c$3), Nat$succ$(_c$3));
                        return $3851;
                    case 'Word.e':
                        var $3852 = _n$4;
                        return $3852;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$bit_length$go = x0 => x1 => x2 => Word$bit_length$go$(x0, x1, x2);

    function Word$bit_length$(_word$2) {
        var $3853 = Word$bit_length$go$(_word$2, 0n, 0n);
        return $3853;
    };
    const Word$bit_length = x0 => Word$bit_length$(x0);

    function Cmp$as_gte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $3855 = Bool$false;
                var $3854 = $3855;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $3856 = Bool$true;
                var $3854 = $3856;
                break;
        };
        return $3854;
    };
    const Cmp$as_gte = x0 => Cmp$as_gte$(x0);

    function Word$gte$(_a$2, _b$3) {
        var $3857 = Cmp$as_gte$(Word$cmp$(_a$2, _b$3));
        return $3857;
    };
    const Word$gte = x0 => x1 => Word$gte$(x0, x1);

    function Word$or$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $3859 = self.pred;
                var $3860 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3862 = self.pred;
                            var $3863 = (_a$pred$9 => {
                                var $3864 = Word$o$(Word$or$(_a$pred$9, $3862));
                                return $3864;
                            });
                            var $3861 = $3863;
                            break;
                        case 'Word.i':
                            var $3865 = self.pred;
                            var $3866 = (_a$pred$9 => {
                                var $3867 = Word$i$(Word$or$(_a$pred$9, $3865));
                                return $3867;
                            });
                            var $3861 = $3866;
                            break;
                        case 'Word.e':
                            var $3868 = (_a$pred$7 => {
                                var $3869 = Word$e;
                                return $3869;
                            });
                            var $3861 = $3868;
                            break;
                    };
                    var $3861 = $3861($3859);
                    return $3861;
                });
                var $3858 = $3860;
                break;
            case 'Word.i':
                var $3870 = self.pred;
                var $3871 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3873 = self.pred;
                            var $3874 = (_a$pred$9 => {
                                var $3875 = Word$i$(Word$or$(_a$pred$9, $3873));
                                return $3875;
                            });
                            var $3872 = $3874;
                            break;
                        case 'Word.i':
                            var $3876 = self.pred;
                            var $3877 = (_a$pred$9 => {
                                var $3878 = Word$i$(Word$or$(_a$pred$9, $3876));
                                return $3878;
                            });
                            var $3872 = $3877;
                            break;
                        case 'Word.e':
                            var $3879 = (_a$pred$7 => {
                                var $3880 = Word$e;
                                return $3880;
                            });
                            var $3872 = $3879;
                            break;
                    };
                    var $3872 = $3872($3870);
                    return $3872;
                });
                var $3858 = $3871;
                break;
            case 'Word.e':
                var $3881 = (_b$4 => {
                    var $3882 = Word$e;
                    return $3882;
                });
                var $3858 = $3881;
                break;
        };
        var $3858 = $3858(_b$3);
        return $3858;
    };
    const Word$or = x0 => x1 => Word$or$(x0, x1);

    function Word$shift_right$one$go$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3884 = self.pred;
                var $3885 = Word$o$(Word$shift_right$one$go$($3884));
                var $3883 = $3885;
                break;
            case 'Word.i':
                var $3886 = self.pred;
                var $3887 = Word$i$(Word$shift_right$one$go$($3886));
                var $3883 = $3887;
                break;
            case 'Word.e':
                var $3888 = Word$o$(Word$e);
                var $3883 = $3888;
                break;
        };
        return $3883;
    };
    const Word$shift_right$one$go = x0 => Word$shift_right$one$go$(x0);

    function Word$shift_right$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $3890 = self.pred;
                var $3891 = Word$shift_right$one$go$($3890);
                var $3889 = $3891;
                break;
            case 'Word.i':
                var $3892 = self.pred;
                var $3893 = Word$shift_right$one$go$($3892);
                var $3889 = $3893;
                break;
            case 'Word.e':
                var $3894 = Word$e;
                var $3889 = $3894;
                break;
        };
        return $3889;
    };
    const Word$shift_right$one = x0 => Word$shift_right$one$(x0);

    function Word$shift_right$(_value$2, _n$3) {
        var Word$shift_right$ = (_value$2, _n$3) => ({
            ctr: 'TCO',
            arg: [_value$2, _n$3]
        });
        var Word$shift_right = _value$2 => _n$3 => Word$shift_right$(_value$2, _n$3);
        var arg = [_value$2, _n$3];
        while (true) {
            let [_value$2, _n$3] = arg;
            var R = (() => {
                var self = _n$3;
                if (self === 0n) {
                    var $3895 = _value$2;
                    return $3895;
                } else {
                    var $3896 = (self - 1n);
                    var $3897 = Word$shift_right$(Word$shift_right$one$(_value$2), $3896);
                    return $3897;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_right = x0 => x1 => Word$shift_right$(x0, x1);

    function Word$div$go$(_shift$2, _sub_copy$3, _shift_copy$4, _value$5) {
        var Word$div$go$ = (_shift$2, _sub_copy$3, _shift_copy$4, _value$5) => ({
            ctr: 'TCO',
            arg: [_shift$2, _sub_copy$3, _shift_copy$4, _value$5]
        });
        var Word$div$go = _shift$2 => _sub_copy$3 => _shift_copy$4 => _value$5 => Word$div$go$(_shift$2, _sub_copy$3, _shift_copy$4, _value$5);
        var arg = [_shift$2, _sub_copy$3, _shift_copy$4, _value$5];
        while (true) {
            let [_shift$2, _sub_copy$3, _shift_copy$4, _value$5] = arg;
            var R = (() => {
                var self = Word$gte$(_sub_copy$3, _shift_copy$4);
                if (self) {
                    var _mask$6 = Word$shift_left$(Word$inc$(Word$to_zero$(_sub_copy$3)), _shift$2);
                    var $3898 = Pair$new$(Bool$true, Word$or$(_value$5, _mask$6));
                    var self = $3898;
                } else {
                    var $3899 = Pair$new$(Bool$false, _value$5);
                    var self = $3899;
                };
                switch (self._) {
                    case 'Pair.new':
                        var $3900 = self.fst;
                        var $3901 = self.snd;
                        var self = _shift$2;
                        if (self === 0n) {
                            var $3903 = $3901;
                            var $3902 = $3903;
                        } else {
                            var $3904 = (self - 1n);
                            var _new_shift_copy$9 = Word$shift_right$(_shift_copy$4, 1n);
                            var self = $3900;
                            if (self) {
                                var $3906 = Word$div$go$($3904, Word$sub$(_sub_copy$3, _shift_copy$4), _new_shift_copy$9, $3901);
                                var $3905 = $3906;
                            } else {
                                var $3907 = Word$div$go$($3904, _sub_copy$3, _new_shift_copy$9, $3901);
                                var $3905 = $3907;
                            };
                            var $3902 = $3905;
                        };
                        return $3902;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$div$go = x0 => x1 => x2 => x3 => Word$div$go$(x0, x1, x2, x3);

    function Word$div$(_a$2, _b$3) {
        var _a_bits$4 = Word$bit_length$(_a$2);
        var _b_bits$5 = Word$bit_length$(_b$3);
        var self = (_a_bits$4 < _b_bits$5);
        if (self) {
            var $3909 = Word$to_zero$(_a$2);
            var $3908 = $3909;
        } else {
            var _shift$6 = (_a_bits$4 - _b_bits$5 <= 0n ? 0n : _a_bits$4 - _b_bits$5);
            var _shift_copy$7 = Word$shift_left$(_b$3, _shift$6);
            var $3910 = Word$div$go$(_shift$6, _a$2, _shift_copy$7, Word$to_zero$(_a$2));
            var $3908 = $3910;
        };
        return $3908;
    };
    const Word$div = x0 => x1 => Word$div$(x0, x1);
    const U64$div = a0 => a1 => ((a0 / a1) & 0xFFFFFFFFFFFFFFFFn);

    function Word$mod$(_a$2, _b$3) {
        var _q$4 = Word$div$(_a$2, _b$3);
        var $3911 = Word$sub$(_a$2, Word$mul$(_b$3, _q$4));
        return $3911;
    };
    const Word$mod = x0 => x1 => Word$mod$(x0, x1);
    const U64$mod = a0 => a1 => (a0 % a1);
    const U64$or = a0 => a1 => (a0 | a1);

    function Word$and$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $3913 = self.pred;
                var $3914 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3916 = self.pred;
                            var $3917 = (_a$pred$9 => {
                                var $3918 = Word$o$(Word$and$(_a$pred$9, $3916));
                                return $3918;
                            });
                            var $3915 = $3917;
                            break;
                        case 'Word.i':
                            var $3919 = self.pred;
                            var $3920 = (_a$pred$9 => {
                                var $3921 = Word$o$(Word$and$(_a$pred$9, $3919));
                                return $3921;
                            });
                            var $3915 = $3920;
                            break;
                        case 'Word.e':
                            var $3922 = (_a$pred$7 => {
                                var $3923 = Word$e;
                                return $3923;
                            });
                            var $3915 = $3922;
                            break;
                    };
                    var $3915 = $3915($3913);
                    return $3915;
                });
                var $3912 = $3914;
                break;
            case 'Word.i':
                var $3924 = self.pred;
                var $3925 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3927 = self.pred;
                            var $3928 = (_a$pred$9 => {
                                var $3929 = Word$o$(Word$and$(_a$pred$9, $3927));
                                return $3929;
                            });
                            var $3926 = $3928;
                            break;
                        case 'Word.i':
                            var $3930 = self.pred;
                            var $3931 = (_a$pred$9 => {
                                var $3932 = Word$i$(Word$and$(_a$pred$9, $3930));
                                return $3932;
                            });
                            var $3926 = $3931;
                            break;
                        case 'Word.e':
                            var $3933 = (_a$pred$7 => {
                                var $3934 = Word$e;
                                return $3934;
                            });
                            var $3926 = $3933;
                            break;
                    };
                    var $3926 = $3926($3924);
                    return $3926;
                });
                var $3912 = $3925;
                break;
            case 'Word.e':
                var $3935 = (_b$4 => {
                    var $3936 = Word$e;
                    return $3936;
                });
                var $3912 = $3935;
                break;
        };
        var $3912 = $3912(_b$3);
        return $3912;
    };
    const Word$and = x0 => x1 => Word$and$(x0, x1);
    const U64$and = a0 => a1 => (a0 & a1);

    function Word$xor$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $3938 = self.pred;
                var $3939 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3941 = self.pred;
                            var $3942 = (_a$pred$9 => {
                                var $3943 = Word$o$(Word$xor$(_a$pred$9, $3941));
                                return $3943;
                            });
                            var $3940 = $3942;
                            break;
                        case 'Word.i':
                            var $3944 = self.pred;
                            var $3945 = (_a$pred$9 => {
                                var $3946 = Word$i$(Word$xor$(_a$pred$9, $3944));
                                return $3946;
                            });
                            var $3940 = $3945;
                            break;
                        case 'Word.e':
                            var $3947 = (_a$pred$7 => {
                                var $3948 = Word$e;
                                return $3948;
                            });
                            var $3940 = $3947;
                            break;
                    };
                    var $3940 = $3940($3938);
                    return $3940;
                });
                var $3937 = $3939;
                break;
            case 'Word.i':
                var $3949 = self.pred;
                var $3950 = (_b$6 => {
                    var self = _b$6;
                    switch (self._) {
                        case 'Word.o':
                            var $3952 = self.pred;
                            var $3953 = (_a$pred$9 => {
                                var $3954 = Word$i$(Word$xor$(_a$pred$9, $3952));
                                return $3954;
                            });
                            var $3951 = $3953;
                            break;
                        case 'Word.i':
                            var $3955 = self.pred;
                            var $3956 = (_a$pred$9 => {
                                var $3957 = Word$o$(Word$xor$(_a$pred$9, $3955));
                                return $3957;
                            });
                            var $3951 = $3956;
                            break;
                        case 'Word.e':
                            var $3958 = (_a$pred$7 => {
                                var $3959 = Word$e;
                                return $3959;
                            });
                            var $3951 = $3958;
                            break;
                    };
                    var $3951 = $3951($3949);
                    return $3951;
                });
                var $3937 = $3950;
                break;
            case 'Word.e':
                var $3960 = (_b$4 => {
                    var $3961 = Word$e;
                    return $3961;
                });
                var $3937 = $3960;
                break;
        };
        var $3937 = $3937(_b$3);
        return $3937;
    };
    const Word$xor = x0 => x1 => Word$xor$(x0, x1);
    const U64$xor = a0 => a1 => (a0 ^ a1);

    function Litereum$reduce$(_state$1) {
        var self = _state$1;
        switch (self._) {
            case 'Litereum.Runtime.new':
                var $3963 = self.world;
                var $3964 = self.subst;
                var $3965 = self.fresh;
                var $3966 = self.gas;
                var $3967 = self.term;
                var self = $3967;
                switch (self._) {
                    case 'Litereum.Term.var':
                        var $3969 = self.name;
                        var _term$8 = Maybe$default$(Map$get$($3969, $3964), $3967);
                        var self = Litereum$reduce$(Litereum$Runtime$new$($3963, $3964, $3965, $3966, _term$8));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $3971 = self.world;
                                var $3972 = self.subst;
                                var $3973 = self.fresh;
                                var $3974 = self.gas;
                                var $3975 = self.term;
                                var $3976 = Litereum$Runtime$new$($3971, Map$set$($3969, $3975, $3972), $3973, $3974, $3975);
                                var $3970 = $3976;
                                break;
                        };
                        var $3968 = $3970;
                        break;
                    case 'Litereum.Term.call':
                        var $3977 = self.bond;
                        var $3978 = self.args;
                        var self = Litereum$get_bond$($3963, $3977);
                        switch (self._) {
                            case 'Maybe.some':
                                var $3980 = self.value;
                                var _bond$10 = $3980;
                                var self = _bond$10;
                                switch (self._) {
                                    case 'Litereum.Bond.new':
                                        var $3982 = self.input_names;
                                        var $3983 = self.main;
                                        var self = Litereum$rename$many$(Map$from_list$(List$nil), $3965, $3982);
                                        switch (self._) {
                                            case 'Triple.new':
                                                var $3985 = self.fst;
                                                var $3986 = self.snd;
                                                var $3987 = self.trd;
                                                var self = Litereum$sanitize$($3963, $3985, $3986, $3983);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $3989 = self.fst;
                                                        var $3990 = self.snd;
                                                        var _subst$21 = Litereum$extend$($3964, $3987, $3978);
                                                        var $3991 = Litereum$reduce$(Litereum$Runtime$new$($3963, _subst$21, $3989, $3966, $3990));
                                                        var $3988 = $3991;
                                                        break;
                                                };
                                                var $3984 = $3988;
                                                break;
                                        };
                                        var $3981 = $3984;
                                        break;
                                };
                                var $3979 = $3981;
                                break;
                            case 'Maybe.none':
                                var $3992 = _state$1;
                                var $3979 = $3992;
                                break;
                        };
                        var $3968 = $3979;
                        break;
                    case 'Litereum.Term.let':
                        var $3993 = self.name;
                        var $3994 = self.expr;
                        var $3995 = self.body;
                        var $3996 = Litereum$reduce$(Litereum$Runtime$new$($3963, Map$set$($3993, $3994, $3964), $3965, $3966, $3995));
                        var $3968 = $3996;
                        break;
                    case 'Litereum.Term.match':
                        var $3997 = self.name;
                        var $3998 = self.data;
                        var $3999 = self.cses;
                        var self = Litereum$reduce$(Litereum$Runtime$new$($3963, $3964, $3965, $3966, Maybe$default$(Map$get$($3997, $3964), Litereum$Term$word$(0n))));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4001 = self.world;
                                var $4002 = self.subst;
                                var $4003 = self.fresh;
                                var $4004 = self.gas;
                                var $4005 = self.term;
                                var self = $4005;
                                switch (self._) {
                                    case 'Litereum.Term.create':
                                        var $4007 = self.ctor;
                                        var $4008 = self.vals;
                                        var self = Litereum$get_data$($4001, $3998);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $4010 = self.value;
                                                var _data$18 = $4010;
                                                var self = _data$18;
                                                switch (self._) {
                                                    case 'Litereum.Data.new':
                                                        var self = Litereum$get_constructor_value$(_data$18, $4007);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $4013 = self.value;
                                                                var _ctor$22 = $4013;
                                                                var self = _ctor$22;
                                                                switch (self._) {
                                                                    case 'Litereum.Constructor.new':
                                                                        var self = Litereum$get_constructor_index$(_data$18, $4007);
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4016 = self.value;
                                                                                var self = List$get$($4016, $3999);
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $4018 = self.value;
                                                                                        var _nams$28 = List$map$(a1 => (($3997 + ".") + a1), (() => {
                                                                                            var self = _ctor$22;
                                                                                            switch (self._) {
                                                                                                case 'Litereum.Constructor.new':
                                                                                                    var $4020 = self.field_names;
                                                                                                    var $4021 = $4020;
                                                                                                    return $4021;
                                                                                            };
                                                                                        })());
                                                                                        var _subst$29 = Litereum$extend$($4002, _nams$28, $4008);
                                                                                        var $4019 = Litereum$reduce$(Litereum$Runtime$new$($4001, _subst$29, $4003, $4004, $4018));
                                                                                        var $4017 = $4019;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $4022 = _state$1;
                                                                                        var $4017 = $4022;
                                                                                        break;
                                                                                };
                                                                                var $4015 = $4017;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4023 = _state$1;
                                                                                var $4015 = $4023;
                                                                                break;
                                                                        };
                                                                        var $4014 = $4015;
                                                                        break;
                                                                };
                                                                var $4012 = $4014;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $4024 = _state$1;
                                                                var $4012 = $4024;
                                                                break;
                                                        };
                                                        var $4011 = $4012;
                                                        break;
                                                };
                                                var $4009 = $4011;
                                                break;
                                            case 'Maybe.none':
                                                var $4025 = _state$1;
                                                var $4009 = $4025;
                                                break;
                                        };
                                        var $4006 = $4009;
                                        break;
                                    case 'Litereum.Term.var':
                                    case 'Litereum.Term.call':
                                    case 'Litereum.Term.let':
                                    case 'Litereum.Term.match':
                                    case 'Litereum.Term.word':
                                    case 'Litereum.Term.compare':
                                    case 'Litereum.Term.operate':
                                    case 'Litereum.Term.set':
                                    case 'Litereum.Term.get':
                                    case 'Litereum.Term.bind':
                                    case 'Litereum.Term.return':
                                        var $4026 = _state$1;
                                        var $4006 = $4026;
                                        break;
                                };
                                var $4000 = $4006;
                                break;
                        };
                        var $3968 = $4000;
                        break;
                    case 'Litereum.Term.compare':
                        var $4027 = self.val0;
                        var $4028 = self.val1;
                        var $4029 = self.iflt;
                        var $4030 = self.ifeq;
                        var $4031 = self.ifgt;
                        var self = Litereum$reduce$(Litereum$Runtime$new$($3963, $3964, $3965, $3966, $4027));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4033 = self.world;
                                var $4034 = self.subst;
                                var $4035 = self.fresh;
                                var $4036 = self.gas;
                                var $4037 = self.term;
                                var self = Litereum$reduce$(Litereum$Runtime$new$($4033, $4034, $4035, $4036, $4028));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $4039 = self.world;
                                        var $4040 = self.subst;
                                        var $4041 = self.fresh;
                                        var $4042 = self.gas;
                                        var $4043 = self.term;
                                        var self = $4037;
                                        switch (self._) {
                                            case 'Litereum.Term.word':
                                                var $4045 = self.numb;
                                                var self = $4043;
                                                switch (self._) {
                                                    case 'Litereum.Term.word':
                                                        var $4047 = self.numb;
                                                        var self = U64$cmp$($4045, $4047);
                                                        switch (self._) {
                                                            case 'Cmp.ltn':
                                                                var $4049 = Litereum$reduce$(Litereum$Runtime$new$($4039, $4040, $4041, $4042, $4029));
                                                                var $4048 = $4049;
                                                                break;
                                                            case 'Cmp.eql':
                                                                var $4050 = Litereum$reduce$(Litereum$Runtime$new$($4039, $4040, $4041, $4042, $4030));
                                                                var $4048 = $4050;
                                                                break;
                                                            case 'Cmp.gtn':
                                                                var $4051 = Litereum$reduce$(Litereum$Runtime$new$($4039, $4040, $4041, $4042, $4031));
                                                                var $4048 = $4051;
                                                                break;
                                                        };
                                                        var $4046 = $4048;
                                                        break;
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.set':
                                                    case 'Litereum.Term.get':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4052 = _state$1;
                                                        var $4046 = $4052;
                                                        break;
                                                };
                                                var $4044 = $4046;
                                                break;
                                            case 'Litereum.Term.var':
                                            case 'Litereum.Term.return':
                                                var self = $4043;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.set':
                                                    case 'Litereum.Term.get':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4054 = _state$1;
                                                        var $4053 = $4054;
                                                        break;
                                                };
                                                var $4044 = $4053;
                                                break;
                                            case 'Litereum.Term.call':
                                            case 'Litereum.Term.create':
                                                var self = $4043;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.set':
                                                    case 'Litereum.Term.get':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4056 = _state$1;
                                                        var $4055 = $4056;
                                                        break;
                                                };
                                                var $4044 = $4055;
                                                break;
                                            case 'Litereum.Term.let':
                                            case 'Litereum.Term.bind':
                                                var self = $4043;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.set':
                                                    case 'Litereum.Term.get':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4058 = _state$1;
                                                        var $4057 = $4058;
                                                        break;
                                                };
                                                var $4044 = $4057;
                                                break;
                                            case 'Litereum.Term.match':
                                            case 'Litereum.Term.operate':
                                            case 'Litereum.Term.set':
                                            case 'Litereum.Term.get':
                                                var self = $4043;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.set':
                                                    case 'Litereum.Term.get':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4060 = _state$1;
                                                        var $4059 = $4060;
                                                        break;
                                                };
                                                var $4044 = $4059;
                                                break;
                                            case 'Litereum.Term.compare':
                                                var self = $4043;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.set':
                                                    case 'Litereum.Term.get':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4062 = _state$1;
                                                        var $4061 = $4062;
                                                        break;
                                                };
                                                var $4044 = $4061;
                                                break;
                                        };
                                        var $4038 = $4044;
                                        break;
                                };
                                var $4032 = $4038;
                                break;
                        };
                        var $3968 = $4032;
                        break;
                    case 'Litereum.Term.operate':
                        var $4063 = self.oper;
                        var $4064 = self.val0;
                        var $4065 = self.val1;
                        var self = Litereum$reduce$(Litereum$Runtime$new$($3963, $3964, $3965, $3966, $4064));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4067 = self.world;
                                var $4068 = self.subst;
                                var $4069 = self.fresh;
                                var $4070 = self.gas;
                                var $4071 = self.term;
                                var self = Litereum$reduce$(Litereum$Runtime$new$($4067, $4068, $4069, $4070, $4065));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $4073 = self.world;
                                        var $4074 = self.subst;
                                        var $4075 = self.fresh;
                                        var $4076 = self.gas;
                                        var $4077 = self.term;
                                        var self = $4071;
                                        switch (self._) {
                                            case 'Litereum.Term.word':
                                                var $4079 = self.numb;
                                                var self = $4077;
                                                switch (self._) {
                                                    case 'Litereum.Term.word':
                                                        var $4081 = self.numb;
                                                        var self = $4063;
                                                        switch (self._) {
                                                            case 'Litereum.Operation.add':
                                                                var $4083 = Litereum$Runtime$new$($4073, $4074, $4075, $4076, Litereum$Term$word$((($4079 + $4081) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4082 = $4083;
                                                                break;
                                                            case 'Litereum.Operation.sub':
                                                                var $4084 = Litereum$Runtime$new$($4073, $4074, $4075, $4076, Litereum$Term$word$((($4079 - $4081) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4082 = $4084;
                                                                break;
                                                            case 'Litereum.Operation.mul':
                                                                var $4085 = Litereum$Runtime$new$($4073, $4074, $4075, $4076, Litereum$Term$word$((($4079 * $4081) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4082 = $4085;
                                                                break;
                                                            case 'Litereum.Operation.div':
                                                                var $4086 = Litereum$Runtime$new$($4073, $4074, $4075, $4076, Litereum$Term$word$((($4079 / $4081) & 0xFFFFFFFFFFFFFFFFn)));
                                                                var $4082 = $4086;
                                                                break;
                                                            case 'Litereum.Operation.mod':
                                                                var $4087 = Litereum$Runtime$new$($4073, $4074, $4075, $4076, Litereum$Term$word$(($4079 % $4081)));
                                                                var $4082 = $4087;
                                                                break;
                                                            case 'Litereum.Operation.or':
                                                                var $4088 = Litereum$Runtime$new$($4073, $4074, $4075, $4076, Litereum$Term$word$(($4079 | $4081)));
                                                                var $4082 = $4088;
                                                                break;
                                                            case 'Litereum.Operation.and':
                                                                var $4089 = Litereum$Runtime$new$($4073, $4074, $4075, $4076, Litereum$Term$word$(($4079 & $4081)));
                                                                var $4082 = $4089;
                                                                break;
                                                            case 'Litereum.Operation.xor':
                                                                var $4090 = Litereum$Runtime$new$($4073, $4074, $4075, $4076, Litereum$Term$word$(($4079 ^ $4081)));
                                                                var $4082 = $4090;
                                                                break;
                                                        };
                                                        var $4080 = $4082;
                                                        break;
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.set':
                                                    case 'Litereum.Term.get':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4091 = _state$1;
                                                        var $4080 = $4091;
                                                        break;
                                                };
                                                var $4078 = $4080;
                                                break;
                                            case 'Litereum.Term.var':
                                            case 'Litereum.Term.return':
                                                var self = $4077;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.set':
                                                    case 'Litereum.Term.get':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4093 = _state$1;
                                                        var $4092 = $4093;
                                                        break;
                                                };
                                                var $4078 = $4092;
                                                break;
                                            case 'Litereum.Term.call':
                                            case 'Litereum.Term.create':
                                                var self = $4077;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.set':
                                                    case 'Litereum.Term.get':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4095 = _state$1;
                                                        var $4094 = $4095;
                                                        break;
                                                };
                                                var $4078 = $4094;
                                                break;
                                            case 'Litereum.Term.let':
                                            case 'Litereum.Term.bind':
                                                var self = $4077;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.set':
                                                    case 'Litereum.Term.get':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4097 = _state$1;
                                                        var $4096 = $4097;
                                                        break;
                                                };
                                                var $4078 = $4096;
                                                break;
                                            case 'Litereum.Term.match':
                                            case 'Litereum.Term.operate':
                                            case 'Litereum.Term.set':
                                            case 'Litereum.Term.get':
                                                var self = $4077;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.set':
                                                    case 'Litereum.Term.get':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4099 = _state$1;
                                                        var $4098 = $4099;
                                                        break;
                                                };
                                                var $4078 = $4098;
                                                break;
                                            case 'Litereum.Term.compare':
                                                var self = $4077;
                                                switch (self._) {
                                                    case 'Litereum.Term.var':
                                                    case 'Litereum.Term.call':
                                                    case 'Litereum.Term.let':
                                                    case 'Litereum.Term.create':
                                                    case 'Litereum.Term.match':
                                                    case 'Litereum.Term.word':
                                                    case 'Litereum.Term.compare':
                                                    case 'Litereum.Term.operate':
                                                    case 'Litereum.Term.set':
                                                    case 'Litereum.Term.get':
                                                    case 'Litereum.Term.bind':
                                                    case 'Litereum.Term.return':
                                                        var $4101 = _state$1;
                                                        var $4100 = $4101;
                                                        break;
                                                };
                                                var $4078 = $4100;
                                                break;
                                        };
                                        var $4072 = $4078;
                                        break;
                                };
                                var $4066 = $4072;
                                break;
                        };
                        var $3968 = $4066;
                        break;
                    case 'Litereum.Term.create':
                    case 'Litereum.Term.word':
                    case 'Litereum.Term.set':
                    case 'Litereum.Term.get':
                    case 'Litereum.Term.bind':
                    case 'Litereum.Term.return':
                        var $4102 = _state$1;
                        var $3968 = $4102;
                        break;
                };
                var $3962 = $3968;
                break;
        };
        return $3962;
    };
    const Litereum$reduce = x0 => Litereum$reduce$(x0);

    function Litereum$normalize$many$(_state$1) {
        var self = _state$1;
        switch (self._) {
            case 'Litereum.Runtime.new':
                var $4104 = self.world;
                var $4105 = self.subst;
                var $4106 = self.fresh;
                var $4107 = self.gas;
                var $4108 = self.term;
                var self = $4108;
                switch (self._) {
                    case 'List.cons':
                        var $4110 = self.head;
                        var $4111 = self.tail;
                        var self = Litereum$normalize$(Litereum$Runtime$new$($4104, $4105, $4106, $4107, $4110));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4113 = self.world;
                                var $4114 = self.subst;
                                var $4115 = self.fresh;
                                var $4116 = self.gas;
                                var $4117 = self.term;
                                var self = Litereum$normalize$many$(Litereum$Runtime$new$($4113, $4114, $4115, $4116, $4111));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $4119 = self.world;
                                        var $4120 = self.subst;
                                        var $4121 = self.fresh;
                                        var $4122 = self.gas;
                                        var $4123 = self.term;
                                        var $4124 = Litereum$Runtime$new$($4119, $4120, $4121, $4122, List$cons$($4117, $4123));
                                        var $4118 = $4124;
                                        break;
                                };
                                var $4112 = $4118;
                                break;
                        };
                        var $4109 = $4112;
                        break;
                    case 'List.nil':
                        var $4125 = _state$1;
                        var $4109 = $4125;
                        break;
                };
                var $4103 = $4109;
                break;
        };
        return $4103;
    };
    const Litereum$normalize$many = x0 => Litereum$normalize$many$(x0);

    function Litereum$normalize$cases$(_ctrs$1, _name$2, _state$3) {
        var self = _state$3;
        switch (self._) {
            case 'Litereum.Runtime.new':
                var $4127 = self.world;
                var $4128 = self.subst;
                var $4129 = self.fresh;
                var $4130 = self.gas;
                var $4131 = self.term;
                var self = _ctrs$1;
                switch (self._) {
                    case 'List.cons':
                        var $4133 = self.head;
                        var $4134 = self.tail;
                        var self = $4131;
                        switch (self._) {
                            case 'List.cons':
                                var $4136 = self.head;
                                var $4137 = self.tail;
                                var _nams$13 = List$map$(a1 => ((_name$2 + ".") + a1), (() => {
                                    var self = $4133;
                                    switch (self._) {
                                        case 'Litereum.Constructor.new':
                                            var $4139 = self.field_names;
                                            var $4140 = $4139;
                                            return $4140;
                                    };
                                })());
                                var _vals$14 = List$map$(Litereum$Term$var, _nams$13);
                                var _subst$15 = Litereum$extend$($4128, _nams$13, _vals$14);
                                var self = Litereum$normalize$(Litereum$Runtime$new$($4127, _subst$15, $4129, $4130, $4136));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $4141 = self.world;
                                        var $4142 = self.subst;
                                        var $4143 = self.fresh;
                                        var $4144 = self.gas;
                                        var $4145 = self.term;
                                        var self = Litereum$normalize$cases$($4134, _name$2, Litereum$Runtime$new$($4141, $4142, $4143, $4144, $4137));
                                        switch (self._) {
                                            case 'Litereum.Runtime.new':
                                                var $4147 = self.world;
                                                var $4148 = self.subst;
                                                var $4149 = self.fresh;
                                                var $4150 = self.gas;
                                                var $4151 = self.term;
                                                var $4152 = Litereum$Runtime$new$($4147, $4148, $4149, $4150, List$cons$($4145, $4151));
                                                var $4146 = $4152;
                                                break;
                                        };
                                        var $4138 = $4146;
                                        break;
                                };
                                var $4135 = $4138;
                                break;
                            case 'List.nil':
                                var $4153 = _state$3;
                                var $4135 = $4153;
                                break;
                        };
                        var $4132 = $4135;
                        break;
                    case 'List.nil':
                        var self = $4131;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $4155 = _state$3;
                                var $4154 = $4155;
                                break;
                        };
                        var $4132 = $4154;
                        break;
                };
                var $4126 = $4132;
                break;
        };
        return $4126;
    };
    const Litereum$normalize$cases = x0 => x1 => x2 => Litereum$normalize$cases$(x0, x1, x2);

    function Litereum$normalize$(_state$1) {
        var self = Litereum$reduce$(_state$1);
        switch (self._) {
            case 'Litereum.Runtime.new':
                var $4157 = self.world;
                var $4158 = self.subst;
                var $4159 = self.fresh;
                var $4160 = self.gas;
                var $4161 = self.term;
                var self = $4161;
                switch (self._) {
                    case 'Litereum.Term.create':
                        var $4163 = self.ctor;
                        var $4164 = self.vals;
                        var self = Litereum$normalize$many$(Litereum$Runtime$new$($4157, $4158, $4159, $4160, $4164));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4166 = self.world;
                                var $4167 = self.subst;
                                var $4168 = self.fresh;
                                var $4169 = self.gas;
                                var $4170 = self.term;
                                var $4171 = Litereum$Runtime$new$($4166, $4167, $4168, $4169, Litereum$Term$create$($4163, $4170));
                                var $4165 = $4171;
                                break;
                        };
                        var $4162 = $4165;
                        break;
                    case 'Litereum.Term.match':
                        var $4172 = self.name;
                        var $4173 = self.data;
                        var $4174 = self.cses;
                        var self = Litereum$get_constructors$($4157, $4173);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4176 = self.value;
                                var _ctrs$11 = $4176;
                                var self = _ctrs$11;
                                switch (self._) {
                                    case 'List.nil':
                                        var self = Litereum$normalize$cases$(_ctrs$11, $4172, Litereum$Runtime$new$($4157, $4158, $4159, $4160, $4174));
                                        switch (self._) {
                                            case 'Litereum.Runtime.new':
                                                var $4179 = self.world;
                                                var $4180 = self.subst;
                                                var $4181 = self.fresh;
                                                var $4182 = self.gas;
                                                var $4183 = self.term;
                                                var $4184 = Litereum$Runtime$new$($4179, $4180, $4181, $4182, Litereum$Term$match$($4172, $4173, $4183));
                                                var $4178 = $4184;
                                                break;
                                        };
                                        var $4177 = $4178;
                                        break;
                                    case 'List.cons':
                                        var self = Litereum$normalize$cases$(_ctrs$11, $4172, Litereum$Runtime$new$($4157, $4158, $4159, $4160, $4174));
                                        switch (self._) {
                                            case 'Litereum.Runtime.new':
                                                var $4186 = self.world;
                                                var $4187 = self.subst;
                                                var $4188 = self.fresh;
                                                var $4189 = self.gas;
                                                var $4190 = self.term;
                                                var $4191 = Litereum$Runtime$new$($4186, $4187, $4188, $4189, Litereum$Term$match$($4172, $4173, $4190));
                                                var $4185 = $4191;
                                                break;
                                        };
                                        var $4177 = $4185;
                                        break;
                                };
                                var $4175 = $4177;
                                break;
                            case 'Maybe.none':
                                var $4192 = Litereum$Runtime$new$($4157, $4158, $4159, $4160, $4161);
                                var $4175 = $4192;
                                break;
                        };
                        var $4162 = $4175;
                        break;
                    case 'Litereum.Term.compare':
                        var $4193 = self.val0;
                        var $4194 = self.val1;
                        var $4195 = self.iflt;
                        var $4196 = self.ifeq;
                        var $4197 = self.ifgt;
                        var self = Litereum$normalize$(Litereum$Runtime$new$($4157, $4158, $4159, $4160, $4193));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4199 = self.world;
                                var $4200 = self.subst;
                                var $4201 = self.fresh;
                                var $4202 = self.gas;
                                var $4203 = self.term;
                                var self = Litereum$normalize$(Litereum$Runtime$new$($4199, $4200, $4201, $4202, $4194));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $4205 = self.world;
                                        var $4206 = self.subst;
                                        var $4207 = self.fresh;
                                        var $4208 = self.gas;
                                        var $4209 = self.term;
                                        var self = Litereum$normalize$(Litereum$Runtime$new$($4205, $4206, $4207, $4208, $4195));
                                        switch (self._) {
                                            case 'Litereum.Runtime.new':
                                                var $4211 = self.world;
                                                var $4212 = self.subst;
                                                var $4213 = self.fresh;
                                                var $4214 = self.gas;
                                                var $4215 = self.term;
                                                var self = Litereum$normalize$(Litereum$Runtime$new$($4211, $4212, $4213, $4214, $4196));
                                                switch (self._) {
                                                    case 'Litereum.Runtime.new':
                                                        var $4217 = self.world;
                                                        var $4218 = self.subst;
                                                        var $4219 = self.fresh;
                                                        var $4220 = self.gas;
                                                        var $4221 = self.term;
                                                        var self = Litereum$normalize$(Litereum$Runtime$new$($4217, $4218, $4219, $4220, $4197));
                                                        switch (self._) {
                                                            case 'Litereum.Runtime.new':
                                                                var $4223 = self.world;
                                                                var $4224 = self.subst;
                                                                var $4225 = self.fresh;
                                                                var $4226 = self.gas;
                                                                var $4227 = self.term;
                                                                var $4228 = Litereum$Runtime$new$($4223, $4224, $4225, $4226, Litereum$Term$compare$($4203, $4209, $4215, $4221, $4227));
                                                                var $4222 = $4228;
                                                                break;
                                                        };
                                                        var $4216 = $4222;
                                                        break;
                                                };
                                                var $4210 = $4216;
                                                break;
                                        };
                                        var $4204 = $4210;
                                        break;
                                };
                                var $4198 = $4204;
                                break;
                        };
                        var $4162 = $4198;
                        break;
                    case 'Litereum.Term.operate':
                        var $4229 = self.oper;
                        var $4230 = self.val0;
                        var $4231 = self.val1;
                        var self = Litereum$normalize$(Litereum$Runtime$new$($4157, $4158, $4159, $4160, $4230));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4233 = self.world;
                                var $4234 = self.subst;
                                var $4235 = self.fresh;
                                var $4236 = self.gas;
                                var $4237 = self.term;
                                var self = Litereum$normalize$(Litereum$Runtime$new$($4233, $4234, $4235, $4236, $4231));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $4239 = self.world;
                                        var $4240 = self.subst;
                                        var $4241 = self.fresh;
                                        var $4242 = self.gas;
                                        var $4243 = self.term;
                                        var $4244 = Litereum$Runtime$new$($4239, $4240, $4241, $4242, Litereum$Term$operate$($4229, $4237, $4243));
                                        var $4238 = $4244;
                                        break;
                                };
                                var $4232 = $4238;
                                break;
                        };
                        var $4162 = $4232;
                        break;
                    case 'Litereum.Term.set':
                        var $4245 = self.file;
                        var $4246 = self.expr;
                        var $4247 = self.body;
                        var self = Litereum$get_file$($4157, $4245);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4249 = self.value;
                                var _file$11 = $4249;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Litereum.File.new':
                                        var self = Litereum$normalize$(Litereum$Runtime$new$($4157, $4158, $4159, $4160, $4246));
                                        switch (self._) {
                                            case 'Litereum.Runtime.new':
                                                var $4252 = self.world;
                                                var $4253 = self.subst;
                                                var $4254 = self.fresh;
                                                var $4255 = self.gas;
                                                var $4256 = self.term;
                                                var self = Litereum$normalize$(Litereum$Runtime$new$($4252, $4253, $4254, $4255, $4247));
                                                switch (self._) {
                                                    case 'Litereum.Runtime.new':
                                                        var $4258 = self.world;
                                                        var $4259 = self.subst;
                                                        var $4260 = self.fresh;
                                                        var $4261 = self.gas;
                                                        var $4262 = self.term;
                                                        var $4263 = Litereum$Runtime$new$($4258, $4259, $4260, $4261, Litereum$Term$set$($4245, $4256, $4262));
                                                        var $4257 = $4263;
                                                        break;
                                                };
                                                var $4251 = $4257;
                                                break;
                                        };
                                        var $4250 = $4251;
                                        break;
                                };
                                var $4248 = $4250;
                                break;
                            case 'Maybe.none':
                                var $4264 = _state$1;
                                var $4248 = $4264;
                                break;
                        };
                        var $4162 = $4248;
                        break;
                    case 'Litereum.Term.get':
                        var $4265 = self.name;
                        var $4266 = self.file;
                        var $4267 = self.body;
                        var self = Litereum$get_file$($4157, $4266);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4269 = self.value;
                                var _file$11 = $4269;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Litereum.File.new':
                                        var self = Litereum$normalize$(Litereum$Runtime$new$($4157, Map$set$($4265, Litereum$Term$var$($4265), $4158), $4159, $4160, $4267));
                                        switch (self._) {
                                            case 'Litereum.Runtime.new':
                                                var $4272 = self.world;
                                                var $4273 = self.subst;
                                                var $4274 = self.fresh;
                                                var $4275 = self.gas;
                                                var $4276 = self.term;
                                                var $4277 = Litereum$Runtime$new$($4272, $4273, $4274, $4275, Litereum$Term$get$($4265, $4266, $4276));
                                                var $4271 = $4277;
                                                break;
                                        };
                                        var $4270 = $4271;
                                        break;
                                };
                                var $4268 = $4270;
                                break;
                            case 'Maybe.none':
                                var $4278 = _state$1;
                                var $4268 = $4278;
                                break;
                        };
                        var $4162 = $4268;
                        break;
                    case 'Litereum.Term.bind':
                        var $4279 = self.name;
                        var $4280 = self.type;
                        var $4281 = self.expr;
                        var $4282 = self.body;
                        var self = Litereum$normalize$(Litereum$Runtime$new$($4157, $4158, $4159, $4160, $4281));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4284 = self.world;
                                var $4285 = self.subst;
                                var $4286 = self.fresh;
                                var $4287 = self.gas;
                                var $4288 = self.term;
                                var self = Litereum$normalize$(Litereum$Runtime$new$($4284, Map$set$($4279, Litereum$Term$var$($4279), $4285), $4286, $4287, $4282));
                                switch (self._) {
                                    case 'Litereum.Runtime.new':
                                        var $4290 = self.world;
                                        var $4291 = self.subst;
                                        var $4292 = self.fresh;
                                        var $4293 = self.gas;
                                        var $4294 = self.term;
                                        var $4295 = Litereum$Runtime$new$($4290, $4291, $4292, $4293, Litereum$Term$bind$($4279, $4280, $4288, $4294));
                                        var $4289 = $4295;
                                        break;
                                };
                                var $4283 = $4289;
                                break;
                        };
                        var $4162 = $4283;
                        break;
                    case 'Litereum.Term.return':
                        var $4296 = self.expr;
                        var self = Litereum$normalize$(Litereum$Runtime$new$($4157, $4158, $4159, $4160, $4296));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4298 = self.world;
                                var $4299 = self.subst;
                                var $4300 = self.fresh;
                                var $4301 = self.gas;
                                var $4302 = self.term;
                                var $4303 = Litereum$Runtime$new$($4298, $4299, $4300, $4301, Litereum$Term$return$($4302));
                                var $4297 = $4303;
                                break;
                        };
                        var $4162 = $4297;
                        break;
                    case 'Litereum.Term.var':
                    case 'Litereum.Term.call':
                    case 'Litereum.Term.let':
                    case 'Litereum.Term.word':
                        var $4304 = Litereum$Runtime$new$($4157, $4158, $4159, $4160, $4161);
                        var $4162 = $4304;
                        break;
                };
                var $4156 = $4162;
                break;
        };
        return $4156;
    };
    const Litereum$normalize = x0 => Litereum$normalize$(x0);

    function Litereum$run$(_state$1) {
        var self = Litereum$reduce$(_state$1);
        switch (self._) {
            case 'Litereum.Runtime.new':
                var $4306 = self.world;
                var $4307 = self.subst;
                var $4308 = self.fresh;
                var $4309 = self.gas;
                var $4310 = self.term;
                var self = $4310;
                switch (self._) {
                    case 'Litereum.Term.set':
                        var $4312 = self.file;
                        var $4313 = self.expr;
                        var $4314 = self.body;
                        var self = Litereum$get_file$($4306, $4312);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4316 = self.value;
                                var _file$11 = $4316;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Litereum.File.new':
                                        var self = Litereum$normalize$(Litereum$Runtime$new$($4306, $4307, $4308, $4309, $4313));
                                        switch (self._) {
                                            case 'Litereum.Runtime.new':
                                                var $4319 = self.world;
                                                var $4320 = self.subst;
                                                var $4321 = self.fresh;
                                                var $4322 = self.gas;
                                                var $4323 = self.term;
                                                var _new_entry$21 = Litereum$Entry$file$((() => {
                                                    var self = _file$11;
                                                    switch (self._) {
                                                        case 'Litereum.File.new':
                                                            var $4325 = self.name;
                                                            var $4326 = self.ownr;
                                                            var $4327 = self.type;
                                                            var $4328 = Litereum$File$new$($4325, $4326, $4327, $4323);
                                                            return $4328;
                                                    };
                                                })());
                                                var self = $4319;
                                                switch (self._) {
                                                    case 'Litereum.World.new':
                                                        var $4329 = Litereum$World$new$(Map$set$($4312, _new_entry$21, (() => {
                                                            var self = $4319;
                                                            switch (self._) {
                                                                case 'Litereum.World.new':
                                                                    var $4330 = self.entry;
                                                                    var $4331 = $4330;
                                                                    return $4331;
                                                            };
                                                        })()));
                                                        var _new_world$22 = $4329;
                                                        break;
                                                };
                                                var $4324 = Litereum$run$(Litereum$Runtime$new$(_new_world$22, $4320, $4321, $4322, $4314));
                                                var $4318 = $4324;
                                                break;
                                        };
                                        var $4317 = $4318;
                                        break;
                                };
                                var $4315 = $4317;
                                break;
                            case 'Maybe.none':
                                var $4332 = _state$1;
                                var $4315 = $4332;
                                break;
                        };
                        var $4311 = $4315;
                        break;
                    case 'Litereum.Term.get':
                        var $4333 = self.name;
                        var $4334 = self.file;
                        var $4335 = self.body;
                        var self = Litereum$get_file$($4306, $4334);
                        switch (self._) {
                            case 'Maybe.some':
                                var $4337 = self.value;
                                var _file$11 = $4337;
                                var self = _file$11;
                                switch (self._) {
                                    case 'Litereum.File.new':
                                        var $4339 = self.expr;
                                        var $4340 = Litereum$run$(Litereum$Runtime$new$($4306, Map$set$($4333, $4339, $4307), $4308, $4309, $4335));
                                        var $4338 = $4340;
                                        break;
                                };
                                var $4336 = $4338;
                                break;
                            case 'Maybe.none':
                                var $4341 = _state$1;
                                var $4336 = $4341;
                                break;
                        };
                        var $4311 = $4336;
                        break;
                    case 'Litereum.Term.bind':
                        var $4342 = self.name;
                        var $4343 = self.type;
                        var $4344 = self.expr;
                        var $4345 = self.body;
                        var self = Litereum$run$(Litereum$Runtime$new$($4306, $4307, $4308, $4309, $4344));
                        switch (self._) {
                            case 'Litereum.Runtime.new':
                                var $4347 = self.world;
                                var $4348 = self.subst;
                                var $4349 = self.fresh;
                                var $4350 = self.gas;
                                var $4351 = self.term;
                                var self = $4351;
                                switch (self._) {
                                    case 'Litereum.Term.return':
                                        var $4353 = self.expr;
                                        var $4354 = Litereum$run$(Litereum$Runtime$new$($4347, Map$set$($4342, $4353, $4348), $4349, $4350, $4345));
                                        var $4352 = $4354;
                                        break;
                                    case 'Litereum.Term.var':
                                    case 'Litereum.Term.call':
                                    case 'Litereum.Term.let':
                                    case 'Litereum.Term.create':
                                    case 'Litereum.Term.match':
                                    case 'Litereum.Term.word':
                                    case 'Litereum.Term.compare':
                                    case 'Litereum.Term.operate':
                                    case 'Litereum.Term.set':
                                    case 'Litereum.Term.get':
                                    case 'Litereum.Term.bind':
                                        var $4355 = Litereum$Runtime$new$($4347, $4348, $4349, $4350, Litereum$Term$bind$($4342, $4343, $4351, $4345));
                                        var $4352 = $4355;
                                        break;
                                };
                                var $4346 = $4352;
                                break;
                        };
                        var $4311 = $4346;
                        break;
                    case 'Litereum.Term.var':
                    case 'Litereum.Term.call':
                    case 'Litereum.Term.let':
                    case 'Litereum.Term.create':
                    case 'Litereum.Term.match':
                    case 'Litereum.Term.word':
                    case 'Litereum.Term.compare':
                    case 'Litereum.Term.operate':
                    case 'Litereum.Term.return':
                        var $4356 = Litereum$Runtime$new$($4306, $4307, $4308, $4309, $4310);
                        var $4311 = $4356;
                        break;
                };
                var $4305 = $4311;
                break;
        };
        return $4305;
    };
    const Litereum$run = x0 => Litereum$run$(x0);

    function Litereum$show$type$(_world$1, _type$2) {
        var self = _type$2;
        switch (self._) {
            case 'Litereum.Type.data':
                var $4358 = self.name;
                var $4359 = $4358;
                var $4357 = $4359;
                break;
            case 'Litereum.Type.effe':
                var $4360 = self.rety;
                var $4361 = ("& " + Litereum$show$type$(_world$1, $4360));
                var $4357 = $4361;
                break;
            case 'Litereum.Type.word':
                var $4362 = "#word";
                var $4357 = $4362;
                break;
        };
        return $4357;
    };
    const Litereum$show$type = x0 => x1 => Litereum$show$type$(x0, x1);

    function Word$show$(_size$1, _a$2) {
        var $4363 = Nat$show$(Word$to_nat$(_a$2));
        return $4363;
    };
    const Word$show = x0 => x1 => Word$show$(x0, x1);
    const U64$show = a0 => (String(a0));

    function String$is_empty$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $4365 = Bool$true;
            var $4364 = $4365;
        } else {
            var $4366 = self.charCodeAt(0);
            var $4367 = self.slice(1);
            var $4368 = Bool$false;
            var $4364 = $4368;
        };
        return $4364;
    };
    const String$is_empty = x0 => String$is_empty$(x0);

    function Litereum$show$term$(_world$1, _term$2) {
        var self = _term$2;
        switch (self._) {
            case 'Litereum.Term.var':
                var $4370 = self.name;
                var $4371 = $4370;
                var $4369 = $4371;
                break;
            case 'Litereum.Term.call':
                var $4372 = self.bond;
                var $4373 = self.args;
                var _bond$5 = $4372;
                var _args$6 = List$map$(Litereum$show$term(_world$1), $4373);
                var $4374 = (_bond$5 + ("(" + (String$join$(",", _args$6) + ")")));
                var $4369 = $4374;
                break;
            case 'Litereum.Term.let':
                var $4375 = self.name;
                var $4376 = self.type;
                var $4377 = self.expr;
                var $4378 = self.body;
                var _name$7 = $4375;
                var _type$8 = Litereum$show$type$(_world$1, $4376);
                var _expr$9 = Litereum$show$term$(_world$1, $4377);
                var _body$10 = Litereum$show$term$(_world$1, $4378);
                var $4379 = ("let " + (_name$7 + (" : " + (_type$8 + (" = " + (_expr$9 + (" " + _body$10)))))));
                var $4369 = $4379;
                break;
            case 'Litereum.Term.create':
                var $4380 = self.ctor;
                var $4381 = self.vals;
                var _vals$5 = List$mapped$($4381, Litereum$show$term(_world$1));
                var $4382 = ($4380 + ("{" + (String$join$(",", _vals$5) + "}")));
                var $4369 = $4382;
                break;
            case 'Litereum.Term.match':
                var $4383 = self.name;
                var $4384 = self.data;
                var $4385 = self.cses;
                var self = Litereum$get_data$(_world$1, $4384);
                switch (self._) {
                    case 'Maybe.some':
                        var $4387 = self.value;
                        var _data$7 = $4387;
                        var self = _data$7;
                        switch (self._) {
                            case 'Litereum.Data.new':
                                var $4389 = self.constructors;
                                var _name$10 = $4383;
                                var _cses$11 = List$zipped_with$($4389, $4385, (_case_ctor$11 => _case_body$12 => {
                                    var $4391 = ((() => {
                                        var self = _case_ctor$11;
                                        switch (self._) {
                                            case 'Litereum.Constructor.new':
                                                var $4392 = self.name;
                                                var $4393 = $4392;
                                                return $4393;
                                        };
                                    })() + (": " + Litereum$show$term$(_world$1, _case_body$12)));
                                    return $4391;
                                }));
                                var $4390 = ("case " + (_name$10 + (" : " + ($4384 + (" { " + (String$join$(", ", _cses$11) + " }"))))));
                                var $4388 = $4390;
                                break;
                        };
                        var $4386 = $4388;
                        break;
                    case 'Maybe.none':
                        var $4394 = "?";
                        var $4386 = $4394;
                        break;
                };
                var $4369 = $4386;
                break;
            case 'Litereum.Term.word':
                var $4395 = self.numb;
                var $4396 = ("#" + (String($4395)));
                var $4369 = $4396;
                break;
            case 'Litereum.Term.compare':
                var $4397 = self.val0;
                var $4398 = self.val1;
                var $4399 = self.iflt;
                var $4400 = self.ifeq;
                var $4401 = self.ifgt;
                var _val0$8 = Litereum$show$term$(_world$1, $4397);
                var _val1$9 = Litereum$show$term$(_world$1, $4398);
                var _iflt$10 = Litereum$show$term$(_world$1, $4399);
                var _ifeq$11 = Litereum$show$term$(_world$1, $4400);
                var _ifgt$12 = Litereum$show$term$(_world$1, $4401);
                var $4402 = ("compare " + (_val0$8 + (" " + (_val1$9 + (" { _<_: " + (_iflt$10 + (" _=_: " + (_ifeq$11 + (" _>_: " + (_ifgt$12 + " }"))))))))));
                var $4369 = $4402;
                break;
            case 'Litereum.Term.operate':
                var $4403 = self.oper;
                var $4404 = self.val0;
                var $4405 = self.val1;
                var self = $4403;
                switch (self._) {
                    case 'Litereum.Operation.add':
                        var $4407 = "+";
                        var _oper$6 = $4407;
                        break;
                    case 'Litereum.Operation.sub':
                        var $4408 = "-";
                        var _oper$6 = $4408;
                        break;
                    case 'Litereum.Operation.mul':
                        var $4409 = "*";
                        var _oper$6 = $4409;
                        break;
                    case 'Litereum.Operation.div':
                        var $4410 = "/";
                        var _oper$6 = $4410;
                        break;
                    case 'Litereum.Operation.mod':
                        var $4411 = "%";
                        var _oper$6 = $4411;
                        break;
                    case 'Litereum.Operation.or':
                        var $4412 = "|";
                        var _oper$6 = $4412;
                        break;
                    case 'Litereum.Operation.and':
                        var $4413 = "&";
                        var _oper$6 = $4413;
                        break;
                    case 'Litereum.Operation.xor':
                        var $4414 = "^";
                        var _oper$6 = $4414;
                        break;
                };
                var _val0$7 = Litereum$show$term$(_world$1, $4404);
                var _val1$8 = Litereum$show$term$(_world$1, $4405);
                var $4406 = (_oper$6 + ("(" + (_val0$7 + ("," + (_val1$8 + ")")))));
                var $4369 = $4406;
                break;
            case 'Litereum.Term.set':
                var $4415 = self.file;
                var $4416 = self.expr;
                var $4417 = self.body;
                var _file$6 = $4415;
                var _expr$7 = Litereum$show$term$(_world$1, $4416);
                var _body$8 = Litereum$show$term$(_world$1, $4417);
                var $4418 = ("set " + (_file$6 + (" = " + (_expr$7 + ("; " + _body$8)))));
                var $4369 = $4418;
                break;
            case 'Litereum.Term.get':
                var $4419 = self.name;
                var $4420 = self.file;
                var $4421 = self.body;
                var _file$6 = $4420;
                var _name$7 = $4419;
                var _body$8 = Litereum$show$term$(_world$1, $4421);
                var $4422 = ("get " + (_name$7 + (" = " + (_file$6 + ("; " + _body$8)))));
                var $4369 = $4422;
                break;
            case 'Litereum.Term.bind':
                var $4423 = self.name;
                var $4424 = self.type;
                var $4425 = self.expr;
                var $4426 = self.body;
                var _name$7 = $4423;
                var _type$8 = Litereum$show$type$(_world$1, $4424);
                var _expr$9 = Litereum$show$term$(_world$1, $4425);
                var _body$10 = Litereum$show$term$(_world$1, $4426);
                var self = String$is_empty$(_name$7);
                if (self) {
                    var $4428 = ("run " + (_expr$9 + ("; " + _body$10)));
                    var $4427 = $4428;
                } else {
                    var $4429 = ("run " + (_name$7 + (" : " + (_type$8 + (" = " + (_expr$9 + ("; " + _body$10)))))));
                    var $4427 = $4429;
                };
                var $4369 = $4427;
                break;
            case 'Litereum.Term.return':
                var $4430 = self.expr;
                var _expr$4 = Litereum$show$term$(_world$1, $4430);
                var $4431 = ("return " + _expr$4);
                var $4369 = $4431;
                break;
        };
        return $4369;
    };
    const Litereum$show$term = x0 => x1 => Litereum$show$term$(x0, x1);

    function Litereum$transact$(_world$1, _transaction$2) {
        var self = _world$1;
        switch (self._) {
            case 'Litereum.World.new':
                var $4433 = self.entry;
                var self = _transaction$2;
                switch (self._) {
                    case 'Litereum.Transaction.new_data':
                        var $4435 = self.data;
                        var _data$5 = $4435;
                        var self = _data$5;
                        switch (self._) {
                            case 'Litereum.Data.new':
                                var $4437 = self.name;
                                var self = Map$get$($4437, $4433);
                                switch (self._) {
                                    case 'Maybe.none':
                                        var self = _world$1;
                                        switch (self._) {
                                            case 'Litereum.World.new':
                                                var $4440 = Litereum$World$new$(Map$set$($4437, Litereum$Entry$data$(_data$5), $4433));
                                                var _world$8 = $4440;
                                                break;
                                        };
                                        var $4439 = Maybe$some$(Pair$new$(_world$8, ("[data] " + $4437)));
                                        var $4438 = $4439;
                                        break;
                                    case 'Maybe.some':
                                        var $4441 = Maybe$none;
                                        var $4438 = $4441;
                                        break;
                                };
                                var $4436 = $4438;
                                break;
                        };
                        var $4434 = $4436;
                        break;
                    case 'Litereum.Transaction.new_bond':
                        var $4442 = self.bond;
                        var _bond$5 = $4442;
                        var self = _bond$5;
                        switch (self._) {
                            case 'Litereum.Bond.new':
                                var $4444 = self.name;
                                var $4445 = self.input_names;
                                var $4446 = self.input_types;
                                var $4447 = self.output_type;
                                var $4448 = self.main;
                                var self = Map$get$($4444, $4433);
                                switch (self._) {
                                    case 'Maybe.none':
                                        var self = _world$1;
                                        switch (self._) {
                                            case 'Litereum.World.new':
                                                var $4451 = Litereum$World$new$(Map$set$($4444, Litereum$Entry$bond$(_bond$5), $4433));
                                                var _world$11 = $4451;
                                                break;
                                        };
                                        var _context$12 = Litereum$extend$(Map$from_list$(List$nil), $4445, $4446);
                                        var self = Litereum$check$(_context$12, _world$11, $4448, $4447);
                                        if (self) {
                                            var $4452 = Maybe$some$(Pair$new$(_world$11, ("[bond] " + $4444)));
                                            var $4450 = $4452;
                                        } else {
                                            var $4453 = Maybe$none;
                                            var $4450 = $4453;
                                        };
                                        var $4449 = $4450;
                                        break;
                                    case 'Maybe.some':
                                        var $4454 = Maybe$none;
                                        var $4449 = $4454;
                                        break;
                                };
                                var $4443 = $4449;
                                break;
                        };
                        var $4434 = $4443;
                        break;
                    case 'Litereum.Transaction.new_file':
                        var $4455 = self.file;
                        var _file$5 = $4455;
                        var self = _file$5;
                        switch (self._) {
                            case 'Litereum.File.new':
                                var $4457 = self.name;
                                var $4458 = self.type;
                                var $4459 = self.expr;
                                var self = Map$get$($4457, $4433);
                                switch (self._) {
                                    case 'Maybe.none':
                                        var self = _world$1;
                                        switch (self._) {
                                            case 'Litereum.World.new':
                                                var $4462 = Litereum$World$new$(Map$set$($4457, Litereum$Entry$file$(_file$5), $4433));
                                                var _world$10 = $4462;
                                                break;
                                        };
                                        var self = Litereum$check$(Map$from_list$(List$nil), _world$10, $4459, $4458);
                                        if (self) {
                                            var $4463 = Maybe$some$(Pair$new$(_world$10, ("[file] " + $4457)));
                                            var $4461 = $4463;
                                        } else {
                                            var $4464 = Maybe$none;
                                            var $4461 = $4464;
                                        };
                                        var $4460 = $4461;
                                        break;
                                    case 'Maybe.some':
                                        var $4465 = Maybe$none;
                                        var $4460 = $4465;
                                        break;
                                };
                                var $4456 = $4460;
                                break;
                        };
                        var $4434 = $4456;
                        break;
                    case 'Litereum.Transaction.new_eval':
                        var $4466 = self.eval;
                        var _eval$5 = $4466;
                        var self = _eval$5;
                        switch (self._) {
                            case 'Litereum.Eval.new':
                                var $4468 = self.term;
                                var $4469 = self.type;
                                var self = Litereum$check$(Map$from_list$(List$nil), _world$1, $4468, $4469);
                                if (self) {
                                    var _fresh$8 = 0n;
                                    var self = Litereum$sanitize$(_world$1, Map$from_list$(List$nil), _fresh$8, $4468);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $4472 = self.fst;
                                            var $4473 = self.snd;
                                            var self = $4469;
                                            switch (self._) {
                                                case 'Litereum.Type.word':
                                                case 'Litereum.Type.data':
                                                    var $4475 = Litereum$normalize$(Litereum$Runtime$new$(_world$1, Map$from_list$(List$nil), $4472, 0n, $4473));
                                                    var self = $4475;
                                                    break;
                                                case 'Litereum.Type.effe':
                                                    var $4476 = Litereum$normalize$(Litereum$run$(Litereum$Runtime$new$(_world$1, Map$from_list$(List$nil), $4472, 0n, $4473)));
                                                    var self = $4476;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Litereum.Runtime.new':
                                                    var $4477 = self.world;
                                                    var $4478 = self.term;
                                                    var $4479 = Maybe$some$(Pair$new$($4477, ("[eval] " + Litereum$show$term$($4477, $4478))));
                                                    var $4474 = $4479;
                                                    break;
                                            };
                                            var $4471 = $4474;
                                            break;
                                    };
                                    var $4470 = $4471;
                                } else {
                                    var $4480 = Maybe$none;
                                    var $4470 = $4480;
                                };
                                var $4467 = $4470;
                                break;
                        };
                        var $4434 = $4467;
                        break;
                };
                var $4432 = $4434;
                break;
        };
        return $4432;
    };
    const Litereum$transact = x0 => x1 => Litereum$transact$(x0, x1);

    function Litereum$api$run$go$transactions$(_world$1, _block_number$2, _code$3, _transactions$4) {
        var self = _transactions$4;
        switch (self._) {
            case 'List.cons':
                var $4482 = self.head;
                var $4483 = self.tail;
                var self = Litereum$transact$(_world$1, $4482);
                switch (self._) {
                    case 'Maybe.some':
                        var $4485 = self.value;
                        var self = $4485;
                        switch (self._) {
                            case 'Pair.new':
                                var $4487 = self.fst;
                                var $4488 = self.snd;
                                var $4489 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                                    var $4490 = _m$bind$10;
                                    return $4490;
                                }))(IO$print$(("- " + $4488)))((_$10 => {
                                    var $4491 = Litereum$api$run$go$transactions$($4487, _block_number$2, _code$3, $4483);
                                    return $4491;
                                }));
                                var $4486 = $4489;
                                break;
                        };
                        var $4484 = $4486;
                        break;
                    case 'Maybe.none':
                        var $4492 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                            var $4493 = _m$bind$7;
                            return $4493;
                        }))(IO$print$("- [fail]"))((_$7 => {
                            var $4494 = Litereum$api$run$go$transactions$(_world$1, _block_number$2, _code$3, $4483);
                            return $4494;
                        }));
                        var $4484 = $4492;
                        break;
                };
                var $4481 = $4484;
                break;
            case 'List.nil':
                var $4495 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $4496 = _m$bind$5;
                    return $4496;
                }))(IO$print$(""))((_$5 => {
                    var $4497 = Litereum$api$run$go$(_world$1, Nat$succ$(_block_number$2), _code$3);
                    return $4497;
                }));
                var $4481 = $4495;
                break;
        };
        return $4481;
    };
    const Litereum$api$run$go$transactions = x0 => x1 => x2 => x3 => Litereum$api$run$go$transactions$(x0, x1, x2, x3);

    function Litereum$api$run$go$(_world$1, _block_number$2, _code$3) {
        var _parsed$4 = Litereum$parse$block$(_world$1)(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$3));
        var self = _parsed$4;
        switch (self._) {
            case 'Parser.Reply.error':
                var $4499 = self.err;
                var self = $4499;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $4501 = self.nam;
                        var $4502 = self.ini;
                        var $4503 = self.idx;
                        var $4504 = self.msg;
                        var self = ($4503 < String$length$(_code$3));
                        if (self) {
                            var _err$10 = ($4504 + (() => {
                                var self = $4501;
                                if (self.length === 0) {
                                    var $4507 = "";
                                    return $4507;
                                } else {
                                    var $4508 = self.charCodeAt(0);
                                    var $4509 = self.slice(1);
                                    var $4510 = (" Inside " + ($4501 + ":"));
                                    return $4510;
                                };
                            })());
                            var _hig$11 = Kind$Code$highlight$(_code$3, $4502, $4503, Nat$succ$($4503));
                            var _str$12 = String$flatten$(List$cons$(_err$10, List$cons$("\u{a}", List$cons$(_hig$11, List$nil))));
                            var $4506 = IO$monad$((_m$bind$13 => _m$pure$14 => {
                                var $4511 = _m$bind$13;
                                return $4511;
                            }))(IO$print$(("Error parsing block #" + Nat$show$(_block_number$2))))((_$13 => {
                                var $4512 = IO$print$(_str$12);
                                return $4512;
                            }));
                            var $4505 = $4506;
                        } else {
                            var $4513 = IO$print$("Done.");
                            var $4505 = $4513;
                        };
                        var $4500 = $4505;
                        break;
                };
                var $4498 = $4500;
                break;
            case 'Parser.Reply.value':
                var $4514 = self.pst;
                var $4515 = self.val;
                var _block$7 = $4515;
                var $4516 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                    var $4517 = _m$bind$8;
                    return $4517;
                }))(IO$print$(("Block #" + Nat$show$(_block_number$2))))((_$8 => {
                    var _bits_0$9 = Litereum$serialize$block$(_world$1, _block$7);
                    var _bits_1$10 = Litereum$serialize$block$(_world$1, (() => {
                        var self = Litereum$deserialize$block$(_world$1, _bits_0$9);
                        switch (self._) {
                            case 'Pair.new':
                                var $4519 = self.snd;
                                var $4520 = $4519;
                                return $4520;
                        };
                    })());
                    var $4518 = IO$monad$((_m$bind$11 => _m$pure$12 => {
                        var $4521 = _m$bind$11;
                        return $4521;
                    }))(IO$print$(("$ " + (Bits$hex$encode$(_bits_0$9) + (" " + (() => {
                        var self = (_bits_1$10 === _bits_0$9);
                        if (self) {
                            var $4522 = "ok";
                            return $4522;
                        } else {
                            var $4523 = "bad_serialization";
                            return $4523;
                        };
                    })())))))((_$11 => {
                        var $4524 = Litereum$api$run$go$transactions$(_world$1, _block_number$2, (() => {
                            var self = $4514;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4525 = self.str;
                                    var $4526 = $4525;
                                    return $4526;
                            };
                        })(), _block$7);
                        return $4524;
                    }));
                    return $4518;
                }));
                var $4498 = $4516;
                break;
        };
        return $4498;
    };
    const Litereum$api$run$go = x0 => x1 => x2 => Litereum$api$run$go$(x0, x1, x2);
    const Litereum$genesis = Litereum$World$new$(Map$from_list$(List$nil));

    function Litereum$api$run$(_code$1) {
        var $4527 = Litereum$api$run$go$(Litereum$genesis, 0n, _code$1);
        return $4527;
    };
    const Litereum$api$run = x0 => Litereum$api$run$(x0);
    const Litereum = (() => {
        var _x$1 = Litereum$api$run;
        var $4528 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $4529 = _m$pure$3;
            return $4529;
        }))(Unit$new);
        return $4528;
    })();
    return {
        '$main$': () => run(Litereum),
        'run': run,
        'Parser.Reply': Parser$Reply,
        'List': List,
        'Parser.Reply.error': Parser$Reply$error,
        'Bool.false': Bool$false,
        'Bool.true': Bool$true,
        'Nat.gtn': Nat$gtn,
        'Parser.Error.combine': Parser$Error$combine,
        'List.cons': List$cons,
        'Parser.Reply.value': Parser$Reply$value,
        'List.reverse.go': List$reverse$go,
        'List.nil': List$nil,
        'List.reverse': List$reverse,
        'Parser.until.go': Parser$until$go,
        'Parser.until': Parser$until,
        'Parser.many.go': Parser$many$go,
        'Parser.many': Parser$many,
        'Parser.Error.new': Parser$Error$new,
        'Parser.Reply.fail': Parser$Reply$fail,
        'Maybe.some': Maybe$some,
        'Maybe': Maybe,
        'Maybe.none': Maybe$none,
        'Parser.Error.maybe_combine': Parser$Error$maybe_combine,
        'Parser.State.new': Parser$State$new,
        'Parser.choice': Parser$choice,
        'Parser': Parser,
        'Unit.new': Unit$new,
        'String.cons': String$cons,
        'String.concat': String$concat,
        'Cmp.as_eql': Cmp$as_eql,
        'Cmp.ltn': Cmp$ltn,
        'Cmp.gtn': Cmp$gtn,
        'Word.cmp.go': Word$cmp$go,
        'Cmp.eql': Cmp$eql,
        'Word.cmp': Word$cmp,
        'Word.eql': Word$eql,
        'Nat.succ': Nat$succ,
        'Nat.zero': Nat$zero,
        'U16.eql': U16$eql,
        'String.nil': String$nil,
        'Parser.text.go': Parser$text$go,
        'Parser.text': Parser$text,
        'Parser.eof': Parser$eof,
        'Parser.one': Parser$one,
        'Litereum.parse.ignore': Litereum$parse$ignore,
        'Litereum.parse.text': Litereum$parse$text,
        'Parser.letter': Parser$letter,
        'Bool.and': Bool$and,
        'Cmp.as_lte': Cmp$as_lte,
        'Word.lte': Word$lte,
        'U16.lte': U16$lte,
        'U16.btw': U16$btw,
        'Litereum.parse.letter': Litereum$parse$letter,
        'List.fold': List$fold,
        'Litereum.parse.name': Litereum$parse$name,
        'Parser.wrap': Parser$wrap,
        'Parser.maybe': Parser$maybe,
        'Pair': Pair,
        'Litereum.Type.effe': Litereum$Type$effe,
        'Litereum.Type.word': Litereum$Type$word,
        'Litereum.Type.data': Litereum$Type$data,
        'Litereum.parse.type': Litereum$parse$type,
        'Pair.new': Pair$new,
        'Litereum.parse.ann': Litereum$parse$ann,
        'List.mapped': List$mapped,
        'Litereum.Constructor.new': Litereum$Constructor$new,
        'Litereum.parse.constructor': Litereum$parse$constructor,
        'Litereum.Data.new': Litereum$Data$new,
        'Litereum.parse.data': Litereum$parse$data,
        'Litereum.Transaction.new_data': Litereum$Transaction$new_data,
        'Litereum.Term.let': Litereum$Term$let,
        'Litereum.parse.term.let': Litereum$parse$term$let,
        'Litereum.Term.create': Litereum$Term$create,
        'Litereum.parse.term.create': Litereum$parse$term$create,
        'Maybe.bind': Maybe$bind,
        'Maybe.monad': Maybe$monad,
        'BBT.lookup': BBT$lookup,
        'Cmp.as_ltn': Cmp$as_ltn,
        'Word.ltn': Word$ltn,
        'U16.ltn': U16$ltn,
        'U16.cmp': U16$cmp,
        'String.cmp': String$cmp,
        'Map.get': Map$get,
        'Litereum.get_data': Litereum$get_data,
        'Parser.fail': Parser$fail,
        'Litereum.parse.term.match.cases': Litereum$parse$term$match$cases,
        'Litereum.Term.match': Litereum$Term$match,
        'Litereum.parse.term.match': Litereum$parse$term$match,
        'Parser.many1': Parser$many1,
        'Parser.digit': Parser$digit,
        'Nat.add': Nat$add,
        'Nat.mul': Nat$mul,
        'Nat.from_base.go': Nat$from_base$go,
        'Nat.from_base': Nat$from_base,
        'Parser.nat': Parser$nat,
        'Nat.gte': Nat$gte,
        'Nat.pow.aux': Nat$pow$aux,
        'Nat.pow': Nat$pow,
        'Litereum.Term.word': Litereum$Term$word,
        'U64.new': U64$new,
        'Nat.apply': Nat$apply,
        'Word': Word,
        'Word.e': Word$e,
        'Word.i': Word$i,
        'Word.o': Word$o,
        'Word.inc': Word$inc,
        'Word.zero': Word$zero,
        'Nat.to_word': Nat$to_word,
        'Nat.to_u64': Nat$to_u64,
        'Litereum.parse.term.word': Litereum$parse$term$word,
        'Litereum.Term.compare': Litereum$Term$compare,
        'Litereum.parse.term.compare': Litereum$parse$term$compare,
        'Litereum.Operation.add': Litereum$Operation$add,
        'Litereum.Operation.sub': Litereum$Operation$sub,
        'Litereum.Operation.mul': Litereum$Operation$mul,
        'Litereum.Operation.div': Litereum$Operation$div,
        'Litereum.Operation.mod': Litereum$Operation$mod,
        'Litereum.Operation.or': Litereum$Operation$or,
        'Litereum.Operation.and': Litereum$Operation$and,
        'Litereum.Operation.xor': Litereum$Operation$xor,
        'Litereum.parse.term.operation': Litereum$parse$term$operation,
        'Litereum.Term.operate': Litereum$Term$operate,
        'Litereum.parse.term.operate': Litereum$parse$term$operate,
        'Litereum.Term.set': Litereum$Term$set,
        'Litereum.parse.term.set': Litereum$parse$term$set,
        'Litereum.Term.get': Litereum$Term$get,
        'Litereum.parse.term.get': Litereum$parse$term$get,
        'Litereum.Term.bind': Litereum$Term$bind,
        'Litereum.parse.term.bind': Litereum$parse$term$bind,
        'Litereum.Term.return': Litereum$Term$return,
        'Litereum.parse.term.return': Litereum$parse$term$return,
        'Litereum.Term.call': Litereum$Term$call,
        'Litereum.parse.term.call': Litereum$parse$term$call,
        'Litereum.Term.var': Litereum$Term$var,
        'Litereum.parse.term.var': Litereum$parse$term$var,
        'Litereum.parse.term': Litereum$parse$term,
        'Litereum.Bond.new': Litereum$Bond$new,
        'Litereum.parse.bond': Litereum$parse$bond,
        'Litereum.Transaction.new_bond': Litereum$Transaction$new_bond,
        'Litereum.File.new': Litereum$File$new,
        'Litereum.parse.file': Litereum$parse$file,
        'Litereum.Transaction.new_file': Litereum$Transaction$new_file,
        'Litereum.Eval.new': Litereum$Eval$new,
        'Litereum.parse.eval': Litereum$parse$eval,
        'Litereum.Transaction.new_eval': Litereum$Transaction$new_eval,
        'Litereum.parse.transaction': Litereum$parse$transaction,
        'Litereum.parse.block': Litereum$parse$block,
        'IO': IO,
        'Nat.ltn': Nat$ltn,
        'String.length.go': String$length$go,
        'String.length': String$length,
        'String.flatten.go': String$flatten$go,
        'String.flatten': String$flatten,
        'String.join.go': String$join$go,
        'String.join': String$join,
        'Kind.Code.highlight.end': Kind$Code$highlight$end,
        'Maybe.extract': Maybe$extract,
        'Nat.is_zero': Nat$is_zero,
        'Nat.double': Nat$double,
        'Nat.pred': Nat$pred,
        'String.reverse.go': String$reverse$go,
        'String.reverse': String$reverse,
        'String.pad_right': String$pad_right,
        'String.pad_left': String$pad_left,
        'Either': Either,
        'Either.left': Either$left,
        'Either.right': Either$right,
        'Nat.sub_rem': Nat$sub_rem,
        'Nat.div_mod.go': Nat$div_mod$go,
        'Nat.div_mod': Nat$div_mod,
        'Nat.to_base.go': Nat$to_base$go,
        'Nat.to_base': Nat$to_base,
        'Nat.mod.go': Nat$mod$go,
        'Nat.mod': Nat$mod,
        'Nat.lte': Nat$lte,
        'List.at': List$at,
        'Nat.show_digit': Nat$show_digit,
        'Nat.to_string_base': Nat$to_string_base,
        'Nat.show': Nat$show,
        'Bool.not': Bool$not,
        'U16.new': U16$new,
        'Nat.to_u16': Nat$to_u16,
        'Kind.Code.color': Kind$Code$color,
        'Nat.eql': Nat$eql,
        'List.take': List$take,
        'Kind.Code.highlight.go': Kind$Code$highlight$go,
        'Kind.Code.highlight': Kind$Code$highlight,
        'IO.ask': IO$ask,
        'IO.bind': IO$bind,
        'IO.end': IO$end,
        'IO.monad': IO$monad,
        'IO.put_string': IO$put_string,
        'IO.print': IO$print,
        'Bits.e': Bits$e,
        'Bits.o': Bits$o,
        'Word.subber': Word$subber,
        'Word.sub': Word$sub,
        'U16.sub': U16$sub,
        'Word.adder': Word$adder,
        'Word.add': Word$add,
        'U16.add': U16$add,
        'Pair.fst': Pair$fst,
        'Nat.div': Nat$div,
        'Bits.i': Bits$i,
        'Litereum.serialize.fixlen': Litereum$serialize$fixlen,
        'Word.fold': Word$fold,
        'Word.to_nat': Word$to_nat,
        'U16.to_nat': U16$to_nat,
        'Bits.concat': Bits$concat,
        'Litereum.serialize.name': Litereum$serialize$name,
        'Litereum.serialize.list': Litereum$serialize$list,
        'Litereum.serialize.type': Litereum$serialize$type,
        'Litereum.serialize.constructor': Litereum$serialize$constructor,
        'Litereum.serialize.data': Litereum$serialize$data,
        'List.find_index.go': List$find_index$go,
        'List.find_index': List$find_index,
        'String.eql': String$eql,
        'Litereum.serialize.varlen.go': Litereum$serialize$varlen$go,
        'Litereum.serialize.varlen': Litereum$serialize$varlen,
        'Litereum.serialize.name.local': Litereum$serialize$name$local,
        'List.map': List$map,
        'List.concat': List$concat,
        'Litereum.serialize.cases': Litereum$serialize$cases,
        'Maybe.default': Maybe$default,
        'Litereum.get_constructors': Litereum$get_constructors,
        'U64.to_nat': U64$to_nat,
        'Litereum.serialize.term': Litereum$serialize$term,
        'Litereum.serialize.bond': Litereum$serialize$bond,
        'Litereum.serialize.file': Litereum$serialize$file,
        'Litereum.serialize.eval': Litereum$serialize$eval,
        'Litereum.serialize.transaction': Litereum$serialize$transaction,
        'Litereum.serialize.block': Litereum$serialize$block,
        'Bits.is_empty': Bits$is_empty,
        'Litereum.deserialize.fixlen': Litereum$deserialize$fixlen,
        'U16.from_nat': U16$from_nat,
        'Litereum.deserialize.name': Litereum$deserialize$name,
        'Litereum.deserialize.list': Litereum$deserialize$list,
        'Litereum.deserialize.type': Litereum$deserialize$type,
        'Litereum.deserialize.constructor': Litereum$deserialize$constructor,
        'Litereum.deserialize.data': Litereum$deserialize$data,
        'U64.from_nat': U64$from_nat,
        'Litereum.deserialize.varlen.go': Litereum$deserialize$varlen$go,
        'Nat.sub': Nat$sub,
        'Litereum.deserialize.varlen': Litereum$deserialize$varlen,
        'List.get': List$get,
        'Litereum.deserialize.name.local': Litereum$deserialize$name$local,
        'Litereum.deserialize.cases': Litereum$deserialize$cases,
        'Litereum.deserialize.term': Litereum$deserialize$term,
        'Litereum.deserialize.bond': Litereum$deserialize$bond,
        'Litereum.deserialize.file': Litereum$deserialize$file,
        'Litereum.deserialize.eval': Litereum$deserialize$eval,
        'Litereum.deserialize.transaction': Litereum$deserialize$transaction,
        'Litereum.deserialize.block': Litereum$deserialize$block,
        'Bits.hex.encode': Bits$hex$encode,
        'Bits.eql': Bits$eql,
        'Litereum.World.new': Litereum$World$new,
        'BBT': BBT,
        'BBT.bin': BBT$bin,
        'U32.new': U32$new,
        'Nat.to_u32': Nat$to_u32,
        'BBT.tip': BBT$tip,
        'BBT.singleton': BBT$singleton,
        'BBT.size': BBT$size,
        'U32.add': U32$add,
        'Word.shift_left.one.go': Word$shift_left$one$go,
        'Word.shift_left.one': Word$shift_left$one,
        'Word.shift_left': Word$shift_left,
        'Word.mul.go': Word$mul$go,
        'Word.to_zero': Word$to_zero,
        'Word.mul': Word$mul,
        'U32.mul': U32$mul,
        'BBT.w': BBT$w,
        'U32.ltn': U32$ltn,
        'U32.from_nat': U32$from_nat,
        'BBT.node': BBT$node,
        'Cmp.as_gtn': Cmp$as_gtn,
        'Word.gtn': Word$gtn,
        'U32.gtn': U32$gtn,
        'BBT.balance': BBT$balance,
        'BBT.insert': BBT$insert,
        'Map.set': Map$set,
        'Litereum.Entry.data': Litereum$Entry$data,
        'Litereum.Entry.bond': Litereum$Entry$bond,
        'Map': Map,
        'Litereum.extend': Litereum$extend,
        'Pair.snd': Pair$snd,
        'BBT.from_list.go': BBT$from_list$go,
        'BBT.from_list': BBT$from_list,
        'Map.from_list': Map$from_list,
        'Litereum.equal': Litereum$equal,
        'Litereum.get_bond': Litereum$get_bond,
        'List.zip': List$zip,
        'List.all': List$all,
        'Maybe.mapped': Maybe$mapped,
        'List.ifind.go': List$ifind$go,
        'List.ifind': List$ifind,
        'Litereum.get_constructor_value': Litereum$get_constructor_value,
        'List.length': List$length,
        'List.zip_with': List$zip_with,
        'List.zipped_with': List$zipped_with,
        'List.and': List$and,
        'Litereum.get_file': Litereum$get_file,
        'Litereum.check': Litereum$check,
        'Litereum.Entry.file': Litereum$Entry$file,
        'Litereum.sanitize.many': Litereum$sanitize$many,
        'Triple.new': Triple$new,
        'Litereum.rename': Litereum$rename,
        'List.for': List$for,
        'Litereum.sanitize.cases': Litereum$sanitize$cases,
        'Litereum.sanitize': Litereum$sanitize,
        'Litereum.Runtime': Litereum$Runtime,
        'Litereum.Runtime.new': Litereum$Runtime$new,
        'Triple': Triple,
        'Litereum.rename.many': Litereum$rename$many,
        'Litereum.get_constructor_index': Litereum$get_constructor_index,
        'U64.ltn': U64$ltn,
        'U64.eql': U64$eql,
        'U64.cmp': U64$cmp,
        'U64.add': U64$add,
        'U64.sub': U64$sub,
        'U64.mul': U64$mul,
        'Word.bit_length.go': Word$bit_length$go,
        'Word.bit_length': Word$bit_length,
        'Cmp.as_gte': Cmp$as_gte,
        'Word.gte': Word$gte,
        'Word.or': Word$or,
        'Word.shift_right.one.go': Word$shift_right$one$go,
        'Word.shift_right.one': Word$shift_right$one,
        'Word.shift_right': Word$shift_right,
        'Word.div.go': Word$div$go,
        'Word.div': Word$div,
        'U64.div': U64$div,
        'Word.mod': Word$mod,
        'U64.mod': U64$mod,
        'U64.or': U64$or,
        'Word.and': Word$and,
        'U64.and': U64$and,
        'Word.xor': Word$xor,
        'U64.xor': U64$xor,
        'Litereum.reduce': Litereum$reduce,
        'Litereum.normalize.many': Litereum$normalize$many,
        'Litereum.normalize.cases': Litereum$normalize$cases,
        'Litereum.normalize': Litereum$normalize,
        'Litereum.run': Litereum$run,
        'Litereum.show.type': Litereum$show$type,
        'Word.show': Word$show,
        'U64.show': U64$show,
        'String.is_empty': String$is_empty,
        'Litereum.show.term': Litereum$show$term,
        'Litereum.transact': Litereum$transact,
        'Litereum.api.run.go.transactions': Litereum$api$run$go$transactions,
        'Litereum.api.run.go': Litereum$api$run$go,
        'Litereum.genesis': Litereum$genesis,
        'Litereum.api.run': Litereum$api$run,
        'Litereum': Litereum,
    };
})();
module.exports['$main$']();