#state (((Litereum.reduce state) # Litereum.Runtime.Term) #world #subst #fresh #gas #term ((((((((((((term #term Litereum.Runtime.Term) #term.name ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) term)) #term.bond #term.args ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) term)) #term.name #term.type #term.expr #term.body ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) term)) #term.ctor #term.vals ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) term)) #term.name #term.data #term.cses ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) term)) #term.numb ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) term)) #term.val0 #term.val1 #term.iflt #term.ifeq #term.ifgt ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) term)) #term.oper #term.val0 #term.val1 ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) term)) #term.bond #term.main #term.body (((((Litereum.get_bond world) term.bond) # Litereum.Runtime.Term) state) #bond !bond = bond; ((bond #bond Litereum.Runtime.Term) #bond.name #bond.input_names #bond.input_types #bond.output_type #bond.main #bond.owners ((((Litereum.normalize.bound bond.input_names) ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) term.main)) # Litereum.Runtime.Term) #world #subst #fresh #gas #main !new_entry = (Litereum.Entry.bond ((bond # Litereum.Bond) #name #input_names #input_types #output_type #main #owners ((((((Litereum.Bond.new name) input_names) input_types) output_type) main^1) owners))); !new_world = ((world # Litereum.World) #name_count #name_to_index #index_to_name #entry ((((Litereum.World.new name_count) name_to_index) index_to_name) ((((Map.set Litereum.Entry) term.bond) new_entry) ((world # (Map Litereum.Entry)) #name_count #name_to_index #index_to_name #entry entry)))); (Litereum.run ((((((Litereum.Runtime.new Litereum.Term) new_world) subst) fresh) gas) term.body)))))) #term.name #term.type #term.expr #term.body (((Litereum.run ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) term.expr)) # Litereum.Runtime.Term) #world #subst #fresh #gas #expr ((((((((((((expr #expr Litereum.Runtime.Term) #expr.name ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) ((((Litereum.Term.bind term.name) term.type) expr) term.body))) #expr.bond #expr.args ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) ((((Litereum.Term.bind term.name) term.type) expr) term.body))) #expr.name #expr.type #expr.expr #expr.body ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) ((((Litereum.Term.bind term.name) term.type) expr) term.body))) #expr.ctor #expr.vals ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) ((((Litereum.Term.bind term.name) term.type) expr) term.body))) #expr.name #expr.data #expr.cses ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) ((((Litereum.Term.bind term.name) term.type) expr) term.body))) #expr.numb ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) ((((Litereum.Term.bind term.name) term.type) expr) term.body))) #expr.val0 #expr.val1 #expr.iflt #expr.ifeq #expr.ifgt ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) ((((Litereum.Term.bind term.name) term.type) expr) term.body))) #expr.oper #expr.val0 #expr.val1 ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) ((((Litereum.Term.bind term.name) term.type) expr) term.body))) #expr.bond #expr.main #expr.body ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) ((((Litereum.Term.bind term.name) term.type) expr) term.body))) #expr.name #expr.type #expr.expr #expr.body ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) ((((Litereum.Term.bind term.name) term.type) expr) term.body))) #expr.expr (Litereum.run ((((((Litereum.Runtime.new Litereum.Term) world) ((((Map.set Litereum.Term) term.name) expr.expr) subst)) fresh) gas) term.body))))) #term.expr ((((((Litereum.Runtime.new Litereum.Term) world) subst) fresh) gas) term)))