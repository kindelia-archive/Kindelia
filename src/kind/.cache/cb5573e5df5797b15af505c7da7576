#V #until #parse #values #pst !until_reply = (until pst); (((until_reply #until_reply (Parser.Reply (List V))) #until_reply.err !reply = (parse pst); (((reply #reply (Parser.Reply (List V))) #reply.err ((Parser.Reply.error (List V)) ((Parser.Error.combine reply.err) until_reply.err))) #reply.pst #reply.val $values = (((List.cons V) reply.val) values); (((((Parser.until.go V) until) parse) values) reply.pst))) #until_reply.pst #until_reply.val (((Parser.Reply.value (List V)) until_reply.pst) ((List.reverse V) values)))