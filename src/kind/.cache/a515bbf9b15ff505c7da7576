#size #shift #sub_copy #shift_copy #value $one = ((Word.inc size) ((Word.to_zero size) sub_copy)); ((((((((Word.gte size) sub_copy) shift_copy) # ((Pair Bool) (Word size))) !mask = (((Word.shift_left size) one) shift); ((((Pair.new Bool) (Word size)) Bool.true) (((Word.or size) value) mask))) ((((Pair.new Bool) (Word size)) Bool.false) value)) # (Word size)) #bit_on #new_value (((shift #shift (Word size)) new_value) #shift.pred !new_shift_copy = (((Word.shift_right size) shift_copy) +1); (((bit_on # (Word size)) (((((Word.div.go size) shift.pred) (((Word.sub size) sub_copy) shift_copy)) new_shift_copy) new_value)) (((((Word.div.go size) shift.pred) sub_copy) new_shift_copy) new_value))))