#world ((Parser.choice Litereum.Bond) (((List.cons (Parser Litereum.Bond)) ((((((Monad.bind Parser) Parser.monad) (List String)) Litereum.Bond) ((Parser.many String) ((((((Monad.bind Parser) Parser.monad) Unit) String) (Litereum.parse.text "@")) # ((((((Monad.bind Parser) Parser.monad) String) String) Litereum.parse.name) #name ((((Monad.pure Parser) Parser.monad) String) name))))) #ownr ((((((Monad.bind Parser) Parser.monad) Unit) Litereum.Bond) (Litereum.parse.text "bond")) # ((((((Monad.bind Parser) Parser.monad) String) Litereum.Bond) Litereum.parse.name) #name ((((((Monad.bind Parser) Parser.monad) (List ((Pair String) Litereum.Type))) Litereum.Bond) ((((Parser.wrap ((Pair String) Litereum.Type)) (Litereum.parse.text "(")) (Litereum.parse.ann world)) (Litereum.parse.text ")"))) #args !iarg = ((((List.mapped ((Pair String) Litereum.Type)) args) String) #x ((x # String) #fst #snd fst)); !ityp = ((((List.mapped ((Pair String) Litereum.Type)) args) Litereum.Type) #x ((x # Litereum.Type) #fst #snd snd)); ((((((Monad.bind Parser) Parser.monad) Unit) Litereum.Bond) (Litereum.parse.text ":")) # ((((((Monad.bind Parser) Parser.monad) Litereum.Type) Litereum.Bond) (Litereum.parse.type world)) #otyp ((((((Monad.bind Parser) Parser.monad) Unit) Litereum.Bond) (Litereum.parse.text "{")) # ((((((Monad.bind Parser) Parser.monad) Litereum.Term) Litereum.Bond) (Litereum.parse.term world)) #main ((((((Monad.bind Parser) Parser.monad) Unit) Litereum.Bond) (Litereum.parse.text "}")) # ((((Monad.pure Parser) Parser.monad) Litereum.Bond) ((((((Litereum.Bond.new name) iarg) ityp) otyp) main) ownr)))))))))))) (((List.cons (Parser Litereum.Bond)) ((((((Monad.bind Parser) Parser.monad) (List String)) Litereum.Bond) ((Parser.many String) ((((((Monad.bind Parser) Parser.monad) Unit) String) (Litereum.parse.text "@")) # ((((((Monad.bind Parser) Parser.monad) String) String) Litereum.parse.name) #name ((((Monad.pure Parser) Parser.monad) String) name))))) #ownr ((((((Monad.bind Parser) Parser.monad) Unit) Litereum.Bond) (Litereum.parse.text "term")) # ((((((Monad.bind Parser) Parser.monad) String) Litereum.Bond) Litereum.parse.name) #name ((((((Monad.bind Parser) Parser.monad) Unit) Litereum.Bond) (Litereum.parse.text ":")) # ((((((Monad.bind Parser) Parser.monad) Litereum.Type) Litereum.Bond) (Litereum.parse.type world)) #otyp ((((((Monad.bind Parser) Parser.monad) Unit) Litereum.Bond) (Litereum.parse.text "=")) # ((((((Monad.bind Parser) Parser.monad) Litereum.Term) Litereum.Bond) (Litereum.parse.term world)) #main ((((Monad.pure Parser) Parser.monad) Litereum.Bond) ((((((Litereum.Bond.new name) (List.nil String)) (List.nil Litereum.Type)) otyp) main) ownr)))))))))) (List.nil (Parser Litereum.Bond)))))